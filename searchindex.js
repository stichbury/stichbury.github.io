Search.setIndex({"docnames": ["configuration/advanced_configuration", "configuration/config_loader_migration", "configuration/configuration_basics", "configuration/credentials", "configuration/index", "configuration/parameters", "contribution/index", "contribution/technical_steering_committee", "data/advanced_data_catalog_usage", "data/data_catalog", "data/data_catalog_yaml_examples", "data/how_to_create_a_custom_dataset", "data/index", "data/kedro_dataset_factories", "data/partitioned_and_incremental_datasets", "deployment/airflow_astronomer", "deployment/amazon_emr_serverless", "deployment/amazon_sagemaker", "deployment/argo", "deployment/aws_batch", "deployment/aws_step_functions", "deployment/azure", "deployment/dask", "deployment/databricks/databricks_deployment_workflow", "deployment/databricks/databricks_ide_development_workflow", "deployment/databricks/databricks_notebooks_development_workflow", "deployment/databricks/databricks_visualisation", "deployment/databricks/index", "deployment/distributed", "deployment/index", "deployment/kubeflow", "deployment/prefect", "deployment/single_machine", "deployment/vertexai", "development/automated_testing", "development/commands_reference", "development/debugging", "development/index", "development/linting", "development/set_up_pycharm", "development/set_up_vscode", "experiment_tracking/index", "extend_kedro/architecture_overview", "extend_kedro/common_use_cases", "extend_kedro/index", "extend_kedro/plugins", "faq/faq", "get_started/index", "get_started/install", "get_started/kedro_concepts", "get_started/new_project", "hooks/common_use_cases", "hooks/examples", "hooks/index", "hooks/introduction", "index", "integrations/pyspark_integration", "introduction/index", "introduction/introduction", "kedro", "kedro.KedroPythonVersionWarning", "kedro.config", "kedro.config.ConfigLoader", "kedro.config.MissingConfigException", "kedro.config.OmegaConfigLoader", "kedro.config.TemplatedConfigLoader", "kedro.extras", "kedro.extras.datasets", "kedro.extras.datasets.api.APIDataSet", "kedro.extras.datasets.biosequence.BioSequenceDataSet", "kedro.extras.datasets.dask.ParquetDataSet", "kedro.extras.datasets.email.EmailMessageDataSet", "kedro.extras.datasets.geopandas.GeoJSONDataSet", "kedro.extras.datasets.holoviews.HoloviewsWriter", "kedro.extras.datasets.json.JSONDataSet", "kedro.extras.datasets.matplotlib.MatplotlibWriter", "kedro.extras.datasets.networkx.GMLDataSet", "kedro.extras.datasets.networkx.GraphMLDataSet", "kedro.extras.datasets.networkx.JSONDataSet", "kedro.extras.datasets.pandas.CSVDataSet", "kedro.extras.datasets.pandas.ExcelDataSet", "kedro.extras.datasets.pandas.FeatherDataSet", "kedro.extras.datasets.pandas.GBQQueryDataSet", "kedro.extras.datasets.pandas.GBQTableDataSet", "kedro.extras.datasets.pandas.GenericDataSet", "kedro.extras.datasets.pandas.HDFDataSet", "kedro.extras.datasets.pandas.JSONDataSet", "kedro.extras.datasets.pandas.ParquetDataSet", "kedro.extras.datasets.pandas.SQLQueryDataSet", "kedro.extras.datasets.pandas.SQLTableDataSet", "kedro.extras.datasets.pandas.XMLDataSet", "kedro.extras.datasets.pickle.PickleDataSet", "kedro.extras.datasets.pillow.ImageDataSet", "kedro.extras.datasets.plotly.JSONDataSet", "kedro.extras.datasets.plotly.PlotlyDataSet", "kedro.extras.datasets.redis.PickleDataSet", "kedro.extras.datasets.spark.DeltaTableDataSet", "kedro.extras.datasets.spark.SparkDataSet", "kedro.extras.datasets.spark.SparkHiveDataSet", "kedro.extras.datasets.spark.SparkJDBCDataSet", "kedro.extras.datasets.svmlight.SVMLightDataSet", "kedro.extras.datasets.tensorflow.TensorFlowModelDataset", "kedro.extras.datasets.text.TextDataSet", "kedro.extras.datasets.tracking.JSONDataSet", "kedro.extras.datasets.tracking.MetricsDataSet", "kedro.extras.datasets.yaml.YAMLDataSet", "kedro.extras.extensions", "kedro.extras.extensions.ipython", "kedro.extras.logging", "kedro.extras.logging.color_logger", "kedro.extras.logging.color_logger.ColorHandler", "kedro.framework", "kedro.framework.cli", "kedro.framework.cli.catalog", "kedro.framework.cli.cli", "kedro.framework.cli.cli.KedroCLI", "kedro.framework.cli.cli.main", "kedro.framework.cli.hooks", "kedro.framework.cli.hooks.manager", "kedro.framework.cli.hooks.manager.CLIHooksManager", "kedro.framework.cli.hooks.manager.get_cli_hook_manager", "kedro.framework.cli.hooks.markers", "kedro.framework.cli.hooks.specs", "kedro.framework.cli.hooks.specs.CLICommandSpecs", "kedro.framework.cli.jupyter", "kedro.framework.cli.jupyter.JupyterCommandGroup", "kedro.framework.cli.micropkg", "kedro.framework.cli.micropkg.safe_extract", "kedro.framework.cli.pipeline", "kedro.framework.cli.pipeline.PipelineArtifacts", "kedro.framework.cli.project", "kedro.framework.cli.registry", "kedro.framework.cli.starters", "kedro.framework.cli.starters.KedroStarterSpec", "kedro.framework.cli.utils", "kedro.framework.cli.utils.CommandCollection", "kedro.framework.cli.utils.KedroCliError", "kedro.framework.cli.utils.command_with_verbosity", "kedro.framework.cli.utils.env_option", "kedro.framework.cli.utils.find_stylesheets", "kedro.framework.cli.utils.forward_command", "kedro.framework.cli.utils.get_pkg_version", "kedro.framework.cli.utils.python_call", "kedro.framework.cli.utils.split_string", "kedro.framework.context", "kedro.framework.context.KedroContext", "kedro.framework.context.KedroContextError", "kedro.framework.hooks", "kedro.framework.hooks.manager", "kedro.framework.hooks.markers", "kedro.framework.hooks.specs", "kedro.framework.hooks.specs.DataCatalogSpecs", "kedro.framework.hooks.specs.DatasetSpecs", "kedro.framework.hooks.specs.KedroContextSpecs", "kedro.framework.hooks.specs.NodeSpecs", "kedro.framework.hooks.specs.PipelineSpecs", "kedro.framework.project", "kedro.framework.project.configure_logging", "kedro.framework.project.configure_project", "kedro.framework.project.find_pipelines", "kedro.framework.project.validate_settings", "kedro.framework.session", "kedro.framework.session.session", "kedro.framework.session.session.KedroSession", "kedro.framework.session.session.KedroSessionError", "kedro.framework.session.shelvestore", "kedro.framework.session.shelvestore.ShelveStore", "kedro.framework.session.store", "kedro.framework.session.store.BaseSessionStore", "kedro.framework.startup", "kedro.framework.startup.ProjectMetadata", "kedro.framework.startup.bootstrap_project", "kedro.io", "kedro.io.AbstractDataSet", "kedro.io.AbstractVersionedDataSet", "kedro.io.CachedDataSet", "kedro.io.DataCatalog", "kedro.io.DataSetAlreadyExistsError", "kedro.io.DataSetError", "kedro.io.DataSetNotFoundError", "kedro.io.IncrementalDataSet", "kedro.io.LambdaDataSet", "kedro.io.MemoryDataSet", "kedro.io.PartitionedDataSet", "kedro.io.Version", "kedro.ipython", "kedro.ipython.load_ipython_extension", "kedro.ipython.magic_reload_kedro", "kedro.ipython.reload_kedro", "kedro.logging", "kedro.logging.RichHandler", "kedro.pipeline", "kedro.pipeline.Pipeline", "kedro.pipeline.modular_pipeline.ModularPipelineError", "kedro.pipeline.modular_pipeline.pipeline", "kedro.pipeline.node", "kedro.pipeline.node.Node", "kedro.runner", "kedro.runner.AbstractRunner", "kedro.runner.ParallelRunner", "kedro.runner.SequentialRunner", "kedro.runner.ThreadRunner", "kedro.runner.run_node", "kedro.utils", "kedro.utils.load_obj", "kedro_datasets", "kedro_datasets.api.APIDataSet", "kedro_datasets.biosequence.BioSequenceDataSet", "kedro_datasets.dask.ParquetDataSet", "kedro_datasets.databricks.ManagedTableDataSet", "kedro_datasets.email.EmailMessageDataSet", "kedro_datasets.geopandas.GeoJSONDataSet", "kedro_datasets.holoviews.HoloviewsWriter", "kedro_datasets.json.JSONDataSet", "kedro_datasets.matplotlib.MatplotlibWriter", "kedro_datasets.networkx.GMLDataSet", "kedro_datasets.networkx.GraphMLDataSet", "kedro_datasets.networkx.JSONDataSet", "kedro_datasets.pandas.CSVDataSet", "kedro_datasets.pandas.DeltaTableDataSet", "kedro_datasets.pandas.ExcelDataSet", "kedro_datasets.pandas.FeatherDataSet", "kedro_datasets.pandas.GBQQueryDataSet", "kedro_datasets.pandas.GBQTableDataSet", "kedro_datasets.pandas.GenericDataSet", "kedro_datasets.pandas.HDFDataSet", "kedro_datasets.pandas.JSONDataSet", "kedro_datasets.pandas.ParquetDataSet", "kedro_datasets.pandas.SQLQueryDataSet", "kedro_datasets.pandas.SQLTableDataSet", "kedro_datasets.pandas.XMLDataSet", "kedro_datasets.pickle.PickleDataSet", "kedro_datasets.pillow.ImageDataSet", "kedro_datasets.plotly.JSONDataSet", "kedro_datasets.plotly.PlotlyDataSet", "kedro_datasets.polars.CSVDataSet", "kedro_datasets.polars.GenericDataSet", "kedro_datasets.redis.PickleDataSet", "kedro_datasets.snowflake.SnowparkTableDataSet", "kedro_datasets.spark.DeltaTableDataSet", "kedro_datasets.spark.SparkDataSet", "kedro_datasets.spark.SparkHiveDataSet", "kedro_datasets.spark.SparkJDBCDataSet", "kedro_datasets.spark.SparkStreamingDataSet", "kedro_datasets.svmlight.SVMLightDataSet", "kedro_datasets.tensorflow.TensorFlowModelDataSet", "kedro_datasets.text.TextDataSet", "kedro_datasets.tracking.JSONDataSet", "kedro_datasets.tracking.MetricsDataSet", "kedro_datasets.video.VideoDataSet", "kedro_datasets.yaml.YAMLDataSet", "kedro_project_setup/dependencies", "kedro_project_setup/index", "kedro_project_setup/session", "kedro_project_setup/settings", "kedro_project_setup/starters", "logging/index", "logging/logging", "nodes_and_pipelines/index", "nodes_and_pipelines/micro_packaging", "nodes_and_pipelines/modular_pipelines", "nodes_and_pipelines/nodes", "nodes_and_pipelines/pipeline_introduction", "nodes_and_pipelines/pipeline_registry", "nodes_and_pipelines/run_a_pipeline", "nodes_and_pipelines/slice_a_pipeline", "notebooks_and_ipython/add_kedro_to_a_notebook", "notebooks_and_ipython/index", "notebooks_and_ipython/kedro_and_notebooks", "notebooks_and_ipython/kedro_as_a_data_registry", "resources/glossary", "resources/index", "tutorial/add_another_pipeline", "tutorial/create_a_pipeline", "tutorial/package_a_project", "tutorial/set_up_data", "tutorial/spaceflights_tutorial", "tutorial/spaceflights_tutorial_faqs", "tutorial/tutorial_template", "visualisation/index", "visualisation/kedro-viz_visualisation", "visualisation/preview_datasets", "visualisation/share_kedro_viz", "visualisation/visualise_charts_with_plotly"], "filenames": ["configuration/advanced_configuration.md", "configuration/config_loader_migration.md", "configuration/configuration_basics.md", "configuration/credentials.md", "configuration/index.md", "configuration/parameters.md", "contribution/index.md", "contribution/technical_steering_committee.md", "data/advanced_data_catalog_usage.md", "data/data_catalog.md", "data/data_catalog_yaml_examples.md", "data/how_to_create_a_custom_dataset.md", "data/index.md", "data/kedro_dataset_factories.md", "data/partitioned_and_incremental_datasets.md", "deployment/airflow_astronomer.md", "deployment/amazon_emr_serverless.md", "deployment/amazon_sagemaker.md", "deployment/argo.md", "deployment/aws_batch.md", "deployment/aws_step_functions.md", "deployment/azure.md", "deployment/dask.md", "deployment/databricks/databricks_deployment_workflow.md", "deployment/databricks/databricks_ide_development_workflow.md", "deployment/databricks/databricks_notebooks_development_workflow.md", "deployment/databricks/databricks_visualisation.md", "deployment/databricks/index.md", "deployment/distributed.md", "deployment/index.md", "deployment/kubeflow.md", "deployment/prefect.md", "deployment/single_machine.md", "deployment/vertexai.md", "development/automated_testing.md", "development/commands_reference.md", "development/debugging.md", "development/index.md", "development/linting.md", "development/set_up_pycharm.md", "development/set_up_vscode.md", "experiment_tracking/index.md", "extend_kedro/architecture_overview.md", "extend_kedro/common_use_cases.md", "extend_kedro/index.md", "extend_kedro/plugins.md", "faq/faq.md", "get_started/index.md", "get_started/install.md", "get_started/kedro_concepts.md", "get_started/new_project.md", "hooks/common_use_cases.md", "hooks/examples.md", "hooks/index.md", "hooks/introduction.md", "index.rst", "integrations/pyspark_integration.md", "introduction/index.md", "introduction/introduction.md", "kedro.rst", "kedro.KedroPythonVersionWarning.rst", "kedro.config.rst", "kedro.config.ConfigLoader.rst", "kedro.config.MissingConfigException.rst", "kedro.config.OmegaConfigLoader.rst", "kedro.config.TemplatedConfigLoader.rst", "kedro.extras.rst", "kedro.extras.datasets.rst", "kedro.extras.datasets.api.APIDataSet.rst", "kedro.extras.datasets.biosequence.BioSequenceDataSet.rst", "kedro.extras.datasets.dask.ParquetDataSet.rst", "kedro.extras.datasets.email.EmailMessageDataSet.rst", "kedro.extras.datasets.geopandas.GeoJSONDataSet.rst", "kedro.extras.datasets.holoviews.HoloviewsWriter.rst", "kedro.extras.datasets.json.JSONDataSet.rst", "kedro.extras.datasets.matplotlib.MatplotlibWriter.rst", "kedro.extras.datasets.networkx.GMLDataSet.rst", "kedro.extras.datasets.networkx.GraphMLDataSet.rst", "kedro.extras.datasets.networkx.JSONDataSet.rst", "kedro.extras.datasets.pandas.CSVDataSet.rst", "kedro.extras.datasets.pandas.ExcelDataSet.rst", "kedro.extras.datasets.pandas.FeatherDataSet.rst", "kedro.extras.datasets.pandas.GBQQueryDataSet.rst", "kedro.extras.datasets.pandas.GBQTableDataSet.rst", "kedro.extras.datasets.pandas.GenericDataSet.rst", "kedro.extras.datasets.pandas.HDFDataSet.rst", "kedro.extras.datasets.pandas.JSONDataSet.rst", "kedro.extras.datasets.pandas.ParquetDataSet.rst", "kedro.extras.datasets.pandas.SQLQueryDataSet.rst", "kedro.extras.datasets.pandas.SQLTableDataSet.rst", "kedro.extras.datasets.pandas.XMLDataSet.rst", "kedro.extras.datasets.pickle.PickleDataSet.rst", "kedro.extras.datasets.pillow.ImageDataSet.rst", "kedro.extras.datasets.plotly.JSONDataSet.rst", "kedro.extras.datasets.plotly.PlotlyDataSet.rst", "kedro.extras.datasets.redis.PickleDataSet.rst", "kedro.extras.datasets.spark.DeltaTableDataSet.rst", "kedro.extras.datasets.spark.SparkDataSet.rst", "kedro.extras.datasets.spark.SparkHiveDataSet.rst", "kedro.extras.datasets.spark.SparkJDBCDataSet.rst", "kedro.extras.datasets.svmlight.SVMLightDataSet.rst", "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.rst", "kedro.extras.datasets.text.TextDataSet.rst", "kedro.extras.datasets.tracking.JSONDataSet.rst", "kedro.extras.datasets.tracking.MetricsDataSet.rst", "kedro.extras.datasets.yaml.YAMLDataSet.rst", "kedro.extras.extensions.rst", "kedro.extras.extensions.ipython.rst", "kedro.extras.logging.rst", "kedro.extras.logging.color_logger.rst", "kedro.extras.logging.color_logger.ColorHandler.rst", "kedro.framework.rst", "kedro.framework.cli.rst", "kedro.framework.cli.catalog.rst", "kedro.framework.cli.cli.rst", "kedro.framework.cli.cli.KedroCLI.rst", "kedro.framework.cli.cli.main.rst", "kedro.framework.cli.hooks.rst", "kedro.framework.cli.hooks.manager.rst", "kedro.framework.cli.hooks.manager.CLIHooksManager.rst", "kedro.framework.cli.hooks.manager.get_cli_hook_manager.rst", "kedro.framework.cli.hooks.markers.rst", "kedro.framework.cli.hooks.specs.rst", "kedro.framework.cli.hooks.specs.CLICommandSpecs.rst", "kedro.framework.cli.jupyter.rst", "kedro.framework.cli.jupyter.JupyterCommandGroup.rst", "kedro.framework.cli.micropkg.rst", "kedro.framework.cli.micropkg.safe_extract.rst", "kedro.framework.cli.pipeline.rst", "kedro.framework.cli.pipeline.PipelineArtifacts.rst", "kedro.framework.cli.project.rst", "kedro.framework.cli.registry.rst", "kedro.framework.cli.starters.rst", "kedro.framework.cli.starters.KedroStarterSpec.rst", "kedro.framework.cli.utils.rst", "kedro.framework.cli.utils.CommandCollection.rst", "kedro.framework.cli.utils.KedroCliError.rst", "kedro.framework.cli.utils.command_with_verbosity.rst", "kedro.framework.cli.utils.env_option.rst", "kedro.framework.cli.utils.find_stylesheets.rst", "kedro.framework.cli.utils.forward_command.rst", "kedro.framework.cli.utils.get_pkg_version.rst", "kedro.framework.cli.utils.python_call.rst", "kedro.framework.cli.utils.split_string.rst", "kedro.framework.context.rst", "kedro.framework.context.KedroContext.rst", "kedro.framework.context.KedroContextError.rst", "kedro.framework.hooks.rst", "kedro.framework.hooks.manager.rst", "kedro.framework.hooks.markers.rst", "kedro.framework.hooks.specs.rst", "kedro.framework.hooks.specs.DataCatalogSpecs.rst", "kedro.framework.hooks.specs.DatasetSpecs.rst", "kedro.framework.hooks.specs.KedroContextSpecs.rst", "kedro.framework.hooks.specs.NodeSpecs.rst", "kedro.framework.hooks.specs.PipelineSpecs.rst", "kedro.framework.project.rst", "kedro.framework.project.configure_logging.rst", "kedro.framework.project.configure_project.rst", "kedro.framework.project.find_pipelines.rst", "kedro.framework.project.validate_settings.rst", "kedro.framework.session.rst", "kedro.framework.session.session.rst", "kedro.framework.session.session.KedroSession.rst", "kedro.framework.session.session.KedroSessionError.rst", "kedro.framework.session.shelvestore.rst", "kedro.framework.session.shelvestore.ShelveStore.rst", "kedro.framework.session.store.rst", "kedro.framework.session.store.BaseSessionStore.rst", "kedro.framework.startup.rst", "kedro.framework.startup.ProjectMetadata.rst", "kedro.framework.startup.bootstrap_project.rst", "kedro.io.rst", "kedro.io.AbstractDataSet.rst", "kedro.io.AbstractVersionedDataSet.rst", "kedro.io.CachedDataSet.rst", "kedro.io.DataCatalog.rst", "kedro.io.DataSetAlreadyExistsError.rst", "kedro.io.DataSetError.rst", "kedro.io.DataSetNotFoundError.rst", "kedro.io.IncrementalDataSet.rst", "kedro.io.LambdaDataSet.rst", "kedro.io.MemoryDataSet.rst", "kedro.io.PartitionedDataSet.rst", "kedro.io.Version.rst", "kedro.ipython.rst", "kedro.ipython.load_ipython_extension.rst", "kedro.ipython.magic_reload_kedro.rst", "kedro.ipython.reload_kedro.rst", "kedro.logging.rst", "kedro.logging.RichHandler.rst", "kedro.pipeline.rst", "kedro.pipeline.Pipeline.rst", "kedro.pipeline.modular_pipeline.ModularPipelineError.rst", "kedro.pipeline.modular_pipeline.pipeline.rst", "kedro.pipeline.node.rst", "kedro.pipeline.node.Node.rst", "kedro.runner.rst", "kedro.runner.AbstractRunner.rst", "kedro.runner.ParallelRunner.rst", "kedro.runner.SequentialRunner.rst", "kedro.runner.ThreadRunner.rst", "kedro.runner.run_node.rst", "kedro.utils.rst", "kedro.utils.load_obj.rst", "kedro_datasets.rst", "kedro_datasets.api.APIDataSet.rst", "kedro_datasets.biosequence.BioSequenceDataSet.rst", "kedro_datasets.dask.ParquetDataSet.rst", "kedro_datasets.databricks.ManagedTableDataSet.rst", "kedro_datasets.email.EmailMessageDataSet.rst", "kedro_datasets.geopandas.GeoJSONDataSet.rst", "kedro_datasets.holoviews.HoloviewsWriter.rst", "kedro_datasets.json.JSONDataSet.rst", "kedro_datasets.matplotlib.MatplotlibWriter.rst", "kedro_datasets.networkx.GMLDataSet.rst", "kedro_datasets.networkx.GraphMLDataSet.rst", "kedro_datasets.networkx.JSONDataSet.rst", "kedro_datasets.pandas.CSVDataSet.rst", "kedro_datasets.pandas.DeltaTableDataSet.rst", "kedro_datasets.pandas.ExcelDataSet.rst", "kedro_datasets.pandas.FeatherDataSet.rst", "kedro_datasets.pandas.GBQQueryDataSet.rst", "kedro_datasets.pandas.GBQTableDataSet.rst", "kedro_datasets.pandas.GenericDataSet.rst", "kedro_datasets.pandas.HDFDataSet.rst", "kedro_datasets.pandas.JSONDataSet.rst", "kedro_datasets.pandas.ParquetDataSet.rst", "kedro_datasets.pandas.SQLQueryDataSet.rst", "kedro_datasets.pandas.SQLTableDataSet.rst", "kedro_datasets.pandas.XMLDataSet.rst", "kedro_datasets.pickle.PickleDataSet.rst", "kedro_datasets.pillow.ImageDataSet.rst", "kedro_datasets.plotly.JSONDataSet.rst", "kedro_datasets.plotly.PlotlyDataSet.rst", "kedro_datasets.polars.CSVDataSet.rst", "kedro_datasets.polars.GenericDataSet.rst", "kedro_datasets.redis.PickleDataSet.rst", "kedro_datasets.snowflake.SnowparkTableDataSet.rst", "kedro_datasets.spark.DeltaTableDataSet.rst", "kedro_datasets.spark.SparkDataSet.rst", "kedro_datasets.spark.SparkHiveDataSet.rst", "kedro_datasets.spark.SparkJDBCDataSet.rst", "kedro_datasets.spark.SparkStreamingDataSet.rst", "kedro_datasets.svmlight.SVMLightDataSet.rst", "kedro_datasets.tensorflow.TensorFlowModelDataSet.rst", "kedro_datasets.text.TextDataSet.rst", "kedro_datasets.tracking.JSONDataSet.rst", "kedro_datasets.tracking.MetricsDataSet.rst", "kedro_datasets.video.VideoDataSet.rst", "kedro_datasets.yaml.YAMLDataSet.rst", "kedro_project_setup/dependencies.md", "kedro_project_setup/index.md", "kedro_project_setup/session.md", "kedro_project_setup/settings.md", "kedro_project_setup/starters.md", "logging/index.md", "logging/logging.md", "nodes_and_pipelines/index.md", "nodes_and_pipelines/micro_packaging.md", "nodes_and_pipelines/modular_pipelines.md", "nodes_and_pipelines/nodes.md", "nodes_and_pipelines/pipeline_introduction.md", "nodes_and_pipelines/pipeline_registry.md", "nodes_and_pipelines/run_a_pipeline.md", "nodes_and_pipelines/slice_a_pipeline.md", "notebooks_and_ipython/add_kedro_to_a_notebook.ipynb", "notebooks_and_ipython/index.md", "notebooks_and_ipython/kedro_and_notebooks.md", "notebooks_and_ipython/kedro_as_a_data_registry.md", "resources/glossary.md", "resources/index.md", "tutorial/add_another_pipeline.md", "tutorial/create_a_pipeline.md", "tutorial/package_a_project.md", "tutorial/set_up_data.md", "tutorial/spaceflights_tutorial.md", "tutorial/spaceflights_tutorial_faqs.md", "tutorial/tutorial_template.md", "visualisation/index.md", "visualisation/kedro-viz_visualisation.md", "visualisation/preview_datasets.md", "visualisation/share_kedro_viz.md", "visualisation/visualise_charts_with_plotly.md"], "titles": ["Advanced configuration", "Migration guide for config loaders", "Configuration", "Credentials", "Configuration", "Parameters", "Contribute to Kedro", "Kedro\u2019s Technical Steering Committee", "Advanced: Access the Data Catalog in code", "Introduction to the Data Catalog", "Data Catalog YAML examples", "Advanced: Tutorial to create a custom dataset", "The Kedro Data Catalog", "Kedro dataset factories", "Advanced: Partitioned and incremental datasets", "Apache Airflow", "Amazon EMR Serverless", "Amazon SageMaker", "Argo Workflows (outdated documentation that needs review)", "AWS Batch (outdated documentation that needs review)", "AWS Step Functions", "Azure ML pipelines", "Dask", "Use a Databricks job to deploy a Kedro project", "Use an IDE, dbx and Databricks Repos to develop a Kedro project", "Use a Databricks workspace to develop a Kedro project", "Visualise a Kedro project in Databricks notebooks", "Databricks", "Distributed deployment", "Deployment", "Kubeflow Pipelines", "Prefect", "Single-machine deployment", "VertexAI", "Automated Testing", "Kedro\u2019s command line interface", "Debugging", "Development", "Code formatting and linting", "Set up PyCharm", "Set up Visual Studio Code", "Experiment tracking in Kedro-Viz", "Kedro architecture overview", "Common use cases", "Extend Kedro", "Kedro plugins", "FAQs", "First steps", "Set up Kedro", "Kedro concepts", "Create a new Kedro project", "Common use cases", "Hooks examples", "Hooks", "Hooks", "Welcome to Kedro\u2019s documentation!", "PySpark integration", "Introduction to Kedro", "Learn how to use Kedro", "kedro", "kedro.KedroPythonVersionWarning", "kedro.config", "kedro.config.ConfigLoader", "kedro.config.MissingConfigException", "kedro.config.OmegaConfigLoader", "kedro.config.TemplatedConfigLoader", "kedro.extras", "kedro.extras.datasets", "kedro.extras.datasets.api.APIDataSet", "kedro.extras.datasets.biosequence.BioSequenceDataSet", "kedro.extras.datasets.dask.ParquetDataSet", "kedro.extras.datasets.email.EmailMessageDataSet", "kedro.extras.datasets.geopandas.GeoJSONDataSet", "kedro.extras.datasets.holoviews.HoloviewsWriter", "kedro.extras.datasets.json.JSONDataSet", "kedro.extras.datasets.matplotlib.MatplotlibWriter", "kedro.extras.datasets.networkx.GMLDataSet", "kedro.extras.datasets.networkx.GraphMLDataSet", "kedro.extras.datasets.networkx.JSONDataSet", "kedro.extras.datasets.pandas.CSVDataSet", "kedro.extras.datasets.pandas.ExcelDataSet", "kedro.extras.datasets.pandas.FeatherDataSet", "kedro.extras.datasets.pandas.GBQQueryDataSet", "kedro.extras.datasets.pandas.GBQTableDataSet", "kedro.extras.datasets.pandas.GenericDataSet", "kedro.extras.datasets.pandas.HDFDataSet", "kedro.extras.datasets.pandas.JSONDataSet", "kedro.extras.datasets.pandas.ParquetDataSet", "kedro.extras.datasets.pandas.SQLQueryDataSet", "kedro.extras.datasets.pandas.SQLTableDataSet", "kedro.extras.datasets.pandas.XMLDataSet", "kedro.extras.datasets.pickle.PickleDataSet", "kedro.extras.datasets.pillow.ImageDataSet", "kedro.extras.datasets.plotly.JSONDataSet", "kedro.extras.datasets.plotly.PlotlyDataSet", "kedro.extras.datasets.redis.PickleDataSet", "kedro.extras.datasets.spark.DeltaTableDataSet", "kedro.extras.datasets.spark.SparkDataSet", "kedro.extras.datasets.spark.SparkHiveDataSet", "kedro.extras.datasets.spark.SparkJDBCDataSet", "kedro.extras.datasets.svmlight.SVMLightDataSet", "kedro.extras.datasets.tensorflow.TensorFlowModelDataset", "kedro.extras.datasets.text.TextDataSet", "kedro.extras.datasets.tracking.JSONDataSet", "kedro.extras.datasets.tracking.MetricsDataSet", "kedro.extras.datasets.yaml.YAMLDataSet", "kedro.extras.extensions", "kedro.extras.extensions.ipython", "kedro.extras.logging", "kedro.extras.logging.color_logger", "kedro.extras.logging.color_logger.ColorHandler", "kedro.framework", "kedro.framework.cli", "kedro.framework.cli.catalog", "kedro.framework.cli.cli", "kedro.framework.cli.cli.KedroCLI", "kedro.framework.cli.cli.main", "kedro.framework.cli.hooks", "kedro.framework.cli.hooks.manager", "kedro.framework.cli.hooks.manager.CLIHooksManager", "kedro.framework.cli.hooks.manager.get_cli_hook_manager", "kedro.framework.cli.hooks.markers", "kedro.framework.cli.hooks.specs", "kedro.framework.cli.hooks.specs.CLICommandSpecs", "kedro.framework.cli.jupyter", "kedro.framework.cli.jupyter.JupyterCommandGroup", "kedro.framework.cli.micropkg", "kedro.framework.cli.micropkg.safe_extract", "kedro.framework.cli.pipeline", "kedro.framework.cli.pipeline.PipelineArtifacts", "kedro.framework.cli.project", "kedro.framework.cli.registry", "kedro.framework.cli.starters", "kedro.framework.cli.starters.KedroStarterSpec", "kedro.framework.cli.utils", "kedro.framework.cli.utils.CommandCollection", "kedro.framework.cli.utils.KedroCliError", "kedro.framework.cli.utils.command_with_verbosity", "kedro.framework.cli.utils.env_option", "kedro.framework.cli.utils.find_stylesheets", "kedro.framework.cli.utils.forward_command", "kedro.framework.cli.utils.get_pkg_version", "kedro.framework.cli.utils.python_call", "kedro.framework.cli.utils.split_string", "kedro.framework.context", "kedro.framework.context.KedroContext", "kedro.framework.context.KedroContextError", "kedro.framework.hooks", "kedro.framework.hooks.manager", "kedro.framework.hooks.markers", "kedro.framework.hooks.specs", "kedro.framework.hooks.specs.DataCatalogSpecs", "kedro.framework.hooks.specs.DatasetSpecs", "kedro.framework.hooks.specs.KedroContextSpecs", "kedro.framework.hooks.specs.NodeSpecs", "kedro.framework.hooks.specs.PipelineSpecs", "kedro.framework.project", "kedro.framework.project.configure_logging", "kedro.framework.project.configure_project", "kedro.framework.project.find_pipelines", "kedro.framework.project.validate_settings", "kedro.framework.session", "kedro.framework.session.session", "kedro.framework.session.session.KedroSession", "kedro.framework.session.session.KedroSessionError", "kedro.framework.session.shelvestore", "kedro.framework.session.shelvestore.ShelveStore", "kedro.framework.session.store", "kedro.framework.session.store.BaseSessionStore", "kedro.framework.startup", "kedro.framework.startup.ProjectMetadata", "kedro.framework.startup.bootstrap_project", "kedro.io", "kedro.io.AbstractDataSet", "kedro.io.AbstractVersionedDataSet", "kedro.io.CachedDataSet", "kedro.io.DataCatalog", "kedro.io.DataSetAlreadyExistsError", "kedro.io.DataSetError", "kedro.io.DataSetNotFoundError", "kedro.io.IncrementalDataSet", "kedro.io.LambdaDataSet", "kedro.io.MemoryDataSet", "kedro.io.PartitionedDataSet", "kedro.io.Version", "kedro.ipython", "kedro.ipython.load_ipython_extension", "kedro.ipython.magic_reload_kedro", "kedro.ipython.reload_kedro", "kedro.logging", "kedro.logging.RichHandler", "kedro.pipeline", "kedro.pipeline.Pipeline", "kedro.pipeline.modular_pipeline.ModularPipelineError", "kedro.pipeline.modular_pipeline.pipeline", "kedro.pipeline.node", "kedro.pipeline.node.Node", "kedro.runner", "kedro.runner.AbstractRunner", "kedro.runner.ParallelRunner", "kedro.runner.SequentialRunner", "kedro.runner.ThreadRunner", "kedro.runner.run_node", "kedro.utils", "kedro.utils.load_obj", "kedro_datasets", "kedro_datasets.api.APIDataSet", "kedro_datasets.biosequence.BioSequenceDataSet", "kedro_datasets.dask.ParquetDataSet", "kedro_datasets.databricks.ManagedTableDataSet", "kedro_datasets.email.EmailMessageDataSet", "kedro_datasets.geopandas.GeoJSONDataSet", "kedro_datasets.holoviews.HoloviewsWriter", "kedro_datasets.json.JSONDataSet", "kedro_datasets.matplotlib.MatplotlibWriter", "kedro_datasets.networkx.GMLDataSet", "kedro_datasets.networkx.GraphMLDataSet", "kedro_datasets.networkx.JSONDataSet", "kedro_datasets.pandas.CSVDataSet", "kedro_datasets.pandas.DeltaTableDataSet", "kedro_datasets.pandas.ExcelDataSet", "kedro_datasets.pandas.FeatherDataSet", "kedro_datasets.pandas.GBQQueryDataSet", "kedro_datasets.pandas.GBQTableDataSet", "kedro_datasets.pandas.GenericDataSet", "kedro_datasets.pandas.HDFDataSet", "kedro_datasets.pandas.JSONDataSet", "kedro_datasets.pandas.ParquetDataSet", "kedro_datasets.pandas.SQLQueryDataSet", "kedro_datasets.pandas.SQLTableDataSet", "kedro_datasets.pandas.XMLDataSet", "kedro_datasets.pickle.PickleDataSet", "kedro_datasets.pillow.ImageDataSet", "kedro_datasets.plotly.JSONDataSet", "kedro_datasets.plotly.PlotlyDataSet", "kedro_datasets.polars.CSVDataSet", "kedro_datasets.polars.GenericDataSet", "kedro_datasets.redis.PickleDataSet", "kedro_datasets.snowflake.SnowparkTableDataSet", "kedro_datasets.spark.DeltaTableDataSet", "kedro_datasets.spark.SparkDataSet", "kedro_datasets.spark.SparkHiveDataSet", "kedro_datasets.spark.SparkJDBCDataSet", "kedro_datasets.spark.SparkStreamingDataSet", "kedro_datasets.svmlight.SVMLightDataSet", "kedro_datasets.tensorflow.TensorFlowModelDataSet", "kedro_datasets.text.TextDataSet", "kedro_datasets.tracking.JSONDataSet", "kedro_datasets.tracking.MetricsDataSet", "kedro_datasets.video.VideoDataSet", "kedro_datasets.yaml.YAMLDataSet", "Dependencies", "Kedro project setup", "Lifecycle management with <code class=\"docutils literal notranslate\"><span class=\"pre\">KedroSession</span></code>", "Project settings", "Kedro starters", "Logging", "Default framework-side logging configuration", "Nodes and pipelines", "Micro-packaging", "Modular pipelines", "Nodes", "Pipelines", "The pipeline registry", "Run a pipeline", "Slice a pipeline", "Add Kedro features to a notebook", "Kedro for notebook users", "Use a Jupyter notebook for Kedro project experiments", "Kedro as a data registry", "Kedro glossary", "FAQs and resources", "Create a data science pipeline", "Create a data processing pipeline", "Package an entire Kedro project", "Set up the data", "Next steps: Tutorial", "Spaceflights tutorial FAQs", "Set up the spaceflights project", "Visualisation with Kedro-Viz", "Visualise the spaceflights project", "Preview data in Kedro-Viz", "Publish and share Kedro-Viz", "Visualise charts in Kedro-Viz"], "terms": {"The": [0, 1, 2, 3, 5, 7, 8, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 54, 55, 56, 58, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 103, 104, 105, 107, 110, 123, 136, 145, 151, 152, 153, 154, 155, 163, 176, 187, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 206, 207, 208, 210, 211, 212, 213, 214, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 283], "document": [0, 1, 2, 3, 6, 8, 9, 10, 11, 15, 16, 17, 21, 22, 23, 24, 27, 29, 30, 31, 33, 34, 38, 40, 43, 45, 49, 50, 51, 52, 54, 56, 58, 67, 71, 76, 77, 78, 97, 121, 122, 139, 149, 150, 210, 215, 216, 217, 240, 243, 251, 254, 255, 257, 260, 261, 264, 265, 268, 270, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283], "describ": [0, 2, 3, 7, 8, 11, 12, 15, 23, 32, 39, 40, 41, 45, 52, 54, 192, 255, 261, 262, 264, 265, 266, 267, 270, 272, 274, 280, 281, 282, 283], "satisfi": [0, 14, 22, 64, 91, 95, 198, 199, 200, 201, 231, 237], "most": [0, 1, 2, 8, 16, 34, 42, 43, 46, 48, 49, 255, 257, 264, 266, 277, 278], "common": [0, 2, 7, 10, 12, 44, 46, 53, 55, 255, 257, 270], "requir": [0, 2, 3, 8, 9, 10, 11, 14, 15, 16, 18, 20, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 38, 39, 41, 42, 43, 46, 49, 50, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 105, 141, 159, 171, 192, 196, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 257, 259, 260, 264, 265, 270, 272, 273, 277, 278, 280, 282, 283], "standard": [0, 2, 7, 14, 31, 38, 43, 48, 50, 71, 88, 210, 228, 254, 256, 257, 261, 273, 279], "project": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 20, 22, 27, 28, 29, 31, 34, 36, 38, 39, 40, 47, 54, 56, 58, 59, 62, 64, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 110, 114, 123, 132, 144, 145, 146, 161, 162, 163, 169, 170, 171, 187, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 259, 260, 263, 264, 266, 267, 269, 270, 277, 279, 281, 283], "By": [0, 2, 5, 9, 13, 16, 23, 24, 41, 49, 56, 159, 254, 255, 257, 259, 264, 266, 272, 280], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 114, 129, 132, 133, 145, 151, 152, 153, 160, 163, 165, 166, 168, 170, 172, 176, 184, 186, 187, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283], "set": [0, 1, 3, 5, 8, 10, 14, 15, 16, 18, 20, 27, 31, 32, 35, 36, 37, 42, 43, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 136, 146, 156, 158, 160, 164, 172, 176, 184, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 257, 260, 262, 264, 265, 266, 267, 268, 269, 272, 273, 276, 280, 281, 283], "up": [0, 1, 3, 8, 9, 11, 15, 16, 18, 20, 27, 28, 31, 32, 35, 36, 37, 45, 47, 49, 50, 54, 55, 56, 58, 133, 159, 192, 255, 260, 266, 267, 268, 269, 270, 272, 273, 276, 280, 281, 282, 283], "configload": [0, 2, 3, 5, 42, 65, 145, 160, 254, 266], "class": [0, 1, 2, 3, 5, 9, 10, 11, 12, 14, 19, 20, 22, 34, 36, 45, 49, 50, 51, 52, 54, 56, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 114, 115, 118, 119, 122, 123, 124, 125, 128, 129, 132, 133, 134, 135, 136, 144, 145, 146, 150, 151, 152, 153, 154, 155, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 176, 184, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 260, 261, 264, 266, 270, 273], "also": [0, 1, 5, 9, 10, 11, 13, 14, 15, 16, 18, 20, 21, 22, 23, 25, 26, 29, 32, 35, 38, 39, 40, 41, 42, 45, 48, 50, 51, 54, 56, 58, 62, 64, 65, 70, 87, 95, 98, 206, 208, 209, 219, 227, 228, 237, 241, 251, 254, 255, 256, 257, 259, 260, 261, 262, 264, 265, 266, 268, 270, 272, 274, 275, 276, 278, 283], "two": [0, 2, 8, 9, 11, 13, 14, 18, 23, 25, 35, 41, 45, 49, 50, 64, 206, 219, 255, 256, 257, 260, 261, 262, 268, 272, 273, 274, 275, 281, 282, 283], "addit": [0, 7, 11, 22, 23, 34, 45, 46, 54, 70, 87, 145, 159, 176, 206, 208, 219, 227, 228, 251, 254, 257, 259, 266, 274, 275, 276, 278], "loader": [0, 2, 3, 4, 5, 8, 9, 18, 51, 55, 56], "more": [0, 2, 3, 5, 9, 11, 12, 14, 16, 18, 19, 20, 22, 34, 35, 38, 39, 40, 42, 45, 48, 49, 51, 54, 56, 58, 64, 65, 68, 75, 121, 122, 149, 150, 159, 160, 163, 176, 187, 192, 196, 206, 214, 249, 251, 255, 257, 260, 262, 264, 266, 270, 272, 273, 274, 282], "function": [0, 1, 5, 8, 11, 14, 19, 22, 29, 31, 33, 34, 35, 41, 42, 43, 45, 46, 48, 49, 51, 56, 61, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 114, 118, 124, 126, 134, 135, 138, 144, 145, 148, 156, 159, 169, 172, 176, 185, 186, 188, 191, 192, 195, 196, 197, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 259, 260, 262, 263, 264, 269, 270, 272, 283], "each": [0, 5, 8, 9, 10, 13, 14, 16, 18, 19, 20, 22, 23, 27, 28, 30, 31, 32, 34, 35, 38, 41, 42, 46, 48, 49, 50, 51, 56, 97, 151, 187, 192, 206, 240, 243, 251, 255, 262, 263, 266, 268, 272, 273, 276, 281, 283], "altern": [0, 2, 5, 8, 10, 11, 14, 16, 18, 19, 32, 38, 159, 255, 257, 261, 264, 274], "have": [0, 1, 2, 5, 7, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 28, 29, 31, 32, 34, 35, 36, 38, 39, 40, 41, 43, 45, 46, 48, 49, 50, 52, 54, 56, 58, 155, 159, 176, 192, 195, 196, 204, 209, 219, 254, 255, 257, 260, 261, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283], "differ": [0, 1, 2, 8, 9, 15, 23, 24, 25, 28, 29, 31, 32, 35, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 56, 61, 62, 64, 83, 176, 196, 203, 223, 238, 251, 256, 257, 259, 261, 264, 270, 272, 273, 274, 275, 278, 280, 281], "featur": [0, 1, 6, 7, 14, 17, 20, 24, 25, 34, 39, 41, 45, 46, 55, 56, 94, 100, 234, 244, 260, 261, 267, 268, 269, 272, 274], "follow": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 28, 29, 31, 32, 34, 35, 38, 39, 40, 41, 45, 46, 48, 49, 50, 51, 52, 54, 56, 58, 62, 64, 65, 107, 155, 192, 196, 209, 219, 251, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283], "section": [0, 1, 2, 7, 8, 9, 11, 12, 14, 16, 19, 23, 24, 25, 29, 34, 38, 39, 40, 41, 47, 48, 49, 50, 56, 58, 254, 257, 259, 260, 261, 266, 270, 272, 273, 274, 275, 278, 280, 281], "specif": [0, 1, 2, 8, 9, 11, 12, 13, 14, 16, 20, 22, 24, 31, 36, 38, 41, 42, 43, 45, 46, 48, 49, 52, 64, 70, 71, 72, 74, 79, 80, 84, 85, 86, 87, 90, 91, 92, 93, 94, 102, 103, 104, 105, 122, 123, 133, 150, 151, 152, 153, 154, 155, 186, 208, 210, 211, 213, 218, 219, 220, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 246, 247, 248, 250, 255, 259, 263, 265, 266, 268, 270, 274, 275, 276, 277, 278, 282], "detail": [0, 2, 3, 9, 13, 14, 15, 16, 17, 18, 20, 25, 30, 33, 34, 39, 50, 76, 77, 78, 176, 215, 216, 217, 244, 253, 266, 268, 273, 282], "thi": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 26, 27, 28, 29, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 62, 64, 65, 70, 84, 88, 89, 95, 97, 98, 100, 102, 106, 107, 108, 110, 114, 118, 121, 132, 133, 136, 145, 148, 149, 153, 154, 155, 159, 160, 162, 165, 166, 167, 169, 176, 184, 185, 186, 188, 189, 192, 194, 195, 196, 199, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283], "page": [0, 7, 9, 10, 12, 16, 18, 19, 22, 29, 31, 34, 41, 49, 50, 52, 56, 254, 265, 266, 267, 268, 281, 282, 283], "contain": [0, 1, 2, 3, 5, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 35, 39, 40, 41, 42, 45, 46, 49, 52, 54, 62, 64, 87, 91, 95, 106, 108, 122, 145, 150, 154, 163, 176, 187, 189, 192, 196, 202, 206, 219, 227, 231, 237, 251, 253, 254, 255, 259, 260, 261, 262, 263, 264, 268, 269, 270, 272, 273, 274, 275, 276], "guidanc": [0, 2, 7, 23], "omegaconf": [0, 1, 64], "python": [0, 11, 14, 15, 18, 19, 20, 22, 23, 24, 25, 31, 32, 34, 40, 42, 45, 48, 49, 50, 56, 57, 58, 60, 65, 68, 70, 71, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 142, 190, 206, 208, 209, 210, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 260, 261, 264, 268, 270, 272, 273, 274, 276, 278, 280], "librari": [0, 9, 10, 16, 17, 22, 23, 24, 25, 26, 34, 35, 40, 43, 45, 48, 49, 51, 68, 71, 74, 91, 95, 103, 104, 172, 206, 210, 213, 231, 237, 247, 248, 253, 254, 256, 261, 268, 272, 276], "design": [0, 2, 7, 9, 58, 89, 229, 260], "handl": [0, 3, 5, 14, 19, 22, 42, 70, 71, 74, 79, 80, 85, 86, 87, 88, 90, 92, 98, 103, 104, 105, 190, 208, 210, 213, 218, 219, 220, 225, 226, 227, 228, 230, 232, 235, 236, 241, 247, 248, 250, 254, 256, 261, 264, 266, 268], "manag": [0, 6, 13, 14, 15, 17, 18, 19, 20, 21, 22, 28, 30, 31, 33, 41, 42, 45, 46, 48, 49, 51, 55, 71, 82, 83, 114, 132, 163, 199, 209, 210, 222, 223, 252, 254, 266, 267, 270], "It": [0, 9, 10, 11, 14, 15, 16, 18, 19, 22, 25, 26, 27, 30, 34, 35, 38, 39, 40, 41, 45, 46, 49, 50, 56, 57, 64, 68, 70, 71, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 97, 99, 100, 103, 104, 105, 123, 151, 176, 199, 200, 201, 206, 208, 210, 213, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 240, 242, 243, 244, 247, 248, 250, 259, 260, 261, 264, 266, 267, 268, 270, 275, 276, 279, 280, 282], "serv": [0, 5, 9, 41, 42, 45, 50, 265, 273, 280], "yaml": [0, 1, 2, 8, 9, 11, 12, 13, 15, 38, 40, 55, 56, 62, 64, 68, 70, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 206, 208, 209, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 259, 272, 273, 280], "base": [0, 1, 3, 5, 7, 9, 10, 11, 14, 15, 16, 20, 21, 24, 25, 27, 29, 31, 34, 35, 41, 46, 50, 51, 52, 55, 62, 64, 65, 100, 145, 168, 198, 199, 201, 244, 255, 256, 259, 260, 264, 266, 269, 270, 272, 273, 275, 283], "hierarch": 0, "system": [0, 9, 12, 14, 16, 23, 24, 25, 28, 30, 31, 41, 43, 48, 49, 70, 176, 208, 257, 266, 275], "organis": [0, 2, 7, 9, 15, 43, 48, 49, 259, 260, 262, 267, 270], "can": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 58, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 110, 159, 176, 190, 194, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283], "structur": [0, 2, 5, 10, 11, 15, 20, 23, 25, 27, 28, 45, 46, 170, 194, 243, 255, 260, 262, 266, 272, 280], "accommod": 0, "variou": [0, 7, 12, 22, 38, 43, 49, 266, 274], "sourc": [0, 9, 11, 12, 15, 18, 22, 23, 24, 31, 32, 35, 39, 40, 42, 46, 48, 49, 56, 57, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 115, 116, 119, 120, 123, 125, 127, 129, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 151, 152, 153, 154, 155, 157, 158, 159, 160, 163, 164, 166, 168, 170, 171, 176, 184, 186, 187, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 259, 264, 266, 268, 270, 274, 275, 276, 278], "allow": [0, 1, 2, 5, 8, 9, 11, 13, 14, 15, 16, 18, 19, 22, 23, 24, 25, 32, 34, 35, 39, 40, 45, 49, 56, 65, 68, 72, 81, 82, 88, 89, 91, 95, 98, 99, 154, 176, 187, 206, 209, 211, 221, 222, 228, 229, 231, 237, 241, 242, 253, 255, 259, 260, 261, 268, 270, 274, 282, 283], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 58, 62, 64, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 101, 102, 103, 104, 105, 110, 163, 176, 187, 192, 194, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283], "merg": [0, 2, 9, 45, 56, 64, 65, 266, 273], "from": [0, 1, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 52, 54, 56, 61, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 112, 114, 132, 133, 135, 136, 141, 145, 151, 152, 159, 163, 165, 170, 176, 192, 194, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 270, 272, 273, 275, 278, 280, 281, 282, 283], "multipl": [0, 5, 11, 12, 14, 19, 20, 28, 35, 36, 41, 45, 49, 75, 164, 192, 196, 214, 261, 264, 265, 266, 268, 272], "locat": [0, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 28, 35, 56, 62, 64, 83, 84, 100, 223, 224, 236, 244, 249, 257, 259, 264, 274], "0": [0, 1, 2, 5, 9, 12, 13, 15, 16, 19, 20, 22, 23, 24, 25, 34, 35, 38, 39, 40, 41, 45, 48, 50, 51, 52, 56, 67, 69, 94, 95, 100, 103, 104, 129, 159, 163, 170, 184, 207, 234, 237, 244, 247, 248, 249, 255, 259, 262, 263, 264, 265, 266, 268, 272, 273, 274, 275, 278, 280, 281, 282, 283], "18": [0, 1, 2, 9, 12, 13, 15, 24, 31, 35, 39, 40, 41, 45, 159, 263, 265, 272, 275, 278, 280, 282], "5": [0, 8, 10, 20, 34, 41, 70, 72, 74, 75, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 99, 105, 170, 176, 196, 208, 211, 213, 214, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 242, 250, 261, 264, 268, 272, 278, 281], "data": [0, 1, 2, 5, 7, 11, 13, 14, 15, 16, 18, 20, 22, 26, 32, 36, 42, 45, 50, 51, 53, 54, 55, 57, 59, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 151, 152, 154, 163, 166, 168, 172, 176, 184, 191, 192, 195, 196, 198, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 260, 263, 264, 265, 267, 268, 274, 276, 279, 280], "under": [0, 2, 5, 7, 15, 16, 19, 25, 32, 35, 40, 41, 45, 56, 71, 80, 210, 220, 254, 255, 259, 263, 280, 281], "activ": [0, 7, 23, 24, 25, 34, 35, 39, 41, 45, 48, 145, 198, 199, 200, 201, 202], "develop": [0, 2, 6, 9, 20, 23, 27, 28, 32, 34, 38, 39, 40, 42, 54, 55, 176, 238, 260, 267, 270, 272], "avail": [0, 2, 5, 7, 9, 10, 11, 12, 14, 15, 20, 24, 25, 28, 34, 35, 36, 38, 40, 41, 42, 45, 48, 58, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 112, 114, 132, 176, 184, 190, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 250, 254, 255, 257, 260, 264, 266, 268, 270, 272, 275], "version": [0, 1, 2, 3, 10, 13, 14, 15, 18, 19, 20, 23, 24, 25, 28, 31, 32, 38, 39, 40, 42, 45, 49, 55, 56, 60, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 141, 145, 163, 176, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 266, 268, 270, 272, 274, 275, 277, 278, 280, 281, 282, 283], "due": [0, 8, 16, 27, 192], "later": [0, 1, 7, 15, 16, 20, 27, 31, 48, 259, 263, 268, 272], "releas": [0, 1, 14, 16, 18, 19, 22, 29, 48, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 176, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 273], "let": [0, 1, 8, 9, 11, 14, 15, 19, 27, 34, 45, 163, 261, 264, 265, 266], "u": [0, 1, 10, 14, 18, 19, 48, 260, 262, 265], "know": [0, 10, 35, 261, 262, 266, 270], "ani": [0, 1, 2, 3, 5, 6, 8, 9, 11, 13, 14, 15, 18, 19, 20, 22, 24, 25, 28, 30, 32, 35, 38, 40, 41, 42, 43, 45, 46, 48, 51, 52, 54, 56, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 145, 152, 155, 160, 163, 176, 192, 194, 195, 196, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 257, 259, 260, 261, 263, 264, 266, 268, 269, 270, 272, 274, 275, 276], "feedback": 0, "about": [0, 2, 6, 7, 11, 12, 14, 18, 23, 34, 35, 39, 40, 45, 48, 49, 51, 54, 60, 122, 150, 255, 260, 264, 268, 270, 272, 274, 275, 282], "join": [0, 6, 40, 46, 209, 260, 273], "commun": [0, 6, 18, 276, 277, 280], "slack": [0, 6, 7, 18, 19, 48, 50, 276, 280], "json": [0, 1, 2, 9, 10, 11, 14, 16, 20, 23, 39, 40, 41, 45, 62, 64, 68, 78, 86, 93, 94, 97, 103, 104, 192, 206, 209, 217, 226, 233, 234, 240, 243, 247, 248, 255, 260, 265, 266, 280, 283], "accept": [0, 7, 9, 11, 14, 16, 18, 22, 31, 35, 42, 49, 68, 91, 95, 219, 228, 231, 237, 259, 268, 278], "extens": [0, 2, 24, 25, 26, 35, 39, 43, 45, 62, 64, 65, 66, 185, 186, 268, 274, 278], "yml": [0, 1, 2, 5, 8, 10, 11, 12, 14, 15, 18, 19, 20, 22, 24, 25, 35, 39, 41, 49, 50, 55, 62, 64, 65, 68, 88, 89, 110, 145, 206, 228, 229, 238, 255, 256, 257, 259, 260, 261, 264, 266, 269, 272, 273, 275, 277, 278, 280, 283], "config": [0, 2, 3, 4, 5, 23, 31, 32, 34, 35, 38, 40, 50, 51, 52, 55, 56, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 145, 151, 176, 186, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 260, 264, 266, 274], "To": [0, 1, 2, 8, 9, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 34, 35, 36, 38, 39, 40, 41, 43, 45, 48, 50, 54, 56, 64, 71, 80, 88, 89, 99, 176, 187, 210, 220, 228, 229, 238, 242, 251, 255, 257, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 272, 273, 274, 277, 278, 280, 281, 282, 283], "your": [0, 1, 2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 20, 21, 26, 27, 29, 30, 36, 38, 39, 40, 42, 45, 46, 49, 50, 51, 54, 55, 56, 62, 70, 80, 97, 110, 163, 176, 208, 209, 219, 220, 240, 243, 251, 254, 255, 256, 259, 260, 261, 262, 264, 265, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283], "config_loader_class": [0, 1, 2, 64, 65, 254], "constant": [0, 1, 27, 64, 65, 266], "src": [0, 1, 2, 11, 13, 15, 19, 20, 22, 23, 24, 25, 28, 32, 34, 35, 38, 39, 40, 41, 42, 43, 48, 50, 51, 52, 54, 56, 251, 255, 259, 260, 261, 263, 264, 268, 272, 273, 274, 277, 278, 280, 282, 283], "package_nam": [0, 1, 2, 16, 18, 23, 34, 35, 40, 42, 48, 51, 52, 54, 56, 141, 145, 158, 163, 170, 254, 259, 261, 263, 264, 268, 272, 274], "py": [0, 1, 2, 8, 11, 13, 16, 18, 19, 20, 22, 23, 24, 31, 34, 35, 36, 40, 41, 42, 43, 45, 48, 50, 51, 52, 54, 56, 62, 64, 65, 95, 116, 158, 165, 235, 236, 237, 251, 254, 255, 259, 260, 261, 263, 264, 266, 268, 272, 273, 274, 280, 283], "import": [0, 2, 3, 5, 8, 10, 11, 13, 14, 16, 18, 19, 20, 22, 23, 24, 25, 31, 34, 35, 36, 38, 39, 40, 41, 43, 45, 49, 51, 52, 54, 56, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 159, 160, 163, 165, 176, 188, 192, 195, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 253, 257, 259, 260, 261, 263, 264, 265, 266, 272, 273, 274, 283], "new": [0, 1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 19, 22, 26, 31, 32, 34, 39, 40, 41, 43, 45, 47, 52, 55, 58, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 133, 154, 163, 176, 192, 194, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 259, 260, 261, 264, 265, 267, 268, 269, 272, 273, 276, 280, 281, 282, 283], "been": [0, 1, 2, 13, 14, 16, 18, 19, 20, 22, 23, 29, 31, 34, 41, 50, 56, 176, 255, 262, 264, 265, 266, 276, 280], "deprec": [0, 2, 14, 35, 67, 274], "sinc": [0, 1, 2, 5, 8, 9, 11, 13, 18, 20, 35, 36, 38, 41, 42, 56, 84, 88, 89, 224, 228, 229, 236, 260, 263, 275], "12": [0, 1, 2, 12, 13, 14, 23, 25, 41, 45, 88, 96, 97, 98, 209, 219, 239, 240, 241, 264, 268, 277, 283], "remov": [0, 1, 2, 8, 18, 46, 52, 62, 64, 65, 67, 75, 163, 214, 219, 251, 257, 260, 264, 265, 268, 273, 274], "19": [0, 1, 2, 24, 35, 67, 163, 272, 274, 280], "refer": [0, 2, 3, 5, 8, 9, 13, 16, 18, 19, 23, 24, 28, 35, 43, 45, 46, 54, 58, 67, 72, 76, 77, 78, 80, 81, 82, 83, 84, 87, 90, 92, 93, 94, 97, 99, 145, 176, 190, 194, 209, 211, 215, 216, 217, 219, 220, 221, 222, 223, 224, 227, 230, 232, 233, 234, 235, 236, 238, 240, 242, 243, 259, 260, 266, 273, 274, 276], "migrat": [0, 2, 4, 48, 55, 266], "guid": [0, 2, 4, 7, 11, 15, 19, 20, 22, 23, 24, 25, 27, 28, 29, 36, 38, 39, 41, 42, 43, 46, 48, 50, 54, 55, 97, 238, 240, 243, 255, 261, 264, 274], "instruct": [0, 1, 2, 14, 16, 18, 19, 22, 24, 28, 31, 32, 48, 209, 272, 274], "updat": [0, 1, 2, 6, 7, 13, 14, 20, 35, 48, 52, 56, 62, 64, 65, 96, 99, 145, 154, 163, 239, 242, 251, 253, 254, 259, 261, 263, 268, 272, 274], "code": [0, 1, 6, 7, 9, 11, 12, 15, 16, 20, 21, 22, 23, 25, 27, 28, 32, 34, 35, 37, 41, 42, 43, 45, 46, 49, 55, 56, 57, 88, 89, 123, 136, 228, 229, 253, 254, 255, 257, 259, 260, 261, 262, 263, 267, 268, 269, 270, 272, 273, 274, 278, 280, 281, 282], "an": [0, 1, 2, 5, 7, 8, 9, 11, 12, 14, 18, 19, 22, 25, 27, 28, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 129, 136, 148, 154, 155, 160, 163, 166, 168, 176, 185, 192, 196, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 273, 276, 280, 282], "appli": [0, 16, 25, 31, 35, 51, 56, 88, 192, 194, 195, 196, 228, 255, 259, 260, 264, 268, 270], "when": [0, 1, 2, 3, 5, 8, 9, 10, 11, 13, 14, 16, 20, 22, 23, 24, 25, 27, 31, 32, 34, 35, 36, 38, 39, 43, 45, 48, 49, 54, 55, 56, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 146, 159, 163, 165, 171, 176, 186, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 264, 265, 266, 268, 270, 272, 273, 275, 276, 278, 280, 281, 282, 283], "dictionari": [0, 1, 2, 5, 8, 9, 10, 11, 14, 22, 52, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 145, 154, 157, 163, 176, 187, 192, 196, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 256, 261, 263, 264, 268], "": [0, 1, 2, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 27, 28, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 52, 53, 54, 58, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 112, 116, 117, 121, 122, 123, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 163, 165, 190, 194, 196, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 275, 280, 282], "assum": [0, 1, 8, 9, 10, 11, 14, 15, 18, 19, 22, 28, 32, 39, 40, 41, 50, 56, 268, 278, 280, 281, 282, 283], "conf": [0, 1, 2, 3, 5, 8, 9, 10, 11, 14, 15, 16, 19, 20, 22, 23, 25, 32, 35, 39, 40, 41, 42, 55, 62, 64, 98, 110, 151, 241, 254, 255, 256, 257, 259, 260, 266, 269, 272, 273, 274, 275, 278, 283], "content": [0, 1, 5, 6, 8, 9, 11, 15, 19, 20, 22, 23, 24, 25, 49, 54, 56, 58, 65, 99, 242, 260, 272, 274, 275, 276], "bucket_nam": [0, 1, 20, 70, 208], "my_s3_bucket": [0, 1, 65], "key_prefix": [0, 1], "my": [0, 1, 9, 10, 11, 14, 35, 41, 46, 50, 52, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 272], "kei": [0, 1, 2, 3, 5, 8, 9, 10, 12, 16, 18, 19, 22, 23, 24, 25, 32, 35, 39, 41, 45, 49, 54, 58, 62, 64, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 84, 85, 88, 91, 92, 93, 94, 95, 97, 98, 102, 103, 104, 105, 154, 163, 176, 187, 192, 196, 198, 199, 200, 201, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 224, 225, 228, 231, 232, 233, 234, 236, 237, 240, 241, 246, 247, 248, 250, 254, 255, 256, 257, 259, 267, 270, 272, 275, 279, 280], "prefix": [0, 1, 2, 5, 13, 52, 69, 71, 72, 73, 74, 75, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 97, 101, 102, 103, 104, 105, 194, 207, 210, 211, 212, 213, 214, 218, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 250, 260, 272], "dataset": [0, 1, 3, 12, 15, 18, 19, 22, 31, 36, 42, 43, 45, 49, 50, 52, 55, 65, 66, 151, 152, 154, 163, 176, 192, 194, 195, 196, 198, 199, 200, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 250, 251, 255, 260, 261, 262, 264, 266, 269, 270, 272, 273, 274, 276, 278, 280, 281, 283], "csv": [0, 1, 8, 9, 11, 13, 14, 15, 19, 20, 41, 46, 51, 56, 65, 79, 81, 84, 97, 176, 218, 221, 224, 235, 236, 240, 243, 261, 266, 269, 273, 275, 277, 278, 280, 281], "panda": [0, 1, 8, 9, 10, 13, 14, 15, 19, 20, 45, 51, 65, 70, 72, 91, 94, 95, 99, 176, 195, 208, 209, 211, 231, 234, 237, 242, 251, 255, 261, 265, 266, 268, 269, 272, 273, 275, 277, 278, 280, 281, 283], "csvdataset": [0, 1, 8, 9, 10, 13, 14, 15, 19, 20, 51, 52, 65, 176, 251, 261, 264, 266, 268, 269, 272, 273, 275, 277, 278, 280, 281, 283], "spark": [0, 1, 9, 11, 13, 16, 51, 55, 65, 209, 251, 266, 269, 272], "sparkdataset": [0, 1, 10, 11, 13, 14, 51, 56, 65, 96, 239, 264, 269], "folder": [0, 1, 3, 5, 9, 10, 14, 16, 19, 22, 23, 24, 32, 34, 35, 40, 41, 46, 49, 50, 56, 65, 70, 75, 98, 208, 214, 241, 254, 255, 259, 260, 266, 268, 269, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283], "raw": [0, 1, 11, 18, 20, 39, 40, 41, 46, 49, 55, 65, 85, 176, 225, 243, 273, 277, 280, 281], "01_raw": [0, 1, 8, 9, 10, 11, 13, 15, 23, 24, 25, 41, 51, 56, 65, 79, 80, 81, 84, 86, 87, 97, 100, 102, 218, 219, 220, 221, 224, 226, 227, 235, 236, 240, 243, 244, 246, 249, 269, 275, 280, 281], "int": [0, 1, 19, 65, 68, 199, 201, 219], "02_intermedi": [0, 1, 8, 9, 10, 13, 23, 24, 25, 65, 79, 80, 81, 87, 96, 97, 218, 220, 221, 227, 235, 239, 240, 249, 273, 280], "pri": [0, 1, 65], "03_primari": [0, 1, 13, 23, 24, 25, 56, 65, 273, 277, 280], "fea": [0, 1, 65], "04_featur": [0, 1, 23, 24, 25, 65], "point": [0, 1, 8, 9, 24, 25, 31, 35, 38, 41, 42, 43, 45, 54, 69, 70, 71, 72, 74, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 97, 102, 103, 104, 105, 116, 163, 176, 186, 192, 194, 207, 208, 210, 211, 213, 218, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 239, 246, 247, 248, 250, 255, 257, 259, 260, 266, 268], "add": [0, 1, 2, 5, 6, 7, 8, 10, 11, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 31, 32, 35, 39, 40, 45, 49, 50, 51, 53, 54, 55, 116, 138, 176, 206, 251, 255, 259, 260, 261, 263, 264, 267, 268, 272, 273, 275, 276, 278, 280, 281], "config_loader_arg": [0, 1, 2, 62, 64, 65, 254], "globals_pattern": [0, 1, 65], "now": [0, 5, 8, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 31, 34, 41, 43, 50, 107, 257, 260, 264, 266, 268, 280, 282, 283], "here": [0, 9, 11, 13, 14, 15, 18, 23, 27, 30, 35, 39, 40, 41, 43, 45, 49, 50, 51, 64, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 103, 104, 105, 190, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 245, 246, 247, 248, 250, 255, 260, 261, 264, 268, 272, 275, 277, 280, 282], "exampl": [0, 1, 2, 3, 5, 6, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 28, 31, 32, 35, 36, 38, 39, 40, 41, 43, 48, 49, 51, 53, 54, 55, 56, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 163, 166, 176, 187, 192, 195, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 259, 260, 261, 262, 263, 264, 265, 269, 270, 272, 276, 278, 280, 281, 282, 283], "raw_boat_data": [0, 1, 65], "type": [0, 1, 2, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 31, 32, 38, 40, 41, 45, 46, 48, 49, 50, 51, 52, 56, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 133, 136, 139, 141, 145, 152, 153, 163, 171, 176, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 260, 261, 266, 268, 269, 270, 272, 273, 275, 277, 278, 280, 281, 282, 283], "nest": [0, 1, 5, 10, 11, 35, 69, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 88, 91, 92, 93, 94, 95, 102, 103, 104, 105, 187, 207, 210, 211, 212, 213, 214, 215, 216, 217, 224, 225, 228, 231, 232, 233, 234, 237, 246, 247, 248, 250, 260], "path": [0, 1, 2, 3, 8, 9, 10, 11, 14, 16, 18, 20, 25, 31, 32, 34, 35, 39, 40, 41, 45, 49, 50, 52, 62, 63, 64, 65, 70, 82, 87, 88, 91, 95, 96, 97, 98, 127, 129, 133, 141, 145, 163, 166, 168, 170, 187, 188, 204, 208, 219, 222, 227, 228, 231, 237, 239, 240, 241, 249, 253, 255, 257, 259, 260, 266, 268, 269, 272, 274, 275], "dict": [0, 1, 8, 11, 14, 19, 22, 31, 35, 41, 52, 54, 56, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 145, 155, 163, 165, 167, 176, 192, 194, 195, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 261, 263, 264, 265, 266, 268, 272], "filepath": [0, 1, 8, 10, 11, 13, 14, 15, 19, 20, 41, 51, 52, 56, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 176, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 261, 265, 266, 269, 272, 273, 275, 277, 280, 281, 283], "s3a": [0, 1, 10, 51, 56, 65, 97, 219, 240, 269], "boat": [0, 1, 10, 13, 65, 87, 176, 195, 219, 227], "file_format": [0, 1, 10, 13, 51, 56, 65, 84, 96, 97, 224, 236, 239, 240, 243, 269], "parquet": [0, 1, 9, 13, 65, 70, 87, 96, 97, 98, 208, 227, 236, 239, 240, 241, 243, 266, 273, 278], "raw_car_data": [0, 1, 65], "s3": [0, 1, 8, 9, 11, 14, 16, 18, 19, 20, 35, 41, 46, 51, 56, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 104, 105, 176, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 249, 250, 259], "filenam": [0, 1, 2, 3, 5, 14, 41, 64, 176], "car": [0, 1, 8, 9, 10, 13, 51, 65, 70, 74, 79, 81, 84, 100, 103, 104, 105, 176, 195, 208, 213, 218, 221, 224, 235, 236, 244, 247, 248, 249, 250], "found": [0, 1, 11, 16, 19, 35, 39, 40, 48, 62, 63, 64, 65, 88, 89, 98, 116, 141, 190, 228, 229, 241, 257, 259, 261, 263, 264, 274, 276], "hood": [0, 2, 5, 56, 255, 263], "jmespath": [0, 65], "extract": [0, 16, 20, 204, 266, 270], "element": [0, 38, 49, 255, 267, 268], "declar": [0, 10, 19, 22, 23, 45, 54, 121, 149, 260, 266], "fill": [0, 24, 25, 39], "could": [0, 6, 10, 13, 14, 20, 22, 36, 43, 56, 65, 88, 91, 95, 228, 231, 237, 251, 255, 260, 263, 266, 268, 272], "look": [0, 7, 8, 11, 14, 15, 17, 19, 22, 23, 24, 30, 33, 34, 39, 41, 52, 56, 62, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 116, 186, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 255, 260, 265, 266, 272, 273, 274, 277], "like": [0, 2, 8, 9, 10, 11, 13, 14, 16, 17, 19, 20, 22, 24, 32, 35, 38, 39, 40, 41, 42, 46, 48, 51, 53, 56, 62, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 165, 167, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 257, 259, 260, 262, 264, 265, 266, 278], "another_bucket_nam": 0, "non_string_kei": 0, "10": [0, 16, 20, 23, 24, 25, 31, 48, 56, 73, 80, 95, 212, 219, 220, 237, 261, 264, 266, 272, 273, 277, 278, 281], "globals_dict": [0, 1, 65], "If": [0, 1, 2, 3, 5, 8, 9, 11, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 45, 48, 50, 51, 52, 54, 56, 62, 64, 65, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 141, 145, 154, 163, 184, 187, 192, 194, 198, 199, 200, 201, 202, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 244, 245, 246, 247, 248, 249, 250, 255, 257, 259, 260, 261, 263, 264, 266, 267, 268, 272, 273, 274, 276, 277, 280, 281, 282, 283], "specifi": [0, 1, 3, 8, 9, 11, 14, 16, 18, 19, 23, 25, 31, 35, 39, 40, 41, 45, 46, 50, 54, 56, 62, 64, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 141, 145, 163, 176, 187, 192, 194, 195, 196, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 253, 254, 255, 257, 259, 260, 261, 263, 264, 268, 270, 272, 274, 275, 278, 280, 281, 283], "both": [0, 1, 2, 3, 5, 9, 11, 14, 16, 17, 20, 21, 22, 23, 26, 31, 38, 40, 41, 45, 56, 68, 82, 100, 194, 206, 222, 244, 251, 253, 254, 257, 260, 262, 263, 264, 265, 267, 273, 274], "result": [0, 2, 8, 9, 13, 14, 16, 19, 22, 24, 25, 32, 34, 35, 41, 46, 56, 64, 65, 192, 194, 195, 196, 198, 199, 200, 201, 253, 260, 261, 263, 265, 268, 274, 283], "In": [0, 1, 2, 5, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 23, 24, 25, 29, 31, 34, 35, 40, 41, 45, 49, 51, 52, 54, 56, 58, 62, 64, 65, 160, 192, 196, 228, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 274, 276, 278, 280, 282, 283], "case": [0, 2, 5, 8, 11, 12, 14, 23, 27, 31, 41, 44, 46, 53, 55, 62, 64, 65, 68, 88, 89, 99, 164, 176, 196, 206, 228, 229, 242, 255, 259, 260, 261, 262, 264], "conflict": [0, 16, 38, 65, 251, 260], "take": [0, 1, 2, 5, 8, 13, 15, 17, 20, 22, 23, 24, 25, 30, 33, 35, 38, 39, 41, 42, 43, 51, 52, 56, 62, 64, 65, 84, 97, 98, 104, 145, 163, 209, 224, 236, 238, 240, 241, 248, 253, 257, 260, 264, 265, 266, 267, 270, 272, 273, 276, 277], "preced": [0, 2, 5, 35, 62, 64, 65, 145, 163, 253, 260, 264], "want": [0, 1, 2, 7, 14, 16, 18, 19, 25, 27, 28, 29, 31, 35, 36, 38, 39, 40, 41, 42, 43, 48, 51, 54, 56, 163, 187, 255, 257, 260, 264, 265, 266, 267, 268, 269, 272, 273, 274, 276, 278, 280, 281, 282, 283], "pattern": [0, 1, 8, 12, 13, 39, 56, 62, 64, 65, 176], "find": [0, 1, 9, 11, 12, 14, 19, 23, 24, 28, 35, 39, 40, 45, 46, 49, 54, 57, 58, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 104, 105, 159, 163, 205, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 245, 246, 247, 248, 250, 255, 257, 262, 267, 272, 275, 277, 278], "need": [0, 1, 2, 7, 9, 10, 11, 12, 14, 15, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 39, 40, 41, 43, 45, 46, 48, 49, 50, 54, 56, 88, 89, 133, 163, 176, 192, 194, 195, 196, 228, 229, 253, 254, 255, 257, 259, 260, 261, 263, 264, 265, 266, 268, 272, 273, 274, 277, 278, 279, 281, 282, 283], "For": [0, 1, 2, 3, 6, 8, 9, 10, 11, 13, 14, 16, 18, 19, 20, 21, 22, 23, 25, 26, 28, 31, 32, 34, 35, 36, 38, 39, 41, 43, 45, 48, 50, 51, 52, 54, 56, 58, 62, 64, 65, 70, 84, 97, 98, 121, 122, 149, 150, 159, 176, 206, 208, 224, 236, 240, 241, 243, 251, 255, 257, 260, 261, 262, 263, 264, 265, 266, 268, 272, 276, 278, 280, 282], "param": [0, 5, 10, 13, 19, 22, 35, 52, 68, 133, 143, 145, 155, 187, 194, 206, 228, 260, 266, 268, 272], "name": [0, 1, 3, 5, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 28, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 54, 56, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 125, 140, 145, 152, 154, 159, 163, 176, 187, 192, 194, 195, 196, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 257, 259, 260, 261, 263, 265, 266, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 283], "convent": [0, 2, 11, 28, 49, 54, 62, 64, 65, 176, 255, 260, 280], "instead": [0, 1, 3, 9, 13, 14, 16, 23, 24, 32, 35, 48, 52, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 160, 188, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 261, 262, 272], "e": [0, 2, 9, 10, 11, 14, 18, 19, 22, 23, 24, 28, 31, 32, 35, 38, 39, 40, 42, 45, 46, 53, 54, 56, 62, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 103, 104, 105, 160, 163, 176, 187, 192, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 241, 244, 245, 246, 247, 248, 249, 250, 251, 257, 260, 262, 264, 265, 268, 274, 280], "g": [0, 2, 9, 10, 11, 14, 18, 19, 20, 23, 24, 32, 35, 39, 40, 42, 45, 46, 53, 54, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 103, 104, 105, 160, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 241, 244, 245, 246, 247, 248, 249, 250, 251, 257, 262, 264, 268, 280], "config_pattern": [0, 2, 62, 64, 65], "behaviour": [0, 5, 8, 28, 42, 45, 53, 54, 117, 118, 147, 190, 254], "replac": [0, 1, 10, 16, 19, 23, 24, 25, 31, 35, 38, 39, 45, 46, 52, 65, 89, 98, 176, 229, 241, 255, 266, 268, 269, 272, 273, 283], "while": [0, 9, 10, 14, 15, 16, 19, 24, 25, 27, 40, 49, 80, 95, 98, 220, 237, 241, 251, 260, 262, 264, 266, 272], "remain": [0, 266], "state": [0, 10, 14, 19, 20, 68, 206, 264, 270], "match": [0, 1, 2, 3, 5, 8, 12, 13, 19, 24, 25, 31, 35, 39, 41, 62, 64, 65, 84, 154, 155, 176, 192, 195, 196, 209, 219, 224, 236, 264], "than": [0, 1, 14, 16, 20, 23, 24, 25, 34, 41, 45, 54, 84, 107, 163, 199, 224, 236, 254, 255, 257, 266, 270], "log": [0, 2, 11, 19, 20, 23, 24, 25, 31, 32, 45, 49, 51, 52, 53, 54, 55, 62, 64, 157, 192, 195, 196, 261, 264, 272, 274, 276], "directli": [0, 2, 3, 9, 10, 16, 25, 27, 34, 45, 51, 94, 98, 188, 192, 234, 241, 259, 264, 268, 274], "instanc": [0, 9, 11, 16, 19, 22, 23, 24, 31, 35, 45, 51, 56, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 120, 145, 154, 160, 163, 176, 192, 195, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 257, 260, 261, 264, 266, 268, 272], "well": [0, 2, 11, 20, 21, 23, 56, 65, 69, 71, 72, 73, 74, 75, 76, 77, 78, 82, 84, 85, 88, 91, 92, 93, 94, 95, 102, 103, 104, 105, 123, 151, 154, 194, 207, 210, 211, 212, 213, 214, 215, 216, 217, 222, 224, 225, 228, 231, 232, 233, 234, 237, 246, 247, 248, 250, 262, 274], "framework": [0, 2, 3, 5, 17, 18, 20, 22, 23, 31, 34, 35, 36, 43, 45, 51, 52, 54, 56, 57, 59, 62, 64, 251, 253, 254, 256, 263, 266, 270, 274], "conf_path": [0, 1, 2, 3, 5, 62, 64, 65], "str": [0, 1, 2, 3, 5, 11, 14, 18, 19, 20, 22, 23, 31, 34, 35, 41, 51, 52, 54, 62, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 133, 136, 139, 141, 145, 152, 155, 163, 170, 176, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 261, 263, 264, 266, 268, 273], "project_path": [0, 1, 2, 5, 18, 20, 31, 34, 45, 56, 62, 64, 115, 145, 155, 163, 170, 171, 253, 268], "conf_sourc": [0, 1, 2, 3, 5, 23, 34, 35, 62, 64, 65, 163, 254], "conf_load": [0, 1, 2, 3, 5, 62, 64, 266], "catalog_config": 0, "something_new": 0, "17": [0, 15, 24, 31, 35, 48, 263, 265, 273], "support": [0, 7, 9, 11, 14, 16, 17, 18, 21, 27, 35, 39, 40, 42, 43, 48, 49, 55, 56, 64, 69, 71, 72, 73, 74, 75, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 133, 201, 206, 207, 210, 211, 212, 213, 214, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 255, 257, 260, 261, 264, 266, 268, 274, 280, 281, 283], "engin": [0, 9, 13, 15, 18, 20, 23, 49, 57, 80, 87, 88, 89, 93, 176, 220, 227, 228, 229, 233, 260, 263, 266, 272, 275, 280], "alongsid": [0, 27, 41, 255, 266], "origin": [0, 1, 7, 11, 20, 25, 133, 194, 196, 265], "below": [0, 2, 9, 13, 14, 16, 18, 19, 22, 24, 25, 31, 34, 35, 38, 40, 41, 43, 45, 46, 48, 56, 88, 89, 110, 163, 176, 228, 229, 260, 261, 262, 264, 266, 272, 273, 276, 282], "speed": [0, 1, 24, 28], "fast": [0, 1, 38, 264], "slow": [0, 1], "train": [0, 1, 10, 11, 21, 41, 45, 46, 49, 50, 52, 56, 80, 220, 260, 261, 266, 272], "memorydataset": [0, 1, 5, 8, 10, 13, 18, 20, 31, 35, 52, 55, 176, 201, 261, 264, 265, 268, 272, 273], "save_arg": [0, 1, 8, 9, 10, 13, 14, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 176, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 250, 269, 275, 277], "index": [0, 1, 8, 9, 14, 39, 48, 52, 55, 79, 80, 84, 86, 87, 89, 90, 91, 95, 129, 170, 176, 184, 186, 218, 220, 224, 226, 227, 229, 230, 231, 237, 261, 274, 277], "true": [0, 1, 2, 9, 10, 11, 13, 14, 18, 19, 20, 22, 25, 31, 35, 40, 41, 52, 56, 75, 81, 82, 83, 86, 87, 88, 96, 97, 98, 101, 103, 104, 163, 176, 190, 192, 198, 199, 200, 201, 202, 206, 209, 214, 219, 221, 222, 223, 226, 227, 228, 235, 236, 239, 240, 241, 243, 245, 247, 248, 256, 257, 261, 264, 265, 266, 272, 274, 280, 283], "endfor": [0, 1, 18], "pars": [0, 11, 13, 42, 69, 71, 176, 207, 210, 228, 259, 264, 270], "read": [0, 7, 8, 9, 11, 14, 15, 19, 20, 34, 38, 40, 46, 48, 49, 54, 56, 64, 82, 83, 84, 87, 88, 97, 145, 172, 209, 222, 223, 224, 227, 228, 236, 240, 243, 255, 257, 261, 266, 274, 275], "compil": [0, 28, 35, 101, 245, 251, 259, 262], "parser": [0, 23, 71, 210, 274, 277], "expand": [0, 11, 13, 19, 20, 35, 41, 48, 50, 192, 194, 262, 264, 265, 272, 273, 275, 281, 283], "argument": [0, 1, 2, 8, 11, 14, 16, 18, 22, 31, 35, 40, 45, 54, 62, 64, 65, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 104, 105, 123, 133, 142, 145, 151, 154, 163, 176, 187, 190, 194, 195, 196, 202, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 260, 261, 262, 266, 268, 272, 274, 275], "previou": [0, 14, 16, 20, 22, 25, 34, 41, 50, 56], "output": [0, 5, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 28, 34, 39, 41, 46, 49, 50, 52, 53, 56, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 154, 155, 163, 176, 192, 194, 195, 196, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 260, 266, 268, 270, 272, 273, 274, 275, 278, 283], "although": [0, 9, 27, 49, 253, 260, 275], "veri": [0, 20, 23, 28, 36, 255, 260], "power": [0, 24, 25, 34, 260, 268], "extrem": 0, "flexibl": [0, 5, 16, 22, 27], "come": [0, 10, 26, 41, 133, 209, 254, 261, 275], "wide": [0, 275], "rang": [0, 9, 11, 12, 16, 27, 29, 50, 73, 75, 212, 214, 249, 255, 261, 266, 268, 272, 274], "we": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 22, 23, 24, 28, 29, 31, 32, 35, 36, 38, 39, 40, 41, 42, 45, 46, 48, 49, 51, 52, 54, 56, 58, 206, 228, 235, 253, 255, 257, 260, 261, 262, 264, 265, 266, 268, 272, 276, 278, 280, 281, 282, 283], "recommend": [0, 1, 2, 3, 8, 16, 18, 19, 23, 24, 25, 28, 31, 32, 35, 38, 46, 48, 49, 51, 54, 56, 58, 64, 253, 260, 262, 264, 268, 272, 278], "unless": [0, 2, 8, 14, 25, 31, 40, 84, 224, 236], "absolut": [0, 41], "necessari": [0, 1, 15, 19, 23, 24, 25, 27, 39, 41, 45, 192, 206], "dynam": [0, 19, 35, 84, 224, 236, 253, 260, 272], "cost": [0, 19], "significantli": [0, 23], "reduc": [0, 12, 13, 88, 228, 264], "readabl": [0, 34, 38, 41, 42, 50, 254, 255, 266], "much": [0, 14, 34, 40, 56, 266, 268], "higher": [0, 41, 159], "mainten": [0, 7, 45], "overhead": [0, 25, 27], "believ": 0, "major": [0, 7, 20, 34, 42], "analyt": [0, 24, 25, 31, 46, 50, 268], "doe": [0, 1, 2, 7, 8, 11, 14, 19, 22, 24, 34, 35, 39, 41, 49, 56, 62, 64, 65, 84, 88, 91, 95, 100, 141, 159, 176, 192, 204, 224, 228, 231, 237, 244, 257, 259, 261, 262, 265, 266, 270, 272, 277], "harm": 0, "good": [0, 20, 38, 255, 266], "interpol": [0, 1, 64], "call": [0, 2, 3, 5, 8, 11, 14, 15, 19, 20, 32, 34, 35, 40, 45, 48, 49, 50, 54, 56, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 159, 176, 195, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 261, 263, 264, 265, 266, 268, 277, 280], "work": [0, 1, 7, 9, 11, 12, 14, 19, 20, 21, 23, 24, 27, 28, 31, 34, 35, 38, 39, 40, 41, 42, 43, 48, 49, 50, 56, 58, 65, 96, 97, 98, 113, 124, 126, 128, 130, 131, 163, 176, 209, 238, 239, 241, 254, 259, 260, 264, 266, 267, 268, 276, 278, 280, 281, 282, 283], "out": [0, 9, 11, 19, 20, 22, 23, 24, 25, 35, 38, 42, 43, 48, 52, 54, 56, 196, 251, 254, 255, 257, 261, 262, 264, 265, 266, 272, 273, 275, 280], "box": [0, 11, 35, 43, 275], "within": [0, 1, 7, 8, 10, 11, 14, 23, 24, 25, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 45, 46, 54, 56, 63, 98, 153, 219, 241, 255, 259, 260, 261, 264, 266, 267, 268, 270, 272, 273, 274, 277, 280, 281, 283], "same": [0, 1, 2, 3, 5, 9, 11, 14, 15, 16, 18, 19, 20, 22, 23, 26, 28, 35, 36, 39, 40, 41, 43, 45, 54, 56, 62, 64, 68, 88, 89, 154, 176, 192, 194, 196, 198, 199, 200, 201, 209, 228, 229, 238, 255, 257, 260, 262, 263, 266, 272, 278], "suppos": [0, 1, 2, 51, 56, 88, 89, 228, 229], "one": [0, 1, 7, 11, 13, 14, 15, 16, 18, 19, 24, 25, 27, 31, 32, 34, 35, 40, 41, 42, 43, 45, 46, 49, 54, 71, 75, 84, 88, 89, 100, 135, 163, 164, 192, 195, 196, 206, 209, 210, 214, 219, 224, 228, 229, 236, 238, 244, 257, 260, 264, 266, 268, 269, 270, 272], "placehold": [0, 1, 13, 16, 35], "model_opt": [0, 13, 266, 272], "test_siz": [0, 266, 272], "size": [0, 20, 25, 52, 206, 257], "random_st": [0, 261, 266, 272], "3": [0, 7, 11, 14, 16, 19, 23, 24, 25, 34, 40, 41, 48, 50, 52, 58, 71, 74, 75, 91, 93, 95, 100, 103, 104, 159, 170, 210, 213, 214, 219, 231, 233, 237, 238, 244, 247, 248, 249, 259, 261, 263, 264, 265, 266, 268, 272, 273, 275, 277, 278, 281], "parameters_glob": 0, "2": [0, 5, 7, 8, 11, 14, 19, 23, 25, 34, 35, 40, 41, 45, 52, 62, 64, 65, 70, 72, 74, 75, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 99, 100, 101, 103, 104, 105, 129, 170, 176, 195, 196, 208, 211, 213, 214, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 242, 244, 245, 247, 248, 250, 261, 262, 263, 264, 265, 268, 272, 273, 275, 277, 278, 282], "correctli": [0, 11, 19, 22, 24, 25, 34, 264], "enabl": [0, 2, 8, 9, 11, 14, 15, 16, 17, 20, 21, 23, 26, 30, 33, 38, 39, 40, 41, 45, 54, 56, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 176, 190, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 262, 264, 268, 272, 274, 278, 281, 282, 283], "addition": [0, 15, 35, 41], "start": [0, 2, 3, 5, 6, 7, 10, 14, 15, 16, 19, 20, 22, 23, 24, 31, 34, 35, 36, 38, 39, 40, 43, 45, 46, 48, 50, 51, 52, 65, 96, 97, 129, 163, 170, 176, 184, 192, 239, 240, 243, 260, 261, 265, 266, 267, 268, 270, 272, 273, 280, 281, 282], "underscor": [0, 1, 50, 196, 264], "_": [0, 1, 2, 10, 13, 19, 22, 35, 36, 54, 65, 262], "becaus": [0, 1, 14, 15, 16, 22, 23, 24, 36, 38, 50, 56, 201, 260, 262, 264, 265, 266, 270, 273], "entri": [0, 1, 5, 9, 10, 12, 13, 28, 35, 38, 42, 45, 54, 82, 88, 89, 116, 186, 222, 228, 229, 235, 236, 238, 255, 273, 274], "valid": [0, 1, 2, 3, 5, 11, 14, 42, 48, 53, 64, 160, 199, 209, 219, 254, 255, 260, 263, 277], "neither": [0, 2, 32], "trigger": [0, 1, 2, 14, 19, 20, 22, 31, 36, 56, 153, 255, 280], "duplic": [0, 2, 11, 31, 65], "error": [0, 1, 2, 3, 5, 11, 13, 16, 19, 22, 23, 27, 35, 36, 38, 40, 41, 48, 52, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 146, 154, 155, 160, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 268], "nor": [0, 2, 16, 32, 280], "appear": [0, 2, 11, 13, 14, 19, 22, 23, 24, 25, 31, 39, 62, 64, 192], "compani": [0, 8, 9, 10, 13, 19, 20, 41, 52, 79, 80, 81, 84, 218, 220, 221, 224, 235, 236, 249, 266, 272, 273, 275, 276, 277, 280, 281, 283], "_panda": 0, "catalog_glob": [0, 1], "possibl": [0, 1, 8, 13, 14, 15, 34, 35, 40, 45, 52, 53, 192, 196, 256, 260, 261, 262, 264, 266, 267], "custom": [0, 1, 2, 12, 14, 20, 28, 35, 42, 43, 45, 49, 54, 55, 60, 64, 68, 91, 95, 125, 133, 137, 231, 237, 255, 261, 262, 266, 268, 272, 276, 281], "mlflow": [0, 21, 23, 41, 45, 52, 53], "wai": [0, 2, 3, 5, 7, 8, 10, 11, 14, 15, 19, 22, 23, 24, 28, 34, 39, 41, 42, 45, 46, 48, 50, 65, 176, 238, 251, 254, 257, 260, 262, 265, 266, 267, 270, 272, 280], "still": [0, 2, 16, 20, 35, 43, 51, 135, 159, 264, 266, 273, 280, 281, 283], "mandatori": [0, 243, 254], "13": [0, 1, 2, 13, 24, 35, 45, 88, 89, 264, 272], "benefit": [0, 20, 28, 262], "over": [0, 7, 8, 13, 16, 35, 41, 46, 62, 64, 65, 145, 163, 238, 253, 260, 272], "regular": [0, 7, 14, 176, 261, 266], "share": [0, 1, 11, 13, 15, 20, 22, 32, 41, 49, 55, 56, 259, 260, 262, 269, 272, 274, 279], "across": [0, 1, 2, 5, 10, 16, 19, 22, 27, 29, 34, 41, 43, 49, 88, 89, 203, 228, 229, 259, 260, 261, 266, 272, 274, 275, 278], "so": [0, 1, 2, 3, 10, 11, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 28, 29, 35, 38, 39, 45, 49, 50, 54, 62, 64, 65, 72, 81, 88, 89, 91, 95, 99, 187, 192, 211, 221, 228, 229, 231, 237, 242, 251, 255, 257, 260, 261, 263, 264, 265, 266, 268, 270, 272, 273, 278, 282], "overwrit": [0, 2, 5, 9, 10, 13, 43, 52, 56, 75, 88, 89, 97, 98, 101, 154, 209, 214, 219, 228, 229, 238, 240, 241, 243, 245, 256, 261], "my_global_valu": 0, "45": 0, "dataset_typ": 0, "access": [0, 1, 5, 10, 11, 12, 16, 19, 23, 24, 35, 36, 40, 46, 49, 51, 55, 62, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 104, 105, 156, 161, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 244, 245, 246, 247, 248, 249, 250, 253, 262, 263, 266, 267, 268, 269, 278], "my_param": 0, "exist": [0, 1, 7, 8, 10, 11, 13, 14, 22, 24, 25, 34, 35, 39, 40, 41, 45, 46, 48, 50, 56, 62, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 141, 176, 192, 194, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 259, 260, 262, 264, 265, 266, 267, 268, 272, 277, 283], "nonexistent_glob": 0, "23": [0, 24, 52, 103, 104, 247, 248, 266], "run": [0, 1, 2, 5, 9, 10, 13, 14, 17, 21, 22, 26, 27, 29, 30, 33, 36, 40, 42, 43, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 62, 64, 65, 67, 97, 98, 123, 135, 142, 145, 146, 152, 153, 154, 155, 163, 164, 171, 188, 192, 196, 198, 199, 200, 201, 202, 240, 241, 243, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 266, 268, 270, 272, 273, 276, 278, 280, 281, 282], "command": [0, 1, 2, 5, 10, 16, 18, 19, 20, 22, 23, 24, 25, 26, 31, 37, 38, 39, 40, 41, 42, 48, 50, 54, 55, 100, 112, 113, 114, 115, 116, 123, 124, 125, 126, 128, 130, 131, 132, 137, 140, 142, 244, 251, 253, 255, 256, 257, 259, 260, 261, 264, 265, 268, 270, 272, 273, 274, 275, 277, 280, 281, 282, 283], "cli": [0, 2, 5, 15, 16, 18, 29, 36, 39, 40, 42, 251, 253, 256, 259, 260, 263, 264, 265, 270, 272], "option": [0, 2, 3, 5, 11, 14, 18, 23, 24, 25, 31, 32, 39, 45, 46, 49, 52, 56, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 110, 133, 138, 145, 155, 163, 176, 187, 190, 192, 194, 195, 196, 199, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 268, 274, 280], "These": [0, 2, 5, 7, 10, 11, 13, 22, 23, 35, 38, 45, 46, 51, 56, 67, 97, 163, 198, 199, 200, 201, 240, 243, 259, 260, 276], "ad": [0, 5, 9, 13, 14, 34, 35, 38, 40, 41, 43, 51, 53, 64, 82, 137, 151, 176, 192, 196, 222, 235, 236, 255, 260, 263, 265, 266, 270, 272, 275, 283], "kedrocontext": [0, 3, 5, 34, 35, 43, 147, 151, 153, 163, 253, 254, 268], "pipelin": [0, 2, 5, 8, 9, 10, 11, 12, 13, 14, 17, 23, 24, 25, 26, 29, 32, 33, 34, 40, 42, 43, 45, 50, 51, 53, 54, 55, 56, 57, 59, 98, 131, 145, 146, 155, 159, 160, 163, 197, 198, 199, 200, 201, 202, 241, 251, 253, 255, 257, 259, 261, 266, 267, 274, 276, 278, 279], "node": [0, 5, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 28, 31, 34, 35, 43, 50, 53, 54, 55, 56, 152, 154, 163, 192, 194, 198, 199, 200, 201, 202, 257, 260, 263, 264, 266, 267, 276, 277, 279, 281], "14": [0, 23, 24, 25, 45, 264, 266, 272], "runtime_param": [0, 62, 64, 65], "indic": [0, 2, 9, 23, 34, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 262], "certain": [0, 9, 260, 270, 282], "except": [0, 3, 5, 8, 9, 11, 14, 19, 22, 36, 59, 60, 61, 63, 69, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 88, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 134, 136, 144, 146, 154, 155, 162, 163, 164, 172, 191, 193, 194, 196, 207, 210, 211, 212, 213, 214, 215, 216, 217, 224, 225, 228, 231, 232, 233, 234, 237, 238, 245, 246, 247, 248, 250, 257, 261, 262, 264, 265], "consid": [0, 2, 9, 11, 13, 14, 15, 16, 18, 19, 25, 27, 41, 45, 260, 261], "random": [0, 56], "pass": [0, 5, 8, 9, 10, 11, 14, 16, 20, 22, 31, 34, 35, 40, 45, 49, 50, 52, 54, 62, 64, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 136, 145, 163, 187, 190, 192, 199, 201, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 255, 257, 260, 261, 262, 264, 265, 266, 270, 272, 274, 275], "hard": [0, 36, 260, 266, 269], "comput": [0, 9, 16, 18, 20, 22, 28, 32, 39, 40, 41, 42, 43, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 104, 105, 154, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 250, 262, 265, 270, 274], "them": [0, 1, 3, 5, 7, 9, 11, 13, 14, 15, 16, 22, 25, 29, 35, 36, 38, 41, 45, 48, 54, 56, 62, 64, 71, 80, 196, 210, 220, 259, 260, 261, 264, 265, 268, 273, 274, 277, 278, 279, 283], "defin": [0, 5, 8, 10, 13, 14, 18, 19, 20, 22, 23, 24, 25, 34, 35, 40, 42, 43, 45, 46, 49, 52, 56, 98, 110, 118, 123, 145, 151, 152, 153, 154, 155, 158, 159, 163, 191, 192, 196, 198, 199, 200, 201, 206, 238, 241, 255, 257, 260, 261, 263, 264, 266, 268, 270, 272, 273, 280], "logic": [0, 14, 20, 49, 195, 196, 260, 261, 266, 270, 272], "calcul": [0, 41, 199, 201, 261, 262, 265, 272], "inject": [0, 5, 35, 43, 45, 51, 54, 254], "elsewher": [0, 14, 32, 266, 274], "illustr": [0, 8, 9, 12, 13, 19, 41, 50, 52, 56, 265, 276, 278], "polar": 0, "pl": [0, 38, 235, 236], "datetim": [0, 11, 228], "date": [0, 28, 46, 48, 228], "def": [0, 5, 11, 13, 14, 18, 19, 20, 22, 23, 31, 34, 35, 36, 41, 43, 45, 49, 51, 52, 54, 56, 192, 195, 228, 249, 261, 262, 263, 264, 265, 266, 268, 272, 273, 283], "date_todai": 0, "return": [0, 2, 5, 9, 11, 13, 14, 16, 18, 19, 20, 22, 24, 25, 31, 34, 35, 41, 48, 49, 51, 52, 54, 56, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 120, 129, 136, 139, 141, 145, 146, 152, 153, 154, 159, 163, 164, 170, 171, 176, 184, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 260, 261, 262, 263, 264, 265, 266, 268, 272, 273, 276, 282, 283], "todai": 0, "custom_resolv": [0, 64], "lambda": [0, 11, 14, 31, 261, 262], "my_list": 0, "sum": [0, 249, 260, 261, 262, 263, 264, 265], "x": [0, 2, 11, 52, 80, 93, 94, 101, 220, 233, 234, 245, 261, 262, 264, 265, 266, 272, 273, 283], "getattr": 0, "regist": [0, 9, 10, 12, 20, 31, 36, 45, 50, 51, 52, 56, 64, 131, 145, 176, 263, 264, 268, 272, 273, 275], "register_new_resolv": 0, "abov": [0, 1, 3, 5, 8, 9, 10, 14, 16, 19, 20, 22, 23, 32, 35, 39, 40, 41, 43, 49, 52, 56, 219, 251, 257, 259, 260, 261, 262, 263, 264, 266, 273, 277, 283], "1": [0, 5, 7, 8, 10, 11, 14, 16, 18, 19, 22, 23, 24, 25, 31, 34, 35, 40, 41, 50, 52, 68, 70, 72, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 99, 100, 103, 104, 105, 129, 136, 170, 176, 184, 196, 206, 208, 211, 213, 214, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 242, 244, 247, 248, 249, 250, 255, 259, 261, 262, 264, 265, 266, 268, 272, 273, 275, 278, 280, 283], "time": [0, 7, 9, 10, 11, 14, 16, 19, 24, 25, 28, 34, 36, 38, 39, 40, 41, 46, 50, 51, 52, 54, 68, 254, 261, 264, 265, 266, 272], "primit": [0, 117, 147], "my_polars_dataset": 0, "my_dataset": 0, "load_arg": [0, 8, 9, 10, 13, 14, 56, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 99, 100, 101, 176, 206, 207, 208, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 261, 275], "dtype": [0, 249], "product_ag": 0, "float64": 0, "group_identifi": 0, "utf8": 0, "try_parse_d": 0, "some": [0, 2, 13, 14, 16, 20, 22, 23, 41, 45, 52, 53, 56, 62, 64, 65, 84, 98, 192, 224, 236, 241, 257, 259, 262, 265, 266, 268, 269, 274, 275, 276, 278], "built": [0, 2, 8, 10, 11, 12, 14, 18, 19, 20, 23, 25, 28, 32, 42, 43, 45, 48, 49, 55, 58, 64, 256, 261, 264, 266, 270, 272, 274], "all": [0, 1, 2, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 28, 32, 34, 38, 41, 42, 45, 46, 49, 50, 51, 52, 54, 56, 62, 64, 65, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 122, 123, 139, 150, 151, 152, 153, 154, 155, 168, 176, 190, 192, 194, 196, 198, 199, 200, 201, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 250, 251, 254, 255, 259, 260, 261, 262, 263, 264, 265, 268, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283], "oc": 0, "env": [0, 1, 2, 10, 15, 16, 18, 19, 20, 22, 23, 31, 35, 40, 62, 64, 65, 95, 138, 145, 153, 155, 163, 187, 188, 237, 253, 259, 264, 268], "onli": [0, 1, 8, 10, 11, 14, 15, 16, 22, 23, 24, 25, 32, 35, 39, 41, 45, 46, 51, 52, 65, 75, 88, 103, 104, 145, 163, 165, 176, 192, 194, 196, 198, 199, 200, 201, 206, 209, 214, 228, 238, 247, 248, 254, 255, 257, 260, 264, 265, 268, 272, 274, 278, 283], "turn": [0, 7, 56, 263, 270, 272], "howev": [0, 1, 2, 9, 11, 13, 20, 25, 32, 42, 50, 54, 255, 257, 259, 266, 272], "similar": [0, 1, 8, 12, 16, 23, 24, 25, 28, 35, 46, 50, 52, 97, 240, 243, 255, 260, 262, 268, 272, 273, 277], "should": [0, 2, 9, 11, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 34, 35, 39, 40, 43, 45, 46, 48, 49, 50, 52, 54, 55, 56, 58, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 104, 105, 107, 136, 154, 155, 163, 188, 192, 195, 196, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 249, 250, 254, 255, 257, 259, 260, 261, 262, 263, 265, 266, 268, 269, 272, 273, 275, 278, 280], "caution": [0, 48], "achiev": [0, 1, 25, 34, 43, 251, 263], "demonstr": [0, 7, 23, 24, 25, 34, 260, 261, 265, 281], "dev_s3": [0, 8, 9, 10, 79, 81, 218, 221, 235, 249, 269], "client_kwarg": [0, 8, 9, 10, 70, 176, 208, 259], "aws_access_key_id": [0, 3, 8, 9, 18, 41, 70, 176, 208, 282], "aws_secret_access_kei": [0, 3, 8, 9, 18, 41, 70, 176, 208, 282], "note": [0, 1, 2, 9, 10, 11, 14, 19, 20, 31, 35, 36, 40, 41, 43, 46, 48, 51, 65, 69, 71, 72, 73, 74, 79, 80, 81, 85, 86, 87, 88, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 199, 207, 210, 211, 212, 213, 218, 220, 221, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 243, 245, 246, 247, 248, 249, 250, 260, 262, 265, 273], "encourag": [0, 28, 260, 266], "usag": [0, 18, 31, 32, 50, 54, 58, 64, 68, 70, 74, 75, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 206, 208, 209, 213, 214, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 268, 275], "anyth": [0, 8, 35, 48, 56, 68, 264, 280, 281, 282, 283], "kedro": [1, 3, 5, 8, 10, 11, 14, 27, 29, 34, 36, 37, 38, 47, 51, 52, 53, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 259, 261, 262, 263, 265, 271, 273, 276, 277, 278, 280], "ensur": [1, 7, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 31, 38, 40, 41, 46, 56, 165, 257, 268, 272, 273, 274, 277, 278, 282], "smooth": 1, "transit": [1, 27, 192, 267, 268], "strongli": [1, 3, 48], "adopt": [1, 22, 42], "soon": [1, 19], "outlin": [1, 23, 41, 56], "primari": [1, 19, 46, 86, 98, 209, 226, 241, 280], "distinct": [1, 192, 254], "between": [1, 8, 11, 13, 14, 18, 19, 20, 25, 42, 45, 145, 176, 260, 267, 268, 270, 272, 273, 279], "old": [1, 34, 270], "step": [1, 5, 8, 14, 18, 19, 23, 24, 25, 28, 29, 32, 34, 39, 41, 48, 50, 55, 260, 263, 264, 273, 280], "utilis": 1, "effect": [1, 19, 24, 25, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 176, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 260, 270], "wa": [1, 7, 8, 11, 15, 18, 19, 22, 25, 32, 41, 42, 45, 48, 50, 54, 56, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 123, 141, 151, 152, 153, 154, 155, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 265, 266, 272, 277, 278, 280, 281, 282], "introduc": [1, 9, 12, 13, 25, 34, 41, 43, 46, 49, 50, 251, 261, 262, 266, 267, 272, 273, 276, 281, 282], "order": [1, 10, 13, 18, 19, 20, 23, 24, 31, 35, 49, 56, 62, 64, 125, 129, 176, 192, 196, 228, 262, 263, 264, 265, 273], "pip": [1, 10, 11, 15, 16, 18, 20, 23, 24, 25, 26, 28, 32, 34, 35, 38, 40, 41, 50, 52, 54, 67, 251, 255, 259, 268, 273, 274, 277, 278, 279, 280, 282, 283], "would": [1, 3, 8, 9, 10, 11, 13, 15, 16, 28, 34, 43, 51, 71, 72, 80, 160, 210, 211, 220, 255, 257, 259, 260, 262, 263, 264, 266, 275], "minimum": [1, 9, 11, 255, 282], "which": [1, 2, 5, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 25, 27, 28, 31, 32, 34, 35, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 54, 56, 64, 65, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 105, 108, 109, 133, 145, 151, 154, 163, 176, 189, 192, 196, 198, 199, 200, 201, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 236, 237, 241, 245, 246, 247, 248, 250, 251, 253, 254, 255, 257, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 273, 274, 275, 280, 281, 283], "includ": [1, 2, 6, 7, 9, 10, 11, 14, 15, 16, 19, 20, 22, 23, 24, 25, 31, 35, 38, 41, 42, 43, 45, 48, 53, 56, 70, 71, 80, 97, 123, 190, 192, 204, 206, 208, 210, 219, 220, 240, 243, 251, 254, 256, 257, 259, 260, 261, 263, 265, 266, 268, 270, 272, 274, 275, 278, 280], "depend": [1, 15, 16, 18, 19, 20, 22, 23, 24, 25, 28, 29, 31, 32, 38, 45, 48, 49, 50, 52, 55, 56, 97, 160, 192, 240, 243, 249, 252, 261, 264, 268, 273, 277, 280], "Or": [1, 2, 42, 51, 56], "recent": [1, 18, 19, 20, 24, 25, 29, 277, 278], "make": [1, 2, 5, 6, 7, 11, 16, 19, 20, 22, 23, 24, 25, 27, 28, 31, 34, 35, 38, 40, 41, 48, 49, 50, 52, 53, 54, 56, 59, 89, 229, 251, 255, 257, 259, 260, 261, 264, 266, 268, 269, 270, 272, 274, 275, 276, 280, 283], "sure": [1, 16, 19, 22, 23, 27, 28, 31, 34, 40, 41, 48, 54, 255, 259, 264, 274], "ar": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 45, 46, 49, 50, 52, 53, 54, 56, 58, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 110, 154, 163, 164, 176, 187, 190, 192, 194, 196, 197, 198, 199, 200, 201, 202, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283], "previous": [1, 8, 22, 50, 187, 262, 265, 266, 274, 280], "other": [1, 2, 3, 5, 6, 9, 11, 14, 16, 20, 23, 24, 27, 31, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 53, 56, 72, 98, 192, 194, 195, 196, 211, 241, 251, 254, 257, 261, 263, 264, 265, 269, 270, 276, 282], "convert": [1, 5, 11, 18, 20, 35, 41, 45, 46, 255, 266, 267, 273, 274, 283], "method": [1, 5, 8, 9, 10, 14, 19, 20, 22, 23, 25, 29, 32, 34, 35, 50, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 123, 129, 133, 145, 151, 152, 153, 154, 155, 163, 170, 176, 184, 192, 195, 196, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 260, 261, 264, 265, 268, 272, 274, 275], "slightli": [1, 8, 38, 260, 268, 278], "user": [1, 2, 7, 9, 15, 16, 23, 24, 25, 32, 40, 41, 49, 50, 54, 55, 58, 68, 88, 89, 98, 99, 133, 136, 158, 160, 196, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 255, 257, 259, 260, 282], "through": [1, 2, 5, 7, 8, 9, 11, 16, 18, 19, 20, 27, 28, 32, 35, 38, 39, 41, 45, 46, 49, 50, 51, 56, 64, 69, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 88, 89, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 176, 186, 188, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 224, 225, 228, 229, 231, 232, 233, 234, 237, 245, 246, 247, 248, 250, 255, 256, 257, 264, 272, 280, 281, 282, 283], "get": [1, 2, 5, 11, 12, 15, 16, 18, 19, 20, 22, 23, 31, 32, 34, 36, 39, 40, 41, 46, 50, 55, 56, 58, 62, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 141, 160, 176, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 244, 245, 246, 247, 248, 249, 250, 255, 261, 264, 266, 268, 270, 272, 274, 277, 280, 281, 282, 283], "fetch": [1, 2, 22, 51, 64, 68, 139, 198, 199, 200, 201, 206, 264], "local": [1, 3, 8, 9, 14, 16, 18, 19, 20, 22, 23, 25, 26, 27, 28, 31, 32, 35, 36, 39, 40, 46, 50, 62, 64, 65, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 145, 185, 187, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 250, 255, 257, 259, 260, 264, 266, 274, 275, 278], "catalog": [1, 2, 5, 11, 14, 15, 18, 19, 20, 22, 23, 24, 25, 28, 31, 41, 42, 45, 50, 51, 52, 53, 54, 55, 56, 62, 64, 65, 82, 124, 145, 151, 152, 154, 155, 176, 198, 199, 200, 201, 202, 209, 219, 222, 228, 235, 236, 238, 254, 259, 260, 261, 264, 265, 267, 269, 272, 273, 275, 280], "config_load": [1, 34, 51, 56, 145, 153], "those": [1, 2, 11, 23, 24, 27, 28, 35, 41, 45, 48, 50, 58, 154, 192, 194, 238, 251, 255, 259, 266, 268, 273, 274, 275, 282], "awar": 1, "throw": [1, 3, 5, 11, 54, 154, 155], "missingconfigexcept": [1, 3, 5, 64], "don": [1, 14, 19, 25, 35, 36, 39, 42, 43, 46, 48, 49, 56, 255, 260, 264, 266, 268, 274, 278, 280], "t": [1, 9, 11, 14, 18, 19, 20, 22, 25, 35, 36, 38, 39, 42, 43, 46, 48, 49, 56, 62, 64, 71, 72, 73, 74, 79, 80, 81, 85, 86, 87, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 168, 176, 201, 210, 211, 212, 213, 218, 220, 221, 225, 226, 227, 230, 231, 232, 233, 234, 235, 245, 246, 247, 248, 250, 255, 259, 260, 261, 263, 264, 266, 268, 273, 274, 275, 277, 278, 280, 281, 282, 283], "rather": [1, 3, 14, 16, 24, 25, 34, 45, 107, 257, 266], "valueerror": [1, 2, 19, 22, 62, 64, 65, 68, 91, 95, 129, 163, 170, 184, 192, 194, 196, 198, 199, 200, 201, 202, 206, 231, 237], "bad": [1, 71, 199, 201, 210], "syntax": [1, 10, 13, 35, 46, 64, 160, 259, 264], "parsererror": [1, 64], "badconfigexcept": 1, "least": [1, 7, 13, 28, 50, 84, 99, 195, 196, 224, 236, 242, 255, 261], "properli": [1, 20, 196, 209, 264], "were": [1, 14, 19, 56, 71, 123, 196, 210, 261, 266, 280], "accessor": 1, "done": [1, 14, 19, 20, 24, 32, 40, 45, 278], "nativ": [1, 18, 19, 20, 21, 41, 74, 103, 104, 213, 247, 248], "variabl": [1, 2, 3, 16, 18, 24, 25, 35, 40, 41, 46, 51, 52, 56, 64, 65, 95, 185, 192, 195, 196, 237, 253, 262, 263, 264, 266, 268, 270, 272, 275, 282], "where": [1, 5, 7, 8, 9, 10, 11, 13, 14, 16, 19, 20, 22, 23, 24, 25, 26, 28, 35, 36, 39, 40, 41, 42, 45, 51, 54, 67, 80, 133, 163, 176, 192, 196, 198, 199, 200, 201, 205, 220, 228, 238, 259, 261, 262, 264], "ha": [1, 2, 5, 9, 10, 11, 14, 18, 19, 20, 23, 24, 25, 31, 34, 35, 41, 43, 45, 49, 50, 53, 54, 56, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 176, 192, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 259, 260, 261, 262, 264, 265, 266, 268, 270, 272, 274, 275, 277, 278, 280], "scope": [1, 20, 26, 31, 36, 185, 196, 272], "environ": [1, 3, 8, 9, 16, 18, 22, 27, 28, 32, 34, 35, 39, 40, 41, 46, 50, 51, 62, 64, 65, 82, 83, 145, 163, 187, 222, 223, 251, 253, 254, 256, 259, 267, 268, 270, 273, 282], "do": [1, 2, 3, 7, 8, 13, 14, 19, 23, 24, 25, 28, 31, 32, 35, 40, 41, 42, 45, 46, 48, 50, 52, 54, 56, 71, 84, 98, 133, 192, 194, 195, 196, 210, 224, 236, 241, 255, 257, 261, 264, 266, 273, 274, 278, 282], "renam": [1, 259, 260], "how": [1, 7, 9, 10, 12, 20, 24, 25, 28, 34, 36, 38, 39, 40, 41, 46, 50, 51, 52, 54, 56, 70, 166, 206, 208, 249, 254, 257, 264, 266, 267, 269, 270, 273, 274, 275, 276, 278, 280, 281, 282, 283], "_bucket_nam": 1, "mark": [1, 39, 121, 149], "_key_prefix": 1, "_dataset": 1, "begin": [1, 34, 171, 228, 265], "resolv": [1, 10, 46, 49, 64, 65, 98, 192, 241, 262, 270], "fred": 1, "write_only_us": 1, "ron": 1, "paramet": [1, 2, 4, 8, 9, 10, 11, 16, 18, 19, 22, 23, 24, 25, 31, 35, 39, 41, 42, 45, 46, 49, 52, 54, 55, 56, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 123, 141, 145, 151, 152, 153, 154, 155, 163, 176, 187, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 259, 261, 265, 266, 268, 270, 273, 275], "explain": [1, 9, 11, 12, 16, 18, 20, 22, 23, 28, 31, 32, 42, 43, 46, 47, 48, 50, 56, 254, 255, 267, 268, 272, 273, 274, 276], "longer": [1, 16, 20, 23, 266, 280], "pick": [1, 13, 39, 45, 260], "combin": [1, 13, 27, 35, 41, 46, 50, 65, 261, 262, 263, 264, 270, 272, 273], "factori": [1, 12, 22, 55, 176, 198, 199, 200, 201, 264], "rewrit": 1, "miss": [1, 10, 22, 34, 35, 38, 65, 160, 198, 199, 200, 201, 264, 268, 277], "interpolationkeyerror": 1, "inform": [2, 6, 9, 11, 14, 20, 22, 23, 27, 29, 36, 39, 40, 45, 49, 51, 56, 64, 65, 121, 122, 149, 150, 153, 159, 251, 255, 257, 260, 261, 264, 266, 270, 272, 274, 276, 278, 282], "store": [2, 3, 8, 9, 11, 12, 14, 16, 18, 19, 20, 23, 24, 25, 26, 28, 31, 32, 38, 46, 49, 50, 51, 55, 56, 85, 89, 98, 100, 153, 163, 165, 166, 176, 225, 229, 241, 244, 254, 255, 264, 266, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283], "credenti": [2, 4, 20, 24, 25, 41, 46, 49, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 151, 153, 176, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 266, 269, 276, 278], "templatedconfigload": [2, 3, 5], "omegaconfigload": [2, 3, 5, 34, 35, 46, 266, 274], "creat": [2, 9, 12, 14, 30, 31, 32, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 55, 56, 57, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 120, 132, 145, 151, 153, 159, 163, 176, 185, 192, 194, 195, 196, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 262, 263, 264, 265, 266, 268, 269, 270, 274, 275, 276, 282], "onward": [2, 280], "select": [2, 7, 8, 10, 23, 24, 25, 28, 38, 39, 40, 41, 43, 48, 82, 84, 88, 97, 192, 222, 224, 228, 236, 240, 243, 268, 274, 282], "modifi": [2, 5, 15, 16, 39, 40, 54, 55, 56, 89, 98, 135, 159, 229, 241, 251, 263, 274], "advanc": [2, 3, 4, 12, 19, 27, 38, 49, 58, 88, 228, 261, 274, 275], "cover": [2, 17, 34, 275], "keep": [2, 5, 14, 16, 24, 25, 49, 50, 206, 257, 260, 262, 270, 272], "A": [2, 8, 9, 14, 18, 19, 20, 22, 23, 24, 25, 28, 31, 32, 35, 36, 41, 42, 45, 49, 50, 51, 54, 64, 65, 70, 82, 88, 89, 99, 109, 110, 113, 115, 122, 124, 125, 126, 128, 130, 131, 140, 150, 154, 159, 163, 176, 192, 194, 195, 196, 202, 208, 219, 222, 228, 229, 238, 242, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 282], "stage": [2, 9, 20, 25, 27, 38, 40, 49, 270, 278, 280], "might": [2, 8, 9, 10, 13, 14, 16, 27, 43, 53, 56, 64, 249, 251, 257, 260, 261, 265, 266, 278], "test": [2, 7, 8, 9, 10, 11, 16, 18, 19, 23, 27, 29, 31, 37, 39, 40, 41, 49, 50, 55, 56, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 99, 100, 101, 102, 103, 104, 105, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 242, 244, 245, 246, 247, 248, 250, 254, 255, 259, 260, 261, 266, 270, 277, 278], "product": [2, 9, 15, 20, 23, 27, 32, 34, 46, 48, 57, 261], "foundat": [2, 57], "thei": [2, 5, 7, 9, 11, 13, 14, 19, 23, 35, 42, 45, 49, 52, 54, 56, 62, 64, 65, 84, 159, 194, 224, 228, 236, 254, 255, 257, 260, 261, 262, 264, 266, 268, 270, 272, 273, 278, 280], "overridden": [2, 10, 14, 64, 260], "put": [2, 8, 10, 20, 24, 31, 34, 49, 56, 68, 206, 261, 266], "privat": [2, 11, 16, 25, 32, 39], "control": [2, 3, 8, 16, 23, 32, 41, 49, 50, 159, 209, 255, 257, 264, 268, 273, 278, 280], "either": [2, 14, 16, 19, 26, 31, 34, 35, 41, 45, 46, 51, 62, 64, 65, 68, 82, 83, 84, 88, 89, 99, 154, 186, 222, 223, 224, 228, 229, 236, 242, 259, 266, 274], "id": [2, 11, 14, 16, 19, 20, 22, 23, 25, 27, 31, 32, 36, 38, 39, 40, 49, 69, 73, 75, 82, 83, 154, 176, 198, 199, 200, 201, 202, 207, 212, 214, 219, 222, 223, 253, 264, 266, 273, 275, 276], "protect": 2, "secur": [2, 3, 7], "datacatalog": [2, 3, 5, 8, 9, 10, 12, 19, 22, 31, 35, 42, 43, 49, 52, 54, 56, 145, 154, 155, 163, 198, 199, 200, 201, 202, 219, 254, 255, 264, 265, 266, 268, 269, 272], "o": [2, 8, 39, 40, 42, 43, 51, 261, 264, 265, 266, 274], "older": 2, "interact": [2, 9, 19, 23, 24, 42, 55, 251, 255, 264, 268, 269, 274, 283], "line": [2, 5, 16, 23, 24, 25, 26, 34, 37, 38, 39, 40, 41, 55, 86, 94, 100, 107, 123, 140, 187, 188, 226, 234, 244, 257, 264, 273, 274, 275, 277], "recurs": [2, 9, 14, 23, 24, 25, 62, 64], "scan": [2, 9, 62, 64], "insid": [2, 3, 5, 9, 11, 14, 19, 22, 24, 25, 26, 31, 32, 35, 39, 45, 56, 62, 64, 133, 253, 255, 257, 259, 260, 261, 266, 274], "firstli": [2, 9, 13, 28, 39], "being": [2, 11, 14, 23, 28, 31, 35, 56, 98, 163, 192, 203, 241, 260, 261], "accord": [2, 9, 13, 49, 125, 157, 176, 256, 260, 268, 270, 280], "rule": [2, 9, 38, 46, 255, 260], "top": [2, 5, 9, 10, 14, 19, 23, 24, 25, 39, 40, 45, 56, 62, 64, 228, 255, 260, 263, 266, 275, 276], "level": [2, 5, 6, 9, 10, 14, 16, 19, 22, 27, 42, 43, 45, 46, 56, 62, 64, 110, 192, 255, 257, 259, 260, 263, 274, 275, 276], "rais": [2, 6, 8, 14, 19, 22, 36, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 123, 129, 141, 145, 154, 155, 163, 164, 170, 176, 184, 192, 193, 194, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 263, 264, 277], "anoth": [2, 19, 20, 22, 23, 34, 45, 49, 255, 260, 265, 266, 270, 273], "last": [2, 13, 14, 19, 54, 62, 64, 277], "valu": [2, 5, 8, 9, 10, 11, 14, 15, 16, 18, 22, 23, 31, 34, 35, 41, 42, 46, 50, 51, 52, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 129, 143, 154, 158, 170, 176, 184, 187, 192, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 257, 259, 260, 261, 263, 264, 270, 275], "debug": [2, 16, 22, 31, 37, 38, 55, 110, 257], "messag": [2, 35, 40, 48, 71, 110, 136, 160, 210, 243, 257, 268, 277], "emit": [2, 8, 14, 257], "hidden": [2, 49], "reserv": [2, 133], "ignor": [2, 3, 14, 16, 38, 49, 65, 97, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250], "anchor": [2, 64], "alias": 2, "templat": [2, 10, 15, 18, 19, 22, 23, 24, 25, 35, 38, 42, 43, 45, 46, 49, 50, 52, 59, 65, 133, 251, 255, 270, 272, 274, 276, 280], "search": [2, 40, 141, 270, 276, 280], "subfold": [2, 3, 11, 32, 41, 49, 145, 255, 266, 274], "whose": [2, 3, 176, 270], "And": [2, 20, 26, 41, 264, 266], "ini": [2, 62], "pickl": [2, 9, 13, 15, 19, 20, 62, 95, 237, 251, 261, 264, 266, 272, 280], "xml": [2, 62, 90, 230], "properti": [2, 16, 40, 51, 54, 62, 64, 65, 70, 99, 145, 163, 192, 196, 208, 219, 242, 253], "regex": [2, 62, 64, 65, 176, 255, 266], "customis": [2, 14, 16, 50, 62, 64, 65, 254, 255, 259, 260, 268, 274], "bypass": [2, 46], "chapter": [2, 3, 42, 58], "new_conf": 2, "flag": [2, 9, 14, 23, 24, 28, 35, 38, 41, 45, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 137, 163, 192, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 260, 264, 270, 272, 280], "tar": [2, 16, 32, 35, 127, 259, 274], "gz": [2, 10, 16, 32, 35, 259, 274], "zip": [2, 20, 35], "format": [2, 8, 9, 10, 11, 12, 20, 32, 35, 37, 45, 55, 61, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 110, 184, 192, 196, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 257, 262, 264, 266, 273, 274, 275, 278], "packag": [2, 9, 11, 12, 18, 19, 22, 26, 27, 29, 34, 39, 40, 42, 45, 48, 50, 55, 71, 126, 141, 145, 163, 166, 203, 206, 210, 251, 254, 255, 258, 260, 264, 270, 272, 273, 276, 278, 279], "build": [2, 7, 16, 18, 19, 20, 23, 28, 31, 32, 39, 40, 42, 49, 56, 57, 59, 254, 255, 261, 264, 270, 272, 273, 276], "dist": [2, 15, 16, 20, 23, 32, 35, 259, 274], "whl": [2, 15, 16, 20, 23, 32, 35, 274], "exclud": [2, 32, 274], "czf": 2, "my_conf_nam": 2, "directori": [2, 5, 11, 14, 15, 18, 19, 20, 22, 23, 25, 31, 32, 35, 38, 39, 40, 41, 42, 43, 45, 48, 50, 62, 64, 65, 70, 87, 98, 101, 107, 133, 145, 163, 187, 208, 227, 241, 245, 251, 253, 254, 255, 259, 260, 263, 268, 269, 274, 275, 277, 278, 280, 281, 282, 283], "dir": [2, 15, 20, 49, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 268], "r": [2, 11, 15, 18, 20, 24, 25, 32, 35, 38, 40, 41, 50, 69, 71, 74, 76, 77, 78, 84, 88, 92, 102, 103, 104, 105, 207, 210, 213, 215, 216, 217, 219, 224, 228, 232, 235, 236, 246, 247, 248, 250, 251, 272, 277, 278, 280, 282, 283], "expect": [2, 25, 34, 52, 53, 160, 192, 194, 206, 228, 255, 260, 261, 275], "conf_dir": 2, "mai": [2, 11, 12, 14, 15, 16, 25, 27, 28, 29, 39, 40, 41, 45, 49, 50, 56, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 255, 262, 264, 267, 268, 269, 272, 274, 276, 277, 278], "distribut": [2, 9, 14, 15, 16, 20, 21, 23, 29, 32, 35, 259, 274, 276], "readm": [2, 11, 15, 18, 19, 28, 32, 45, 49, 62, 255, 260], "md": [2, 11, 15, 18, 19, 28, 32, 35, 45, 49, 62, 102, 246, 255, 260], "instanti": [2, 5, 8, 9, 10, 14, 19, 22, 31, 36, 39, 62, 64, 65, 82, 83, 88, 89, 95, 176, 198, 199, 200, 201, 222, 223, 228, 229, 237, 253, 260, 261, 264, 269, 272], "show": [2, 7, 11, 15, 23, 38, 39, 40, 41, 46, 51, 92, 133, 136, 232, 255, 257, 266, 268, 269, 275, 278, 279], "conf_catalog": [2, 54, 62, 64, 151, 266], "own": [2, 3, 5, 6, 11, 12, 14, 16, 18, 19, 20, 23, 28, 34, 41, 46, 255, 257, 264, 268, 272], "bottom": [2, 24, 39, 281, 283], "server": [2, 9, 10, 20, 28, 29, 31, 32, 88, 95, 206, 228, 237], "kedro_env": 2, "ipython": [2, 11, 24, 25, 26, 35, 39, 106, 124, 190, 275, 277, 278], "jupyt": [2, 35, 43, 49, 50, 55, 58, 163, 186, 190, 255, 267, 269, 276, 278], "notebook": [2, 8, 15, 23, 27, 43, 46, 49, 50, 55, 58, 186, 255, 257, 269, 276, 278], "lab": [2, 35, 186, 268], "session": [2, 11, 16, 19, 20, 22, 23, 24, 25, 31, 34, 35, 36, 39, 40, 42, 45, 48, 51, 55, 56, 145, 154, 198, 199, 200, 201, 202, 254, 264, 275, 277], "export": [2, 41, 165, 257, 268, 282], "provid": [2, 5, 8, 9, 10, 11, 14, 15, 17, 19, 20, 22, 23, 24, 25, 29, 35, 36, 42, 45, 49, 51, 54, 56, 59, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 117, 121, 133, 144, 145, 147, 148, 149, 156, 161, 163, 169, 172, 176, 184, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 261, 262, 264, 266, 268, 269, 270, 272, 273, 274], "default_run_env": [2, 62, 64, 65], "prod": [2, 268], "reason": [2, 3, 14, 18, 19, 23, 30, 266], "apart": 2, "must": [2, 8, 10, 11, 13, 14, 16, 18, 19, 20, 23, 24, 25, 26, 32, 40, 41, 43, 45, 48, 50, 52, 54, 91, 95, 98, 176, 187, 192, 194, 196, 228, 231, 237, 241, 255, 257, 259, 260, 261, 262, 263, 264, 265, 268, 274, 275, 277, 280, 282, 283], "commit": [3, 7, 24, 25, 32, 35, 42, 49, 255, 278], "secret": [3, 8, 9, 10, 14, 18, 51, 68, 70, 73, 75, 97, 176, 206, 208, 212, 214, 240], "default": [3, 5, 9, 10, 11, 14, 15, 16, 18, 19, 22, 23, 24, 25, 31, 32, 35, 38, 40, 41, 45, 46, 49, 50, 54, 56, 62, 64, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 110, 145, 159, 163, 176, 187, 198, 199, 200, 201, 202, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 244, 245, 246, 247, 248, 250, 254, 255, 256, 259, 260, 263, 264, 266, 268, 272, 274, 275, 278], "file": [3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 28, 31, 32, 34, 39, 40, 41, 42, 43, 45, 46, 48, 49, 52, 54, 56, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 136, 141, 176, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 259, 260, 261, 268, 269, 272, 273, 275, 276, 277, 278, 280, 282, 283], "its": [3, 8, 9, 10, 11, 14, 17, 18, 19, 20, 23, 24, 25, 27, 34, 35, 41, 43, 45, 48, 49, 50, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 116, 141, 156, 158, 163, 176, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 261, 262, 264, 265, 266, 268, 270, 272, 273], "git": [3, 16, 24, 25, 32, 35, 41, 45, 48, 49], "configur": [3, 5, 12, 13, 16, 18, 24, 25, 31, 32, 41, 42, 45, 49, 55, 59, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 145, 156, 157, 158, 163, 176, 187, 199, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 259, 260, 267, 268, 269, 270, 274, 276], "us": [3, 7, 11, 12, 17, 20, 27, 28, 29, 35, 36, 38, 39, 42, 44, 45, 46, 49, 50, 53, 54, 55, 57, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 117, 123, 133, 134, 139, 145, 147, 151, 153, 154, 155, 159, 163, 165, 166, 167, 176, 184, 187, 192, 193, 195, 196, 198, 199, 200, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 259, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283], "fed": [3, 5, 206], "pathlib": [3, 11, 18, 20, 31, 41, 45, 163, 253], "substitut": 3, "project_root": [3, 18, 23, 24, 25, 26, 28, 31, 34, 38, 40, 163, 251, 260, 268], "root": [3, 15, 16, 18, 20, 22, 23, 25, 31, 32, 34, 35, 38, 39, 40, 42, 48, 49, 62, 64, 65, 110, 145, 163, 187, 251, 253, 254, 257, 274, 275, 278, 280, 281, 282, 283], "http": [3, 5, 9, 10, 11, 16, 20, 23, 24, 25, 31, 38, 39, 40, 41, 45, 48, 50, 51, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 121, 122, 149, 150, 159, 160, 176, 186, 187, 190, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 259, 266, 273, 277, 280], "doc": [3, 15, 31, 34, 35, 39, 49, 70, 71, 72, 74, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 95, 97, 98, 99, 103, 104, 176, 208, 210, 211, 213, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 237, 238, 240, 241, 242, 243, 247, 248, 255, 274], "org": [3, 6, 39, 40, 45, 48, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 97, 98, 99, 101, 103, 104, 105, 176, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 240, 241, 242, 243, 244, 245, 247, 248, 250], "en": [3, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 88, 89, 91, 92, 93, 94, 95, 102, 103, 104, 105, 121, 122, 149, 150, 159, 176, 186, 187, 190, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 224, 225, 228, 231, 232, 233, 234, 237, 238, 246, 247, 248, 250, 266, 277], "stabl": [3, 48, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 95, 121, 122, 149, 150, 176, 186, 187, 190, 211, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 232, 237, 244, 277], "tutori": [3, 9, 12, 19, 20, 23, 24, 25, 41, 45, 50, 58, 76, 77, 78, 215, 216, 217, 255, 263, 266, 268, 275, 278, 280, 281, 282, 283], "spaceflights_tutori": 3, "html": [3, 23, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 102, 103, 104, 105, 159, 176, 186, 187, 190, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 250, 277], "terminologi": [3, 55], "given": [3, 5, 10, 11, 14, 18, 19, 27, 31, 35, 56, 62, 64, 65, 88, 89, 176, 187, 192, 196, 204, 206, 228, 229, 249, 266, 275], "But": [3, 5], "workflow": [3, 5, 10, 14, 15, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 41, 42, 56, 171, 261, 262, 278], "applic": [3, 5, 16, 19, 20, 26, 28, 35, 39, 56, 123, 282], "try": [3, 5, 8, 10, 11, 19, 22, 48, 84, 206, 224, 262, 264, 265, 266, 268, 277], "context": [3, 5, 11, 19, 20, 22, 24, 25, 31, 34, 35, 39, 42, 51, 56, 153, 163, 187, 253, 254, 261], "approach": [3, 5, 8, 14, 15, 20, 23, 24, 25, 27, 32, 45, 48, 51, 262, 266, 267], "aws_session_token": 3, "pleas": [3, 11, 18, 20, 35, 36, 43, 45, 48, 56, 97, 121, 122, 149, 150, 199, 240, 243, 260, 264, 274, 277], "offici": [3, 16, 17, 20, 22, 25, 42, 45, 48, 58, 139, 282], "pair": [5, 41, 62, 64, 65, 262, 267, 273, 283], "correspond": [5, 8, 9, 11, 14, 19, 20, 25, 28, 43, 52, 54, 62, 64, 65, 70, 99, 176, 195, 196, 208, 242, 253, 255, 257, 261, 262, 266, 274, 276], "input": [5, 9, 10, 11, 12, 13, 14, 18, 19, 20, 22, 28, 35, 41, 46, 49, 53, 56, 62, 64, 101, 154, 163, 192, 194, 195, 196, 198, 199, 200, 201, 202, 206, 245, 255, 260, 264, 266, 270, 277, 283], "easier": [5, 19, 34, 38, 58, 251, 257, 260, 270, 272, 280], "chang": [5, 7, 16, 23, 28, 32, 34, 35, 40, 41, 42, 46, 48, 64, 98, 228, 241, 254, 257, 260, 261, 266, 268, 270, 274, 277, 280], "group": [5, 7, 9, 19, 20, 31, 35, 40, 43, 45, 46, 51, 52, 54, 85, 125, 135, 137, 140, 176, 192, 199, 201, 225, 282], "determin": [5, 13, 14, 41, 49, 50, 133, 206, 262, 270, 272, 273], "hyperparamet": [5, 30, 272], "model": [5, 8, 9, 11, 13, 15, 16, 23, 24, 25, 27, 30, 41, 42, 46, 50, 56, 101, 176, 245, 260, 261, 266, 276, 278, 280], "singl": [5, 11, 16, 17, 20, 22, 23, 28, 29, 41, 45, 46, 50, 51, 87, 163, 176, 199, 202, 206, 227, 260, 261, 262, 266, 267, 268, 270, 272, 273], "modif": [5, 16, 107], "centralis": [5, 55], "avoid": [5, 13, 14, 16, 24, 25, 27, 31, 38, 67, 251, 265, 269], "part": [5, 7, 8, 9, 10, 11, 14, 15, 16, 17, 19, 21, 28, 30, 33, 34, 41, 42, 45, 50, 103, 104, 192, 194, 196, 209, 219, 238, 247, 248, 255, 259, 261, 262, 263, 272, 279, 283], "step_siz": 5, "learning_r": 5, "01": [5, 14, 52, 264, 268, 273], "definit": [5, 9, 11, 20, 23, 41, 195, 196, 238, 262, 264, 266, 268, 272, 280], "increase_volum": 5, "volum": [5, 14, 39], "func": [5, 10, 13, 14, 20, 41, 49, 51, 56, 192, 195, 196, 260, 261, 264, 272, 273, 283], "input_volum": 5, "output_volum": 5, "model_param": 5, "test_data_ratio": 5, "number_of_train_iter": 5, "10000": [5, 268], "train_model": [5, 13, 52, 56, 266, 272], "lr": 5, "iter": [5, 23, 24, 27, 49, 62, 64, 65, 68, 139, 192, 194, 195, 196, 261, 268], "input_data": 5, "output_data": 5, "entir": [5, 10, 15, 16, 19, 20, 23, 24, 25, 28, 32, 34, 51, 55, 251, 256, 261, 262, 272, 276], "collect": [5, 7, 19, 22, 34, 42, 45, 49, 52, 54, 56, 70, 113, 124, 126, 128, 129, 130, 131, 192, 194, 208, 251, 262, 270], "add_feed_dict": [5, 176], "live": [5, 45, 46, 238], "what": [5, 10, 14, 22, 34, 54, 71, 210, 255, 259, 262, 270, 273], "per": [5, 7, 41, 100, 244, 259, 266, 268, 275], "subdirectori": [5, 34, 50, 62, 64, 260, 274], "comma": [5, 35, 40, 143, 187], "separ": [5, 9, 11, 13, 16, 29, 31, 32, 35, 38, 45, 50, 165, 187, 260, 262, 266, 270, 272, 273, 274, 279], "list": [5, 6, 7, 8, 9, 10, 13, 14, 16, 22, 23, 24, 25, 31, 40, 41, 42, 45, 50, 52, 54, 58, 64, 68, 75, 97, 98, 125, 133, 155, 163, 176, 190, 192, 194, 195, 196, 206, 209, 214, 219, 228, 240, 241, 243, 251, 257, 259, 260, 261, 262, 264, 265, 266, 268, 274, 276, 282], "made": [5, 7, 24, 34, 107, 192, 194, 272, 273], "split": [5, 35, 38, 49, 50, 52, 143, 187, 261, 266, 268, 272], "first": [5, 8, 9, 10, 11, 12, 14, 18, 19, 23, 24, 25, 26, 31, 35, 39, 40, 41, 49, 50, 54, 55, 62, 64, 84, 129, 170, 184, 187, 192, 224, 236, 259, 261, 262, 265, 266, 268, 272, 273, 274, 275, 282], "colon": [5, 187], "equal": [5, 8, 41, 56, 70, 72, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 95, 99, 176, 187, 208, 211, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 237, 242], "sign": [5, 187], "param_key1": [5, 35], "value1": [5, 14, 35, 187], "param_key2": [5, 35], "alwai": [5, 13, 14, 18, 41, 48, 107, 176, 260, 266, 268], "treat": [5, 11, 13, 38, 45, 62, 64, 192, 260, 266], "string": [5, 8, 9, 10, 11, 14, 16, 46, 52, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 143, 176, 192, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 266], "float": [5, 41, 52, 266, 273], "integ": 5, "number": [5, 11, 12, 13, 19, 25, 39, 48, 49, 129, 170, 172, 184, 195, 196, 199, 201, 261, 262, 265, 281], "convers": [5, 6, 10, 28], "succe": 5, "otherwis": [5, 16, 56, 62, 64, 65, 97, 192, 206, 240, 262, 277], "extra": [5, 11, 14, 16, 23, 42, 51, 53, 54, 62, 64, 65, 145, 163, 176, 187, 190, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 244, 245, 246, 247, 248, 249, 250, 253, 257, 261], "space": [5, 50, 266, 275, 276], "wrap": [5, 11, 22, 31, 65, 202, 257, 260, 266, 272], "whole": [5, 10, 14, 15, 20, 34, 35, 192], "quot": [5, 13, 259], "key1": [5, 261], "key2": [5, 261], "cannot": [5, 14, 18, 22, 24, 25, 29, 40, 56, 163, 198, 199, 200, 201, 256, 260, 262, 277], "endpoint_url": [5, 10], "endpoint": [5, 23, 68, 206, 259], "com": [5, 20, 23, 25, 32, 38, 39, 40, 45, 48, 65, 82, 83, 93, 94, 160, 222, 223, 233, 234, 238], "welcom": [6, 42], "whatev": [6, 268], "answer": [6, 46, 268, 276, 277], "question": [6, 7, 20, 50, 268, 274, 276, 280], "review": [6, 7, 8, 9, 13, 20, 22, 31, 38, 48, 50, 58, 255, 266, 272, 273, 275, 276, 277, 280, 281], "github": [6, 7, 11, 15, 17, 18, 19, 30, 33, 38, 45, 48, 50, 57, 65, 91, 95, 160, 219, 231, 235, 236, 237, 255, 257], "issu": [6, 24, 38, 48, 160, 190, 257, 260, 268, 276], "report": [6, 7, 30, 35, 46, 50, 52, 260, 261], "bug": [6, 7, 11, 39, 48], "request": [6, 7, 10, 11, 14, 19, 40, 45, 68, 206, 274], "discuss": [6, 7, 15, 20, 48, 276, 280], "pull": [6, 7, 11, 28, 31, 32], "awesom": [6, 45], "repo": [6, 26, 27, 38, 45, 257], "curat": [6, 58], "propos": 6, "contributor": [6, 7, 11], "pr": 6, "fix": [6, 8, 260], "write": [6, 7, 8, 14, 19, 24, 34, 39, 40, 46, 49, 56, 69, 80, 83, 84, 97, 103, 104, 172, 207, 209, 219, 220, 223, 224, 236, 240, 243, 247, 248, 249, 257, 262, 264, 266, 268, 273], "blog": [6, 46], "post": [6, 16, 36, 46, 48, 68, 206, 255], "There": [6, 11, 16, 23, 24, 34, 38, 40, 41, 42, 45, 49, 50, 58, 84, 224, 236, 266, 267, 272, 274, 276, 277, 283], "further": [6, 9, 11, 12, 15, 17, 22, 24, 30, 33, 35, 49, 50, 56, 251, 257, 264, 266, 270, 276], "our": [6, 7, 11, 15, 20, 22, 24, 28, 29, 42, 43, 45, 48, 54, 56, 206, 264, 266, 276, 280], "guidelin": [6, 38], "wiki": [6, 69, 105, 207, 250], "incub": 7, "lf": [7, 57], "ai": [7, 29, 33, 45, 57], "term": [7, 28, 34, 260, 266], "tsc": 7, "futur": [7, 19, 22, 31, 41, 45, 64, 251, 266], "duti": 7, "charter": 7, "member": [7, 270], "fuel": 7, "continu": [7, 19, 52, 263], "On": [7, 16, 19, 24, 25, 41, 48, 199, 206, 263], "Be": [7, 31], "full": [7, 11, 16, 20, 22, 34, 40, 42, 54, 255, 260, 266, 268, 272, 274, 280], "dai": [7, 71, 210], "week": 7, "help": [7, 10, 15, 16, 18, 19, 24, 27, 34, 36, 38, 43, 48, 55, 57, 251, 260, 265, 274, 277, 280], "attend": 7, "meet": [7, 192, 264], "plan": [7, 11, 19, 43, 98, 241, 259], "roadmap": 7, "proactiv": 7, "ci": [7, 23, 27, 43, 255, 257], "cd": [7, 15, 18, 23, 24, 25, 27, 34, 41, 48, 50, 255, 268, 278], "infrastructur": [7, 20, 31, 255], "give": [7, 9, 19, 31, 34, 35, 50, 56, 192, 194, 257, 260, 261, 262, 268, 272], "prioriti": [7, 19, 35, 238], "move": [7, 19, 20, 25, 49, 50, 255], "forward": 7, "ongo": 7, "right": [7, 19, 23, 24, 25, 39], "pace": 7, "close": [7, 22, 24, 25, 50, 75, 163, 214, 253, 273, 275, 280], "channel": [7, 50, 276, 280], "just": [7, 11, 20, 23, 35, 39, 54, 192, 257, 268, 272], "contribut": [7, 9, 42], "long": [7, 28, 36, 38, 50, 187, 206, 255, 265], "success": [7, 19, 23, 32, 123, 268], "period": [7, 32], "marker": 7, "who": [7, 25, 27, 270, 282], "high": [7, 14, 27, 34, 42, 45, 46], "qualiti": [7, 34, 38, 278], "collabor": [7, 49, 55, 267, 270, 280], "team": [7, 18, 255, 260, 270], "understand": [7, 10, 20, 28, 34, 50, 56, 260, 270, 276], "intern": [7, 11, 82, 88, 89, 99, 133, 163, 222, 228, 229, 242, 260, 262], "backlog": 7, "toward": [7, 30, 34], "goal": [7, 266], "learn": [7, 17, 23, 25, 27, 30, 40, 41, 45, 46, 49, 50, 53, 54, 244, 260, 261, 270, 272, 276, 278], "evid": 7, "alreadi": [7, 8, 10, 11, 14, 19, 22, 23, 25, 26, 41, 48, 50, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 176, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 259, 261, 265, 266, 268, 273, 275, 276, 277, 278], "ask": [7, 23, 25, 31, 48, 50, 255, 268, 274, 276, 277, 280], "excit": 7, "relationship": [7, 262], "ahdra": 7, "merali": 7, "quantumblack": 7, "mckinsei": 7, "andrew": 7, "mackai": 7, "ankita": 7, "katiyar": 7, "antoni": 7, "miln": 7, "deepyaman": 7, "datta": 7, "claypot": 7, "dmitri": 7, "sorokin": 7, "huong": 7, "nguyen": 7, "ivan": [7, 276], "danov": 7, "jitendra": 7, "gundaniya": 7, "jo": 7, "stichburi": 7, "joel": 7, "schwarzmann": 7, "juan": 7, "lui": 7, "cano": 7, "laura": 7, "couto": 7, "marcin": 7, "zab\u0142ocki": 7, "getindata": [7, 15, 17, 21, 30, 33, 45], "xebia": [7, 15, 17, 21, 30, 33], "mehdi": 7, "naderi": 7, "varandi": 7, "merel": 7, "theisen": 7, "nero": 7, "okwa": 7, "nok": 7, "lam": 7, "chan": 7, "rashida": 7, "kanchwala": 7, "ravi": 7, "kumar": 7, "pilla": 7, "sajid": 7, "alam": 7, "stephani": 7, "kaiser": 7, "tynan": 7, "debold": 7, "vladimir": 7, "nikol": 7, "yetund": 7, "dada": 7, "yolan": [7, 45], "honor\u00e9": [7, 45], "roug\u00e9": [7, 45], "soci\u00e9t\u00e9": 7, "g\u00e9n\u00e9rale": 7, "assur": 7, "ari": 7, "valtazano": 7, "nikolao": 7, "tsaousi": 7, "solv": [7, 43, 260, 261], "challeng": 7, "face": 7, "Their": [7, 22], "peteri": 7, "erin": 7, "kaltsa": 7, "meisam": 7, "emamjom": 7, "former": 7, "core": [7, 11, 20, 34, 42, 51, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 101, 102, 103, 104, 105, 172, 199, 201, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 250, 251, 255, 261, 272, 277], "signific": [7, 263, 264], "andrii": 7, "ivaniuk": 7, "anton": 7, "kirilenko": 7, "cvetanka": 7, "nechevska": 7, "dmitrii": 7, "deriabin": 7, "gabriel": [7, 45], "comym": 7, "gordon": 7, "wriglei": 7, "hamza": 7, "oza": 7, "ignacio": 7, "paricio": 7, "jannic": 7, "holzer": 7, "jiri": 7, "klein": 7, "kiyohito": 7, "kunii": 7, "la\u00ed": 7, "carvalho": 7, "liam": 7, "brummitt": 7, "lim": 7, "hoang": 7, "lorena": 7, "b\u0103lan": 7, "nasef": 7, "khan": 7, "richard": 7, "westenra": 7, "susanna": 7, "wong": 7, "zain": 7, "patel": 7, "everi": [7, 15, 20, 24, 34, 38, 43, 54, 56, 254, 255, 256, 261, 262, 272], "quarter": 7, "year": [7, 10, 20, 68, 206], "shown": [7, 41, 49, 176, 257, 262, 268, 281, 282, 283], "prior": [7, 45], "month": [7, 14], "candid": [7, 272], "decid": [7, 10, 29, 31, 255, 267, 272], "lead": [7, 8, 13, 16, 262, 266], "via": [7, 14, 34, 35, 41, 54, 56, 84, 99, 224, 238, 242, 255, 259, 260, 262, 272, 274], "host": [7, 10, 31, 40, 45, 57, 282], "affect": [7, 14, 52, 260], "amend": [7, 11], "decis": [7, 27, 31, 50], "act": [7, 20, 45, 50, 176], "onto": [7, 29, 32, 48], "against": [7, 11, 13, 18, 19, 29, 34, 35, 46, 62, 64, 65], "io": [8, 11, 14, 15, 18, 19, 22, 31, 52, 54, 56, 64, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 101, 102, 103, 104, 105, 121, 122, 149, 150, 159, 186, 187, 190, 192, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 244, 245, 246, 247, 248, 250, 254, 261, 265, 266, 277], "modul": [8, 23, 35, 38, 39, 40, 45, 48, 54, 55, 59, 66, 91, 95, 106, 108, 111, 112, 114, 117, 118, 121, 122, 132, 142, 147, 148, 149, 150, 156, 159, 160, 161, 162, 165, 167, 169, 176, 189, 190, 191, 203, 231, 237, 244, 251, 259, 260, 263, 264, 272, 274], "construct": [8, 20, 46, 62, 64, 163, 261, 262, 263, 266, 268, 272, 273, 276], "object": [8, 9, 14, 16, 22, 23, 34, 50, 55, 62, 64, 65, 68, 73, 75, 82, 83, 91, 95, 96, 145, 159, 163, 165, 167, 176, 192, 194, 195, 196, 198, 199, 200, 201, 204, 212, 214, 219, 222, 223, 231, 237, 239, 243, 249, 253, 260, 263, 264, 266, 272, 273, 275, 277, 283], "sever": [8, 14, 23, 24, 273, 274], "pre": [8, 16, 23, 46, 56, 192, 254, 255, 260, 265, 270, 274], "kedro_dataset": [8, 11, 14, 56, 67, 265, 277], "sqltabledataset": [8, 10, 88, 228], "sqlquerydataset": [8, 10], "parquetdataset": [8, 10, 13, 176, 251, 272, 273, 277, 278, 280, 283], "bike": [8, 10], "sep": [8, 9, 10, 56, 79, 84, 97, 218, 224, 235, 240], "cars_tabl": 8, "table_nam": [8, 10, 83, 89, 98, 223, 229, 238, 241], "con": [8, 10, 88, 89, 228, 229], "sqlite": [8, 16, 41], "db": [8, 41, 62, 95, 237], "scooters_queri": [8, 10], "gear": [8, 10, 87, 227], "4": [8, 10, 14, 18, 34, 35, 41, 70, 72, 74, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 97, 98, 99, 105, 170, 176, 196, 208, 209, 211, 213, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 240, 241, 242, 250, 268, 272, 275, 278], "rank": 8, "sqlalchemi": [8, 10, 88, 89, 228, 229], "compat": [8, 9, 16, 23, 41, 45, 48, 88, 89, 91, 95, 107, 228, 229, 231, 237, 257], "connect": [8, 19, 22, 25, 41, 46, 49, 70, 88, 89, 95, 99, 194, 208, 228, 229, 237, 238, 242, 260, 262, 268, 270, 279], "datafram": [8, 9, 10, 14, 41, 55, 70, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 176, 195, 196, 206, 208, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 261, 266, 272, 273, 275, 283], "happen": [8, 23, 56, 257, 270, 280], "behind": [8, 46, 88, 89, 228, 229, 261], "scene": [8, 88, 89, 228, 229, 261], "abstractdataset": [8, 14, 22, 45, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 172, 176, 198, 200, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 264], "retriev": [8, 62, 64, 145, 148, 163, 253, 264], "deleg": [8, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "underli": [8, 9, 10, 11, 14, 20, 22, 52, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 163, 176, 188, 194, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 260, 261, 262, 272, 275], "read_csv": [8, 79, 84, 218, 224, 235, 236, 266], "platform": [8, 14, 15, 20, 33], "sagemak": [8, 20, 29, 45], "databrick": [8, 29, 41, 96, 97, 219, 239, 240, 243, 257, 268], "etc": [8, 10, 11, 28, 32, 35, 39, 40, 42, 68], "unit": [8, 28, 35, 42, 49, 259], "integr": [8, 19, 21, 23, 24, 25, 27, 29, 32, 36, 41, 45, 53, 55, 124, 193, 283], "prefer": [8, 18, 19, 22, 24, 25, 27, 28, 31, 32, 39, 42, 48, 49, 50, 54], "none": [8, 11, 14, 15, 18, 19, 20, 22, 31, 35, 49, 51, 52, 54, 56, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 125, 133, 136, 138, 140, 145, 152, 153, 154, 163, 176, 184, 187, 188, 192, 194, 195, 196, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 259, 260, 261, 262, 264, 265, 268, 272], "cars_cach": 8, "clean": [8, 18, 19, 23, 270, 280], "filenotfounderror": [8, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 264, 265, 277], "scooter": [8, 10], "mpg": 8, "brand": [8, 10], "process": [8, 11, 13, 14, 18, 19, 22, 23, 24, 25, 28, 32, 34, 38, 40, 41, 49, 55, 56, 62, 64, 65, 70, 148, 163, 198, 199, 200, 201, 208, 260, 261, 262, 263, 264, 270, 272, 274, 276, 280, 282], "befor": [8, 9, 11, 14, 16, 18, 19, 22, 24, 25, 31, 35, 38, 40, 43, 49, 51, 53, 54, 56, 116, 123, 152, 154, 155, 192, 255, 257, 259, 263, 274, 275], "attempt": [8, 9, 14, 45, 163, 164, 192], "from_config": [8, 9, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 176, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 266], "scooters_credenti": [8, 10], "my_gcp_credenti": [8, 10, 74, 80, 100, 213, 220, 244], "id_token": 8, "test_bucket": 8, "motorbik": [8, 9, 10, 79, 81, 218, 221, 235, 249], "skiprow": [8, 10], "skipfoot": [8, 10], "na_valu": [8, 10, 79, 84, 218, 224], "na": [8, 10, 79, 84, 218, 224], "token": [8, 10, 11, 23, 24, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 207, 208, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 259], "earlier": [8, 11, 16, 31, 192, 280], "ml": [8, 9, 23, 45, 56, 270, 272], "initialis": [8, 14, 15, 25, 55, 187, 192, 206, 255, 266], "pd": [8, 9, 14, 41, 70, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 99, 176, 195, 208, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 237, 242, 261, 266, 272, 273, 275, 283], "data1": 8, "col1": [8, 70, 72, 74, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 99, 103, 104, 105, 176, 206, 208, 211, 213, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 242, 247, 248, 250], "col2": [8, 70, 72, 74, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 99, 103, 104, 105, 176, 206, 208, 211, 213, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 242, 247, 248, 250], "col3": [8, 70, 72, 74, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 99, 103, 104, 105, 176, 208, 211, 213, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 242, 247, 248, 250], "6": [8, 16, 41, 70, 72, 74, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 99, 101, 105, 170, 176, 208, 211, 213, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 242, 245, 250, 268, 272, 275, 278, 281, 282], "data2": 8, "7": [8, 16, 23, 24, 25, 34, 35, 39, 48, 58, 70, 100, 208, 219, 244, 262, 268, 272, 278], "8": [8, 9, 20, 24, 25, 34, 38, 56, 70, 208, 219, 238, 262, 266, 268, 272, 278], "9": [8, 16, 38, 78, 217, 219, 268, 272, 278, 280, 282], "latest": [8, 9, 11, 16, 20, 23, 25, 31, 32, 48, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 159, 176, 184, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 255, 266], "gener": [8, 9, 11, 15, 20, 23, 25, 26, 32, 34, 35, 42, 46, 48, 50, 54, 55, 56, 70, 71, 76, 77, 78, 79, 80, 86, 87, 88, 89, 91, 93, 94, 136, 159, 202, 208, 210, 215, 216, 217, 218, 220, 226, 227, 228, 229, 231, 233, 234, 244, 249, 251, 255, 256, 259, 260, 263, 265, 266, 270, 272, 274, 277, 278, 280, 281, 282, 283], "automat": [8, 11, 14, 19, 24, 25, 31, 34, 38, 40, 45, 50, 65, 159, 186, 194, 199, 201, 253, 255, 257, 259, 262, 263, 265, 268, 272, 273, 274], "oper": [8, 9, 10, 13, 14, 16, 25, 28, 56, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 123, 151, 176, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 259, 260, 264, 266], "test_data_set": 8, "fals": [8, 9, 10, 14, 19, 22, 31, 35, 64, 70, 74, 75, 79, 80, 83, 84, 86, 87, 89, 90, 100, 101, 103, 104, 105, 136, 140, 163, 176, 198, 199, 200, 201, 202, 208, 213, 214, 218, 220, 223, 224, 226, 227, 229, 230, 235, 244, 245, 247, 248, 250, 257, 261, 265, 266, 277], "reload": [8, 35, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 102, 105, 187, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 240, 241, 242, 246, 250, 268, 277], "assert": [8, 19, 34, 56, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 99, 100, 102, 105, 176, 207, 208, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 242, 244, 246, 250], "becom": [8, 23, 36, 38, 56, 192, 194, 260], "my_exact_vers": 8, "exact": [8, 13, 25, 62, 64, 196, 228, 251], "dataseterror": [8, 14, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 176, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "inconsist": [8, 16, 38], "userwarn": [8, 14, 159], "imagin": [8, 260], "simpl": [8, 23, 49, 50, 54, 91, 95, 110, 231, 237, 261, 262, 264, 283], "b": [8, 31, 40, 93, 176, 192, 196, 233, 261, 264, 272, 277], "my_data_2023_08_16": 8, "produc": [8, 15, 23, 24, 25, 34, 36, 108, 109, 189, 192, 196, 263, 265], "my_data_20230818": 8, "node_a": 8, "exact_load_vers": 8, "registri": [9, 12, 18, 19, 20, 28, 35, 41, 49, 55, 159, 258, 266, 267, 268, 270, 275], "map": [9, 12, 16, 28, 39, 49, 52, 62, 64, 65, 70, 98, 154, 159, 176, 190, 194, 195, 196, 208, 219, 241, 260, 261, 263, 264, 266, 268, 270], "revisit": 9, "spaceflight": [9, 19, 20, 34, 41, 50, 55, 58, 82, 88, 222, 228, 255, 263, 268, 272, 273, 275, 276, 279, 281, 282, 283], "xlsx": [9, 10, 13, 19, 20, 80, 220, 266, 273, 275, 280, 281], "shuttl": [9, 13, 19, 20, 80, 82, 88, 89, 220, 222, 228, 229, 266, 272, 273, 275, 276, 277, 280, 281, 283], "exceldataset": [9, 10, 13, 19, 20, 251, 266, 272, 273, 275, 278, 280, 281, 283], "openpyxl": [9, 13, 80, 220, 266, 275], "modern": [9, 13, 260, 275], "excel": [9, 13, 58, 80, 220, 266, 273, 275, 278], "offer": [9, 12, 16, 20, 22, 23, 24, 27, 34, 266, 276, 281], "feather": [9, 81, 221, 266], "hdf5": [9, 266], "sql": [9, 56, 82, 88, 89, 96, 97, 98, 99, 209, 222, 228, 229, 239, 240, 241, 242, 266], "tabl": [9, 46, 56, 58, 82, 83, 85, 89, 98, 99, 209, 219, 222, 223, 225, 229, 238, 241, 242, 266, 272, 274, 281], "queri": [9, 48, 62, 64, 82, 88, 222, 228, 266, 268], "api": [9, 11, 31, 54, 56, 58, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 261, 264, 266, 268, 270], "networkx": [9, 266], "matplotlib": [9, 41, 251, 266], "comprehens": [9, 45, 58, 257], "reli": [9, 11, 34, 45, 54, 266], "fsspec": [9, 14, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 250, 266, 275, 282], "varieti": [9, 38, 266, 270, 275], "network": [9, 28, 266, 275], "cloud": [9, 18, 20, 28, 30, 33, 35, 41, 82, 83, 222, 223, 259, 266, 275], "hadoop": [9, 16, 266], "storag": [9, 35, 49, 51, 56, 98, 241, 259, 270], "url": [9, 10, 23, 24, 25, 39, 68, 88, 89, 95, 99, 133, 206, 228, 229, 237, 242, 259, 282], "form": [9, 22, 46, 62, 64, 99, 199, 201, 209, 242, 255, 261, 262, 272, 273], "protocol": [9, 11, 14, 23, 24, 69, 71, 72, 73, 74, 75, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 207, 210, 211, 212, 213, 214, 218, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 250], "prepend": 9, "absenc": 9, "permit": 9, "rel": [9, 27], "hdf": [9, 56, 85, 97, 225, 240, 275], "port": [9, 10, 40, 228, 238], "resili": 9, "replic": 9, "cluster": [9, 16, 18, 22, 24, 25, 26, 30, 45, 56], "amazon": [9, 19, 20, 29, 45, 282], "bucket": [9, 11, 14, 16, 18, 19, 20, 35, 41, 46, 51, 65, 97, 176, 219, 240], "remot": [9, 24, 25, 28, 32, 41, 70, 133, 206, 208, 272], "binari": [9, 23, 32, 274], "often": [9, 22, 28, 34, 261], "ec2": [9, 19], "s3f": [9, 20], "_to": 9, "minio": 9, "googl": [9, 33, 82, 83, 222, 223], "gc": [9, 10, 14, 56, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 100, 102, 103, 104, 105, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 244, 246, 247, 248, 250], "typic": [9, 10, 16, 23, 28, 46, 196, 255, 256, 257, 260, 270, 272, 276], "resourc": [9, 20, 28, 34, 55, 56, 58, 82, 83, 176, 222, 223, 264], "gcsf": 9, "azur": [9, 20, 25, 29, 45, 51, 219], "blob": [9, 51], "lake": [9, 55, 219], "gen2": 9, "abf": [9, 10, 86, 87, 219, 226, 227], "web": [9, 26, 41], "ssh": [9, 25, 32, 40], "ftp": 9, "webhdf": 9, "see": [9, 10, 11, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 28, 31, 34, 35, 39, 40, 41, 43, 45, 48, 50, 54, 64, 65, 73, 75, 76, 77, 78, 88, 89, 99, 121, 145, 149, 159, 163, 176, 186, 187, 212, 214, 215, 216, 217, 228, 229, 238, 242, 243, 244, 253, 255, 257, 260, 261, 262, 264, 265, 266, 268, 270, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283], "_arg": 9, "purpos": [9, 11, 15, 18, 19, 24, 25, 28, 32, 34, 36, 43, 46, 260, 270, 272], "third": [9, 10, 16, 24, 25, 40, 263, 274], "parti": [9, 10, 16, 40, 274], "read_excel": [9, 80, 220, 266, 275], "keyword": [9, 11, 14, 65, 97, 240, 254, 260, 261, 268, 272, 275], "equival": [9, 38, 84, 224, 268, 274, 275], "to_excel": [9, 80, 220, 275], "date_format": [9, 10, 79, 84, 218, 224], "y": [9, 10, 16, 20, 24, 25, 48, 52, 79, 80, 84, 93, 94, 218, 220, 224, 228, 233, 234, 261, 262, 265, 266, 268, 272, 274, 283], "m": [9, 10, 20, 25, 32, 35, 40, 48, 52, 79, 84, 218, 224, 228, 262, 265, 274], "d": [9, 10, 19, 22, 35, 52, 62, 64, 65, 79, 84, 192, 196, 218, 224, 228, 259, 261, 263, 264, 265], "h": [9, 10, 20, 35, 52, 79, 94, 218, 228, 234, 283], "decim": [9, 10, 79, 218], "fs_arg": [9, 10, 11, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250], "filesystem": [9, 10, 14, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 261, 266, 275], "open_args_load": [9, 10, 69, 71, 72, 74, 76, 77, 78, 84, 85, 88, 91, 92, 93, 94, 102, 103, 104, 105, 207, 210, 211, 213, 215, 216, 217, 224, 225, 228, 231, 232, 233, 234, 246, 247, 248, 250], "open_args_sav": [9, 10, 69, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 88, 91, 92, 93, 94, 102, 103, 104, 105, 207, 210, 211, 212, 213, 214, 215, 216, 217, 224, 225, 228, 231, 232, 233, 234, 246, 247, 248, 250], "gcsfilesystem": [9, 10, 11, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250], "test_dataset": [9, 10], "test_project": 9, "open": [9, 10, 11, 15, 18, 22, 23, 24, 25, 26, 31, 39, 40, 41, 43, 50, 56, 57, 69, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 88, 91, 92, 93, 94, 102, 103, 104, 105, 207, 210, 211, 212, 213, 214, 215, 216, 217, 224, 225, 228, 231, 232, 233, 234, 246, 247, 248, 250, 261, 264, 266, 268, 270, 273, 275, 280], "dure": [9, 10, 14, 20, 22, 24, 25, 34, 36, 41, 97, 98, 154, 155, 163, 196, 206, 240, 241, 243, 260], "respect": [9, 10, 11, 16, 19, 22, 35, 41, 52, 97, 219, 240, 243, 254, 257, 260], "utf": [9, 266], "encod": [9, 18, 266], "mode": [9, 10, 11, 13, 42, 56, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 84, 85, 88, 91, 92, 93, 94, 97, 102, 103, 104, 105, 154, 171, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 224, 225, 228, 231, 232, 233, 234, 238, 240, 243, 246, 247, 248, 250, 251, 255, 261, 264], "rb": [9, 10, 264], "usernam": [9, 10, 20, 25, 41, 206, 268, 278], "password": [9, 10, 20, 25, 39, 68, 95, 99, 206, 228, 237, 238, 242, 278], "your_bucket": [9, 10, 51, 56, 74, 79, 80, 81, 91, 97, 100, 213, 218, 220, 221, 231, 235, 240, 244, 249, 269], "receiv": [9, 10, 14, 20, 123, 140, 151, 154, 261], "__init__": [9, 11, 19, 20, 22, 24, 34, 51, 52, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 145, 176, 192, 196, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 259, 260, 272, 273], "basi": [9, 22, 84, 224, 236], "yyyi": [9, 11, 35, 184], "mm": [9, 11, 35, 184], "ddthh": [9, 11, 35, 184], "ss": [9, 11, 35, 184], "sssz": [9, 11, 35, 184], "particular": [9, 11, 19, 35, 54, 160, 163, 176, 268], "timestamp": [9, 14, 35, 41, 163, 184, 268], "extend": [9, 10, 11, 31, 35, 38, 42, 43, 50, 54, 55, 117, 118, 147, 255, 266, 270], "abstractversioneddataset": [9, 11], "constructor": [9, 11, 14, 22, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 136, 176, 190, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 244, 245, 246, 247, 248, 249, 250, 254, 260], "adapt": [9, 11, 20, 49, 50, 56, 193, 255, 257, 270], "_save": [9, 22, 206, 261], "_load": [9, 22], "obtain": [9, 11, 56, 65, 192, 268], "_get_save_path": [9, 11, 261], "_get_load_path": [9, 11], "verifi": [9, 11, 20, 23, 24, 25, 31, 32], "whether": [9, 11, 14, 27, 28, 29, 31, 50, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 154, 163, 176, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 257, 277, 280], "undergo": 9, "examin": [9, 30], "inspect": [9, 11, 255, 266, 275, 276], "inherit": [9, 264], "repositori": [9, 11, 15, 16, 17, 19, 20, 24, 30, 32, 33, 35, 38, 39, 40, 45, 48, 50, 133, 255, 259, 270], "check": [9, 14, 18, 19, 24, 25, 31, 34, 38, 39, 41, 42, 48, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 176, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 262, 264, 265, 276, 277, 278, 280], "encount": [9, 16, 40, 48], "implement": [9, 10, 14, 20, 23, 34, 36, 42, 43, 45, 51, 52, 56, 67, 112, 114, 121, 132, 149, 162, 165, 167, 168, 176, 198, 199, 200, 201, 261, 264, 272], "overrid": [9, 10, 11, 22, 45, 46, 62, 64, 257, 272], "summari": 9, "second": [9, 10, 20, 24, 25, 34, 49, 51, 68, 84, 192, 224, 238, 259, 262, 268, 272], "sampl": [9, 38, 50, 88, 89, 100, 228, 229, 244, 261, 268, 277], "prototyp": 9, "aw": [9, 16, 18, 28, 29, 32, 41, 176, 219, 259, 274], "my_bucket": [9, 56, 85, 225, 259], "overwritten": [9, 14], "detect": [9, 45, 257, 263], "gzip": [10, 70, 87, 208, 227], "airplan": [10, 84, 224], "pickledataset": [10, 13, 15, 19, 20, 272, 280], "06_model": [10, 13, 15, 23, 24, 25, 101, 245, 272, 280], "pkl": [10, 13, 15, 91, 231], "backend": [10, 31, 70, 91, 95, 208, 231, 237], "rocket": [10, 80, 220], "sheet_nam": [10, 80, 220], "sheet1": [10, 80, 220], "sheet2": [10, 80, 220], "sheet3": [10, 80, 220], "results_plot": 10, "matplotlibwrit": [10, 41, 283], "08_result": 10, "plot": [10, 55, 75, 94, 214, 234, 283], "output_1": 10, "jpeg": 10, "skateboard": 10, "hdfdataset": 10, "column": [10, 41, 70, 81, 87, 94, 98, 208, 209, 221, 227, 234, 241, 257, 261, 272, 273, 283], "length": [10, 38, 50, 249], "w": [10, 38, 69, 71, 74, 76, 77, 78, 84, 92, 93, 94, 102, 103, 104, 105, 207, 210, 213, 215, 216, 217, 224, 232, 233, 234, 246, 247, 248, 250, 261], "even": [10, 14, 16, 22, 24, 38, 41, 43, 257, 259, 260, 266, 281, 283], "dropna": [10, 195, 266, 273], "truck": [10, 87, 227], "disp": [10, 87, 227], "wt": [10, 87, 227], "categori": [10, 251, 259, 275], "file_schem": [10, 87, 227], "hive": [10, 87, 98, 227, 241], "has_nul": [10, 87, 227], "partition_on": [10, 87, 227], "weather": [10, 51, 56, 96, 97, 99, 238, 239, 240, 242], "header": [10, 56, 68, 97, 206, 240, 243, 259, 261], "inferschema": [10, 56, 97, 240], "index_col": [10, 228], "if_exist": [10, 89, 229, 269], "As": [10, 13, 14, 16, 18, 20, 23, 25, 28, 34, 38, 42, 56, 238, 253, 255, 259, 263, 265, 266, 267, 272], "explicitli": [10, 14, 35, 45, 70, 165, 194, 208, 253, 256, 260, 264, 268], "corn": [10, 68, 206], "yield": [10, 68, 206, 249, 261], "usda": [10, 68, 206], "us_corn_yield_data": 10, "apidataset": 10, "quickstat": [10, 68, 206], "nass": [10, 68, 206], "gov": [10, 68, 206], "usda_credenti": 10, "some_token": [10, 68, 206], "commodity_desc": [10, 68, 206], "statisticcat_d": [10, 68, 206], "agg_level_desc": [10, 68, 206], "2000": [10, 68, 206], "usda_credienti": 10, "auth": [10, 68, 82, 83, 206, 222, 223], "upload": [10, 16, 21], "dev_minio": 10, "localhost": [10, 31, 88, 89, 99, 228, 229, 242], "9000": 10, "easiest": [10, 11, 15, 65], "setup": [10, 23, 27, 32, 40, 41, 45, 55, 56, 171, 209, 251, 255, 266, 269], "docker": [10, 16, 18, 19, 21, 28, 29, 30, 32, 45, 255], "after": [10, 14, 15, 18, 19, 20, 24, 25, 28, 32, 34, 41, 43, 45, 51, 52, 53, 54, 56, 62, 64, 123, 151, 152, 153, 154, 155, 163, 192, 206, 253, 255, 257, 259, 261, 263, 266, 274, 281, 282], "p": [10, 11, 18, 20, 31, 35, 40], "minio_access_kei": 10, "minio_secret_kei": 10, "ml_model": 10, "dev_ab": [10, 87, 227], "account_nam": 10, "account_kei": 10, "accountnam": 10, "paramiko": 10, "instal": [10, 11, 15, 18, 20, 22, 26, 31, 39, 40, 45, 49, 50, 52, 54, 67, 190, 249, 255, 257, 259, 260, 268, 273, 274, 276, 277, 279, 280, 281, 283], "cool_dataset": 10, "sftp": 10, "remote_clust": 10, "cool_data": 10, "cluster_credenti": 10, "establish": [10, 16], "my_usernam": 10, "host_address": 10, "22": [10, 25, 38, 272, 273, 278], "factoris": 10, "mean": [10, 11, 14, 19, 20, 24, 26, 32, 34, 41, 45, 54, 56, 256, 261, 262, 263, 265, 270, 272, 274, 283], "generalis": [10, 12], "spend": 10, "copi": [10, 15, 16, 19, 20, 22, 23, 24, 40, 56, 62, 64, 65, 163, 176, 192, 196, 260, 261, 266, 270, 272, 280, 281, 283], "past": [10, 14, 16, 23, 39, 40, 272], "_csv": [10, 13], "block": [10, 42, 49, 261, 262, 270], "insert": [10, 36, 62, 64, 98, 219, 241], "ones": [10, 54, 196, 249], "seen": [10, 260, 266, 273, 283], "reuseabl": 10, "csv_load_arg": 10, "normal": [10, 14, 20, 28, 68, 98, 99, 241, 242], "re": [10, 11, 18, 19, 20, 22, 27, 28, 30, 32, 36, 40, 52, 163, 251, 260, 261, 264, 265, 266, 268, 277, 280, 282], "situat": [10, 13, 14, 16], "known": [10, 50, 255, 269, 276], "transcod": [10, 56, 192], "coordin": [10, 41], "my_datafram": 10, "my_func1": 10, "spark_input": 10, "my_func2": 10, "pipeline_output": 10, "execut": [10, 15, 16, 19, 20, 22, 23, 24, 25, 28, 31, 32, 34, 35, 38, 39, 40, 41, 42, 48, 49, 51, 52, 53, 56, 88, 98, 122, 148, 150, 163, 186, 191, 192, 196, 197, 206, 228, 241, 254, 259, 261, 262, 263, 264, 265, 268, 272, 273], "pyspark": [10, 14, 16, 55, 96, 97, 98, 99, 209, 239, 240, 241, 242, 251, 255, 264], "conf_root": [10, 35], "pipeline_nam": [10, 13, 16, 18, 19, 22, 31, 35, 40, 155, 163, 259, 260, 263, 268, 273], "mani": [11, 13, 14, 16, 19, 22, 25, 34, 35, 42, 45, 51, 56, 58, 260, 270, 272], "proprietari": [11, 275], "perhap": 11, "save": [11, 18, 22, 24, 25, 28, 32, 35, 38, 41, 43, 49, 52, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 151, 152, 163, 176, 184, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 259, 260, 265, 266, 268, 269, 270, 272, 273, 274, 280], "imag": [11, 18, 19, 24, 25, 28, 32, 39, 73, 75, 92, 212, 214, 232, 249, 280, 283], "submit": [11, 16, 22, 23, 31, 45, 56], "interfac": [11, 20, 23, 37, 42, 43, 55, 91, 95, 231, 237, 264, 274], "subclass": [11, 14, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257], "load": [11, 12, 13, 22, 23, 24, 25, 26, 31, 32, 35, 39, 40, 42, 43, 45, 46, 49, 52, 53, 55, 61, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 115, 144, 146, 151, 152, 154, 163, 176, 184, 185, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 256, 267, 268, 269, 270, 272, 273, 274, 280], "enrich": 11, "uniform": [11, 14, 59], "kaggl": 11, "pok\u00e9mon": 11, "classifi": [11, 24, 25, 50, 56], "water": 11, "fire": 11, "png": [11, 41, 73, 75, 92, 212, 214, 232, 283], "numpi": [11, 92, 100, 101, 195, 232, 244, 245, 249, 251, 261], "arrai": [11, 40, 100, 244], "manipul": [11, 35], "imagedataset": 11, "feel": [11, 41], "free": [11, 22, 27, 28, 41, 48, 58, 192, 194, 260], "pokemon": 11, "account": [11, 19, 20, 22, 23, 25, 32, 40, 51, 82, 83, 222, 223, 238, 259], "download": [11, 48, 266], "unzip": [11, 20], "compris": [11, 49, 50, 265, 266, 269], "plu": 11, "pillow": [11, 251], "consult": [11, 15, 17, 20, 21, 29, 30, 33, 51, 254, 273, 274], "experi": [11, 23, 26, 30, 45, 49, 55, 58, 103, 104, 247, 248, 267], "problem": [11, 20, 34, 48], "At": [11, 15, 24, 25, 40, 42, 43, 172, 255, 266], "abstract": [11, 42, 59, 198, 251, 266], "skeleton": [11, 273], "click": [11, 13, 16, 18, 19, 20, 23, 24, 25, 26, 31, 35, 39, 40, 41, 43, 48, 123, 134, 135, 260, 261, 262, 264, 265, 272, 273, 275, 281, 282, 283], "np": [11, 100, 101, 195, 244, 245, 249, 261], "ndarrai": 11, "img": [11, 249], "self": [11, 19, 20, 22, 31, 34, 36, 45, 51, 52, 54, 56, 60, 63, 136, 146, 164, 193, 261, 264], "arg": [11, 14, 18, 20, 22, 23, 31, 40, 41, 60, 63, 73, 75, 91, 95, 97, 136, 137, 140, 146, 164, 190, 193, 206, 212, 214, 231, 237, 240, 243, 259, 261, 264, 272, 273], "_filepath": [11, 52], "attribut": [11, 14, 18, 19, 34, 40, 62, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 129, 133, 145, 163, 170, 184, 192, 196, 199, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 268, 270, 275, 280, 281], "kedro_pokemon": 11, "image_dataset": 11, "mimic": 11, "codebas": [11, 29, 32, 41, 259, 260, 261, 272], "consist": [11, 14, 16, 20, 23, 24, 25, 38, 42, 53, 54, 262, 266, 272, 278], "particularli": [11, 22, 23, 36, 261, 267], "conveni": [11, 23, 24, 94, 234, 260], "conjunct": 11, "flexibli": 11, "pureposixpath": 11, "pil": [11, 92, 232, 249], "get_filepath_str": [11, 261], "get_protocol_and_path": 11, "_protocol": [11, 261], "_f": 11, "append": [11, 31, 39, 69, 75, 80, 207, 209, 214, 219, 220, 243, 249, 259, 261], "load_path": 11, "f": [11, 16, 18, 19, 20, 23, 24, 25, 38, 49, 51, 52, 62, 64, 65, 75, 214, 228, 259, 261, 264, 266, 275], "rgba": 11, "asarrai": [11, 249], "pikachu": 11, "Then": [11, 16, 20, 25, 31, 39, 40, 51, 52, 176, 261, 264, 266, 275, 277, 280, 281, 283], "launch": [11, 16, 26, 40, 255, 268], "preview": [11, 55, 279, 283], "fromarrai": [11, 249], "similarli": [11, 14, 265, 266, 268, 272, 273, 275], "save_path": [11, 261], "wb": [11, 72, 73, 75, 85, 91, 211, 212, 214, 225, 231, 264], "written": [11, 14, 18, 28, 34, 96, 97, 239, 264, 266, 268, 274], "back": [11, 14, 22, 48, 56, 198, 199, 200, 201, 266, 270, 274, 275, 276], "print": [11, 23, 24, 36, 39, 40, 45, 51, 190, 192, 261, 262, 265, 266, 268], "basic": [11, 12, 25, 28, 34, 38, 49, 50, 56, 255, 260, 266, 267, 274, 280], "current": [11, 14, 22, 45, 46, 48, 50, 54, 145, 163, 176, 184, 192, 194, 196, 219, 238, 253, 260, 263, 274, 281], "filename_suffix": [11, 14], "consol": [11, 16, 20, 40, 110, 268, 277], "len": [11, 19, 22, 262, 264, 265], "721": 11, "l": [11, 23, 24, 25], "la": 11, "wc": 11, "doesn": [11, 38, 56, 64, 71, 72, 73, 74, 79, 80, 81, 85, 86, 87, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 168, 176, 201, 210, 211, 212, 213, 218, 220, 221, 225, 226, 227, 230, 231, 232, 233, 234, 235, 245, 246, 247, 248, 250, 255, 259, 260, 264, 280], "super": [11, 19, 20, 22, 65, 260], "exists_funct": 11, "glob_funct": 11, "glob": [11, 64, 65], "_version": 11, "NOT": [11, 98, 241, 266], "initi": [11, 16, 31, 46, 145, 266], "2020": [11, 14, 20, 264], "02": [11, 272], "22t00": 11, "00": 11, "000z": 11, "mv": 11, "backup": 11, "mkdir": [11, 15, 20, 34, 48], "shell": [11, 34, 35, 38, 40, 48, 268], "sequentialrunn": [11, 19, 22, 35, 265, 272], "parallelrunn": [11, 268, 272], "fulli": [11, 14, 16, 17, 21, 27, 33, 176, 192, 256], "serialis": [11, 22, 46, 56, 91, 95, 231, 237, 264], "multiprocess": [11, 20, 270, 272], "closur": 11, "decor": [11, 51, 54, 137], "functool": 11, "explan": 11, "apach": [11, 16, 45, 87, 97, 98, 99, 227, 240, 241, 242, 243], "parallel": [11, 18, 19, 20, 22, 41, 199, 201, 264, 270, 272, 276], "therefor": [11, 18, 19, 23, 24, 43, 56, 82, 145, 163, 222, 253], "leverag": [11, 19, 42, 52, 98, 241], "threadrunn": [11, 16, 19, 55, 264, 272], "dump": [11, 74, 91, 95, 103, 104, 105, 206, 213, 231, 237, 247, 248, 250, 264], "reduct": 11, "forkingpickl": 11, "_data_set": 11, "shouldn": 11, "sit": 11, "your_credenti": 11, "arg_1": 11, "One": [11, 34, 49, 192, 265, 266, 269], "plugin": [11, 15, 19, 28, 32, 34, 35, 40, 41, 42, 43, 44, 55, 56, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 263, 273, 274], "complex": [11, 16, 27, 68, 206, 255, 260, 264, 267, 270, 272], "accompani": 11, "coverag": [11, 35], "main": [11, 16, 18, 23, 24, 25, 30, 42, 45, 49, 53, 145, 186, 219, 253, 260, 261, 270, 272, 274], "branch": [11, 20, 41, 45, 48, 255, 264, 272], "special": [11, 34, 80, 220, 261, 262], "consider": 11, "rst": [11, 274], "static": [11, 24, 35, 39, 40, 253, 260, 272, 282, 283], "jsonschema": [11, 39, 40], "introduct": [12, 55, 265, 270, 274], "onc": [12, 15, 19, 22, 23, 24, 25, 32, 34, 35, 41, 45, 48, 50, 52, 75, 214, 268, 272, 273, 274, 282], "familiar": [12, 50, 267, 276, 280], "repetit": 12, "concept": [12, 47, 50, 55, 58, 261, 266, 276, 280], "partit": [12, 45, 55, 87, 97, 98, 209, 219, 227, 240, 241, 243], "increment": [12, 55, 256, 266, 267], "hand": [12, 20, 39, 40, 41, 49, 50, 58, 263], "conclud": 12, "factory_data": 13, "process_data": 13, "_data": 13, "enclos": 13, "three": [13, 27, 32, 41, 49, 50, 209, 255, 261, 266, 272, 273, 275, 277], "plane": [13, 176], "dataset_nam": [13, 35, 51, 52, 152], "project_nam": [13, 20, 31, 32, 42, 43, 50, 170, 254, 255], "suffix": [13, 14], "intend": [13, 34, 35, 43, 272], "create_model_input_t": [13, 266, 272, 273], "preprocess_compani": [13, 41, 266, 272, 273], "preprocess_shuttl": [13, 266, 272, 273], "create_pipelin": [13, 56, 159, 260, 263, 272, 273, 283], "kwarg": [13, 20, 45, 56, 68, 94, 98, 137, 138, 142, 190, 234, 241, 272, 273, 283], "preprocess_boat": 13, "preprocessed_boat": 13, "preprocess_boats_nod": 13, "preprocess_car": 13, "preprocessed_car": 13, "preprocess_cars_nod": 13, "preprocess_plan": 13, "preprocessed_plan": 13, "preprocess_planes_nod": 13, "model_input_t": [13, 19, 20, 266, 272, 273, 277, 280], "create_model_input_table_nod": [13, 272, 273, 280], "belong": 13, "modular": [13, 45, 46, 49, 55, 57, 159, 193, 251, 258, 259, 262, 268, 273], "regressor": [13, 19, 20, 41, 266, 272, 280], "active_modelling_pipelin": [13, 272], "candidate_modelling_pipelin": [13, 272], "modular_pipelin": [13, 260, 272], "evaluate_model": [13, 41, 266, 272], "split_data": [13, 50, 52, 261, 266, 268, 272], "pipeline_inst": [13, 272], "x_train": [13, 19, 20, 52, 261, 266, 268, 272], "y_train": [13, 19, 20, 52, 261, 266, 268, 272], "split_data_nod": [13, 272], "train_model_nod": [13, 272], "ds_pipeline_1": [13, 272], "pipe": [13, 194, 260, 272], "ds_pipeline_2": [13, 272], "regressor_": 13, "pq": [13, 273, 280], "metric": [13, 23, 26, 53, 55, 104, 248, 261, 266, 272], "bodi": 13, "overcom": 13, "sort": [13, 14, 38, 176, 192, 200], "potenti": [13, 16, 24, 38], "best": [13, 27, 28, 35, 42, 48, 50, 56, 57, 84, 209, 224, 236, 266, 270], "criteria": [13, 176], "charact": [13, 50, 255, 259, 260, 262, 264, 266], "preprocess": [13, 41, 261], "alphabet": [13, 38, 54], "catch": [13, 24, 38], "default_dataset": 13, "mention": [13, 16, 35], "explicit": [13, 14, 35], "non": [13, 15, 16, 45, 46, 54, 55, 88, 91, 95, 228, 231, 237, 264], "preprocessed_": 13, "processed_": 13, "_pq": 13, "descend": 13, "four": [13, 19, 24, 25], "decreas": 13, "preprocessed_compani": [13, 19, 20, 41, 52, 266, 272, 273, 277, 280], "preprocess_companies_nod": [13, 41, 272, 273], "preprocessed_shuttl": [13, 19, 20, 266, 272, 273, 280, 283], "preprocess_shuttles_nod": [13, 272, 273], "termin": [13, 23, 24, 25, 31, 35, 39, 40, 41, 48, 50, 261, 265, 268, 272, 273, 275, 276, 278, 280, 281, 282, 283], "wish": [13, 45, 50, 219, 254, 257, 268, 274], "redirect": [13, 190], "output_fil": 13, "plai": [14, 28, 40, 41], "increasingli": [14, 34], "role": [14, 16], "etl": [14, 23], "increas": [14, 56, 260, 267, 270, 272], "throughput": 14, "larger": [14, 34, 41, 199, 281, 283], "aris": 14, "tool": [14, 15, 26, 30, 34, 35, 40, 41, 45, 53, 251, 254, 259, 261, 278], "cater": 14, "why": [14, 266, 268], "agnost": [14, 18, 30], "until": [14, 19, 40], "callabl": [14, 31, 122, 150, 195, 196], "individu": [14, 28, 38, 51, 276], "my_partitioned_dataset": 14, "my_credenti": [14, 51], "load_arg1": 14, "load_arg2": 14, "value2": [14, 35, 187], "programmat": [14, 18, 19, 23, 28, 31, 265], "granular": 14, "delimit": 14, "filepath_arg": 14, "exhaust": [14, 91, 95, 231, 237], "descript": [14, 20, 34, 35, 40, 46, 50, 59, 61, 66, 67, 106, 107, 108, 109, 111, 112, 113, 114, 117, 118, 121, 122, 124, 126, 128, 130, 131, 132, 134, 144, 147, 148, 149, 150, 156, 161, 162, 165, 167, 169, 172, 185, 189, 191, 192, 197, 203, 205, 219, 255, 260, 261, 268, 272], "ye": [14, 228], "concret": [14, 54, 69, 70, 71, 72, 74, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 102, 103, 104, 105, 176, 207, 208, 210, 211, 213, 218, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 246, 247, 248, 250], "No": [14, 39, 261, 277], "filesystemcal": 14, "empti": [14, 19, 24, 62, 64, 65, 82, 88, 89, 99, 192, 222, 228, 229, 242, 255, 268], "end": [14, 19, 20, 30, 35, 41, 43, 51, 52, 56, 163, 176, 192, 228, 261, 265, 268], "qualifi": [14, 176, 192], "dataset_credenti": 14, "somewhat": 14, "itself": [14, 42, 56, 82, 222, 260], "around": [14, 41, 54], "never": [14, 46], "propag": [14, 257], "scenario": [14, 16, 56, 192], "undefin": [14, 35, 40], "without": [14, 15, 16, 20, 22, 23, 24, 46, 91, 98, 159, 160, 176, 194, 231, 241, 253, 257, 261, 263, 264, 266, 268, 269, 270, 277], "dataset_secret": 14, "stop": [14, 23, 24, 39, 40, 52, 129, 170, 184], "concat_partit": 14, "concatenated_result": 14, "partitioned_input": 14, "concaten": 14, "repres": [14, 41, 196, 255, 260, 261, 262], "partition_kei": 14, "partition_load_func": 14, "item": [14, 18, 34, 51, 52, 56, 62, 64, 65, 187, 261, 262], "partition_data": 14, "actual": [14, 22, 36, 41, 152, 154, 257, 260, 264, 283], "concat": [14, 261], "ignore_index": 14, "consum": [14, 34, 36, 38, 52, 192, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 260, 264], "go": [14, 16, 18, 19, 20, 23, 27, 28, 32, 39, 40, 41, 50, 102, 246, 255, 266, 283], "uniqu": [14, 19, 41, 176, 192, 196, 219], "2019": [14, 277], "04": [14, 24, 266, 277], "cach": [14, 20, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 176, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "complet": [14, 16, 19, 20, 22, 23, 24, 25, 35, 38, 41, 50, 52, 56, 98, 123, 241, 261, 263, 272, 273, 274, 276, 278, 280, 282], "deliber": 14, "guarante": [14, 18, 29, 48, 54, 196, 265], "race": 14, "condit": [14, 192, 209], "reset": 14, "new_partitioned_dataset": 14, "create_partit": 14, "foo": [14, 35], "bar": [14, 19, 23, 24, 25, 35, 93, 94, 233, 234, 283], "lost": [14, 45], "simplest": [14, 34, 50, 257], "safeti": 14, "mechan": [14, 43, 45, 53, 54, 256, 264, 270], "chanc": [14, 56], "materialis": 14, "simpli": [14, 34, 39, 45, 48, 56, 259, 261, 266, 268, 270, 274], "after_node_run": [14, 51, 52, 54, 154], "hook": [14, 22, 31, 34, 35, 36, 42, 43, 55, 145, 163, 198, 199, 200, 201, 202, 209, 254, 255, 273], "incrementaldataset": 14, "address": [14, 22, 25, 35, 40, 259, 282], "subsequ": [14, 41, 50, 256, 257, 268], "persist": [14, 15, 20, 165, 166, 167, 168, 253, 264, 270, 273], "eagerli": [14, 160], "pointer": 14, "relev": [14, 32, 35, 54, 75, 214, 261, 268, 277, 282], "comparison": [14, 41, 50, 266], "ident": [14, 32, 51, 190, 264, 268, 269], "successfulli": [14, 18, 19, 22, 23, 24, 25, 34, 272, 273, 277], "downstream": [14, 56, 194, 251, 260, 265], "process_partit": 14, "my_processed_dataset": 14, "defer": 14, "someth": [14, 40, 54, 270, 277], "els": [14, 19, 22, 35, 40, 52, 259, 261], "confirm_partit": 14, "do_something_else_with_partit": 14, "though": [14, 16, 25], "extern": [14, 18, 19, 98, 99, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 260], "won": [14, 19], "next": [14, 19, 20, 22, 24, 25, 39, 41, 48, 49, 55, 255, 264, 268, 272, 273, 280], "deviat": 14, "sai": [14, 51, 268, 277], "permiss": [14, 16, 25], "undesir": 14, "partial": [14, 16], "kept": 14, "rest": [14, 16, 20, 23, 24, 25, 50, 140, 206, 266, 278], "unchang": [14, 206], "k1": 14, "v1": [14, 18], "along": [14, 16, 38, 41, 88, 89, 99, 154, 155, 195, 196, 228, 229, 242, 274], "comparison_func": 14, "gt": 14, "compar": [14, 30, 34, 50, 55, 264], "Such": 14, "posit": [14, 32, 41, 187], "filtrat": 14, "window": [14, 25, 35, 39, 40, 48, 50, 51, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 259, 265, 268, 273, 278, 280, 281, 282, 283], "calendar": 14, "my_modul": 14, "custom_comparison_funct": 14, "force_checkpoint": 14, "roll": [14, 48], "reprocess": 14, "forc": 14, "popular": [15, 25, 34], "suitabl": [15, 16, 100, 244, 257], "orchestr": [15, 18, 20, 30, 31, 35, 268], "author": [15, 51, 259], "k8": [15, 45], "togeth": [15, 35, 36, 38, 52, 192, 219, 262, 263, 273, 276], "present": [15, 26, 39, 46, 52, 62, 64, 65, 98, 129, 170, 176, 184, 195, 196, 209, 241, 255, 259, 265], "deploi": [15, 18, 27, 28, 29, 30, 31, 32, 40, 255, 274], "spin": 15, "easili": [15, 18, 38, 54, 259, 278], "iri": [15, 23, 24, 25, 26, 45, 255, 261, 269], "classif": [15, 50, 56], "astro": [15, 255], "starter": [15, 20, 23, 24, 25, 34, 41, 43, 46, 50, 55, 209, 252, 260, 261, 263, 268, 269, 272, 273, 275, 277, 278, 280, 281, 282, 283], "boilerpl": [15, 42, 255, 260, 270], "task": [15, 18, 20, 22, 23, 24, 25, 28, 31, 52, 251, 261, 262, 266, 272, 273, 276], "mirror": [15, 20, 34], "principl": [15, 20], "quickstart": [15, 68, 274], "dev": [15, 20, 65], "init": [15, 16, 25, 31, 45], "creation": [15, 23, 25, 41, 50, 151, 159, 196], "cp": [15, 23, 24, 25], "rm": [15, 16], "dockerfil": [15, 16, 20], "airflow_set": 15, "txt": [15, 20, 24, 25, 28, 32, 35, 38, 41, 50, 102, 141, 246, 251, 255, 259, 260, 277, 278, 280, 282, 283], "pyproject": [15, 32, 34, 35, 38, 42, 45, 48, 49, 170, 254, 255, 259], "toml": [15, 32, 34, 35, 38, 42, 45, 48, 49, 170, 254, 255, 259], "flake8": [15, 24, 35, 49, 255, 278], "example_iris_data": [15, 52, 264, 268], "example_train_x": [15, 268], "05_model_input": [15, 23, 24, 25, 261], "example_train_i": 15, "example_test_x": 15, "example_test_i": 15, "example_model": [15, 52], "example_predict": [15, 56], "07_model_output": [15, 23, 24, 25, 91, 231, 261, 264, 265], "memori": [15, 19, 20, 36, 88, 176, 228, 261, 264, 273], "disk": [15, 163, 166, 253, 264, 265], "wheel": [15, 23, 32, 274], "new_kedro_project": 15, "py3": [15, 20, 259], "dockerignor": 15, "bundl": [15, 20, 35, 274], "echo": [15, 18, 35], "quai": 15, "ap": 15, "buster": [15, 20], "onbuild": 15, "target": [15, 20, 29, 35, 39, 84, 98, 224, 236, 241, 255, 259, 261, 272], "visit": [15, 20, 36, 40, 43, 45, 56, 122, 150, 192, 264], "ui": [15, 24, 25, 31], "workload": [16, 19], "Its": [16, 45], "architectur": [16, 44, 55, 56], "elimin": 16, "provis": [16, 20, 23], "independ": [16, 41, 42, 192, 272], "alloc": 16, "elast": [16, 20, 28], "mapreduc": 16, "tradition": 16, "bootstrap": [16, 31, 255], "action": [16, 43, 56, 219, 257, 268, 272], "sometim": [16, 43, 56, 257, 260, 261, 265, 266], "complic": [16, 68, 262], "11": [16, 24, 25, 48, 219, 264, 272, 273, 278], "driver": [16, 56, 70, 72, 99, 208, 211, 228, 242], "worker": [16, 19, 22, 199, 201], "limit": [16, 18, 176, 251, 263, 264, 282], "prone": 16, "difficult": 16, "solut": [16, 18, 19, 20, 28, 30, 32, 34, 41, 266, 269], "With": [16, 23, 24, 25, 39, 257, 261, 268], "immut": 16, "runtim": [16, 20, 23, 24, 25, 51, 192, 253, 260, 270], "failur": 16, "misconfigur": 16, "portabl": [16, 270, 272], "repeat": [16, 24, 25, 34, 41, 266], "reliabl": [16, 20, 270], "improv": [16, 20, 24, 41, 46], "pyenv": 16, "public": [16, 32, 40], "ecr": [16, 19, 20, 32], "AS": 16, "yum": 16, "gcc": [16, 20], "patch": [16, 20], "zlib": 16, "devel": 16, "bzip2": 16, "readlin": 16, "openssl11": 16, "tk": 16, "libffi": 16, "xz": 16, "pyenv_root": 16, "usr": [16, 20], "shim": 16, "bin": [16, 20, 48], "python_vers": 16, "16": [16, 34, 265, 272, 273, 278], "desir": [16, 160, 257, 265], "global": [16, 20, 24, 25, 32, 46, 56, 65, 120, 148, 266, 276], "curl": 16, "bash": [16, 32, 35], "eval": [16, 35], "kedro_packag": 16, "package_wheel_nam": 16, "tmp": [16, 73, 212], "upgrad": [16, 24, 40, 251, 254], "home": [16, 20, 34, 40, 50], "sy": [16, 36, 39, 40, 52, 110], "__main__": [16, 18, 23, 31, 34, 40, 42, 255, 274], "argv": 16, "studio": [16, 37, 55], "correct": [16, 19, 20, 23, 45, 48, 268, 282], "region": [16, 19, 20, 282], "x86_64": 16, "choos": [16, 19, 22, 25, 27, 39, 40, 45, 48, 50, 58, 254, 264, 268, 276], "simplic": 16, "executor": 16, "uri": 16, "polici": [16, 19, 71, 210, 282], "grant": [16, 19], "left": [16, 19, 24, 39, 40, 41, 58, 282], "edit": [16, 24, 25, 39, 40, 41, 251, 254], "enter": [16, 23, 24, 25, 39, 40, 50, 255, 273, 274, 280, 281, 282, 283], "arn": 16, "sourcearn": 16, "util": [16, 35, 42, 73, 148, 212, 259, 266], "prevent": [16, 49, 56, 262], "rebuild": 16, "push": [16, 19, 20, 32], "restart": [16, 268, 277], "reflect": [16, 24, 280], "fact": 16, "pool": [16, 19, 31], "warm": 16, "capac": [16, 275, 283], "readi": [16, 18, 19, 20, 22, 27, 45, 50, 57, 176, 266, 280, 281, 282, 283], "entrypointargu": 16, "sparksubmitparamet": 16, "disregard": 16, "subprocess": [16, 142], "sparksubmit": 16, "runner": [16, 23, 24, 25, 31, 35, 42, 56, 154, 155, 163, 261, 265, 268, 273, 277], "driverenv": 16, "pyspark_driver_python": 16, "pyspark_python": 16, "executorenv": 16, "virtual": [16, 22, 34, 40, 50, 251, 273], "worth": [16, 20], "ami": 16, "explor": [16, 39, 41, 47, 58, 266, 267, 273], "yet": [16, 19, 20, 25, 176, 268, 280, 281, 282, 283], "difficulti": 16, "venv": [16, 25, 48], "pack": 16, "too": [16, 19, 35, 38, 56, 187, 257, 268], "symbol": [16, 50], "link": [16, 23, 25, 26, 35, 41, 266, 270], "symlink": 16, "deploy": [16, 21, 22, 24, 25, 27, 30, 31, 39, 45, 55, 58, 255], "machin": [16, 17, 18, 20, 22, 23, 24, 26, 28, 29, 30, 31, 39, 41, 45, 46, 48, 49, 50, 53, 199, 259, 261, 270, 273, 274, 280], "direct": [16, 18, 48, 192, 277], "node_nam": [16, 19, 20, 22, 28, 35, 155, 163, 192, 268], "abstractrunn": [16, 22, 199, 200, 201, 264, 268], "suit": [16, 23, 52], "compon": [17, 18, 30, 35, 42, 43, 45, 54, 111, 203, 253, 254, 255, 268, 272], "toolset": 17, "classic": 17, "scikit": [17, 244, 272, 276, 278], "xgboost": 17, "deep": [17, 56], "tensorflow": [17, 21], "pytorch": [17, 21], "servic": [17, 19, 20, 23, 33, 45, 70, 208], "tell": [18, 19, 40, 260], "took": [18, 19], "job": [18, 24, 27, 28, 56], "interest": 18, "intens": [18, 28], "acycl": 18, "graph": [18, 41, 76, 77, 78, 192, 215, 216, 217, 283], "dag": [18, 28, 56], "place": [18, 19, 23, 31, 34, 35, 38, 56, 256, 259, 260, 266, 273, 274, 280, 281, 282, 283], "walk": [18, 19, 28, 32, 39, 46], "streamlin": [18, 19, 28, 32], "ve": [18, 19, 28, 32, 50, 254, 262, 266, 268, 280, 281], "transfer": [18, 19, 28, 32, 209], "script": [18, 19, 22, 23, 28, 31, 32, 39, 40, 41, 43, 48, 185, 255], "build_argo_spec": 18, "jinja2": [18, 46], "filesystemload": 18, "startup": [18, 20, 31, 45, 163, 253], "bootstrap_project": [18, 20, 31, 163, 253], "template_fil": 18, "argo_spec": 18, "tmpl": 18, "search_path": 18, "generate_argo_config": 18, "searchpath": 18, "template_env": 18, "trim_block": 18, "lstrip_block": 18, "get_templ": 18, "cwd": [18, 20, 31, 34, 45, 163, 253], "metadata": [18, 20, 31, 41, 42, 45, 123, 169, 170, 171, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 268, 270, 280, 281, 283], "__default__": [18, 20, 31, 35, 45, 163, 263, 264, 268, 272, 274, 280], "get_depend": 18, "node_depend": [18, 19, 22, 28, 192], "render": [18, 257, 260, 272, 280], "write_text": 18, "deps_dict": 18, "clean_nam": 18, "dep": [18, 19], "val": 18, "parent_nod": 18, "sub": [18, 20, 62, 64, 270], "w_": [18, 20], "strip": [18, 20, 196, 257], "__name__": [18, 23, 31, 41, 51, 52, 54, 192, 257, 261, 272], "apivers": 18, "argoproj": 18, "v1alpha1": 18, "kind": [18, 40, 42, 261, 269], "generatenam": 18, "entrypoint": [18, 20, 54], "label": [18, 40, 45, 100, 244, 255, 261, 272, 280], "abil": [18, 20], "pod": 18, "app": [18, 20, 35, 41, 95, 237], "retrystrategi": 18, "kedro_nod": 18, "imagepullpolici": 18, "valuefrom": 18, "secretkeyref": 18, "access_key_id": 18, "secret_access_kei": 18, "n": [18, 19, 22, 24, 25, 35, 51, 69, 207, 262, 264, 265, 268, 274], "endraw": 18, "endif": 18, "jinja": 18, "languag": [18, 28, 40, 58, 274], "final": [18, 20, 23, 32, 39, 41, 51, 192, 264, 267, 268, 270, 274], "helper": [18, 19, 22, 124, 193, 203, 261], "project_imag": 18, "base64": 18, "opaqu": 18, "original_kei": 18, "namespac": [18, 35, 51, 52, 54, 65, 123, 151, 152, 153, 154, 155, 163, 192, 194, 195, 196, 260, 262, 263], "kubectl": 18, "watch": [18, 24, 48], "delet": [18, 56, 68, 219, 256, 257, 260, 278], "selector": 18, "workabl": 18, "optimis": [19, 27, 56], "scale": [19, 30, 41, 260], "optim": [19, 56, 268], "quantiti": 19, "assist": 19, "schedul": [19, 22, 23, 27, 30, 45, 56], "demand": 19, "spot": 19, "cloudwatch": 19, "massiv": 19, "parallelis": [19, 272], "isol": [19, 48, 260, 270, 272], "sensibl": [19, 254, 255], "aws_batch": 19, "appropri": [19, 39, 40, 51, 84, 136, 176, 193, 219, 224, 236, 260, 263, 268], "x_test": [19, 20, 41, 52, 261, 266, 268, 272], "y_test": [19, 20, 41, 52, 261, 266, 268, 272], "view": [19, 23, 25, 39, 40, 46, 55, 62, 64, 65, 268, 280, 281, 282, 283], "button": [19, 23, 25, 31, 39, 40, 41, 281, 283], "corner": [19, 23, 39], "dashboard": [19, 22, 46], "abl": [19, 20, 23, 28, 39, 40, 54, 84, 197, 224, 264, 266, 272, 274, 276], "amazons3fullaccess": 19, "newli": [19, 22, 23, 24, 40, 261], "batchjobrol": 19, "kedro_run": 19, "assign": [19, 55, 196, 263], "timeout": [19, 20, 68, 206], "300": 19, "2000mb": 19, "leav": [19, 23, 24, 31, 40], "field": [19, 23, 24, 25, 39, 40, 70, 129, 133, 170, 184, 208, 209, 219], "spaceflights_env": 19, "incur": 19, "immedi": 19, "bridg": 19, "spaceflights_queu": 19, "maintain": [19, 20, 34, 35, 38, 42, 57, 255, 260, 266, 270, 272], "ll": [19, 22, 24, 25, 40, 48, 266, 268, 274, 281, 282, 283], "kedro_tutori": [19, 22, 273], "batch_runn": 19, "awsbatchrunn": 19, "monitor": [19, 22, 31, 41, 255], "asynchron": [19, 22, 35, 198, 199, 200, 201, 202], "surfac": [19, 22, 160], "occur": [19, 22, 36, 45, 56, 146], "__all__": [19, 22], "concurr": [19, 55, 264, 270], "threadpoolexecutor": 19, "sleep": 19, "boto3": 19, "max_work": [19, 199, 201], "job_queu": 19, "job_definit": 19, "is_async": [19, 22, 35, 154, 198, 199, 200, 201, 202], "bool": [19, 22, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 163, 176, 192, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "_job_queu": 19, "_job_definit": 19, "_client": [19, 52], "client": [19, 20, 22, 46, 51, 95, 97, 237, 240], "create_default_data_set": [19, 22, 198, 199, 200, 201, 264], "ds_name": [19, 22, 31, 198, 199, 200, 201, 264], "notimplementederror": 19, "_get_required_workers_count": 19, "_max_work": 19, "_run": [19, 22, 264], "pylint": [19, 24, 35, 38, 45], "disabl": [19, 35, 38, 45, 254], "useless": 19, "suppress": 19, "hook_manag": [19, 22, 34, 145, 148, 198, 199, 200, 201, 202, 264], "pluginmanag": [19, 22, 145, 198, 199, 200, 201, 202, 264], "session_id": [19, 22, 31, 52, 154, 155, 163, 166, 168, 198, 199, 200, 201, 202, 264], "todo_nod": 19, "node_to_job": 19, "done_nod": 19, "_logger": [19, 22, 51, 54, 264], "info": [19, 22, 23, 24, 25, 31, 35, 41, 45, 48, 51, 52, 54, 110, 160, 192, 257, 261, 264, 266, 268, 272, 273, 275, 277], "max": [19, 38, 41], "reach": [19, 45, 260, 273], "fail": [19, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 159, 176, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 263], "succeed": [19, 23], "fut": 19, "_suggest_resume_scenario": 19, "upstream": [19, 22, 25, 194], "_submit_job": 19, "break": [19, 27, 34, 38, 39, 48, 260, 261, 268], "referenc": 19, "track": [19, 22, 23, 25, 30, 35, 45, 46, 53, 55, 257], "progress": [19, 23, 257, 273], "job_nam": 19, "kedro_": [19, 268], "depends_on": 19, "jobid": 19, "respons": [19, 42, 50, 68, 161, 162, 163, 206, 260, 266], "submit_job": 19, "jobnam": 19, "jobqueu": 19, "jobdefinit": 19, "dependson": [19, 40], "containeroverrid": 19, "job_id": 19, "_track_batch_job": 19, "finish": [19, 20, 22, 23, 24, 25, 39, 52, 265, 275], "poll": 19, "statu": [19, 23], "bombard": 19, "throttl": 19, "describe_job": 19, "statusreason": 19, "prerequist": 19, "nearli": [19, 22], "tag": [19, 20, 22, 28, 32, 45, 51, 155, 163, 192, 194, 195, 196, 255, 264], "_get_values_as_tupl": [19, 22, 35], "kedrosess": [19, 20, 22, 23, 31, 35, 45, 55, 161, 164, 252, 268], "extra_param": [19, 22, 35, 145, 155, 163, 188, 253], "load_context": [19, 22, 31, 45, 163, 253], "runner_inst": [19, 22], "_instantiate_runn": [19, 22], "from_nod": [19, 22, 35, 155, 163, 192, 264, 265, 268, 270], "to_nod": [19, 22, 35, 155, 163, 192, 265, 268, 270], "from_input": [19, 22, 35, 155, 163, 192, 265, 268, 270], "to_output": [19, 22, 35, 155, 163, 192, 268], "load_vers": [19, 22, 35, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 151, 155, 163, 176, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 268], "project_context": [19, 22, 34], "runner_class": [19, 22], "load_obj": [19, 22, 35], "runner_kwarg": [19, 22], "endswith": [19, 22], "batch_kwarg": 19, "runnabl": [19, 192, 266], "tab": [19, 23, 24, 25, 26, 41, 50, 268, 273, 280], "pop": [19, 23, 62, 64, 65], "panel": [19, 24, 41, 280, 281, 283], "side": [19, 24, 25, 35, 39, 40, 41, 256, 270], "serverless": [20, 29], "scientist": [20, 46, 270], "focu": [20, 22], "busi": [20, 261], "capabl": [20, 27, 41, 176, 257], "easi": [20, 28, 31, 38, 49, 53, 59, 269, 270], "sequenc": [20, 23, 43, 69, 207, 249], "critic": [20, 110], "perspect": 20, "retain": [20, 49], "concern": [20, 270], "advantag": [20, 24, 25, 27, 42, 43, 49, 51, 56, 257, 260, 266, 267, 272], "kit": 20, "cdk": 20, "npm": 20, "associ": [20, 35, 176, 276], "laid": 20, "visualis": [20, 27, 41, 45, 52, 55, 58, 195, 196, 260, 262, 268, 270, 276, 278, 282], "decemb": 20, "announc": 20, "gb": 20, "besid": [20, 21], "few": [20, 34, 36, 38, 41, 43, 50, 190], "compli": 20, "lambda_handl": 20, "unittest": 20, "mock": [20, 278], "handler": [20, 108, 109, 110, 189, 190], "event": [20, 41], "configure_project": [20, 23], "spaceflights_step_funct": 20, "node_to_run": 20, "_multiprocess": 20, "semlock": 20, "impact": [20, 38], "henc": [20, 41, 100, 244], "lock": [20, 35, 251], "stackoverflow": 20, "34005930": 20, "accordingli": 20, "function_dir": 20, "runtime_vers": 20, "grab": 20, "fresh": 20, "cpp": 20, "apt": 20, "cmake": 20, "libcurl4": 20, "openssl": 20, "awslambdar": 20, "workdir": 20, "cmd": [20, 23, 35, 40], "dkr": 20, "amazonaw": 20, "login": [20, 23, 68, 206], "stdin": 20, "deploy_requir": 20, "aws_cdk": 20, "aws_s3": 20, "aws_ecr": 20, "aws_lambda": 20, "stepfunct": 20, "aws_stepfunct": 20, "sfn": 20, "ifunct": 20, "aws_stepfunctions_task": 20, "lambdainvok": 20, "_clean_nam": 20, "reformat": [20, 38], "63": 20, "kedrostepfunctionsstack": 20, "stack": [20, 22, 36, 255], "erc_repository_nam": 20, "s3_data_bucket_nam": 20, "_parse_kedro_pipelin": 20, "_set_ecr_repositori": 20, "_set_ecr_imag": 20, "_set_s3_data_bucket": 20, "_convert_kedro_pipeline_to_step_functions_state_machin": 20, "ecr_repositori": 20, "from_repository_nam": 20, "repository_nam": 20, "ecr_imag": 20, "ecrimagecod": 20, "s3_bucket": 20, "rawdatabucket": 20, "_convert_kedro_node_to_lambda_funct": 20, "_fn": 20, "from_imag": 20, "function_nam": 20, "memory_s": 20, "256": 20, "reserved_concurrent_execut": 20, "durat": [20, 98, 241], "15": [20, 265, 272, 275, 281], "60": [20, 68, 206, 272], "grant_read_writ": 20, "_convert_kedro_node_to_sfn_task": 20, "lambda_funct": 20, "payload": [20, 68], "taskinput": 20, "from_object": 20, "enumer": [20, 22], "grouped_nod": [20, 31, 192], "group_nam": 20, "sfn_state": 20, "sfn_task": 20, "statemachin": 20, "synth": 20, "python3": [20, 38, 48], "straightforward": [20, 49], "e2": [20, 30, 261], "speak": 20, "dramat": 20, "minut": [20, 23, 68, 276], "10gb": 20, "maximum": 20, "switch": [20, 27, 257, 267, 268], "batch": [20, 28, 29, 52, 56, 261, 274], "ec": 20, "fashion": [21, 33], "mpi": 21, "compos": [22, 255], "sophist": 22, "newer": [22, 48, 254], "workstat": 22, "vari": [22, 25, 46, 254], "hardwar": 22, "lightweight": [22, 41, 269], "complement": 22, "pydata": [22, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230], "analysi": [22, 46, 267], "pure": [22, 49, 107, 264, 266, 270], "eas": [22, 36, 45], "simplifi": [22, 28, 260], "motiv": 22, "peopl": [22, 34], "beyond": [22, 259, 260, 274], "dask_runn": 22, "daskrunn": 22, "inter": 22, "counter": 22, "itertool": 22, "chain": [22, 36, 192, 262], "as_complet": 22, "worker_cli": 22, "_create_hook_manag": [22, 31, 34], "_register_hook": 22, "_register_hooks_setuptool": 22, "run_nod": [22, 31, 154], "pluggi": [22, 45, 54, 121, 122, 149, 150, 264], "_daskdataset": 22, "publish": [22, 45, 55, 259, 279], "_name": 22, "get_dataset": 22, "upon": [22, 159, 276], "oppos": [22, 253, 257], "publish_dataset": 22, "_exist": [22, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "list_dataset": 22, "_releas": 22, "unpublish_dataset": 22, "_describ": 22, "client_arg": 22, "thread": [22, 35, 56, 198, 199, 200, 201, 202, 264, 270], "__del__": 22, "unregist": [22, 198, 199, 200, 201, 264], "staticmethod": 22, "_run_nod": 22, "disable_hooks_for_plugin": [22, 54, 254], "load_count": 22, "from_iter": 22, "node_futur": 22, "_is_async": 22, "with_result": 22, "decrement": 22, "count": [22, 129, 170, 184, 199, 201, 275], "data_set": [22, 31, 68, 69, 70, 71, 72, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 176, 192, 206, 207, 208, 209, 210, 211, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250], "run_only_miss": [22, 198, 199, 200, 201, 265], "free_output": 22, "to_build": 22, "to_rerun": 22, "only_nodes_with_output": [22, 192], "unregistered_d": [22, 31], "recreat": 22, "missing_unregistered_d": 22, "output_to_unregist": 22, "input_from_unregist": 22, "think": [22, 260], "shallow_copi": [22, 176], "dask_client": 22, "localclust": 22, "background": [22, 65], "127": [22, 31, 40, 41, 50, 95, 237, 273, 280], "8786": 22, "pythonpath": [22, 40], "pwd": [22, 228], "snippet": [22, 24, 25, 43, 88, 89, 228, 229, 260, 261, 272], "again": [22, 23, 24, 25, 41, 50, 62, 64, 264, 265, 266, 277], "diagnost": 22, "reproduc": [23, 27, 35, 45, 57, 266, 270], "autom": [23, 27, 37, 55, 254], "slower": 23, "unsuit": 23, "rapid": 23, "loop": [23, 24], "conda": [23, 24, 25, 32, 39, 40, 251, 268], "softwar": [23, 24, 28, 34, 57, 266, 270], "remaind": [23, 24], "browser": [23, 24, 26, 41, 50, 268, 273, 280], "slash": [23, 24], "adb": [23, 24], "123456789123456": [23, 24], "azuredatabrick": [23, 24], "net": [23, 24, 51], "person": [23, 24, 49, 276], "prompt": [23, 24, 25, 39, 40, 255, 275, 278, 280, 281, 282, 283], "manual": [23, 24, 31, 32, 34, 40, 50, 186, 251, 260, 266, 272], "iris_databrick": [23, 24, 25], "databricks_run": 23, "argpars": 23, "argumentpars": 23, "add_argu": 23, "dest": [23, 24], "parse_arg": 23, "kb": 23, "c": [23, 32, 35, 39, 40, 48, 50, 93, 192, 196, 233, 251, 264, 273, 280], "p0": 23, "getlogg": [23, 41, 51, 52, 54, 192, 257, 261, 272], "py4j": 23, "java_gatewai": 23, "setlevel": 23, "clientserv": 23, "text": [23, 41, 71, 73, 100, 210, 212, 244, 255, 257, 276], "editor": [23, 24, 25, 40, 49, 276], "entry_point": [23, 45], "tupl": [23, 41, 52, 62, 64, 65, 68, 100, 206, 244, 254, 261, 266, 272], "rememb": [23, 24, 25, 27, 268], "usual": [23, 34, 43, 262, 270], "somewher": [23, 259], "dbutil": 23, "filestor": [23, 24, 25], "destin": [23, 24, 25, 259], "08_report": [23, 24, 25, 75, 93, 94, 214, 233, 234, 283], "perform": [23, 25, 28, 41, 43, 46, 50, 56, 98, 241, 251, 264, 266, 272], "navig": [23, 24, 25, 31, 32, 38, 39, 41, 48, 50, 251, 268, 274, 278, 280, 281, 282, 283], "dedic": [23, 118], "drop": [23, 24, 36, 261], "down": [23, 24, 27, 259, 261], "menu": [23, 24, 25, 39, 40, 268], "job_clust": 23, "kedro_deployment_demo": 23, "radio": 23, "lt": 23, "dropdown": [23, 25, 39, 268], "confirm": [23, 41, 48, 176, 192, 195, 196, 264], "overview": [23, 25, 34, 44, 55], "pend": 23, "wait": [23, 39, 40, 68, 206], "thing": [23, 260, 261], "roughli": [23, 56], "six": 23, "seven": 23, "2023": [23, 24, 25, 238, 282], "06": [23, 24, 25], "56": [23, 25, 52, 272], "399": [23, 25], "accuraci": [23, 24, 25, 50, 261], "972": [23, 24, 25], "403": [23, 25], "sequential_runn": [23, 24, 25, 52, 261, 264, 272, 273, 277], "404": [23, 25], "ran": [23, 34, 152, 154, 272], "auto": [24, 93, 233, 254], "suggest": [24, 196, 266], "linter": [24, 38], "checker": 24, "mypi": 24, "identifi": [24, 42, 49, 84, 85, 98, 224, 225, 236, 241], "relat": [24, 35, 41, 49, 54, 185, 255], "earli": [24, 27, 160], "v": [24, 25, 26, 35, 40, 48, 62, 64, 65, 262, 264, 265, 278], "workspac": [24, 26, 27, 40, 209], "program": [24, 40, 58, 97, 100, 176, 206, 240, 243, 244, 270], "uncheck": 24, "clone": [24, 25, 29, 32], "21": [24, 52], "59": 24, "48": 24, "148": [24, 268], "databricks_usernam": [24, 25], "168": 24, "test_pipelin": [24, 260], "189": 24, "test_run": [24, 34], "928": 24, "aliv": 24, "traceabl": [24, 25], "attach": [24, 25, 35, 40, 261, 265, 268], "cell": [24, 25, 266, 268, 278], "load_ext": [24, 25, 26, 39, 107, 186, 268], "reload_kedro": [24, 25, 26, 35, 107, 187], "magic": [24, 25, 26, 35, 107, 187, 188], "fourth": [24, 25], "consent": [24, 25, 31], "press": [24, 25, 40], "53": [24, 266], "221": 24, "960": 24, "222": 24, "224": 24, "80": [24, 25, 257], "20": [24, 25, 34, 80, 220, 264, 272], "70": [24, 25], "30": [24, 25, 34, 276], "observ": [24, 238, 270], "train_fract": [24, 25, 261], "29": [24, 96, 97, 98, 209, 239, 240, 241, 273], "39": [24, 266], "235": 24, "40": [24, 34], "820": [24, 275], "561": 24, "562": 24, "564": 24, "ephemer": [24, 25, 168], "effici": [24, 261, 272], "lint": [24, 37, 49, 55, 255], "exclus": [24, 266], "ideal": [25, 27, 260], "sync": [25, 27, 40], "gitlab": [25, 32], "devop": 25, "virtualenv": 25, "choic": [25, 27, 29, 41, 42, 50, 278], "synchronis": 25, "authent": [25, 32, 51, 238], "email": [25, 32], "profil": [25, 38, 40, 43, 260], "photo": [25, 273, 276], "fine": [25, 159], "grain": [25, 159], "expir": 25, "area": [25, 46], "chosen": 25, "popup": 25, "popul": [25, 50, 158, 209, 254, 263, 274, 278], "underneath": 25, "displai": [25, 41, 45, 48, 195, 196, 257, 262, 268, 275], "fileinfo": 25, "comment": [25, 254, 280], "unnecessarili": 25, "55": [25, 34, 272], "705": 25, "953": 25, "709": 25, "doubl": 25, "untrack": 25, "visibl": [25, 32, 39, 280], "viz": [26, 42, 43, 45, 46, 50, 55, 58, 260, 268, 272, 273, 276, 278, 280], "scienc": [26, 35, 41, 55, 57, 263, 266, 273, 276, 278], "standalon": [26, 43, 255, 269], "run_viz": 26, "princip": [27, 275], "spectrum": 27, "fit": [27, 28, 56, 260, 261, 266, 270, 272, 276], "gain": 27, "quick": [27, 31, 34, 39], "hybrid": 27, "dbx": 27, "adjust": [27, 274], "faster": 27, "deal": [27, 36, 261], "degre": 27, "bet": 27, "rigid": 27, "natur": 27, "flowchart": 27, "align": 27, "factor": [27, 29], "comfort": [27, 275], "topic": [28, 32], "unlik": [28, 48, 283], "tradit": [28, 255, 269], "simultan": 28, "scalabl": [28, 59, 272], "strategi": [28, 34, 42], "seri": [28, 41, 261, 266, 272, 273, 274], "better": [28, 262, 266, 276], "dockerhub": 28, "translat": 28, "semant": [28, 49], "kubeflow": [28, 29, 33, 45], "programm": 28, "friendli": [28, 196], "yourself": 28, "fairli": 28, "That": [28, 91, 95, 209, 231, 237, 238], "sizeabl": 29, "airflow": [29, 45, 255], "emr": 29, "dask": [29, 251, 272], "prefect": [29, 274], "vertex": [29, 33, 45], "legaci": 29, "argo": 29, "kubernet": [30, 45], "tailor": [30, 43], "tune": [30, 272], "agent": 31, "dequeu": 31, "queue": 31, "prefect_api_url": 31, "4200": 31, "opt": [31, 48, 50, 268], "record": [31, 41, 50, 69, 84, 207, 224, 236, 251], "telemetri": [31, 50, 54, 278], "hang": 31, "declin": 31, "organ": 31, "work_pool_nam": 31, "work_queue_nam": 31, "subscrib": 31, "register_prefect_flow": 31, "union": [31, 68, 82, 83, 206, 209, 222, 223], "get_run_logg": 31, "deployment_nam": 31, "prefect_deploi": 31, "ref": 31, "build_from_flow": 31, "my_flow": 31, "infra_overrid": 31, "prefect_logging_level": 31, "logger": [31, 41, 192, 257, 261, 272], "execution_config": 31, "kedro_init": 31, "layer": [31, 46, 176, 281], "execution_lay": 31, "init_kedro_tasks_by_execution_lay": 31, "node_task": 31, "noqa": [31, 187, 228], "sess_id": 31, "topolog": [31, 192, 200, 262], "impli": [31, 262], "instantiate_task": 31, "kedro_task": 31, "task_dict": 31, "with_opt": 31, "hub": 32, "dockerid": 32, "websit": [32, 46, 48, 58, 282], "procedur": 32, "almost": [32, 268], "containeris": 32, "compress": [32, 35, 46, 70, 87, 91, 100, 208, 227, 231, 236, 244, 274], "recipi": 32, "viabl": 32, "bitbucket": 32, "accomplish": 32, "forg": [32, 48, 251], "aim": 33, "deliv": 33, "fulfil": 34, "grow": [34, 38, 41, 46], "interdepend": [34, 273], "unexpectedli": 34, "disadvantag": 34, "impract": 34, "discov": [34, 45, 54, 58, 262], "short": [34, 50, 196], "test_": 34, "file_being_test": 34, "dataprocess": 34, "test_nod": 34, "fixtur": 34, "testprojectcontext": 34, "test_project_path": 34, "redund": 34, "layout": [34, 38, 62, 64, 94, 234, 255, 260, 283], "statement": [34, 36, 53, 82, 88, 192, 222, 228, 259, 261, 273], "especi": [34, 35, 36], "test_node_passes_with_valid_input": 34, "test_pass": 34, "100": [34, 76, 77, 78, 83, 206, 215, 216, 217, 223, 257, 266, 273, 275], "38": [34, 52], "ini_opt": 34, "addopt": 34, "ra": 34, "stmt": 34, "47": 34, "pipeline_registri": [34, 42, 158, 159, 255, 263, 264, 268, 272], "data_process": [34, 41, 259, 263, 272, 273, 277], "25": [34, 52, 249, 257, 273], "67": [34, 52, 275], "data_sci": [34, 41, 263, 272, 277], "total": 34, "98": 34, "maco": [35, 39, 40, 48], "ex": [35, 95, 237], "powershel": 35, "linux": [35, 39, 40, 48, 50, 273, 280], "bashrc": 35, "_kedro_complet": 35, "z": [35, 228, 265], "zsh": 35, "zshrc": 35, "source_zsh": 35, "fish": 35, "source_fish": 35, "shortcut": [35, 268], "anywher": [35, 56, 176], "nbstripout": [35, 278], "req": 35, "micropkg": [35, 259], "OR": [35, 265], "_____": 35, "__": 35, "___": 35, "v0": [35, 38], "kedro_viz": [35, 41], "line_mag": 35, "async_arg_help": 35, "config_file_help": 35, "conf_source_help": 35, "from_inputs_help": 35, "from_nodes_help": 35, "load_version_help": 35, "node_arg_help": 35, "params_arg_help": 35, "pipeline_arg_help": 35, "runner_arg_help": 35, "tag_arg_help": 35, "to_nodes_help": 35, "to_outputs_help": 35, "project_group": 35, "context_set": 35, "_config_file_callback": 35, "_reformat_load_vers": 35, "_split_param": 35, "env_opt": [35, 43], "split_str": 35, "split_node_nam": 35, "__file__": [35, 41], "callback": [35, 45], "async": [35, 154, 264], "is_flag": 35, "lv": 35, "dir_okai": 35, "resolve_path": 35, "file_okai": 35, "unprocess": 35, "unus": [35, 45], "hash": [35, 251], "context_path": 35, "angular": 35, "bracket": [35, 38, 65], "dataset_name1": 35, "dataset_name2": 35, "node_name1": 35, "node_name2": 35, "runner_nam": 35, "env_nam": [35, 259], "tag_name1": 35, "tag_name2": 35, "config_file_nam": 35, "path_to_config_directori": 35, "path_to_compress": 35, "parametris": 35, "dot": 35, "parent": [35, 41, 49, 192, 255, 276], "child": 35, "predict": [35, 41, 50, 56, 101, 245, 261, 266, 272, 273, 276, 283], "parameteris": [35, 272], "methodologi": [35, 98, 241], "sdist": 35, "parameters_": [35, 259, 260], "pypi": [35, 48, 259], "sphinx": 35, "black": [35, 38, 110, 278], "isort": [35, 38, 278], "pytest": [35, 45, 49, 54, 254, 278], "coveragerc": 35, "package_module_path": 35, "aren": [35, 56], "filter": [35, 163, 176, 192, 270], "de": 35, "catalog_": [35, 259], "jupyterlab": [35, 46, 257, 278], "sensit": [35, 49, 276, 278], "clear": [35, 62, 64, 65, 270, 273], "frustrat": [36, 38], "quickli": 36, "outsid": [36, 45, 56, 163, 259, 264, 266, 268, 272], "isn": [36, 62, 64, 259, 260, 263], "larg": [36, 88, 228, 261], "mortem": 36, "pdb": 36, "uncaught": [36, 154, 155, 163], "ipdb": 36, "manner": [36, 53, 56, 200], "vscode": [36, 40], "pycharm": [36, 37, 40, 55], "on_node_error": [36, 54, 154], "traceback": [36, 189, 190, 253, 257, 277], "hook_impl": [36, 45, 51, 52, 54, 56], "pdbnodedebughook": 36, "debugg": [36, 39, 40], "whenev": [36, 263], "traceback_object": 36, "exc_info": 36, "print_tb": 36, "post_mortem": 36, "on_pipeline_error": [36, 54, 155, 163], "pdbpipelinedebughook": 36, "frame": [36, 249], "visual": [37, 55, 56], "stylist": 38, "whitespac": 38, "style": 38, "reus": [38, 43, 238, 255, 260, 261, 270, 272, 274], "indent": [38, 74, 103, 104, 213, 247, 248], "goe": [38, 264], "pep": [38, 261], "compliant": 38, "opinion": 38, "formatt": [38, 110], "pyupgrad": 38, "pep8": 38, "pyflak": 38, "pycodestyl": 38, "e501": 38, "care": 38, "off": 38, "practic": [38, 56, 57, 262, 264, 266, 270], "small": [38, 45, 54, 266, 281, 283], "screen": [38, 41, 257], "88": 38, "e203": 38, "omit": [38, 176], "invok": [38, 82, 116, 123, 142, 151, 152, 153, 154, 155, 188, 222], "less": [38, 84, 224, 236, 249, 263], "astral": 38, "sh": 38, "rev": 38, "270": 38, "psf": 38, "language_vers": 38, "cog": 39, "picker": 39, "ok": 39, "preconfigur": [39, 49], "rapidli": 39, "emul": 39, "rich": [39, 190], "toolbar": [39, 268], "green": [39, 40, 75, 110, 214], "triangl": [39, 40], "breakpoint": [39, 40], "jetbrain": 39, "profession": 39, "proce": [39, 41, 267], "unix": [39, 40, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "mount": [39, 96, 97, 239], "real": [39, 40, 260, 266], "autocomplet": [39, 40], "githubusercont": [39, 40], "palett": 40, "shift": 40, "venvpath": 40, "anaconda": 40, "dirnam": 40, "microsoft": 40, "fwlink": 40, "linkid": 40, "733558": 40, "isdefault": 40, "Will": [40, 84, 224, 236], "environment": 40, "openconfigfil": 40, "intellisens": 40, "hover": [40, 272], "830387": 40, "integratedtermin": 40, "seper": 40, "pane": 40, "ptvsd": 40, "pathmap": 40, "localroot": 40, "workspacefold": 40, "remoteroot": 40, "3000": 40, "ip": [40, 282], "enable_attach": 40, "redirect_output": 40, "paus": 40, "wait_for_attach": 40, "scp": 40, "your_usernam": 40, "remote_serv": 40, "tunnel": 40, "vnl": 40, "experiment": [41, 49, 255, 267, 268], "evalu": [41, 52, 56, 65, 260, 266, 272], "weight": 41, "demo": 41, "snapshot": [41, 45], "captur": [41, 262], "discoveri": [41, 54], "plotli": 41, "timeseri": 41, "parellel": 41, "coord": 41, "central": [41, 238], "complementari": 41, "neptun": 41, "ecosystem": [41, 45], "domain": [41, 46, 270], "databas": [41, 88, 89, 95, 98, 99, 209, 219, 228, 229, 237, 238, 241, 242, 264], "sqlite_stor": 41, "sqlitestor": 41, "session_store_class": [41, 254], "session_store_arg": [41, 254], "crucial": 41, "front": [41, 159], "interchang": 41, "kedro_sqlite_store_usernam": 41, "your_unique__usernam": 41, "remote_path": 41, "your_access_key_id": [41, 282], "your_secret_access_kei": [41, 282], "aws_region": 41, "your_aws_region": 41, "metricsdataset": 41, "jsondataset": [41, 94, 104, 234, 248, 265, 283], "numer": [41, 49, 104, 248, 264, 266, 275], "boolean": [41, 253, 273], "companies_column": 41, "coeffici": [41, 272], "r2": 41, "score": [41, 272], "me": 41, "mae": 41, "09_track": [41, 103, 104, 247, 248], "r2_score": [41, 266, 272], "sklearn": [41, 52, 100, 244, 261, 266, 272], "mean_absolute_error": 41, "max_error": 41, "linearregress": [41, 266, 272], "price": [41, 266, 272, 273, 275, 276], "y_pred": [41, 261, 266, 268, 272], "3f": [41, 261, 272], "exactli": 41, "evaluate_model_nod": [41, 272], "company_r": [41, 266, 272, 273, 275], "iata_approv": [41, 266, 272, 273, 275], "_is_tru": [41, 266, 273], "_parse_percentag": [41, 266, 273], "tolist": 41, "data_typ": 41, "beauti": 41, "session_stor": 41, "expos": [41, 159, 194, 196, 263, 274], "row": [41, 100, 206, 244, 275, 281], "fun": 41, "icon": [41, 282], "4141": [41, 50, 273, 280], "pin": [41, 251], "toggl": 41, "seaborn": [41, 235, 283], "pyplot": [41, 75, 214, 283], "plt": [41, 75, 214, 283], "sn": [41, 283], "create_confusion_matrix": [41, 283], "y_actual": [41, 283], "y_predict": [41, 283], "df": [41, 56, 176, 228, 269, 283], "confusion_matrix": [41, 283], "crosstab": [41, 283], "rownam": [41, 283], "colnam": [41, 283], "heatmap": [41, 283], "annot": [41, 46, 283], "chart": [41, 55, 279, 280], "vertic": 41, "axi": 41, "highlight": [41, 95, 237, 260], "multitud": 41, "graphic": [41, 48, 268], "taken": [41, 259], "proposit": 42, "five": [42, 275], "registr": [42, 254], "human": [42, 50, 254, 255], "kedro_init_vers": [42, 48, 170, 254], "lifecycl": [42, 43, 55, 123, 151, 152, 153, 154, 155, 161, 162, 163, 252, 270], "hold": [42, 56, 145, 170, 254, 255, 270], "aspect": 42, "frequent": 42, "discourag": 42, "emploi": 43, "thought": 43, "notebook_run": 43, "solid": 45, "importlib": 45, "kedrojson": 45, "pass_obj": 45, "to_json": [45, 86, 192, 226], "project_command": 45, "alia": [45, 129, 133, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 255, 259, 269], "behav": [45, 262, 264, 266], "kedrostarterspec": 45, "test_plugin_start": 45, "template_path": [45, 133], "your_local_directori": 45, "starter_fold": 45, "checkout": [45, 255], "_get_project_metadata": 45, "proof": 45, "global_command": 45, "bit": 45, "plugin_nam": [45, 54], "myhook": 45, "after_catalog_cr": [45, 51, 54, 151, 273], "cli_hook": 45, "cli_hook_impl": 45, "myclihook": 45, "before_command_run": [45, 54, 123], "project_metadata": [45, 123], "command_arg": [45, 123], "connector": [45, 67, 205, 238], "ship": [45, 274], "licens": 45, "takieddin": 45, "kadiri": 45, "facilit": [45, 196], "synchron": 45, "infer": [45, 194], "vertexai": 45, "azureml": 45, "daiha": 45, "alv": 45, "nickola": 45, "da": 45, "rocha": 45, "machado": 45, "technic": 46, "owner": [46, 209], "kernel": [46, 268], "bruce": 46, "philp": 46, "guilherm": 46, "braccial": 46, "brain": 46, "depth": 46, "medium": 46, "truth": [46, 266], "un": 46, "intermedi": [46, 58, 192, 194, 260, 264, 265, 280], "represent": [46, 56, 192], "cleans": 46, "transform": [46, 56, 261, 273], "wrangl": [46, 270], "dimens": 46, "histor": 46, "drive": 46, "encapsul": [46, 115, 260, 272], "blend": 46, "redefin": 46, "video": 48, "exit": [48, 50, 123, 136, 253, 273, 275, 277, 280], "deactiv": 48, "pipenv": 48, "ascii": 48, "art": 48, "searchabl": [48, 276, 280], "archiv": [48, 276, 280], "safe": [48, 264], "notabl": 48, "projectcontext": 48, "unreleas": 48, "uninstal": 48, "glossari": [49, 55, 58, 176, 271, 276], "skip": [49, 238, 263, 272], "wrapper": [49, 94, 234, 270], "inbuilt": 49, "return_greet": 49, "hello": [49, 51, 80, 220], "return_greeting_nod": 49, "my_salut": 49, "join_stat": 49, "greet": 49, "join_statements_nod": 49, "my_messag": 49, "necessarili": [49, 195, 196, 262, 270], "assembl": 49, "greeting_pipelin": 49, "specialis": [49, 270], "advis": [49, 257, 259], "gitignor": 49, "unnecessari": 49, "inclus": 49, "commonli": 49, "alphanumer": [50, 255], "hyphen": [50, 196], "repo_nam": [50, 255], "python_packag": [50, 255], "get_start": 50, "lowercas": 50, "output_dir": 50, "test_kedro": 50, "swiftli": 50, "regain": [50, 273, 280], "mac": [50, 273, 280], "ctrl": [50, 273, 280], "fundament": 50, "unsur": 50, "1936": 50, "british": 50, "statistician": [50, 270], "biologist": 50, "ronald": 50, "fisher": 50, "150": 50, "50": 50, "speci": [50, 268], "plant": 50, "setosa": [50, 268], "versicolour": 50, "virginica": [50, 268], "flower": 50, "measur": 50, "sepal": 50, "width": [50, 257], "petal": 50, "categoris": 50, "nearest": 50, "neighbour": 50, "algorithm": 50, "make_predict": [50, 261, 268], "report_accuraci": [50, 261, 268], "before_node_run": [51, 54, 154], "behavior": [51, 255], "furthermor": 51, "subset": [51, 54, 192, 260, 265, 270], "say_hello": 51, "projecthook": [51, 54], "retri": 51, "tenac": 51, "my_flaky_node_funct": 51, "flaki": 51, "before_dataset_load": [51, 52, 54, 152], "after_dataset_load": [51, 52, 54, 152], "before_dataset_sav": [51, 54, 56, 152], "after_dataset_sav": [51, 54, 56, 152], "logginghook": 51, "_timer": [51, 52], "2f": 51, "after_context_cr": [51, 54, 56, 153], "keyvault": 51, "s3_cred": 51, "your_data_stor": 51, "abs_cr": 51, "secretcli": 51, "defaultazurecredenti": 51, "azuresecretshook": 51, "keyvaultnam": 51, "0542abb": 51, "key_vault_nam": 51, "kvuri": 51, "vault": 51, "vault_url": 51, "cred": [51, 82, 83, 222, 223], "azure_cr": 51, "cred_nam": 51, "get_secret": 51, "secret_nam": 51, "my_project": [51, 259, 260], "authoris": 51, "metadatahook": 51, "__dict__": [51, 71, 210], "memory_profil": 52, "memory_usag": 52, "_normalise_mem_usag": 52, "mem_usag": 52, "isinst": [52, 56], "memoryprofilinghook": 52, "_mem_usag": 52, "before_mem_usag": 52, "interv": 52, "max_usag": 52, "retval": 52, "include_children": 52, "after_mem_usag": 52, "2fmib": 52, "data_catalog": [52, 261, 264, 266, 272, 273, 277], "343": [52, 272, 273], "99mib": 52, "48mib": 52, "327": [52, 272, 273], "382": [52, 272, 273, 277], "85": [52, 261, 272, 273], "49mib": 52, "great": [52, 53], "great_expect": 52, "ge": [52, 261], "datavalidationhook": 52, "dataset_expectation_map": 52, "raw_companies_dataset_expect": 52, "preprocessed_companies_dataset_expect": 52, "_run_valid": 52, "dataset_valu": 52, "_get_dataset": [52, 264], "dataset_path": 52, "expectation_suit": 52, "expectation_context": 52, "data_context": 52, "datacontext": 52, "get_batch": 52, "datasourc": 52, "files_datasourc": 52, "run_validation_oper": 52, "action_list_oper": 52, "assets_to_valid": 52, "checkpoint": [52, 98, 241, 243], "raw_companies_dataset_checkpoint": 52, "data_connector_queri": 52, "batch_request": 52, "yaml_config": 52, "my_checkpoint_nam": 52, "config_vers": 52, "class_nam": 52, "simplecheckpoint": 52, "run_name_templ": 52, "datasource_nam": 52, "my_datasource_nam": 52, "data_connector_nam": 52, "default_runtime_data_connector_nam": 52, "data_asset_nam": 52, "my_runtime_asset_nam": 52, "expectation_suite_nam": 52, "my_expectation_suite_nam": 52, "dataset_checkpoint_map": 52, "run_checkpoint": 52, "checkpoint_nam": 52, "runtime_paramet": 52, "batch_data": 52, "batch_identifi": 52, "runtime_batch_identifier_nam": 52, "run_nam": 52, "statsd": 52, "grafana": 52, "pipelinemonitoringhook": 52, "statsclient": 52, "node_tim": 52, "timer": 52, "short_nam": [52, 196], "gaug": 52, "_size": 52, "getsizeof": 52, "after_pipeline_run": [52, 54, 155], "incr": 52, "before_pipeline_run": [52, 54, 155], "modeltrackinghook": 52, "run_param": [52, 155], "start_run": 52, "log_param": 52, "_func_nam": 52, "split_data_ratio": 52, "example_test_data_ratio": [52, 268], "elif": 52, "log_model": 52, "end_run": 52, "my_nod": 52, "first_input": 52, "second_input": 52, "nodeinputreplacementhook": 52, "expected_input": 52, "got": [52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 160, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "actual_input": 52, "throughout": [53, 266, 280, 281, 282, 283], "noun": 54, "past_participl": 54, "timelin": [54, 122, 150, 254], "on_": 54, "_error": 54, "after_command_run": [54, 123], "statist": [54, 270], "signatur": [54, 154, 155], "after_data_catalog_cr": 54, "hook_spec": 54, "conf_cr": [54, 151], "save_vers": [54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 151, 176, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "datacataloghook": 54, "__class__": 54, "arbitrari": [54, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250], "restrict": 54, "lifo": 54, "hook_a": 54, "hook_b": 54, "tryfirst": 54, "trylast": 54, "importlib_metadata": 54, "faq": [55, 276], "micro": [55, 126, 254, 258, 260, 272, 274], "slice": [55, 258], "sparksess": [55, 96, 97, 98, 99, 209, 239, 240, 241, 242], "delta": [55, 96, 97, 209, 219, 239, 240, 243], "intermediari": 55, "copy_mod": 55, "tip": 55, "maximis": [55, 264], "maxresults": 56, "fair": 56, "3g": 56, "sparkconf": 56, "sparkhook": 56, "spark_conf": 56, "setal": 56, "spark_session_conf": 56, "builder": [56, 96, 97, 98, 99, 209, 239, 240, 241, 242], "appnam": 56, "enablehivesupport": 56, "_spark_sess": 56, "getorcr": [56, 96, 97, 98, 99, 209, 239, 240, 241, 242], "sparkcontext": [56, 97, 98, 240, 241, 243], "setloglevel": 56, "warn": [56, 60, 110, 159, 176, 190, 257, 263, 266, 277], "master": 56, "yarn": 56, "singleton": [56, 88, 89, 120, 148, 228, 229], "deltatabledataset": 56, "sparkjdbcdataset": 56, "sparkhivedataset": 56, "spark_d": 56, "lakehous": 56, "acid": 56, "transact": 56, "unifi": 56, "stream": [56, 110, 243], "adl": [56, 219], "temperatur": 56, "versionasof": 56, "deltat": [56, 96, 219, 239], "process_barometer_data": 56, "update_meterological_st": 56, "first_operation_complet": 56, "estimate_weather_trend": 56, "second_operation_complet": 56, "signal": 56, "preserv": [56, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 196, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 250], "shape": [56, 72, 211], "diagram": 56, "dummi": [56, 274], "flow": [56, 255, 268, 282], "word": 56, "lazi": [56, 261], "randomforrestclassifi": 56, "randomforestclassifi": 56, "training_data": 56, "forest": 56, "numtre": 56, "testing_data": 56, "example_classifi": 56, "fifo": 56, "preliminari": 58, "anyon": [58, 282], "knowledg": [58, 270], "curv": [58, 73, 212], "onlin": 58, "book": 58, "robust": 59, "assembli": 59, "incompat": [60, 91, 95, 98, 196, 231, 237, 241], "with_traceback": [60, 63, 136, 146, 164, 193], "tb": [60, 63, 136, 146, 164, 193], "__traceback__": [60, 63, 136, 146, 164, 193], "base_env": [62, 64, 65], "experiment1": 62, "model_paramet": 62, "experiment2": 62, "conf_log": [62, 64], "dictconfig": [62, 64, 256], "conf_param": [62, 64, 266], "suppli": [62, 64, 65, 98, 145, 209, 219, 241, 254, 255, 264, 266, 273], "overriden": 62, "dedupl": [62, 65], "classmethod": [62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 163, 176, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "fromkei": [62, 64, 65], "k": [62, 64, 65, 261], "keyerror": [62, 64, 65, 264], "popitem": [62, 64, 65], "setdefault": [62, 64, 65], "lack": [62, 64, 65], "readthedoc": [64, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 88, 91, 92, 93, 94, 95, 102, 103, 104, 105, 121, 122, 149, 150, 159, 186, 187, 190, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 224, 225, 228, 231, 232, 233, 234, 237, 246, 247, 248, 250, 266, 277], "2_branch": 64, "3_branch": 64, "load_and_merge_dir_config": 64, "processed_fil": 64, "read_environment_vari": 64, "invalid": [64, 69, 72, 98, 176, 192, 207, 209, 211, 219, 241, 262], "tri": 65, "express": [65, 93, 94, 176, 233, 234, 266, 283], "malform": [65, 268], "breakag": 67, "head": [68, 266, 275], "authbas": [68, 206], "httpbasicauth": 68, "cast": 68, "typevar": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "_do": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "_di": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "notadirectoryerror": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "stringio": [69, 207], "bio": [69, 207], "seqio": [69, 207], "alpha": [69, 207, 260, 264], "naccggatgta": [69, 207], "beta": [69, 207, 260], "naggctcggtta": [69, 207], "raw_data": [69, 176, 207], "fasta": [69, 207], "ls_orchid": [69, 207], "sequence_list": [69, 207], "seq": [69, 207], "default_load_arg": [69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 99, 100, 101, 207, 208, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245], "default_save_arg": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 250], "posix": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 97, 101, 102, 103, 104, 105, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 239, 240, 243, 244, 245, 246, 247, 248, 250, 259], "biopython": [69, 207], "spec": [69, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 88, 91, 92, 93, 94, 102, 103, 104, 105, 121, 149, 207, 210, 211, 212, 213, 214, 215, 216, 217, 224, 225, 228, 231, 232, 233, 234, 246, 247, 248, 250, 266], "abstractfilesystem": [69, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 88, 91, 92, 93, 94, 102, 103, 104, 105, 207, 210, 211, 212, 213, 214, 215, 216, 217, 224, 225, 228, 231, 232, 233, 234, 246, 247, 248, 250], "invalidate_cach": [69, 72, 207, 211], "your_kei": [70, 208], "your_secret": [70, 208], "dd": [70, 208], "ddf": [70, 208], "from_panda": [70, 208], "npartit": [70, 208], "schema": [70, 89, 96, 97, 98, 155, 208, 209, 219, 229, 238, 239, 240, 241, 243, 256], "triad": [70, 208], "pyarrow": [70, 87, 208, 227], "parquet_dataset": [70, 208], "int32": [70, 208], "write_index": [70, 208], "multipart": [70, 208], "read_parquet": [70, 87, 208, 227], "to_parquet": [70, 87, 208, 227], "send": [71, 206, 210, 257], "emailmessag": [71, 210], "string_to_writ": [71, 102, 210, 246], "invis": [71, 210], "plain": [71, 210, 228], "msg": [71, 210], "set_cont": [71, 210], "subject": [71, 210], "sin": [71, 210], "studly17": [71, 210], "strong": [71, 210], "mime": [71, 210], "flatten": [71, 210], "autogener": [71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 97, 101, 102, 103, 104, 105, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 250], "resolve_load_vers": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 104, 105, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 250], "resolve_save_vers": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 104, 105, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 250], "geojson": [72, 211], "eg": [72, 211], "gpd": [72, 211], "geometri": [72, 211], "geodatafram": [72, 211], "read_fil": [72, 211], "to_fil": [72, 211], "gcfilesystem": [72, 211], "hv": [73, 212], "holoviews_writ": [73, 212], "fmt": [73, 212], "s3filesystem": [73, 75, 212, 214], "reference_manu": [73, 212], "default_flow_styl": [74, 103, 104, 105, 213, 247, 248, 250], "output_plot": [75, 214], "fig": [75, 93, 94, 214, 233, 234, 283], "figur": [75, 93, 94, 214, 233, 234, 268, 283], "plot_writ": [75, 214], "pdf": [75, 214], "pdf_plot_writ": [75, 214], "plots_dict": [75, 214], "colour": [75, 108, 109, 189, 214], "blue": [75, 110, 214], "red": [75, 110, 214, 257], "color": [75, 110, 214], "dict_plot_writ": [75, 214], "plots_list": [75, 214], "list_plot_writ": [75, 214], "savefig": [75, 214], "_as_gen": [75, 214], "gml": [76, 215], "nx": [76, 77, 78, 215, 216, 217], "complete_graph": [76, 77, 78, 215, 216, 217], "graph_dataset": [76, 77, 78, 215, 216, 217], "is_isomorph": [76, 77, 78, 215, 216, 217], "read_gml": [76, 215], "readwrit": [76, 77, 78, 215, 216, 217], "write_gml": [76, 215], "graphml": [77, 216], "read_graphml": [77, 216], "write_graphml": [77, 216], "node_link_graph": [78, 217], "json_graph": [78, 217], "node_link_data": [78, 217], "to_csv": [79, 84, 218, 224, 261], "multi": [80, 220], "sheet": [80, 220], "another_datafram": [80, 220], "world": [80, 220, 260, 264], "multifram": [80, 220], "excelwrit": [80, 220], "writer": [80, 220], "use_thread": [81, 221], "read_feath": [81, 221], "to_feath": [81, 221], "bigqueri": [82, 83, 222, 223], "read_gbq": [82, 83, 222, 223], "gbq": [82, 83, 222, 223], "vehicl": [82, 83, 222, 223], "shuttle_id": [82, 88, 222, 228, 266, 273], "reauth": [82, 83, 222, 223], "dataset_1": [82, 222], "table_a": [82, 88, 89, 99, 222, 228, 229, 242], "sql_data": [82, 88, 222, 228], "oauth2": [82, 83, 222, 223], "big_query_dataset": [83, 223], "big_query_t": [83, 223], "chunk_siz": [83, 206, 223], "progress_bar": [83, 223], "to_gbq": [83, 223], "effort": [84, 224, 236], "sas7bdat": [84, 224], "read_sa": [84, 224], "to_sa": [84, 224], "flight": [84, 224, 266, 276], "sa": [84, 224, 228], "assumpt": [84, 98, 224, 236, 241], "buffer": [84, 224, 236], "clipboard": [84, 224, 236], "read_": [84, 224, 236], "to_": [84, 224], "hdfstore": [85, 225], "hdf_dataset": [85, 225], "sensor_read": [85, 225], "h5": [85, 101, 225, 245], "aws_s3_cr": [85, 225], "pytabl": [85, 225], "www": [85, 101, 225, 245, 259], "usersguid": [85, 225], "libref": [85, 225], "top_level": [85, 225], "open_fil": [85, 225], "clickstream_dataset": [86, 226], "landing_area": [86, 226], "click_stream": [86, 226], "abfs_cr": [86, 226], "json_dataset": [86, 226], "video_gam": [86, 226], "read_json": [86, 226], "use_nullable_dtyp": [87, 227], "arrow": [87, 227], "partition_col": [87, 227], "execution_opt": [88, 228], "read_sql_queri": [88, 228], "shuttle_id_dataset": [88, 228], "db_credenti": [88, 89, 99, 228, 229, 238, 242], "stream_result": [88, 228], "chunksiz": [88, 228, 261], "1000": [88, 228], "postgresql": [88, 89, 99, 228, 229, 242], "scott": [88, 89, 99, 228, 229, 242], "tiger": [88, 89, 99, 228, 229, 242], "create_connect": [88, 89, 228, 229], "connection_str": [88, 89, 228, 229], "read_sql_tabl": [89, 229], "to_sql": [89, 229], "symmetr": [89, 229], "shuttles_table_dataset": [89, 229], "dwschema": [89, 229], "read_xml": [90, 230], "to_xml": [90, 230], "test_model": [91, 231], "final_model": [91, 231], "lz4": [91, 231], "joblib": [91, 231], "s3_credenti": [91, 231], "compress_pickl": [91, 95, 231, 237], "deserialis": [91, 95, 231, 237], "dill": [91, 95, 231, 237], "torch": [91, 95, 231, 237], "lucianopaz": [91, 95, 231, 237], "importerror": [91, 95, 231, 237], "scatter_plot": [93, 94, 233, 234], "px": [93, 94, 233, 234, 283], "from_json": [93, 94, 233, 234], "write_json": [93, 94, 233, 234], "plotly_arg": [94, 234, 283], "bar_plot": [94, 234], "orient": [94, 234, 283], "xaxis_titl": [94, 234, 283], "yaxis_titl": [94, 234, 283], "titl": [94, 234, 255, 267, 283], "df_data": [94, 234], "x1": [94, 234], "x2": [94, 234], "scatter": [94, 234], "theme": [94, 234], "redis_arg": [95, 237], "from_url": [95, 237], "my_python_object": [95, 237], "my_object": [95, 237], "from_url_arg": [95, 237], "6379": [95, 237], "final_python_object": [95, 237], "my_final_object": [95, 237], "my_data": [95, 237], "default_redis_url": [95, 237], "strictredi": [95, 237], "socket_timeout": [95, 237], "set_arg": [95, 237], "redis_url": [95, 237], "structfield": [96, 97, 98, 209, 239, 240, 241], "stringtyp": [96, 97, 98, 209, 239, 240, 241], "integertyp": [96, 97, 98, 209, 239, 240, 241], "structtyp": [96, 97, 98, 209, 239, 240, 241], "ag": [96, 97, 98, 209, 239, 240, 241], "alex": [96, 97, 98, 209, 239, 240, 241], "31": [96, 97, 98, 209, 239, 240, 241, 278], "bob": [96, 97, 98, 209, 239, 240, 241], "clark": [96, 97, 98, 209, 239, 240, 241], "65": [96, 97, 98, 209, 239, 240, 241], "dave": [96, 97, 98, 209, 239, 240, 241], "spark_df": [96, 97, 98, 209, 239, 240, 241], "createdatafram": [96, 97, 98, 99, 209, 239, 240, 241, 242], "test_data": [96, 97, 239, 240], "deltatable_dataset": [96, 239], "delta_t": [96, 239], "dbf": [96, 97, 239, 240, 243], "mnt": [96, 97, 239], "weather_with_schema": [97, 240], "weather_clean": [97, 240], "dataframeread": [97, 99, 240, 242, 243], "getting_start": [97, 240], "quickstart_df": [97, 240], "partitionbi": [97, 98, 240, 241, 243], "s3n": [97, 240], "insecurecli": [97, 240], "write_mod": [98, 209, 241], "errorifexist": [98, 241], "table_pk": [98, 241], "upsert": [98, 209, 241], "pk": [98, 241], "atom": [98, 241], "hive_dataset": [98, 241], "hive_databas": [98, 241], "test_databas": [98, 241], "test_tabl": [98, 241], "preexist": [98, 241], "dataframewrit": [98, 99, 238, 241, 242], "saveast": [98, 238, 241], "hiveopt": [98, 241], "setcheckpointdir": [98, 241], "jdbc": [99, 242], "weather_t": [99, 242], "connection_properti": [99, 242], "topanda": [99, 242], "subprotocol": [99, 242], "subnam": [99, 242], "libsvm": [100, 244], "dump_svmlight_fil": [100, 244], "load_svmlight_fil": [100, 244], "spars": [100, 244], "matrix": [100, 244], "zero": [100, 244], "svm_dataset": [100, 244], "svm": [100, 244], "zero_bas": [100, 244], "14159": [100, 244], "reloaded_featur": [100, 244], "reloaded_label": [100, 244], "load_model": [101, 245], "save_model": [101, 245], "tensorflow_model": [101, 245], "include_optim": [101, 245], "tf_cred": [101, 245], "tf": [101, 245], "kera": [101, 245], "loaded_model": [101, 245], "new_predict": [101, 245], "assert_allclos": [101, 245], "rtol": [101, 245], "1e": [101, 245], "atol": [101, 245], "save_format": [101, 245], "api_doc": [101, 245], "alice_book": [102, 246], "alic": [102, 246], "002": [103, 104, 247, 248], "pyyaml": [105, 250], "pyyamldocument": [105, 250], "backward": 107, "incorpor": 110, "asctim": 110, "levelnam": 110, "ext": [110, 268, 274], "stdout": 110, "white": 110, "magenta": 110, "yellow": 110, "ansi": 110, "cyan": 110, "commandcollect": 115, "kedrocli": 117, "_hook_manag": 120, "exit_cod": [123, 136], "subcommand": 123, "themselv": 123, "attr": 125, "list_command": 125, "ctx": [125, 143], "pipeline_dir": 129, "pipeline_test": 129, "pipeline_conf": 129, "source_path": 129, "tests_path": 129, "config_path": 129, "occurr": [129, 170, 184], "9223372036854775807": [129, 170, 184], "vc": [133, 255], "cookiecutt": [133, 255, 260, 270], "resid": 133, "verbose_error": 136, "format_messag": 136, "verbos": 137, "func_": 138, "stylesheet": 139, "forward_help": 140, "reqs_path": 141, "kedroclierror": 141, "kedrocontexterror": 145, "mismatch": 145, "incorrect": 145, "feed_dict": [151, 176], "_create_catalog": 151, "earliest": 153, "thrown": [154, 155, 196], "run_result": 155, "kedro_vers": [155, 254], "utitl": 156, "logging_config": 157, "autoregist": 159, "autodiscoveri": 159, "nodes_and_pipelin": 159, "dynaconf": 160, "silenc": 160, "mislabel": 160, "cryptic": 160, "nonetyp": 160, "rochacbruno": 160, "460": 160, "save_on_clos": [163, 253], "register_pipelin": [163, 263, 264, 268, 272], "kedrosessionerror": 163, "shelv": 166, "config_fil": 170, "project_vers": 170, "source_dir": 170, "deriv": 170, "projectmetadata": 171, "dataset_pattern": 176, "relai": 176, "feed": 176, "insensit": 176, "conform": [176, 196], "lexicograph": 176, "data_set_nam": 176, "datasetalreadyexistserror": 176, "add_al": 176, "parq": 176, "datasetnotfounderror": 176, "boats_credenti": 176, "regex_search": 176, "syntaxerror": 176, "substr": 176, "prm": 176, "feat": 176, "feat_eng_data": 176, "time_seri": 176, "shallow": 176, "namedtupl": 184, "local_n": 187, "notebooks_and_ipython": 187, "kedro_and_notebook": 187, "setproject": 187, "param1": 187, "param2": 187, "param_group": 187, "local_namespac": 188, "pretti": 190, "repl": 190, "rich_traceback": [190, 257], "driven": 191, "among": [192, 194, 262], "circulardependencyerror": 192, "circular": 192, "outputnotuniqueerror": 192, "confirmnotuniqueerror": 192, "first_d": 192, "second_d": 192, "first_nod": 192, "second_nod": 192, "third_d": 192, "fourth_d": 192, "all_input": 192, "all_output": [192, 268], "names_onli": 192, "loggabl": 192, "invoc": 192, "func1": 192, "func2": 192, "func3": 192, "node_namespac": 192, "intersect": 192, "lookup": 192, "node1": [192, 262, 264], "node2": [192, 262, 264], "node3": [192, 264], "inner": [192, 196], "only_nod": [192, 265, 270], "only_nodes_with_input": 192, "only_nodes_with_namespac": 192, "only_nodes_with_tag": [192, 265, 270], "stai": [194, 260], "modularpipelineerror": 194, "incorrectli": 194, "clean_data": 195, "cars_df": 195, "boats_df": 195, "halve_datafram": 195, "array_split": 195, "cars2017": 195, "boats2017": 195, "clean_cars2017": 195, "clean_boats2017": 195, "train_cars2017": 195, "test_cars2017": 195, "train_boats2017": 195, "test_boats2017": 195, "auxiliari": 196, "hint": 196, "violat": 196, "letter": 196, "digit": 196, "fullstop": 196, "bind": 196, "outer": 196, "wherea": 196, "toposort": [199, 201], "_validate_catalog": 199, "_single_process": 199, "spawn": [199, 201], "cpu": [199, 201, 264, 272], "61": 199, "min": 199, "_sharedmemorydataset": 199, "sequenti": [200, 264, 268, 270, 272, 276], "classs": 200, "obj_path": 204, "default_obj_path": 204, "attributeerror": 204, "example_t": 206, "val1": 206, "val2": 206, "val3": 206, "val4": 206, "url_of_remote_serv": 206, "mind": 206, "divid": 206, "chunk": [206, 261], "sent": 206, "unsupport": 206, "dataframe_typ": 209, "primary_kei": 209, "partition_column": [209, 219], "owner_group": 209, "primary_column": 209, "names_and_ag": 209, "uniti": [209, 219], "truncat": 209, "ownership": 209, "managedt": 209, "catalog_typ": 219, "catalog_nam": 219, "glue": 219, "alter": [219, 256, 257], "overwrite_schema": 219, "partition_filt": 219, "boats_filesystem": 219, "dev_cr": 219, "boats_databricks_unity_catalog": 219, "simple_databas": 219, "simple_t": 219, "trucks_aws_glue_catalog": 219, "db_schema": 219, "db_tabl": 219, "new_data": 219, "get_loaded_vers": 219, "accepted_write_mod": 219, "default_write_mod": 219, "az": 219, "api_refer": 219, "histori": [219, 272], "created_tim": 219, "appendonli": 219, "meant": 219, "mssql": 228, "1433": 228, "testdb": 228, "strongpassword": 228, "_make_mssql_connection_str": 228, "pyodbc": 228, "encrypt": 228, "uid": 228, "trustservercertif": 228, "odbc_connect": 228, "testtabl": 228, "mssql_dataset": 228, "mssql_credenti": 228, "datet": 228, "AND": [228, 265, 266], "BY": 228, "parse_d": [228, 235], "f0": 228, "adapt_mssql_date_param": 228, "dt": 228, "has_head": 235, "null_valu": 235, "somenullstr": 235, "frame_equ": [235, 236], "rechunk": 235, "pola": [235, 236], "explic": 235, "compabl": 235, "write_csv": [235, 236], "low_memori": 236, "snappi": 236, "write_": 236, "snowpark": 238, "mar": 238, "weather_data": 238, "meteorologi": 238, "column_ord": 238, "table_typ": 238, "everyth": [238, 266], "shorter": 238, "polygon": 238, "externalbrows": 238, "snowflake_cli": 238, "geopolygon": 238, "geodata": 238, "ab12345": 238, "eu": 238, "443": 238, "warehous": 238, "datascience_wh": 238, "detailed_data": 238, "service_account_abc": 238, "supersecret": 238, "john_do": 238, "wdomain": 238, "save_as_t": 238, "sparkjbdcdataset": 242, "new_inventori": 243, "inventori": 243, "output_mod": 243, "04_checkpoint": 243, "raw_new_inventori": 243, "inventory_schema": 243, "broker": 243, "kafka": 243, "schemainfer": 243, "fourcc": 249, "mp4v": 249, "opencv": 249, "mp4": 249, "video_dataset": 249, "sequencevideo": 249, "640": 249, "480": 249, "uint8": 249, "255": [249, 261], "my_video": 249, "fp": 249, "generatorvideo": 249, "gen": 249, "codec": 249, "avaiabl": 249, "strict": 251, "broken": [251, 270], "decoupl": 253, "basesessionstor": 254, "context_class": 254, "data_catalog_class": 254, "metaphor": 255, "minim": [255, 269], "astronom": 255, "exploratori": [255, 266, 267], "phase": 255, "formerli": [255, 269], "mini": [255, 269], "my_kedro_pyspark_project": 255, "reusabl": [255, 260, 266, 272], "creator": 255, "custom_prompt": 255, "regex_valid": 255, "__init": 255, "py__": 255, "your_start": 255, "info_file_handl": 257, "default_log": 257, "richhandl": 257, "aid": 257, "tracebacks_show_loc": 257, "swap": 257, "richli": 257, "circleci": 257, "narrow": 257, "120": 257, "jupyter_column": 257, "jupyter_lin": 257, "115": 257, "markup": 257, "bold": 257, "blink": 257, "micropkg_nam": 259, "clash": [259, 264], "new_package_nam": 259, "bulk": 259, "manifest": 259, "cleaning_util": 259, "aliased_util": 259, "uat": 259, "second_pipelin": 259, "first_pipelin": 259, "fall": 259, "unpack": 259, "embed": [259, 260, 268], "pypi_package_nam": 259, "micropkg_pull_arg": 259, "aliased_pipelin": 259, "pipeline_pull_arg": 259, "package_path": 259, "za": 259, "z0": 259, "9_": 259, "evolv": [260, 270, 272], "shareabl": [260, 267, 282], "ingest": 260, "unlock": 260, "mental": 260, "acceler": 260, "collaps": 260, "adher": 260, "revers": 260, "path_to_templ": 260, "matter": 260, "_copy_without_rend": 260, "coupl": 260, "scoop": 260, "realli": 260, "lunch_pipelin": 260, "lunch": 260, "verb": 260, "defrost": 260, "eat": 260, "food": 260, "frozen": [260, 272], "thaw": 260, "cook_pipelin": 260, "frozen_veg": 260, "veg": 260, "grill": 260, "grilled_veg": 260, "prep_pipelin": 260, "meal_pipelin": 260, "nice": 260, "twice": [260, 272], "meal": 260, "defrost_nod": 260, "eat_breakfast_pipelin": 260, "eat_breakfast": 260, "breakfast_food": 260, "eat_lunch_pipelin": 260, "eat_lunch": 260, "lunch_food": 260, "disjoint": 260, "caus": [260, 277], "cook_breakfast_pipelin": 260, "breakfast": 260, "cook_lunch_pipelin": 260, "final_pipelin": 260, "freez": 260, "remap": 260, "confus": 260, "arbitrarili": 260, "template_pipelin": [260, 272], "input1": 260, "input2": 260, "thu": [260, 265], "override_m": 260, "node_func1": 260, "intermediary_output": 260, "node_func2": 260, "alpha_pipelin": 260, "beta_pipelin": 260, "adder_nod": 261, "adding_a_and_b": 261, "bound": 261, "resolut": [261, 262], "arg1": 261, "arg2": 261, "example_report": 261, "combined_report": 261, "uk_reporting_nod": 261, "uk_input1": 261, "uk_input2": 261, "uk": 261, "ge_reporting_nod": 261, "ge_input1": 261, "ge_input2": 261, "node_tag": [261, 262], "moreov": 261, "pipeline_tag": [261, 262], "haven": [261, 266, 280, 281, 282, 283], "lazili": 261, "chunkwisecsvdataset": 261, "decisiontreeclassifi": 261, "labelencod": 261, "tree": 261, "accuracy_scor": 261, "data_train": 261, "frac": 261, "data_test": 261, "target_column": 261, "label_encod": 261, "variant": 261, "chunkwis": 261, "_overwrit": 261, "smaller": [261, 266], "475": 261, "331": 261, "514": 261, "105": 261, "varianc": [262, 264, 265], "mean_so": [262, 265], "m2": [262, 265], "variance_pipelin": 262, "mean_nod": [262, 265], "variance_nod": [262, 265], "pipeline_d": 262, "last_nod": 262, "pipeline_al": 262, "readili": 262, "co": 262, "strang": 262, "input1kedro": 262, "output1": 262, "risk": 262, "disconnect": 262, "improperli": 262, "segment": 262, "input1_kedro": 262, "output1_kedro": 262, "aforement": 263, "dp": 263, "data_processing_pipelin": 263, "data_science_pipelin": 263, "remind": 263, "centric": 263, "find_pipelin": [263, 264], "travers": 263, "data_engin": 263, "scarc": 264, "ram": 264, "dry": 264, "dryrunn": 264, "neccessari": 264, "dry_runn": 264, "input_nam": 264, "missing_input": 264, "03": 264, "24": 264, "09": [264, 268, 272, 273], "482": 264, "483": 264, "my_pipelin": 264, "tackl": 264, "outsourc": 264, "ultim": [264, 266], "666666666666667": [264, 265], "lambdadataset": 264, "pickler": 264, "ouput": [264, 265], "tag1": 264, "tag2": 264, "tag3": 264, "pipeline1": 264, "nodes_nam": 264, "env1": 264, "dash": 264, "full_pipelin": 265, "recomput": 265, "sliced_pipelin": 265, "n_json": 265, "portion": [266, 272], "unfamiliar": 266, "premis": 266, "2160": [266, 276], "tourism": [266, 276], "industri": [266, 276], "boom": [266, 276], "thousand": [266, 276], "tourist": [266, 276], "moon": [266, 275, 276], "amen": [266, 276], "trip": [266, 276], "reader": [266, 276], "fabric": 266, "astyp": [266, 273], "d_check_complet": [266, 272, 273, 275], "moon_clearance_complet": [266, 272, 273, 275], "rated_shuttl": [266, 273], "left_on": [266, 273], "right_on": [266, 273], "company_id": [266, 273, 275], "model_select": [266, 272], "train_test_split": [266, 272], "passenger_capac": [266, 272, 283], "crew": [266, 272], "review_scores_r": [266, 272], "linear_model": [266, 272], "safe_load": 266, "tempt": 266, "harder": 266, "yaml_fil": 266, "encompass": 266, "seem": 266, "saw": [266, 268], "TO": 266, "FOR": 266, "ised": 266, "blown": 266, "discret": 266, "big_funct": 266, "big": 266, "spread": 266, "mayb": 266, "clearli": 266, "vision": 266, "_parse_monei": [266, 273], "42": 266, "501": 266, "52": 266, "var": 266, "1k": 266, "dv_x85xj37ldpdp2ff099lrh0000gn": 266, "ipykernel_45577": 266, "99869": 266, "109": 266, "9662": 266, "futurewarn": 266, "liter": 266, "45853658630609717": 266, "probabl": 267, "liber": 267, "perfect": 267, "gradual": 267, "techniqu": 267, "example_num_train_it": 268, "example_learning_r": 268, "sepal_length": 268, "sepal_width": 268, "petal_length": 268, "petal_width": 268, "145": 268, "146": 268, "147": 268, "149": 268, "2021": 268, "13t15": 268, "08": [268, 272, 273], "255z": 268, "posixpath": 268, "kedro_project": 268, "some_act": 268, "came": 268, "my_notebook": 268, "ipynb": 268, "kernelspec": 268, "kernel_nam": 268, "unabl": 268, "qt": 268, "kedro_iri": 268, "qtconsol": 268, "noth": 268, "trick": 268, "vanilla": 268, "example_dataset_1": 269, "example_dataset_2": 269, "df_2": 269, "messi": 270, "unrefin": 270, "insight": 270, "expertis": 270, "skill": 270, "mathemat": 270, "joke": 270, "someon": 270, "trace": 270, "pictur": 270, "lot": 270, "everyon": 270, "idea": 270, "sole": 270, "mutabl": 270, "chonki": 270, "anim": 270, "plump": 270, "round": 270, "heavier": 270, "averag": [270, 283], "likewis": [270, 275], "bulki": 270, "parameters_data_sci": 272, "linear": 272, "regress": 272, "462": 272, "89": [272, 273], "occas": 272, "regressor_act": 272, "regressor_candid": 272, "41": 272, "y_t": 272, "rain": 272, "candidate_modelling_pip": 272, "elin": 272, "active_model": 272, "ling_pipelin": 272, "ate_modelling_pipelin": 272, "449": 272, "multithread": 272, "prepar": 273, "parameters_data_process": 273, "scratch": 273, "43": 273, "46": 273, "temporari": 273, "garbag": 273, "collector": 273, "28": 273, "leisur": 273, "breath": 273, "summaris": 273, "far": 273, "malt": 273, "helmhold": 273, "unsplash": [273, 276], "proceed": 274, "_build": 274, "english": 274, "restor": 274, "markdown": 274, "myst": 274, "autodoc": 274, "autosummari": 274, "autosummary_gener": 274, "apidoc": 274, "toctre": 274, "touch": 274, "fiction": 275, "travel": 275, "fleet": 275, "rate": 275, "spacecraft": 275, "passeng": [275, 283], "company_loc": 275, "total_fleet_count": 275, "35029": 275, "niue": 275, "30292": 275, "anguilla": 275, "19032": 275, "russian": 275, "feder": 275, "8238": 275, "91": 275, "barbado": 275, "30342": 275, "nan": 275, "sao": 275, "tome": 275, "shuttle_loc": 275, "shuttle_typ": [275, 283], "engine_typ": 275, "63561": 275, "v5": 275, "quantum": 275, "325": 275, "36260": 275, "780": 275, "57015": 275, "715": 275, "14035": 275, "plasma": 275, "770": 275, "10036": 275, "v2": 275, "approxim": 276, "diaz": 276, "hit": 276, "errno": 277, "kedro_reload": 277, "kedro_project_setup": 277, "36": 277, "158": 277, "resum": 277, "_lib": 277, "pyx": 277, "textread": 277, "__cinit__": 277, "689": 277, "_setup_parser_sourc": 277, "exc": 277, "sharabl": 278, "jupyterlab_serv": 278, "cov": 278, "sneak": 278, "refresh": 280, "autoreload": 280, "my_shareable_pipelin": 280, "preview_arg": 281, "nrow": 281, "lower": 282, "modal": 282, "dialog": 282, "plotlydataset": 283, "shuttle_passenger_capacity_plot_exp": 283, "shuttle_passenger_capacity_plot_go": 283, "graph_obj": 283, "compare_passenger_capacity_exp": 283, "groupbi": 283, "numeric_onli": 283, "reset_index": 283, "graph_object": 283, "compare_passenger_capacity_go": 283, "data_fram": 283, "dummy_confusion_matrix": 283}, "objects": {"": [[59, 0, 0, "-", "kedro"], [205, 0, 0, "-", "kedro_datasets"]], "kedro": [[60, 1, 1, "", "KedroPythonVersionWarning"], [61, 0, 0, "-", "config"], [66, 0, 0, "-", "extras"], [111, 0, 0, "-", "framework"], [172, 0, 0, "-", "io"], [185, 0, 0, "-", "ipython"], [189, 0, 0, "-", "logging"], [191, 0, 0, "-", "pipeline"], [197, 0, 0, "-", "runner"], [203, 0, 0, "-", "utils"]], "kedro.KedroPythonVersionWarning": [[60, 2, 1, "", "args"], [60, 3, 1, "", "with_traceback"]], "kedro.config": [[62, 1, 1, "", "ConfigLoader"], [63, 1, 1, "", "MissingConfigException"], [64, 1, 1, "", "OmegaConfigLoader"], [65, 1, 1, "", "TemplatedConfigLoader"]], "kedro.config.ConfigLoader": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "clear"], [62, 4, 1, "", "conf_paths"], [62, 3, 1, "", "copy"], [62, 3, 1, "", "fromkeys"], [62, 3, 1, "", "get"], [62, 3, 1, "", "items"], [62, 3, 1, "", "keys"], [62, 3, 1, "", "pop"], [62, 3, 1, "", "popitem"], [62, 3, 1, "", "setdefault"], [62, 3, 1, "", "update"], [62, 3, 1, "", "values"]], "kedro.config.MissingConfigException": [[63, 2, 1, "", "args"], [63, 3, 1, "", "with_traceback"]], "kedro.config.OmegaConfigLoader": [[64, 3, 1, "", "__init__"], [64, 3, 1, "", "clear"], [64, 3, 1, "", "copy"], [64, 3, 1, "", "fromkeys"], [64, 3, 1, "", "get"], [64, 3, 1, "", "items"], [64, 3, 1, "", "keys"], [64, 3, 1, "", "load_and_merge_dir_config"], [64, 3, 1, "", "pop"], [64, 3, 1, "", "popitem"], [64, 3, 1, "", "setdefault"], [64, 3, 1, "", "update"], [64, 3, 1, "", "values"]], "kedro.config.TemplatedConfigLoader": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "clear"], [65, 4, 1, "", "conf_paths"], [65, 3, 1, "", "copy"], [65, 3, 1, "", "fromkeys"], [65, 3, 1, "", "get"], [65, 3, 1, "", "items"], [65, 3, 1, "", "keys"], [65, 3, 1, "", "pop"], [65, 3, 1, "", "popitem"], [65, 3, 1, "", "setdefault"], [65, 3, 1, "", "update"], [65, 3, 1, "", "values"]], "kedro.extras": [[67, 0, 0, "-", "datasets"], [106, 0, 0, "-", "extensions"], [108, 0, 0, "-", "logging"]], "kedro.extras.datasets.api": [[68, 1, 1, "", "APIDataSet"]], "kedro.extras.datasets.api.APIDataSet": [[68, 3, 1, "", "__init__"], [68, 3, 1, "", "exists"], [68, 3, 1, "", "from_config"], [68, 3, 1, "", "load"], [68, 3, 1, "", "release"], [68, 3, 1, "", "save"]], "kedro.extras.datasets.biosequence": [[69, 1, 1, "", "BioSequenceDataSet"]], "kedro.extras.datasets.biosequence.BioSequenceDataSet": [[69, 2, 1, "", "DEFAULT_LOAD_ARGS"], [69, 2, 1, "", "DEFAULT_SAVE_ARGS"], [69, 3, 1, "", "__init__"], [69, 3, 1, "", "exists"], [69, 3, 1, "", "from_config"], [69, 3, 1, "", "invalidate_cache"], [69, 3, 1, "", "load"], [69, 3, 1, "", "release"], [69, 3, 1, "", "save"]], "kedro.extras.datasets.dask": [[70, 1, 1, "", "ParquetDataSet"]], "kedro.extras.datasets.dask.ParquetDataSet": [[70, 2, 1, "", "DEFAULT_LOAD_ARGS"], [70, 2, 1, "", "DEFAULT_SAVE_ARGS"], [70, 3, 1, "", "__init__"], [70, 3, 1, "", "exists"], [70, 3, 1, "", "from_config"], [70, 4, 1, "", "fs_args"], [70, 3, 1, "", "load"], [70, 3, 1, "", "release"], [70, 3, 1, "", "save"]], "kedro.extras.datasets.email": [[71, 1, 1, "", "EmailMessageDataSet"]], "kedro.extras.datasets.email.EmailMessageDataSet": [[71, 2, 1, "", "DEFAULT_LOAD_ARGS"], [71, 2, 1, "", "DEFAULT_SAVE_ARGS"], [71, 3, 1, "", "__init__"], [71, 3, 1, "", "exists"], [71, 3, 1, "", "from_config"], [71, 3, 1, "", "load"], [71, 3, 1, "", "release"], [71, 3, 1, "", "resolve_load_version"], [71, 3, 1, "", "resolve_save_version"], [71, 3, 1, "", "save"]], "kedro.extras.datasets.geopandas": [[72, 1, 1, "", "GeoJSONDataSet"]], "kedro.extras.datasets.geopandas.GeoJSONDataSet": [[72, 2, 1, "", "DEFAULT_LOAD_ARGS"], [72, 2, 1, "", "DEFAULT_SAVE_ARGS"], [72, 3, 1, "", "__init__"], [72, 3, 1, "", "exists"], [72, 3, 1, "", "from_config"], [72, 3, 1, "", "invalidate_cache"], [72, 3, 1, "", "load"], [72, 3, 1, "", "release"], [72, 3, 1, "", "resolve_load_version"], [72, 3, 1, "", "resolve_save_version"], [72, 3, 1, "", "save"]], "kedro.extras.datasets.holoviews": [[73, 1, 1, "", "HoloviewsWriter"]], "kedro.extras.datasets.holoviews.HoloviewsWriter": [[73, 2, 1, "", "DEFAULT_SAVE_ARGS"], [73, 3, 1, "", "__init__"], [73, 3, 1, "", "exists"], [73, 3, 1, "", "from_config"], [73, 3, 1, "", "load"], [73, 3, 1, "", "release"], [73, 3, 1, "", "resolve_load_version"], [73, 3, 1, "", "resolve_save_version"], [73, 3, 1, "", "save"]], "kedro.extras.datasets.json": [[74, 1, 1, "", "JSONDataSet"]], "kedro.extras.datasets.json.JSONDataSet": [[74, 2, 1, "", "DEFAULT_SAVE_ARGS"], [74, 3, 1, "", "__init__"], [74, 3, 1, "", "exists"], [74, 3, 1, "", "from_config"], [74, 3, 1, "", "load"], [74, 3, 1, "", "release"], [74, 3, 1, "", "resolve_load_version"], [74, 3, 1, "", "resolve_save_version"], [74, 3, 1, "", "save"]], "kedro.extras.datasets.matplotlib": [[75, 1, 1, "", "MatplotlibWriter"]], "kedro.extras.datasets.matplotlib.MatplotlibWriter": [[75, 2, 1, "", "DEFAULT_SAVE_ARGS"], [75, 3, 1, "", "__init__"], [75, 3, 1, "", "exists"], [75, 3, 1, "", "from_config"], [75, 3, 1, "", "load"], [75, 3, 1, "", "release"], [75, 3, 1, "", "resolve_load_version"], [75, 3, 1, "", "resolve_save_version"], [75, 3, 1, "", "save"]], "kedro.extras.datasets.networkx": [[76, 1, 1, "", "GMLDataSet"], [77, 1, 1, "", "GraphMLDataSet"], [78, 1, 1, "", "JSONDataSet"]], "kedro.extras.datasets.networkx.GMLDataSet": [[76, 2, 1, "", "DEFAULT_LOAD_ARGS"], [76, 2, 1, "", "DEFAULT_SAVE_ARGS"], [76, 3, 1, "", "__init__"], [76, 3, 1, "", "exists"], [76, 3, 1, "", "from_config"], [76, 3, 1, "", "load"], [76, 3, 1, "", "release"], [76, 3, 1, "", "resolve_load_version"], [76, 3, 1, "", "resolve_save_version"], [76, 3, 1, "", "save"]], "kedro.extras.datasets.networkx.GraphMLDataSet": [[77, 2, 1, "", "DEFAULT_LOAD_ARGS"], [77, 2, 1, "", "DEFAULT_SAVE_ARGS"], [77, 3, 1, "", "__init__"], [77, 3, 1, "", "exists"], [77, 3, 1, "", "from_config"], [77, 3, 1, "", "load"], [77, 3, 1, "", "release"], [77, 3, 1, "", "resolve_load_version"], [77, 3, 1, "", "resolve_save_version"], [77, 3, 1, "", "save"]], "kedro.extras.datasets.networkx.JSONDataSet": [[78, 2, 1, "", "DEFAULT_LOAD_ARGS"], [78, 2, 1, "", "DEFAULT_SAVE_ARGS"], [78, 3, 1, "", "__init__"], [78, 3, 1, "", "exists"], [78, 3, 1, "", "from_config"], [78, 3, 1, "", "load"], [78, 3, 1, "", "release"], [78, 3, 1, "", "resolve_load_version"], [78, 3, 1, "", "resolve_save_version"], [78, 3, 1, "", "save"]], "kedro.extras.datasets.pandas": [[79, 1, 1, "", "CSVDataSet"], [80, 1, 1, "", "ExcelDataSet"], [81, 1, 1, "", "FeatherDataSet"], [82, 1, 1, "", "GBQQueryDataSet"], [83, 1, 1, "", "GBQTableDataSet"], [84, 1, 1, "", "GenericDataSet"], [85, 1, 1, "", "HDFDataSet"], [86, 1, 1, "", "JSONDataSet"], [87, 1, 1, "", "ParquetDataSet"], [88, 1, 1, "", "SQLQueryDataSet"], [89, 1, 1, "", "SQLTableDataSet"], [90, 1, 1, "", "XMLDataSet"]], "kedro.extras.datasets.pandas.CSVDataSet": [[79, 2, 1, "", "DEFAULT_LOAD_ARGS"], [79, 2, 1, "", "DEFAULT_SAVE_ARGS"], [79, 3, 1, "", "__init__"], [79, 3, 1, "", "exists"], [79, 3, 1, "", "from_config"], [79, 3, 1, "", "load"], [79, 3, 1, "", "release"], [79, 3, 1, "", "resolve_load_version"], [79, 3, 1, "", "resolve_save_version"], [79, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.ExcelDataSet": [[80, 2, 1, "", "DEFAULT_LOAD_ARGS"], [80, 2, 1, "", "DEFAULT_SAVE_ARGS"], [80, 3, 1, "", "__init__"], [80, 3, 1, "", "exists"], [80, 3, 1, "", "from_config"], [80, 3, 1, "", "load"], [80, 3, 1, "", "release"], [80, 3, 1, "", "resolve_load_version"], [80, 3, 1, "", "resolve_save_version"], [80, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.FeatherDataSet": [[81, 2, 1, "", "DEFAULT_LOAD_ARGS"], [81, 2, 1, "", "DEFAULT_SAVE_ARGS"], [81, 3, 1, "", "__init__"], [81, 3, 1, "", "exists"], [81, 3, 1, "", "from_config"], [81, 3, 1, "", "load"], [81, 3, 1, "", "release"], [81, 3, 1, "", "resolve_load_version"], [81, 3, 1, "", "resolve_save_version"], [81, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.GBQQueryDataSet": [[82, 2, 1, "", "DEFAULT_LOAD_ARGS"], [82, 3, 1, "", "__init__"], [82, 3, 1, "", "exists"], [82, 3, 1, "", "from_config"], [82, 3, 1, "", "load"], [82, 3, 1, "", "release"], [82, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.GBQTableDataSet": [[83, 2, 1, "", "DEFAULT_LOAD_ARGS"], [83, 2, 1, "", "DEFAULT_SAVE_ARGS"], [83, 3, 1, "", "__init__"], [83, 3, 1, "", "exists"], [83, 3, 1, "", "from_config"], [83, 3, 1, "", "load"], [83, 3, 1, "", "release"], [83, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.GenericDataSet": [[84, 2, 1, "", "DEFAULT_LOAD_ARGS"], [84, 2, 1, "", "DEFAULT_SAVE_ARGS"], [84, 3, 1, "", "__init__"], [84, 3, 1, "", "exists"], [84, 3, 1, "", "from_config"], [84, 3, 1, "", "load"], [84, 3, 1, "", "release"], [84, 3, 1, "", "resolve_load_version"], [84, 3, 1, "", "resolve_save_version"], [84, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.HDFDataSet": [[85, 2, 1, "", "DEFAULT_LOAD_ARGS"], [85, 2, 1, "", "DEFAULT_SAVE_ARGS"], [85, 3, 1, "", "__init__"], [85, 3, 1, "", "exists"], [85, 3, 1, "", "from_config"], [85, 3, 1, "", "load"], [85, 3, 1, "", "release"], [85, 3, 1, "", "resolve_load_version"], [85, 3, 1, "", "resolve_save_version"], [85, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.JSONDataSet": [[86, 2, 1, "", "DEFAULT_LOAD_ARGS"], [86, 2, 1, "", "DEFAULT_SAVE_ARGS"], [86, 3, 1, "", "__init__"], [86, 3, 1, "", "exists"], [86, 3, 1, "", "from_config"], [86, 3, 1, "", "load"], [86, 3, 1, "", "release"], [86, 3, 1, "", "resolve_load_version"], [86, 3, 1, "", "resolve_save_version"], [86, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.ParquetDataSet": [[87, 2, 1, "", "DEFAULT_LOAD_ARGS"], [87, 2, 1, "", "DEFAULT_SAVE_ARGS"], [87, 3, 1, "", "__init__"], [87, 3, 1, "", "exists"], [87, 3, 1, "", "from_config"], [87, 3, 1, "", "load"], [87, 3, 1, "", "release"], [87, 3, 1, "", "resolve_load_version"], [87, 3, 1, "", "resolve_save_version"], [87, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.SQLQueryDataSet": [[88, 3, 1, "", "__init__"], [88, 3, 1, "", "create_connection"], [88, 2, 1, "", "engines"], [88, 3, 1, "", "exists"], [88, 3, 1, "", "from_config"], [88, 3, 1, "", "load"], [88, 3, 1, "", "release"], [88, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.SQLTableDataSet": [[89, 2, 1, "", "DEFAULT_LOAD_ARGS"], [89, 2, 1, "", "DEFAULT_SAVE_ARGS"], [89, 3, 1, "", "__init__"], [89, 3, 1, "", "create_connection"], [89, 2, 1, "", "engines"], [89, 3, 1, "", "exists"], [89, 3, 1, "", "from_config"], [89, 3, 1, "", "load"], [89, 3, 1, "", "release"], [89, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.XMLDataSet": [[90, 2, 1, "", "DEFAULT_LOAD_ARGS"], [90, 2, 1, "", "DEFAULT_SAVE_ARGS"], [90, 3, 1, "", "__init__"], [90, 3, 1, "", "exists"], [90, 3, 1, "", "from_config"], [90, 3, 1, "", "load"], [90, 3, 1, "", "release"], [90, 3, 1, "", "resolve_load_version"], [90, 3, 1, "", "resolve_save_version"], [90, 3, 1, "", "save"]], "kedro.extras.datasets.pickle": [[91, 1, 1, "", "PickleDataSet"]], "kedro.extras.datasets.pickle.PickleDataSet": [[91, 2, 1, "", "DEFAULT_LOAD_ARGS"], [91, 2, 1, "", "DEFAULT_SAVE_ARGS"], [91, 3, 1, "", "__init__"], [91, 3, 1, "", "exists"], [91, 3, 1, "", "from_config"], [91, 3, 1, "", "load"], [91, 3, 1, "", "release"], [91, 3, 1, "", "resolve_load_version"], [91, 3, 1, "", "resolve_save_version"], [91, 3, 1, "", "save"]], "kedro.extras.datasets.pillow": [[92, 1, 1, "", "ImageDataSet"]], "kedro.extras.datasets.pillow.ImageDataSet": [[92, 2, 1, "", "DEFAULT_SAVE_ARGS"], [92, 3, 1, "", "__init__"], [92, 3, 1, "", "exists"], [92, 3, 1, "", "from_config"], [92, 3, 1, "", "load"], [92, 3, 1, "", "release"], [92, 3, 1, "", "resolve_load_version"], [92, 3, 1, "", "resolve_save_version"], [92, 3, 1, "", "save"]], "kedro.extras.datasets.plotly": [[93, 1, 1, "", "JSONDataSet"], [94, 1, 1, "", "PlotlyDataSet"]], "kedro.extras.datasets.plotly.JSONDataSet": [[93, 2, 1, "", "DEFAULT_LOAD_ARGS"], [93, 2, 1, "", "DEFAULT_SAVE_ARGS"], [93, 3, 1, "", "__init__"], [93, 3, 1, "", "exists"], [93, 3, 1, "", "from_config"], [93, 3, 1, "", "load"], [93, 3, 1, "", "release"], [93, 3, 1, "", "resolve_load_version"], [93, 3, 1, "", "resolve_save_version"], [93, 3, 1, "", "save"]], "kedro.extras.datasets.plotly.PlotlyDataSet": [[94, 2, 1, "", "DEFAULT_LOAD_ARGS"], [94, 2, 1, "", "DEFAULT_SAVE_ARGS"], [94, 3, 1, "", "__init__"], [94, 3, 1, "", "exists"], [94, 3, 1, "", "from_config"], [94, 3, 1, "", "load"], [94, 3, 1, "", "release"], [94, 3, 1, "", "resolve_load_version"], [94, 3, 1, "", "resolve_save_version"], [94, 3, 1, "", "save"]], "kedro.extras.datasets.redis": [[95, 1, 1, "", "PickleDataSet"]], "kedro.extras.datasets.redis.PickleDataSet": [[95, 2, 1, "", "DEFAULT_LOAD_ARGS"], [95, 2, 1, "", "DEFAULT_REDIS_URL"], [95, 2, 1, "", "DEFAULT_SAVE_ARGS"], [95, 3, 1, "", "__init__"], [95, 3, 1, "", "exists"], [95, 3, 1, "", "from_config"], [95, 3, 1, "", "load"], [95, 3, 1, "", "release"], [95, 3, 1, "", "save"]], "kedro.extras.datasets.spark": [[96, 1, 1, "", "DeltaTableDataSet"], [97, 1, 1, "", "SparkDataSet"], [98, 1, 1, "", "SparkHiveDataSet"], [99, 1, 1, "", "SparkJDBCDataSet"]], "kedro.extras.datasets.spark.DeltaTableDataSet": [[96, 3, 1, "", "__init__"], [96, 3, 1, "", "exists"], [96, 3, 1, "", "from_config"], [96, 3, 1, "", "load"], [96, 3, 1, "", "release"], [96, 3, 1, "", "save"]], "kedro.extras.datasets.spark.SparkDataSet": [[97, 2, 1, "", "DEFAULT_LOAD_ARGS"], [97, 2, 1, "", "DEFAULT_SAVE_ARGS"], [97, 3, 1, "", "__init__"], [97, 3, 1, "", "exists"], [97, 3, 1, "", "from_config"], [97, 3, 1, "", "load"], [97, 3, 1, "", "release"], [97, 3, 1, "", "resolve_load_version"], [97, 3, 1, "", "resolve_save_version"], [97, 3, 1, "", "save"]], "kedro.extras.datasets.spark.SparkHiveDataSet": [[98, 2, 1, "", "DEFAULT_SAVE_ARGS"], [98, 3, 1, "", "__init__"], [98, 3, 1, "", "exists"], [98, 3, 1, "", "from_config"], [98, 3, 1, "", "load"], [98, 3, 1, "", "release"], [98, 3, 1, "", "save"]], "kedro.extras.datasets.spark.SparkJDBCDataSet": [[99, 2, 1, "", "DEFAULT_LOAD_ARGS"], [99, 2, 1, "", "DEFAULT_SAVE_ARGS"], [99, 3, 1, "", "__init__"], [99, 3, 1, "", "exists"], [99, 3, 1, "", "from_config"], [99, 3, 1, "", "load"], [99, 3, 1, "", "release"], [99, 3, 1, "", "save"]], "kedro.extras.datasets.svmlight": [[100, 1, 1, "", "SVMLightDataSet"]], "kedro.extras.datasets.svmlight.SVMLightDataSet": [[100, 2, 1, "", "DEFAULT_LOAD_ARGS"], [100, 2, 1, "", "DEFAULT_SAVE_ARGS"], [100, 3, 1, "", "exists"], [100, 3, 1, "", "from_config"], [100, 3, 1, "", "load"], [100, 3, 1, "", "release"], [100, 3, 1, "", "resolve_load_version"], [100, 3, 1, "", "resolve_save_version"], [100, 3, 1, "", "save"]], "kedro.extras.datasets.tensorflow": [[101, 1, 1, "", "TensorFlowModelDataset"]], "kedro.extras.datasets.tensorflow.TensorFlowModelDataset": [[101, 2, 1, "", "DEFAULT_LOAD_ARGS"], [101, 2, 1, "", "DEFAULT_SAVE_ARGS"], [101, 3, 1, "", "__init__"], [101, 3, 1, "", "exists"], [101, 3, 1, "", "from_config"], [101, 3, 1, "", "load"], [101, 3, 1, "", "release"], [101, 3, 1, "", "resolve_load_version"], [101, 3, 1, "", "resolve_save_version"], [101, 3, 1, "", "save"]], "kedro.extras.datasets.text": [[102, 1, 1, "", "TextDataSet"]], "kedro.extras.datasets.text.TextDataSet": [[102, 3, 1, "", "__init__"], [102, 3, 1, "", "exists"], [102, 3, 1, "", "from_config"], [102, 3, 1, "", "load"], [102, 3, 1, "", "release"], [102, 3, 1, "", "resolve_load_version"], [102, 3, 1, "", "resolve_save_version"], [102, 3, 1, "", "save"]], "kedro.extras.datasets.tracking": [[103, 1, 1, "", "JSONDataSet"], [104, 1, 1, "", "MetricsDataSet"]], "kedro.extras.datasets.tracking.JSONDataSet": [[103, 2, 1, "", "DEFAULT_SAVE_ARGS"], [103, 3, 1, "", "__init__"], [103, 3, 1, "", "exists"], [103, 3, 1, "", "from_config"], [103, 3, 1, "", "load"], [103, 3, 1, "", "release"], [103, 3, 1, "", "resolve_load_version"], [103, 3, 1, "", "resolve_save_version"], [103, 3, 1, "", "save"], [103, 2, 1, "", "versioned"]], "kedro.extras.datasets.tracking.MetricsDataSet": [[104, 2, 1, "", "DEFAULT_SAVE_ARGS"], [104, 3, 1, "", "__init__"], [104, 3, 1, "", "exists"], [104, 3, 1, "", "from_config"], [104, 3, 1, "", "load"], [104, 3, 1, "", "release"], [104, 3, 1, "", "resolve_load_version"], [104, 3, 1, "", "resolve_save_version"], [104, 3, 1, "", "save"], [104, 2, 1, "", "versioned"]], "kedro.extras.datasets.yaml": [[105, 1, 1, "", "YAMLDataSet"]], "kedro.extras.datasets.yaml.YAMLDataSet": [[105, 2, 1, "", "DEFAULT_SAVE_ARGS"], [105, 3, 1, "", "__init__"], [105, 3, 1, "", "exists"], [105, 3, 1, "", "from_config"], [105, 3, 1, "", "load"], [105, 3, 1, "", "release"], [105, 3, 1, "", "resolve_load_version"], [105, 3, 1, "", "resolve_save_version"], [105, 3, 1, "", "save"]], "kedro.extras.extensions": [[107, 0, 0, "-", "ipython"]], "kedro.extras.logging": [[109, 0, 0, "-", "color_logger"]], "kedro.extras.logging.color_logger": [[110, 1, 1, "", "ColorHandler"]], "kedro.framework": [[112, 0, 0, "-", "cli"], [144, 0, 0, "-", "context"], [147, 0, 0, "-", "hooks"], [156, 0, 0, "-", "project"], [161, 0, 0, "-", "session"], [169, 0, 0, "-", "startup"]], "kedro.framework.cli": [[113, 0, 0, "-", "catalog"], [114, 0, 0, "-", "cli"], [117, 0, 0, "-", "hooks"], [124, 0, 0, "-", "jupyter"], [126, 0, 0, "-", "micropkg"], [128, 0, 0, "-", "pipeline"], [130, 0, 0, "-", "project"], [131, 0, 0, "-", "registry"], [132, 0, 0, "-", "starters"], [134, 0, 0, "-", "utils"]], "kedro.framework.cli.cli": [[115, 1, 1, "", "KedroCLI"], [116, 5, 1, "", "main"]], "kedro.framework.cli.hooks": [[118, 0, 0, "-", "manager"], [121, 0, 0, "-", "markers"], [122, 0, 0, "-", "specs"]], "kedro.framework.cli.hooks.manager": [[119, 1, 1, "", "CLIHooksManager"], [120, 5, 1, "", "get_cli_hook_manager"]], "kedro.framework.cli.hooks.specs": [[123, 1, 1, "", "CLICommandSpecs"]], "kedro.framework.cli.hooks.specs.CLICommandSpecs": [[123, 3, 1, "", "after_command_run"], [123, 3, 1, "", "before_command_run"]], "kedro.framework.cli.jupyter": [[125, 1, 1, "", "JupyterCommandGroup"]], "kedro.framework.cli.jupyter.JupyterCommandGroup": [[125, 3, 1, "", "list_commands"]], "kedro.framework.cli.micropkg": [[127, 5, 1, "", "safe_extract"]], "kedro.framework.cli.pipeline": [[129, 1, 1, "", "PipelineArtifacts"]], "kedro.framework.cli.pipeline.PipelineArtifacts": [[129, 3, 1, "", "count"], [129, 3, 1, "", "index"], [129, 2, 1, "", "pipeline_conf"], [129, 2, 1, "", "pipeline_dir"], [129, 2, 1, "", "pipeline_tests"]], "kedro.framework.cli.starters": [[133, 1, 1, "", "KedroStarterSpec"]], "kedro.framework.cli.starters.KedroStarterSpec": [[133, 2, 1, "", "alias"], [133, 2, 1, "", "directory"], [133, 2, 1, "", "origin"], [133, 2, 1, "", "template_path"]], "kedro.framework.cli.utils": [[135, 1, 1, "", "CommandCollection"], [136, 1, 1, "", "KedroCliError"], [137, 5, 1, "", "command_with_verbosity"], [138, 5, 1, "", "env_option"], [139, 5, 1, "", "find_stylesheets"], [140, 5, 1, "", "forward_command"], [141, 5, 1, "", "get_pkg_version"], [142, 5, 1, "", "python_call"], [143, 5, 1, "", "split_string"]], "kedro.framework.cli.utils.KedroCliError": [[136, 2, 1, "", "VERBOSE_ERROR"], [136, 2, 1, "", "args"], [136, 2, 1, "", "exit_code"], [136, 3, 1, "", "format_message"], [136, 3, 1, "", "show"], [136, 3, 1, "", "with_traceback"]], "kedro.framework.context": [[145, 1, 1, "", "KedroContext"], [146, 1, 1, "", "KedroContextError"]], "kedro.framework.context.KedroContext": [[145, 3, 1, "", "__init__"], [145, 4, 1, "", "catalog"], [145, 4, 1, "", "config_loader"], [145, 4, 1, "", "env"], [145, 4, 1, "", "params"], [145, 4, 1, "", "project_path"]], "kedro.framework.context.KedroContextError": [[146, 2, 1, "", "args"], [146, 3, 1, "", "with_traceback"]], "kedro.framework.hooks": [[148, 0, 0, "-", "manager"], [149, 0, 0, "-", "markers"], [150, 0, 0, "-", "specs"]], "kedro.framework.hooks.specs": [[151, 1, 1, "", "DataCatalogSpecs"], [152, 1, 1, "", "DatasetSpecs"], [153, 1, 1, "", "KedroContextSpecs"], [154, 1, 1, "", "NodeSpecs"], [155, 1, 1, "", "PipelineSpecs"]], "kedro.framework.hooks.specs.DataCatalogSpecs": [[151, 3, 1, "", "after_catalog_created"]], "kedro.framework.hooks.specs.DatasetSpecs": [[152, 3, 1, "", "after_dataset_loaded"], [152, 3, 1, "", "after_dataset_saved"], [152, 3, 1, "", "before_dataset_loaded"], [152, 3, 1, "", "before_dataset_saved"]], "kedro.framework.hooks.specs.KedroContextSpecs": [[153, 3, 1, "", "after_context_created"]], "kedro.framework.hooks.specs.NodeSpecs": [[154, 3, 1, "", "after_node_run"], [154, 3, 1, "", "before_node_run"], [154, 3, 1, "", "on_node_error"]], "kedro.framework.hooks.specs.PipelineSpecs": [[155, 3, 1, "", "after_pipeline_run"], [155, 3, 1, "", "before_pipeline_run"], [155, 3, 1, "", "on_pipeline_error"]], "kedro.framework.project": [[157, 5, 1, "", "configure_logging"], [158, 5, 1, "", "configure_project"], [159, 5, 1, "", "find_pipelines"], [160, 5, 1, "", "validate_settings"]], "kedro.framework.session": [[162, 0, 0, "-", "session"], [165, 0, 0, "-", "shelvestore"], [167, 0, 0, "-", "store"]], "kedro.framework.session.session": [[163, 1, 1, "", "KedroSession"], [164, 1, 1, "", "KedroSessionError"]], "kedro.framework.session.session.KedroSession": [[163, 3, 1, "", "close"], [163, 3, 1, "", "create"], [163, 3, 1, "", "load_context"], [163, 3, 1, "", "run"], [163, 4, 1, "", "store"]], "kedro.framework.session.session.KedroSessionError": [[164, 2, 1, "", "args"], [164, 3, 1, "", "with_traceback"]], "kedro.framework.session.shelvestore": [[166, 1, 1, "", "ShelveStore"]], "kedro.framework.session.store": [[168, 1, 1, "", "BaseSessionStore"]], "kedro.framework.startup": [[170, 1, 1, "", "ProjectMetadata"], [171, 5, 1, "", "bootstrap_project"]], "kedro.framework.startup.ProjectMetadata": [[170, 2, 1, "", "config_file"], [170, 3, 1, "", "count"], [170, 3, 1, "", "index"], [170, 2, 1, "", "kedro_init_version"], [170, 2, 1, "", "package_name"], [170, 2, 1, "", "project_name"], [170, 2, 1, "", "project_path"], [170, 2, 1, "", "project_version"], [170, 2, 1, "", "source_dir"]], "kedro.io": [[173, 2, 1, "", "AbstractDataSet"], [174, 2, 1, "", "AbstractVersionedDataSet"], [175, 2, 1, "", "CachedDataSet"], [176, 1, 1, "", "DataCatalog"], [177, 2, 1, "", "DataSetAlreadyExistsError"], [178, 2, 1, "", "DataSetError"], [179, 2, 1, "", "DataSetNotFoundError"], [180, 2, 1, "", "IncrementalDataSet"], [181, 2, 1, "", "LambdaDataSet"], [182, 2, 1, "", "MemoryDataSet"], [183, 2, 1, "", "PartitionedDataSet"], [184, 1, 1, "", "Version"]], "kedro.io.DataCatalog": [[176, 3, 1, "", "__init__"], [176, 3, 1, "", "add"], [176, 3, 1, "", "add_all"], [176, 3, 1, "", "add_feed_dict"], [176, 3, 1, "", "confirm"], [176, 3, 1, "", "exists"], [176, 3, 1, "", "from_config"], [176, 3, 1, "", "list"], [176, 3, 1, "", "load"], [176, 3, 1, "", "release"], [176, 3, 1, "", "save"], [176, 3, 1, "", "shallow_copy"]], "kedro.io.Version": [[184, 3, 1, "", "count"], [184, 3, 1, "", "index"], [184, 2, 1, "", "load"], [184, 2, 1, "", "save"]], "kedro.ipython": [[186, 5, 1, "", "load_ipython_extension"], [187, 5, 1, "", "magic_reload_kedro"], [188, 5, 1, "", "reload_kedro"]], "kedro.logging": [[190, 1, 1, "", "RichHandler"]], "kedro.pipeline": [[192, 1, 1, "", "Pipeline"], [195, 5, 1, "", "node"]], "kedro.pipeline.Pipeline": [[192, 3, 1, "", "__init__"], [192, 3, 1, "", "all_inputs"], [192, 3, 1, "", "all_outputs"], [192, 3, 1, "", "data_sets"], [192, 3, 1, "", "describe"], [192, 3, 1, "", "filter"], [192, 3, 1, "", "from_inputs"], [192, 3, 1, "", "from_nodes"], [192, 4, 1, "", "grouped_nodes"], [192, 3, 1, "", "inputs"], [192, 4, 1, "", "node_dependencies"], [192, 4, 1, "", "nodes"], [192, 3, 1, "", "only_nodes"], [192, 3, 1, "", "only_nodes_with_inputs"], [192, 3, 1, "", "only_nodes_with_namespace"], [192, 3, 1, "", "only_nodes_with_outputs"], [192, 3, 1, "", "only_nodes_with_tags"], [192, 3, 1, "", "outputs"], [192, 3, 1, "", "tag"], [192, 3, 1, "", "to_json"], [192, 3, 1, "", "to_nodes"], [192, 3, 1, "", "to_outputs"]], "kedro.pipeline.modular_pipeline": [[193, 1, 1, "", "ModularPipelineError"], [194, 5, 1, "", "pipeline"]], "kedro.pipeline.modular_pipeline.ModularPipelineError": [[193, 2, 1, "", "args"], [193, 3, 1, "", "with_traceback"]], "kedro.pipeline.node": [[196, 1, 1, "", "Node"]], "kedro.pipeline.node.Node": [[196, 3, 1, "", "__init__"], [196, 4, 1, "", "confirms"], [196, 4, 1, "", "func"], [196, 4, 1, "", "inputs"], [196, 4, 1, "", "name"], [196, 4, 1, "", "namespace"], [196, 4, 1, "", "outputs"], [196, 3, 1, "", "run"], [196, 4, 1, "", "short_name"], [196, 3, 1, "", "tag"], [196, 4, 1, "", "tags"]], "kedro.runner": [[198, 1, 1, "", "AbstractRunner"], [199, 1, 1, "", "ParallelRunner"], [200, 1, 1, "", "SequentialRunner"], [201, 1, 1, "", "ThreadRunner"], [202, 5, 1, "", "run_node"]], "kedro.runner.AbstractRunner": [[198, 3, 1, "", "__init__"], [198, 3, 1, "", "create_default_data_set"], [198, 3, 1, "", "run"], [198, 3, 1, "", "run_only_missing"]], "kedro.runner.ParallelRunner": [[199, 3, 1, "", "__init__"], [199, 3, 1, "", "create_default_data_set"], [199, 3, 1, "", "run"], [199, 3, 1, "", "run_only_missing"]], "kedro.runner.SequentialRunner": [[200, 3, 1, "", "__init__"], [200, 3, 1, "", "create_default_data_set"], [200, 3, 1, "", "run"], [200, 3, 1, "", "run_only_missing"]], "kedro.runner.ThreadRunner": [[201, 3, 1, "", "__init__"], [201, 3, 1, "", "create_default_data_set"], [201, 3, 1, "", "run"], [201, 3, 1, "", "run_only_missing"]], "kedro.utils": [[204, 5, 1, "", "load_obj"]], "kedro_datasets.api": [[206, 1, 1, "", "APIDataSet"]], "kedro_datasets.api.APIDataSet": [[206, 2, 1, "", "DEFAULT_SAVE_ARGS"], [206, 3, 1, "", "__init__"], [206, 3, 1, "", "exists"], [206, 3, 1, "", "from_config"], [206, 3, 1, "", "load"], [206, 3, 1, "", "release"], [206, 3, 1, "", "save"]], "kedro_datasets.biosequence": [[207, 1, 1, "", "BioSequenceDataSet"]], "kedro_datasets.biosequence.BioSequenceDataSet": [[207, 2, 1, "", "DEFAULT_LOAD_ARGS"], [207, 2, 1, "", "DEFAULT_SAVE_ARGS"], [207, 3, 1, "", "__init__"], [207, 3, 1, "", "exists"], [207, 3, 1, "", "from_config"], [207, 3, 1, "", "invalidate_cache"], [207, 3, 1, "", "load"], [207, 3, 1, "", "release"], [207, 3, 1, "", "save"]], "kedro_datasets.dask": [[208, 1, 1, "", "ParquetDataSet"]], "kedro_datasets.dask.ParquetDataSet": [[208, 2, 1, "", "DEFAULT_LOAD_ARGS"], [208, 2, 1, "", "DEFAULT_SAVE_ARGS"], [208, 3, 1, "", "__init__"], [208, 3, 1, "", "exists"], [208, 3, 1, "", "from_config"], [208, 4, 1, "", "fs_args"], [208, 3, 1, "", "load"], [208, 3, 1, "", "release"], [208, 3, 1, "", "save"]], "kedro_datasets.databricks": [[209, 1, 1, "", "ManagedTableDataSet"]], "kedro_datasets.databricks.ManagedTableDataSet": [[209, 3, 1, "", "__init__"], [209, 3, 1, "", "exists"], [209, 3, 1, "", "from_config"], [209, 3, 1, "", "load"], [209, 3, 1, "", "release"], [209, 3, 1, "", "resolve_load_version"], [209, 3, 1, "", "resolve_save_version"], [209, 3, 1, "", "save"]], "kedro_datasets.email": [[210, 1, 1, "", "EmailMessageDataSet"]], "kedro_datasets.email.EmailMessageDataSet": [[210, 2, 1, "", "DEFAULT_LOAD_ARGS"], [210, 2, 1, "", "DEFAULT_SAVE_ARGS"], [210, 3, 1, "", "__init__"], [210, 3, 1, "", "exists"], [210, 3, 1, "", "from_config"], [210, 3, 1, "", "load"], [210, 3, 1, "", "release"], [210, 3, 1, "", "resolve_load_version"], [210, 3, 1, "", "resolve_save_version"], [210, 3, 1, "", "save"]], "kedro_datasets.geopandas": [[211, 1, 1, "", "GeoJSONDataSet"]], "kedro_datasets.geopandas.GeoJSONDataSet": [[211, 2, 1, "", "DEFAULT_LOAD_ARGS"], [211, 2, 1, "", "DEFAULT_SAVE_ARGS"], [211, 3, 1, "", "__init__"], [211, 3, 1, "", "exists"], [211, 3, 1, "", "from_config"], [211, 3, 1, "", "invalidate_cache"], [211, 3, 1, "", "load"], [211, 3, 1, "", "release"], [211, 3, 1, "", "resolve_load_version"], [211, 3, 1, "", "resolve_save_version"], [211, 3, 1, "", "save"]], "kedro_datasets.holoviews": [[212, 1, 1, "", "HoloviewsWriter"]], "kedro_datasets.holoviews.HoloviewsWriter": [[212, 2, 1, "", "DEFAULT_SAVE_ARGS"], [212, 3, 1, "", "__init__"], [212, 3, 1, "", "exists"], [212, 3, 1, "", "from_config"], [212, 3, 1, "", "load"], [212, 3, 1, "", "release"], [212, 3, 1, "", "resolve_load_version"], [212, 3, 1, "", "resolve_save_version"], [212, 3, 1, "", "save"]], "kedro_datasets.json": [[213, 1, 1, "", "JSONDataSet"]], "kedro_datasets.json.JSONDataSet": [[213, 2, 1, "", "DEFAULT_SAVE_ARGS"], [213, 3, 1, "", "__init__"], [213, 3, 1, "", "exists"], [213, 3, 1, "", "from_config"], [213, 3, 1, "", "load"], [213, 3, 1, "", "release"], [213, 3, 1, "", "resolve_load_version"], [213, 3, 1, "", "resolve_save_version"], [213, 3, 1, "", "save"]], "kedro_datasets.matplotlib": [[214, 1, 1, "", "MatplotlibWriter"]], "kedro_datasets.matplotlib.MatplotlibWriter": [[214, 2, 1, "", "DEFAULT_SAVE_ARGS"], [214, 3, 1, "", "__init__"], [214, 3, 1, "", "exists"], [214, 3, 1, "", "from_config"], [214, 3, 1, "", "load"], [214, 3, 1, "", "release"], [214, 3, 1, "", "resolve_load_version"], [214, 3, 1, "", "resolve_save_version"], [214, 3, 1, "", "save"]], "kedro_datasets.networkx": [[215, 1, 1, "", "GMLDataSet"], [216, 1, 1, "", "GraphMLDataSet"], [217, 1, 1, "", "JSONDataSet"]], "kedro_datasets.networkx.GMLDataSet": [[215, 2, 1, "", "DEFAULT_LOAD_ARGS"], [215, 2, 1, "", "DEFAULT_SAVE_ARGS"], [215, 3, 1, "", "__init__"], [215, 3, 1, "", "exists"], [215, 3, 1, "", "from_config"], [215, 3, 1, "", "load"], [215, 3, 1, "", "release"], [215, 3, 1, "", "resolve_load_version"], [215, 3, 1, "", "resolve_save_version"], [215, 3, 1, "", "save"]], "kedro_datasets.networkx.GraphMLDataSet": [[216, 2, 1, "", "DEFAULT_LOAD_ARGS"], [216, 2, 1, "", "DEFAULT_SAVE_ARGS"], [216, 3, 1, "", "__init__"], [216, 3, 1, "", "exists"], [216, 3, 1, "", "from_config"], [216, 3, 1, "", "load"], [216, 3, 1, "", "release"], [216, 3, 1, "", "resolve_load_version"], [216, 3, 1, "", "resolve_save_version"], [216, 3, 1, "", "save"]], "kedro_datasets.networkx.JSONDataSet": [[217, 2, 1, "", "DEFAULT_LOAD_ARGS"], [217, 2, 1, "", "DEFAULT_SAVE_ARGS"], [217, 3, 1, "", "__init__"], [217, 3, 1, "", "exists"], [217, 3, 1, "", "from_config"], [217, 3, 1, "", "load"], [217, 3, 1, "", "release"], [217, 3, 1, "", "resolve_load_version"], [217, 3, 1, "", "resolve_save_version"], [217, 3, 1, "", "save"]], "kedro_datasets.pandas": [[218, 1, 1, "", "CSVDataSet"], [219, 1, 1, "", "DeltaTableDataSet"], [220, 1, 1, "", "ExcelDataSet"], [221, 1, 1, "", "FeatherDataSet"], [222, 1, 1, "", "GBQQueryDataSet"], [223, 1, 1, "", "GBQTableDataSet"], [224, 1, 1, "", "GenericDataSet"], [225, 1, 1, "", "HDFDataSet"], [226, 1, 1, "", "JSONDataSet"], [227, 1, 1, "", "ParquetDataSet"], [228, 1, 1, "", "SQLQueryDataSet"], [229, 1, 1, "", "SQLTableDataSet"], [230, 1, 1, "", "XMLDataSet"]], "kedro_datasets.pandas.CSVDataSet": [[218, 2, 1, "", "DEFAULT_LOAD_ARGS"], [218, 2, 1, "", "DEFAULT_SAVE_ARGS"], [218, 3, 1, "", "__init__"], [218, 3, 1, "", "exists"], [218, 3, 1, "", "from_config"], [218, 3, 1, "", "load"], [218, 3, 1, "", "release"], [218, 3, 1, "", "resolve_load_version"], [218, 3, 1, "", "resolve_save_version"], [218, 3, 1, "", "save"]], "kedro_datasets.pandas.DeltaTableDataSet": [[219, 2, 1, "", "ACCEPTED_WRITE_MODES"], [219, 2, 1, "", "DEFAULT_LOAD_ARGS"], [219, 2, 1, "", "DEFAULT_SAVE_ARGS"], [219, 2, 1, "", "DEFAULT_WRITE_MODE"], [219, 3, 1, "", "__init__"], [219, 3, 1, "", "exists"], [219, 3, 1, "", "from_config"], [219, 4, 1, "", "fs_args"], [219, 3, 1, "", "get_loaded_version"], [219, 4, 1, "", "history"], [219, 3, 1, "", "load"], [219, 4, 1, "", "metadata"], [219, 3, 1, "", "release"], [219, 3, 1, "", "save"], [219, 4, 1, "", "schema"]], "kedro_datasets.pandas.ExcelDataSet": [[220, 2, 1, "", "DEFAULT_LOAD_ARGS"], [220, 2, 1, "", "DEFAULT_SAVE_ARGS"], [220, 3, 1, "", "__init__"], [220, 3, 1, "", "exists"], [220, 3, 1, "", "from_config"], [220, 3, 1, "", "load"], [220, 3, 1, "", "release"], [220, 3, 1, "", "resolve_load_version"], [220, 3, 1, "", "resolve_save_version"], [220, 3, 1, "", "save"]], "kedro_datasets.pandas.FeatherDataSet": [[221, 2, 1, "", "DEFAULT_LOAD_ARGS"], [221, 2, 1, "", "DEFAULT_SAVE_ARGS"], [221, 3, 1, "", "__init__"], [221, 3, 1, "", "exists"], [221, 3, 1, "", "from_config"], [221, 3, 1, "", "load"], [221, 3, 1, "", "release"], [221, 3, 1, "", "resolve_load_version"], [221, 3, 1, "", "resolve_save_version"], [221, 3, 1, "", "save"]], "kedro_datasets.pandas.GBQQueryDataSet": [[222, 2, 1, "", "DEFAULT_LOAD_ARGS"], [222, 3, 1, "", "__init__"], [222, 3, 1, "", "exists"], [222, 3, 1, "", "from_config"], [222, 3, 1, "", "load"], [222, 3, 1, "", "release"], [222, 3, 1, "", "save"]], "kedro_datasets.pandas.GBQTableDataSet": [[223, 2, 1, "", "DEFAULT_LOAD_ARGS"], [223, 2, 1, "", "DEFAULT_SAVE_ARGS"], [223, 3, 1, "", "__init__"], [223, 3, 1, "", "exists"], [223, 3, 1, "", "from_config"], [223, 3, 1, "", "load"], [223, 3, 1, "", "release"], [223, 3, 1, "", "save"]], "kedro_datasets.pandas.GenericDataSet": [[224, 2, 1, "", "DEFAULT_LOAD_ARGS"], [224, 2, 1, "", "DEFAULT_SAVE_ARGS"], [224, 3, 1, "", "__init__"], [224, 3, 1, "", "exists"], [224, 3, 1, "", "from_config"], [224, 3, 1, "", "load"], [224, 3, 1, "", "release"], [224, 3, 1, "", "resolve_load_version"], [224, 3, 1, "", "resolve_save_version"], [224, 3, 1, "", "save"]], "kedro_datasets.pandas.HDFDataSet": [[225, 2, 1, "", "DEFAULT_LOAD_ARGS"], [225, 2, 1, "", "DEFAULT_SAVE_ARGS"], [225, 3, 1, "", "__init__"], [225, 3, 1, "", "exists"], [225, 3, 1, "", "from_config"], [225, 3, 1, "", "load"], [225, 3, 1, "", "release"], [225, 3, 1, "", "resolve_load_version"], [225, 3, 1, "", "resolve_save_version"], [225, 3, 1, "", "save"]], "kedro_datasets.pandas.JSONDataSet": [[226, 2, 1, "", "DEFAULT_LOAD_ARGS"], [226, 2, 1, "", "DEFAULT_SAVE_ARGS"], [226, 3, 1, "", "__init__"], [226, 3, 1, "", "exists"], [226, 3, 1, "", "from_config"], [226, 3, 1, "", "load"], [226, 3, 1, "", "release"], [226, 3, 1, "", "resolve_load_version"], [226, 3, 1, "", "resolve_save_version"], [226, 3, 1, "", "save"]], "kedro_datasets.pandas.ParquetDataSet": [[227, 2, 1, "", "DEFAULT_LOAD_ARGS"], [227, 2, 1, "", "DEFAULT_SAVE_ARGS"], [227, 3, 1, "", "__init__"], [227, 3, 1, "", "exists"], [227, 3, 1, "", "from_config"], [227, 3, 1, "", "load"], [227, 3, 1, "", "release"], [227, 3, 1, "", "resolve_load_version"], [227, 3, 1, "", "resolve_save_version"], [227, 3, 1, "", "save"]], "kedro_datasets.pandas.SQLQueryDataSet": [[228, 3, 1, "", "__init__"], [228, 3, 1, "", "adapt_mssql_date_params"], [228, 3, 1, "", "create_connection"], [228, 2, 1, "", "engines"], [228, 3, 1, "", "exists"], [228, 3, 1, "", "from_config"], [228, 3, 1, "", "load"], [228, 3, 1, "", "release"], [228, 3, 1, "", "save"]], "kedro_datasets.pandas.SQLTableDataSet": [[229, 2, 1, "", "DEFAULT_LOAD_ARGS"], [229, 2, 1, "", "DEFAULT_SAVE_ARGS"], [229, 3, 1, "", "__init__"], [229, 3, 1, "", "create_connection"], [229, 2, 1, "", "engines"], [229, 3, 1, "", "exists"], [229, 3, 1, "", "from_config"], [229, 3, 1, "", "load"], [229, 3, 1, "", "release"], [229, 3, 1, "", "save"]], "kedro_datasets.pandas.XMLDataSet": [[230, 2, 1, "", "DEFAULT_LOAD_ARGS"], [230, 2, 1, "", "DEFAULT_SAVE_ARGS"], [230, 3, 1, "", "__init__"], [230, 3, 1, "", "exists"], [230, 3, 1, "", "from_config"], [230, 3, 1, "", "load"], [230, 3, 1, "", "release"], [230, 3, 1, "", "resolve_load_version"], [230, 3, 1, "", "resolve_save_version"], [230, 3, 1, "", "save"]], "kedro_datasets.pickle": [[231, 1, 1, "", "PickleDataSet"]], "kedro_datasets.pickle.PickleDataSet": [[231, 2, 1, "", "DEFAULT_LOAD_ARGS"], [231, 2, 1, "", "DEFAULT_SAVE_ARGS"], [231, 3, 1, "", "__init__"], [231, 3, 1, "", "exists"], [231, 3, 1, "", "from_config"], [231, 3, 1, "", "load"], [231, 3, 1, "", "release"], [231, 3, 1, "", "resolve_load_version"], [231, 3, 1, "", "resolve_save_version"], [231, 3, 1, "", "save"]], "kedro_datasets.pillow": [[232, 1, 1, "", "ImageDataSet"]], "kedro_datasets.pillow.ImageDataSet": [[232, 2, 1, "", "DEFAULT_SAVE_ARGS"], [232, 3, 1, "", "__init__"], [232, 3, 1, "", "exists"], [232, 3, 1, "", "from_config"], [232, 3, 1, "", "load"], [232, 3, 1, "", "release"], [232, 3, 1, "", "resolve_load_version"], [232, 3, 1, "", "resolve_save_version"], [232, 3, 1, "", "save"]], "kedro_datasets.plotly": [[233, 1, 1, "", "JSONDataSet"], [234, 1, 1, "", "PlotlyDataSet"]], "kedro_datasets.plotly.JSONDataSet": [[233, 2, 1, "", "DEFAULT_LOAD_ARGS"], [233, 2, 1, "", "DEFAULT_SAVE_ARGS"], [233, 3, 1, "", "__init__"], [233, 3, 1, "", "exists"], [233, 3, 1, "", "from_config"], [233, 3, 1, "", "load"], [233, 3, 1, "", "release"], [233, 3, 1, "", "resolve_load_version"], [233, 3, 1, "", "resolve_save_version"], [233, 3, 1, "", "save"]], "kedro_datasets.plotly.PlotlyDataSet": [[234, 2, 1, "", "DEFAULT_LOAD_ARGS"], [234, 2, 1, "", "DEFAULT_SAVE_ARGS"], [234, 3, 1, "", "__init__"], [234, 3, 1, "", "exists"], [234, 3, 1, "", "from_config"], [234, 3, 1, "", "load"], [234, 3, 1, "", "release"], [234, 3, 1, "", "resolve_load_version"], [234, 3, 1, "", "resolve_save_version"], [234, 3, 1, "", "save"]], "kedro_datasets.polars": [[235, 1, 1, "", "CSVDataSet"], [236, 1, 1, "", "GenericDataSet"]], "kedro_datasets.polars.CSVDataSet": [[235, 2, 1, "", "DEFAULT_LOAD_ARGS"], [235, 2, 1, "", "DEFAULT_SAVE_ARGS"], [235, 3, 1, "", "__init__"], [235, 3, 1, "", "exists"], [235, 3, 1, "", "from_config"], [235, 3, 1, "", "load"], [235, 3, 1, "", "release"], [235, 3, 1, "", "resolve_load_version"], [235, 3, 1, "", "resolve_save_version"], [235, 3, 1, "", "save"]], "kedro_datasets.polars.GenericDataSet": [[236, 2, 1, "", "DEFAULT_LOAD_ARGS"], [236, 2, 1, "", "DEFAULT_SAVE_ARGS"], [236, 3, 1, "", "__init__"], [236, 3, 1, "", "exists"], [236, 3, 1, "", "from_config"], [236, 3, 1, "", "load"], [236, 3, 1, "", "release"], [236, 3, 1, "", "resolve_load_version"], [236, 3, 1, "", "resolve_save_version"], [236, 3, 1, "", "save"]], "kedro_datasets.redis": [[237, 1, 1, "", "PickleDataSet"]], "kedro_datasets.redis.PickleDataSet": [[237, 2, 1, "", "DEFAULT_LOAD_ARGS"], [237, 2, 1, "", "DEFAULT_REDIS_URL"], [237, 2, 1, "", "DEFAULT_SAVE_ARGS"], [237, 3, 1, "", "__init__"], [237, 3, 1, "", "exists"], [237, 3, 1, "", "from_config"], [237, 3, 1, "", "load"], [237, 3, 1, "", "release"], [237, 3, 1, "", "save"]], "kedro_datasets.snowflake": [[238, 1, 1, "", "SnowparkTableDataSet"]], "kedro_datasets.snowflake.SnowparkTableDataSet": [[238, 2, 1, "", "DEFAULT_LOAD_ARGS"], [238, 2, 1, "", "DEFAULT_SAVE_ARGS"], [238, 3, 1, "", "__init__"], [238, 3, 1, "", "exists"], [238, 3, 1, "", "from_config"], [238, 3, 1, "", "load"], [238, 3, 1, "", "release"], [238, 3, 1, "", "save"]], "kedro_datasets.spark": [[239, 1, 1, "", "DeltaTableDataSet"], [240, 1, 1, "", "SparkDataSet"], [241, 1, 1, "", "SparkHiveDataSet"], [242, 1, 1, "", "SparkJDBCDataSet"], [243, 1, 1, "", "SparkStreamingDataSet"]], "kedro_datasets.spark.DeltaTableDataSet": [[239, 3, 1, "", "__init__"], [239, 3, 1, "", "exists"], [239, 3, 1, "", "from_config"], [239, 3, 1, "", "load"], [239, 3, 1, "", "release"], [239, 3, 1, "", "save"]], "kedro_datasets.spark.SparkDataSet": [[240, 2, 1, "", "DEFAULT_LOAD_ARGS"], [240, 2, 1, "", "DEFAULT_SAVE_ARGS"], [240, 3, 1, "", "__init__"], [240, 3, 1, "", "exists"], [240, 3, 1, "", "from_config"], [240, 3, 1, "", "load"], [240, 3, 1, "", "release"], [240, 3, 1, "", "resolve_load_version"], [240, 3, 1, "", "resolve_save_version"], [240, 3, 1, "", "save"]], "kedro_datasets.spark.SparkHiveDataSet": [[241, 2, 1, "", "DEFAULT_SAVE_ARGS"], [241, 3, 1, "", "__init__"], [241, 3, 1, "", "exists"], [241, 3, 1, "", "from_config"], [241, 3, 1, "", "load"], [241, 3, 1, "", "release"], [241, 3, 1, "", "save"]], "kedro_datasets.spark.SparkJDBCDataSet": [[242, 2, 1, "", "DEFAULT_LOAD_ARGS"], [242, 2, 1, "", "DEFAULT_SAVE_ARGS"], [242, 3, 1, "", "__init__"], [242, 3, 1, "", "exists"], [242, 3, 1, "", "from_config"], [242, 3, 1, "", "load"], [242, 3, 1, "", "release"], [242, 3, 1, "", "save"]], "kedro_datasets.spark.SparkStreamingDataSet": [[243, 2, 1, "", "DEFAULT_LOAD_ARGS"], [243, 2, 1, "", "DEFAULT_SAVE_ARGS"], [243, 3, 1, "", "__init__"], [243, 3, 1, "", "exists"], [243, 3, 1, "", "from_config"], [243, 3, 1, "", "load"], [243, 3, 1, "", "release"], [243, 3, 1, "", "save"]], "kedro_datasets.svmlight": [[244, 1, 1, "", "SVMLightDataSet"]], "kedro_datasets.svmlight.SVMLightDataSet": [[244, 2, 1, "", "DEFAULT_LOAD_ARGS"], [244, 2, 1, "", "DEFAULT_SAVE_ARGS"], [244, 3, 1, "", "__init__"], [244, 3, 1, "", "exists"], [244, 3, 1, "", "from_config"], [244, 3, 1, "", "load"], [244, 3, 1, "", "release"], [244, 3, 1, "", "resolve_load_version"], [244, 3, 1, "", "resolve_save_version"], [244, 3, 1, "", "save"]], "kedro_datasets.tensorflow": [[245, 1, 1, "", "TensorFlowModelDataSet"]], "kedro_datasets.tensorflow.TensorFlowModelDataSet": [[245, 2, 1, "", "DEFAULT_LOAD_ARGS"], [245, 2, 1, "", "DEFAULT_SAVE_ARGS"], [245, 3, 1, "", "__init__"], [245, 3, 1, "", "exists"], [245, 3, 1, "", "from_config"], [245, 3, 1, "", "load"], [245, 3, 1, "", "release"], [245, 3, 1, "", "resolve_load_version"], [245, 3, 1, "", "resolve_save_version"], [245, 3, 1, "", "save"]], "kedro_datasets.text": [[246, 1, 1, "", "TextDataSet"]], "kedro_datasets.text.TextDataSet": [[246, 3, 1, "", "__init__"], [246, 3, 1, "", "exists"], [246, 3, 1, "", "from_config"], [246, 3, 1, "", "load"], [246, 3, 1, "", "release"], [246, 3, 1, "", "resolve_load_version"], [246, 3, 1, "", "resolve_save_version"], [246, 3, 1, "", "save"]], "kedro_datasets.tracking": [[247, 1, 1, "", "JSONDataSet"], [248, 1, 1, "", "MetricsDataSet"]], "kedro_datasets.tracking.JSONDataSet": [[247, 2, 1, "", "DEFAULT_SAVE_ARGS"], [247, 3, 1, "", "__init__"], [247, 3, 1, "", "exists"], [247, 3, 1, "", "from_config"], [247, 3, 1, "", "load"], [247, 3, 1, "", "release"], [247, 3, 1, "", "resolve_load_version"], [247, 3, 1, "", "resolve_save_version"], [247, 3, 1, "", "save"], [247, 2, 1, "", "versioned"]], "kedro_datasets.tracking.MetricsDataSet": [[248, 2, 1, "", "DEFAULT_SAVE_ARGS"], [248, 3, 1, "", "__init__"], [248, 3, 1, "", "exists"], [248, 3, 1, "", "from_config"], [248, 3, 1, "", "load"], [248, 3, 1, "", "release"], [248, 3, 1, "", "resolve_load_version"], [248, 3, 1, "", "resolve_save_version"], [248, 3, 1, "", "save"], [248, 2, 1, "", "versioned"]], "kedro_datasets.video": [[249, 1, 1, "", "VideoDataSet"]], "kedro_datasets.video.VideoDataSet": [[249, 3, 1, "", "__init__"], [249, 3, 1, "", "exists"], [249, 3, 1, "", "from_config"], [249, 3, 1, "", "load"], [249, 3, 1, "", "release"], [249, 3, 1, "", "save"]], "kedro_datasets.yaml": [[250, 1, 1, "", "YAMLDataSet"]], "kedro_datasets.yaml.YAMLDataSet": [[250, 2, 1, "", "DEFAULT_SAVE_ARGS"], [250, 3, 1, "", "__init__"], [250, 3, 1, "", "exists"], [250, 3, 1, "", "from_config"], [250, 3, 1, "", "load"], [250, 3, 1, "", "release"], [250, 3, 1, "", "resolve_load_version"], [250, 3, 1, "", "resolve_save_version"], [250, 3, 1, "", "save"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"advanc": [0, 8, 11, 14, 39, 40, 46, 55, 268], "configur": [0, 1, 2, 4, 8, 9, 10, 14, 15, 19, 20, 22, 23, 34, 35, 38, 39, 40, 46, 50, 56, 255, 257, 264, 266, 272, 278, 281, 282, 283], "omegaconfigload": [0, 1, 64], "templatedconfigload": [0, 1, 65], "provid": [0, 1, 16, 259, 260, 265], "templat": [0, 1, 260, 283], "valu": [0, 1, 266], "through": [0, 10], "global": [0, 1, 35, 45], "kedro": [0, 2, 6, 7, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 252, 255, 260, 264, 266, 267, 268, 269, 270, 272, 274, 275, 279, 281, 282, 283], "how": [0, 2, 3, 5, 8, 11, 13, 14, 15, 16, 18, 19, 22, 23, 31, 32, 43, 48, 58, 255, 260, 261, 262, 265, 268, 272, 277], "chang": [0, 2, 24, 25], "which": 0, "file": [0, 1, 2, 10, 35, 38, 50, 255, 257, 264, 266, 274], "ar": [0, 23, 260], "load": [0, 1, 2, 3, 5, 8, 9, 10, 14, 51, 56, 261, 264, 266, 275, 277], "ensur": [0, 260], "non": [0, 56], "default": [0, 1, 2, 13, 257], "get": [0, 35, 276], "bypass": 0, "rule": 0, "us": [0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 16, 18, 19, 22, 23, 24, 25, 30, 31, 32, 34, 40, 41, 43, 48, 51, 52, 56, 58, 255, 257, 260, 261, 266, 268], "jinja2": [0, 1], "syntax": [0, 261], "do": [0, 16, 260, 268, 272, 277], "paramet": [0, 5, 260, 272], "catalog": [0, 8, 9, 10, 12, 13, 35, 39, 40, 49, 113, 251, 266, 268, 270, 277, 281, 283], "other": [0, 7, 268, 274], "variabl": [0, 255, 257, 261], "overrid": [0, 2, 13, 35, 260], "runtim": [0, 2, 5], "resolv": [0, 13, 35, 277], "credenti": [0, 3, 8, 9, 10, 11, 14, 19, 51, 282], "environ": [0, 2, 15, 19, 20, 23, 24, 25, 48, 257], "migrat": 1, "guid": 1, "config": [1, 14, 61, 62, 63, 64, 65, 277], "loader": [1, 266], "configload": [1, 62], "1": [1, 15, 20, 28, 43], "instal": [1, 16, 23, 24, 25, 32, 34, 35, 38, 41, 48, 251, 278, 282], "requir": [1, 7], "librari": [1, 42], "2": [1, 15, 20, 28, 31, 43], "3": [1, 15, 20, 28, 43], "import": 1, "statement": 1, "4": [1, 15, 20, 28, 43], "format": [1, 38], "support": [1, 41, 45, 275], "5": 1, "6": 1, "except": [1, 277], "handl": [1, 11], "via": [1, 10], "oc": 1, "select": 1, "7": 1, "8": [1, 10], "deprec": 1, "9": 1, "sourc": [2, 8, 43], "base": [2, 32, 49, 56, 257], "local": [2, 10, 15, 24, 41, 49], "name": [2, 10, 13, 262, 264], "pattern": 2, "set": [2, 9, 19, 22, 23, 24, 25, 34, 38, 39, 40, 41, 48, 254, 261, 274, 275, 277, 278, 282], "folder": 2, "read": [2, 10, 51], "from": [2, 10, 16, 35, 50, 51, 268, 274, 277], "compress": [2, 10], "access": [2, 8, 9, 25, 41, 282], "code": [2, 3, 5, 8, 24, 38, 40, 50, 266, 283], "specifi": [2, 5, 10, 265], "addit": [2, 9, 43], "onli": [2, 261], "one": 2, "work": [3, 45, 46, 272], "aw": [3, 19, 20, 282], "contribut": [6, 11, 45, 55], "": [7, 35, 43, 51, 55, 56, 266], "technic": 7, "steer": 7, "committe": 7, "respons": 7, "maintain": 7, "product": 7, "develop": [7, 24, 25, 35, 37, 45, 46, 48, 276], "commun": [7, 45], "manag": [7, 16, 25, 118, 119, 120, 148, 253, 268], "becom": 7, "current": 7, "past": 7, "applic": [7, 254], "process": [7, 15, 20, 45, 266, 273], "vote": 7, "issu": 7, "propos": 7, "ad": 7, "remov": 7, "data": [8, 9, 10, 12, 23, 24, 25, 35, 41, 43, 46, 49, 52, 56, 251, 261, 266, 269, 270, 272, 273, 275, 277, 278, 281, 283], "view": [8, 41], "avail": 8, "dataset": [8, 9, 10, 11, 13, 14, 35, 41, 51, 56, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 268, 275, 277], "programmat": [8, 16], "save": [8, 9, 10, 14, 51, 56, 261, 264], "memori": [8, 52], "sql": [8, 10], "databas": [8, 10], "queri": [8, 10], "parquet": [8, 10], "version": [8, 9, 11, 16, 35, 41, 48, 184, 255], "api": [8, 10, 23, 52, 55, 68, 206], "introduct": [9, 34, 36, 38, 57, 273], "The": [9, 11, 12, 17, 30, 33, 263, 266, 273], "basic": [9, 55], "yml": [9, 56], "type": [9, 13, 35, 251], "filepath": 9, "argument": [9, 10, 259, 264], "within": 9, "yaml": [10, 35, 105, 250, 266], "exampl": [10, 11, 34, 45, 50, 52, 255, 266, 268, 273], "tabl": [10, 55, 273], "content": 10, "binari": 10, "utf": 10, "encod": 10, "csv": 10, "without": [10, 48], "row": 10, "index": 10, "system": 10, "specif": [10, 23, 35, 54, 251, 260], "s3": [10, 282], "bucket": [10, 282], "pickl": [10, 91, 231], "an": [10, 15, 16, 20, 23, 24, 34, 274, 277], "excel": 10, "googl": 10, "cloud": 10, "storag": [10, 41], "multi": 10, "sheet": 10, "imag": [10, 15, 16, 20], "creat": [10, 11, 15, 16, 18, 19, 20, 22, 23, 24, 25, 28, 34, 35, 48, 50, 253, 255, 260, 261, 272, 273, 278, 283], "matplotlib": [10, 75, 214, 283], "hdf": 10, "spark": [10, 56, 96, 97, 98, 99, 239, 240, 241, 242, 243], "connect": 10, "appli": 10, "endpoint": 10, "minio": 10, "compat": [10, 15, 20], "model": [10, 52, 272, 273], "azur": [10, 21], "blob": 10, "store": [10, 41, 167, 168], "remot": [10, 39, 40], "locat": [10, 275], "ssh": [10, 39], "multipl": [10, 13, 259, 260, 262], "similar": [10, 13], "anchor": 10, "same": [10, 13], "two": 10, "differ": [10, 11, 13, 16, 260], "cli": [10, 13, 19, 22, 23, 24, 32, 35, 43, 45, 54, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "tutori": [11, 15, 55, 276, 277], "custom": [11, 16, 19, 22, 260, 264, 275], "abstractdataset": [11, 173], "scenario": 11, "project": [11, 15, 16, 18, 19, 23, 24, 25, 26, 32, 35, 41, 42, 43, 45, 46, 48, 49, 50, 55, 130, 156, 157, 158, 159, 160, 251, 252, 254, 257, 261, 268, 272, 273, 274, 275, 276, 278, 280, 282], "setup": [11, 15, 16, 31, 35, 252], "anatomi": 11, "implement": [11, 19, 22, 54], "_load": 11, "method": [11, 16, 51], "fsspec": [11, 259], "_save": 11, "_describ": 11, "complet": 11, "integr": [11, 43, 56], "partitioneddataset": [11, 14, 183], "your": [11, 18, 19, 22, 23, 24, 25, 28, 31, 32, 34, 35, 41, 43, 48, 52, 257, 266, 282], "thread": 11, "safeti": 11, "filesystem": 11, "factori": [13, 35], "generalis": 13, "namespac": [13, 272], "layer": [13, 270, 280], "creation": 13, "command": [13, 35, 43, 45], "rank": [13, 35], "partit": 14, "increment": 14, "definit": [14, 19, 261], "shorthand": 14, "notat": [14, 262], "full": 14, "lazi": 14, "confirm": [14, 35], "checkpoint": [14, 273], "special": 14, "kei": [14, 260], "apach": 15, "airflow": [15, 274], "run": [15, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 34, 35, 38, 39, 41, 50, 261, 264, 265, 274, 277, 283], "pipelin": [15, 16, 18, 19, 20, 21, 22, 28, 30, 31, 35, 36, 41, 46, 49, 52, 128, 129, 191, 192, 193, 194, 195, 196, 258, 260, 262, 263, 264, 265, 268, 270, 272, 273, 277, 280, 283], "kubernet": [15, 18], "cluster": [15, 23], "astronom": 15, "strategi": [15, 20], "prerequisit": [15, 16, 18, 19, 20, 22, 23, 24, 25, 31, 48], "deploy": [15, 20, 23, 28, 29, 32, 274], "step": [15, 16, 20, 47, 276], "new": [15, 20, 23, 24, 25, 35, 48, 50, 278], "prepar": [15, 20], "datacatalog": [15, 20, 51, 176], "packag": [15, 16, 20, 23, 32, 35, 259, 274], "compliant": [15, 20], "docker": [15, 20, 39, 274], "convert": [15, 28, 31, 268], "dag": 15, "launch": 15, "amazon": [16, 17], "emr": 16, "serverless": 16, "context": [16, 45, 144, 145, 146, 268], "overview": [16, 42, 45, 253], "approach": 16, "resourc": [16, 19, 23, 271], "infrastructur": 16, "iam": [16, 19], "option": [16, 28, 35, 272, 278], "valid": [16, 39, 40, 52], "job": [16, 19, 23], "faq": [16, 46, 271, 277], "i": [16, 41, 46, 260, 277], "defin": [16, 54], "here": 16, "seven": 16, "deploi": [16, 19, 20, 22, 23, 35], "blog": 16, "alreadi": 16, "ha": 16, "python": [16, 35, 38, 39], "why": [16, 18, 19, 20, 22, 30], "we": 16, "need": [16, 18, 19], "invok": [16, 35], "entrypoint": 16, "script": [16, 20, 38], "can": [16, 275], "t": 16, "cmd": 16, "about": [16, 50, 55, 262], "describ": [16, 35], "lifecycl": [16, 253], "kedrosess": [16, 163, 253, 270], "sagemak": 17, "plugin": [17, 18, 21, 30, 33, 45, 54], "argo": 18, "workflow": [18, 32, 251, 270, 276], "outdat": [18, 19], "document": [18, 19, 35, 55, 274], "review": [18, 19], "would": [18, 19, 20, 22, 30], "you": [18, 19, 20, 22, 30], "containeris": [18, 19, 28], "spec": [18, 122, 123, 150, 151, 152, 153, 154, 155], "submit": [18, 19], "batch": 19, "provis": 19, "role": 19, "comput": 19, "queue": 19, "runner": [19, 22, 197, 198, 199, 200, 201, 202, 264, 270, 272], "up": [19, 22, 23, 24, 25, 34, 38, 39, 40, 41, 48, 261, 274, 275, 278], "relat": [19, 22, 251], "updat": [19, 22, 41, 280, 282, 283], "function": [20, 261, 266, 268, 273], "lambda": 20, "write": 20, "limit": 20, "ml": 21, "azureml": 21, "dask": [22, 70, 208], "distribut": [22, 28], "databrick": [23, 24, 25, 26, 27, 209], "what": [23, 24, 25, 46, 260, 268], "advantag": 23, "thi": [23, 24, 25], "page": [23, 24, 25], "cover": [23, 24, 25], "note": [23, 24], "usernam": [23, 24], "host": [23, 24], "virtual": [23, 24, 25, 48], "authent": [23, 24], "entri": 23, "point": 23, "upload": [23, 24], "dbf": [23, 24, 25], "workspac": [23, 25], "ui": 23, "automat": [23, 280], "summari": [23, 24, 25, 48, 49, 50], "id": 24, "dbx": 24, "repo": [24, 25], "sync": 24, "conf": [24, 49, 56], "directori": [24, 34, 49, 276], "notebook": [24, 25, 26, 35, 266, 267, 268], "modifi": [24, 25, 35, 41, 43, 52], "test": [24, 25, 34, 35, 272, 273, 275], "train": [24, 25], "split": [24, 25], "ratio": [24, 25], "re": [24, 25], "github": [25, 32], "repositori": 25, "person": 25, "token": 25, "push": 25, "copi": [25, 32, 35], "dbutil": 25, "visualis": [26, 46, 50, 273, 279, 280, 283], "target": [28, 274], "platform": 28, "primit": 28, "parameteris": 28, "starter": [28, 42, 45, 132, 133, 255, 270], "kubeflow": 30, "prefect": 31, "0": 31, "flow": 31, "singl": 32, "machin": 32, "contain": [32, 50], "registri": [32, 131, 263, 269], "vertexai": 33, "autom": [34, 38], "pytest": 34, "structur": [34, 49], "add": [34, 38, 41, 43, 52, 266, 274, 283], "coverag": 34, "report": [34, 283], "cov": 34, "line": [35, 268], "interfac": 35, "autocomplet": 35, "help": [35, 276], "inform": [35, 50, 262, 275], "open": 35, "browser": 35, "customis": [35, 43, 51, 257], "build": [35, 262, 274], "depend": [35, 41, 251, 260, 262, 270, 276, 278, 282, 283], "tree": 35, "all": [35, 266], "pull": [35, 259], "micro": [35, 259], "qualiti": 35, "lint": [35, 38], "modular": [35, 260, 270, 272], "delet": 35, "regist": [35, 54], "list": [35, 255], "per": 35, "tag": [35, 261, 262, 265, 268, 270], "cell": 35, "strip": 35, "output": [35, 261, 262, 264, 265], "debug": [36, 39, 40], "node": [36, 41, 46, 49, 51, 52, 195, 196, 258, 261, 262, 265, 268, 270, 272, 273, 283], "tool": 38, "ruff": 38, "flake8": 38, "pre": 38, "commit": 38, "hook": [38, 45, 51, 52, 53, 54, 56, 117, 118, 119, 120, 121, 122, 123, 147, 148, 149, 150, 151, 152, 153, 154, 155], "git": 38, "pycharm": 39, "interpret": [39, 40], "consol": [39, 257], "schema": [39, 40], "visual": 40, "studio": 40, "For": 40, "those": 40, "venv": 40, "virtualenv": 40, "task": 40, "experi": [41, 268], "track": [41, 52, 103, 104, 247, 248], "viz": [41, 270, 279, 281, 282, 283], "when": [41, 277], "should": 41, "session": [41, 161, 162, 163, 164, 165, 166, 167, 168, 253, 268], "collabor": 41, "log": [41, 108, 109, 110, 189, 190, 256, 257, 278], "metric": [41, 52], "gener": [41, 261], "compar": 41, "plot": 41, "architectur": 42, "framework": [42, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 257], "extens": [42, 106, 107], "common": [43, 51, 277], "case": [43, 51], "extra": [43, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "behaviour": [43, 51], "execut": [43, 54, 270], "timelin": 43, "initi": 43, "boilerpl": 43, "extend": [44, 45, 51, 272], "simpl": 45, "alias": [45, 255], "click": 45, "initialis": [45, 56], "suggest": 45, "convent": [45, 46, 270], "jupyt": [46, 124, 125, 257, 268], "topic": 46, "engin": [46, 270], "first": 47, "conda": 48, "pip": 48, "verifi": 48, "upgrad": 48, "concept": [49, 54, 260], "src": 49, "empti": 50, "where": [50, 266], "next": [50, 266, 276], "more": [50, 268], "panda": [50, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "iri": [50, 268], "background": 50, "extern": 51, "metadata": [51, 254], "consumpt": 52, "v2": 52, "v3": 52, "observ": 52, "input": [52, 261, 262, 265, 272, 273], "before_node_run": 52, "auto": 54, "disabl": [54, 257], "order": [54, 270], "under": 54, "hood": 54, "welcom": 55, "learn": [55, 58], "usag": [55, 269], "indic": 55, "pyspark": 56, "centralis": 56, "sparksess": 56, "built": 56, "raw": 56, "delta": 56, "lake": 56, "interact": 56, "memorydataset": [56, 182], "intermediari": 56, "datafram": 56, "copy_mod": 56, "assign": 56, "object": 56, "tip": 56, "maximis": 56, "concurr": 56, "threadrunn": [56, 201], "assumpt": 58, "kedropythonversionwarn": 60, "missingconfigexcept": 63, "apidataset": [68, 206], "biosequ": [69, 207], "biosequencedataset": [69, 207], "parquetdataset": [70, 87, 208, 227], "email": [71, 210], "emailmessagedataset": [71, 210], "geopanda": [72, 211], "geojsondataset": [72, 211], "holoview": [73, 212], "holoviewswrit": [73, 212], "json": [74, 213], "jsondataset": [74, 78, 86, 93, 103, 213, 217, 226, 233, 247], "matplotlibwrit": [75, 214], "networkx": [76, 77, 78, 215, 216, 217], "gmldataset": [76, 215], "graphmldataset": [77, 216], "csvdataset": [79, 218, 235], "exceldataset": [80, 220], "featherdataset": [81, 221], "gbqquerydataset": [82, 222], "gbqtabledataset": [83, 223], "genericdataset": [84, 224, 236], "hdfdataset": [85, 225], "sqlquerydataset": [88, 228], "sqltabledataset": [89, 229], "xmldataset": [90, 230], "pickledataset": [91, 95, 231, 237], "pillow": [92, 232], "imagedataset": [92, 232], "plotli": [93, 94, 233, 234, 283], "plotlydataset": [94, 234], "redi": [95, 237], "deltatabledataset": [96, 219, 239], "sparkdataset": [97, 240], "sparkhivedataset": [98, 241], "sparkjdbcdataset": [99, 242], "svmlight": [100, 244], "svmlightdataset": [100, 244], "tensorflow": [101, 245], "tensorflowmodeldataset": [101, 245], "text": [102, 246], "textdataset": [102, 246], "metricsdataset": [104, 248], "yamldataset": [105, 250], "ipython": [107, 185, 186, 187, 188, 268], "color_logg": [109, 110], "colorhandl": 110, "kedrocli": 115, "main": 116, "clihooksmanag": 119, "get_cli_hook_manag": 120, "marker": [121, 149], "clicommandspec": 123, "jupytercommandgroup": 125, "micropkg": [126, 127], "safe_extract": 127, "pipelineartifact": 129, "kedrostarterspec": 133, "util": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 203, 204], "commandcollect": 135, "kedroclierror": 136, "command_with_verbos": 137, "env_opt": 138, "find_stylesheet": 139, "forward_command": 140, "get_pkg_vers": 141, "python_cal": 142, "split_str": 143, "kedrocontext": [145, 270], "kedrocontexterror": 146, "datacatalogspec": 151, "datasetspec": 152, "kedrocontextspec": 153, "nodespec": 154, "pipelinespec": 155, "configure_log": 157, "configure_project": 158, "find_pipelin": 159, "validate_set": 160, "kedrosessionerror": 164, "shelvestor": [165, 166], "basesessionstor": 168, "startup": [169, 170, 171], "projectmetadata": 170, "bootstrap_project": 171, "io": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 264], "abstractversioneddataset": 174, "cacheddataset": 175, "datasetalreadyexistserror": 177, "dataseterror": [178, 277], "datasetnotfounderror": [179, 277], "incrementaldataset": 180, "lambdadataset": 181, "load_ipython_extens": 186, "magic_reload_kedro": 187, "reload_kedro": [188, 268], "richhandl": 190, "modular_pipelin": [193, 194], "modularpipelineerror": 193, "abstractrunn": 198, "parallelrunn": [199, 264], "sequentialrunn": [200, 264], "run_nod": 202, "load_obj": 204, "kedro_dataset": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "managedtabledataset": 209, "polar": [235, 236], "snowflak": 238, "snowparktabledataset": 238, "sparkstreamingdataset": 243, "video": 249, "videodataset": 249, "group": 251, "level": 251, "offici": 255, "side": 257, "kedro_logging_config": 257, "rich": 257, "handler": 257, "plain": 257, "dumb": 257, "termin": 257, "perform": 257, "doe": [260, 268], "portabl": 260, "wrapper": [260, 272], "combin": 260, "disconnect": 260, "time": 260, "kwarg": 261, "merg": 262, "bad": 262, "circular": 262, "dot": 262, "autodiscoveri": 263, "multiprocess": 264, "multithread": 264, "asynchron": 264, "slice": [265, 270, 272], "final": 265, "recreat": 265, "miss": 265, "featur": 266, "spaceflight": [266, 277, 278, 280], "just": 266, "magic": [266, 268], "number": 266, "refactor": 266, "user": [267, 268], "explor": 268, "my": 268, "run_viz": 268, "know": 268, "servic": 268, "jupyterlab": 268, "client": 268, "find": 268, "out": 268, "glossari": 270, "v": 270, "scienc": [270, 272], "registr": [272, 273, 275], "affect": 272, "preprocess": 273, "again": 273, "entir": 274, "sphinx": 274, "html": 274, "docstr": 274, "further": 275, "terminologi": 276, "root": 276, "standard": 276, "error": 277, "fail": 277, "while": 277, "found": 277, "occur": 277, "pars": 277, "best": 278, "practic": 278, "avoid": 278, "leak": 278, "confidenti": 278, "share": [280, 282], "preview": 281, "publish": 282, "permiss": 282, "control": 282, "chart": 283, "anoth": 283}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 3, "sphinx": 57}, "alltitles": {"kedro.framework.cli": [[112, "kedro-framework-cli"]], "kedro.framework.cli.micropkg.safe_extract": [[127, "kedro-framework-cli-micropkg-safe-extract"]], "kedro.framework.cli.catalog": [[113, "kedro-framework-cli-catalog"]], "kedro.framework.cli.jupyter": [[124, "kedro-framework-cli-jupyter"]], "kedro.framework.cli.hooks": [[117, "kedro-framework-cli-hooks"]], "kedro.framework.cli.hooks.manager.CLIHooksManager": [[119, "kedro-framework-cli-hooks-manager-clihooksmanager"]], "kedro.framework.cli.hooks.specs": [[122, "kedro-framework-cli-hooks-specs"]], "kedro.framework.cli.jupyter.JupyterCommandGroup": [[125, "kedro-framework-cli-jupyter-jupytercommandgroup"]], "kedro.framework.cli.micropkg": [[126, "kedro-framework-cli-micropkg"]], "kedro.framework.cli.cli": [[114, "kedro-framework-cli-cli"]], "kedro.framework.cli.cli.KedroCLI": [[115, "kedro-framework-cli-cli-kedrocli"]], "kedro.framework.cli.hooks.manager": [[118, "kedro-framework-cli-hooks-manager"]], "kedro.framework.cli.hooks.manager.get_cli_hook_manager": [[120, "kedro-framework-cli-hooks-manager-get-cli-hook-manager"]], "kedro.framework.cli.hooks.markers": [[121, "kedro-framework-cli-hooks-markers"]], "kedro.framework.cli.hooks.specs.CLICommandSpecs": [[123, "kedro-framework-cli-hooks-specs-clicommandspecs"]], "kedro.framework.cli.cli.main": [[116, "kedro-framework-cli-cli-main"]], "kedro.framework.cli.utils.get_pkg_version": [[141, "kedro-framework-cli-utils-get-pkg-version"]], "kedro.framework.cli.pipeline.PipelineArtifacts": [[129, "kedro-framework-cli-pipeline-pipelineartifacts"]], "kedro.framework.cli.registry": [[131, "kedro-framework-cli-registry"]], "kedro.framework.cli.utils.CommandCollection": [[135, "kedro-framework-cli-utils-commandcollection"]], "kedro.framework.cli.utils.command_with_verbosity": [[137, "kedro-framework-cli-utils-command-with-verbosity"]], "kedro.framework.cli.utils.KedroCliError": [[136, "kedro-framework-cli-utils-kedroclierror"]], "kedro.framework.cli.utils.find_stylesheets": [[139, "kedro-framework-cli-utils-find-stylesheets"]], "kedro.framework.cli.utils.python_call": [[142, "kedro-framework-cli-utils-python-call"]], "kedro.framework.cli.utils.forward_command": [[140, "kedro-framework-cli-utils-forward-command"]], "kedro.framework.cli.starters": [[132, "kedro-framework-cli-starters"]], "kedro.framework.cli.project": [[130, "kedro-framework-cli-project"]], "kedro.framework.cli.utils": [[134, "kedro-framework-cli-utils"]], "kedro.framework.cli.utils.split_string": [[143, "kedro-framework-cli-utils-split-string"]], "kedro.framework.cli.starters.KedroStarterSpec": [[133, "kedro-framework-cli-starters-kedrostarterspec"]], "kedro.framework.cli.utils.env_option": [[138, "kedro-framework-cli-utils-env-option"]], "kedro.framework.cli.pipeline": [[128, "kedro-framework-cli-pipeline"]], "Amazon SageMaker": [[17, "amazon-sagemaker"]], "The kedro-sagemaker plugin": [[17, "the-kedro-sagemaker-plugin"]], "Prefect": [[31, "prefect"]], "Prerequisites": [[31, "prerequisites"], [24, "prerequisites"], [25, "prerequisites"], [19, "prerequisites"], [22, "prerequisites"], [23, "prerequisites"], [18, "prerequisites"], [16, "prerequisites"], [20, "prerequisites"], [15, "prerequisites"]], "Setup": [[31, "setup"], [16, "setup"]], "How to run your Kedro pipeline using Prefect 2.0": [[31, "how-to-run-your-kedro-pipeline-using-prefect-2-0"]], "Convert your Kedro pipeline to Prefect 2.0 flow": [[31, "convert-your-kedro-pipeline-to-prefect-2-0-flow"]], "Run Prefect flow": [[31, "run-prefect-flow"]], "Use an IDE, dbx and Databricks Repos to develop a Kedro project": [[24, "use-an-ide-dbx-and-databricks-repos-to-develop-a-kedro-project"]], "What this page covers": [[24, "what-this-page-covers"], [25, "what-this-page-covers"], [23, "what-this-page-covers"]], "Set up your project": [[24, "set-up-your-project"], [25, "set-up-your-project"]], "Note your Databricks username and host": [[24, "note-your-databricks-username-and-host"], [23, "note-your-databricks-username-and-host"]], "Install Kedro and dbx in a new virtual environment": [[24, "install-kedro-and-dbx-in-a-new-virtual-environment"]], "Authenticate the Databricks CLI": [[24, "authenticate-the-databricks-cli"], [23, "authenticate-the-databricks-cli"]], "Create a new Kedro project": [[24, "create-a-new-kedro-project"], [25, "create-a-new-kedro-project"], [23, "create-a-new-kedro-project"], [35, "create-a-new-kedro-project"], [50, "create-a-new-kedro-project"]], "Create a Repo on Databricks": [[24, "create-a-repo-on-databricks"]], "Sync code with your Databricks Repo using dbx": [[24, "sync-code-with-your-databricks-repo-using-dbx"]], "Create a conf/local directory in your Databricks Repo": [[24, "create-a-conf-local-directory-in-your-databricks-repo"]], "Upload project data to DBFS": [[24, "upload-project-data-to-dbfs"]], "Create a new Databricks notebook": [[24, "create-a-new-databricks-notebook"], [25, "create-a-new-databricks-notebook"]], "Run your project": [[24, "run-your-project"], [25, "run-your-project"]], "Modify your project and test the changes": [[24, "modify-your-project-and-test-the-changes"], [25, "modify-your-project-and-test-the-changes"]], "Modify the training / test split ratio": [[24, "modify-the-training-test-split-ratio"], [25, "modify-the-training-test-split-ratio"]], "Re-run your project": [[24, "re-run-your-project"], [25, "re-run-your-project"]], "Summary": [[24, "summary"], [25, "summary"], [23, "summary"], [48, "summary"], [50, "summary"], [49, "summary"]], "Use a Databricks workspace to develop a Kedro project": [[25, "use-a-databricks-workspace-to-develop-a-kedro-project"]], "Install Kedro in a new virtual environment": [[25, "install-kedro-in-a-new-virtual-environment"]], "Create a GitHub repository": [[25, "create-a-github-repository"]], "Create a GitHub personal access token": [[25, "create-a-github-personal-access-token"]], "Push your Kedro project to the GitHub repository": [[25, "push-your-kedro-project-to-the-github-repository"]], "Create a repo on Databricks": [[25, "create-a-repo-on-databricks"]], "Copy project data to DBFS using dbutils": [[25, "copy-project-data-to-dbfs-using-dbutils"]], "Managing your Databricks Repo": [[25, "managing-your-databricks-repo"]], "AWS Batch (outdated documentation that needs review)": [[19, "aws-batch-outdated-documentation-that-needs-review"]], "Why would you use AWS Batch?": [[19, "why-would-you-use-aws-batch"]], "How to run a Kedro pipeline using AWS Batch": [[19, "how-to-run-a-kedro-pipeline-using-aws-batch"]], "Containerise your Kedro project": [[19, "containerise-your-kedro-project"], [18, "containerise-your-kedro-project"]], "Provision resources": [[19, "provision-resources"]], "Create IAM Role": [[19, "create-iam-role"]], "Create AWS Batch job definition": [[19, "create-aws-batch-job-definition"]], "Create AWS Batch compute environment": [[19, "create-aws-batch-compute-environment"]], "Create AWS Batch job queue": [[19, "create-aws-batch-job-queue"]], "Configure the credentials": [[19, "configure-the-credentials"]], "Submit AWS Batch jobs": [[19, "submit-aws-batch-jobs"]], "Create a custom runner": [[19, "create-a-custom-runner"], [22, "create-a-custom-runner"]], "Set up Batch-related configuration": [[19, "set-up-batch-related-configuration"]], "Update CLI implementation": [[19, "update-cli-implementation"], [22, "update-cli-implementation"]], "Deploy": [[19, "deploy"], [22, "deploy"]], "Dask": [[22, "dask"]], "Why would you use Dask?": [[22, "why-would-you-use-dask"]], "How to distribute your Kedro pipeline using Dask": [[22, "how-to-distribute-your-kedro-pipeline-using-dask"]], "Set up Dask and related configuration": [[22, "set-up-dask-and-related-configuration"]], "Kubeflow Pipelines": [[30, "kubeflow-pipelines"]], "Why would you use Kubeflow Pipelines?": [[30, "why-would-you-use-kubeflow-pipelines"]], "The kedro-kubeflow plugin": [[30, "the-kedro-kubeflow-plugin"]], "Databricks": [[27, "databricks"]], "Deployment": [[29, "deployment"]], "Use a Databricks job to deploy a Kedro project": [[23, "use-a-databricks-job-to-deploy-a-kedro-project"]], "What are the advantages of packaging a Kedro project to run on Databricks?": [[23, "what-are-the-advantages-of-packaging-a-kedro-project-to-run-on-databricks"]], "Set up your project for deployment to Databricks": [[23, "set-up-your-project-for-deployment-to-databricks"]], "Install Kedro and the Databricks CLI in a new virtual environment": [[23, "install-kedro-and-the-databricks-cli-in-a-new-virtual-environment"]], "Create an entry point for Databricks": [[23, "create-an-entry-point-for-databricks"]], "Package your project": [[23, "package-your-project"]], "Upload project data and configuration to DBFS": [[23, "upload-project-data-and-configuration-to-dbfs"]], "Deploy and run your Kedro project using the workspace UI": [[23, "deploy-and-run-your-kedro-project-using-the-workspace-ui"]], "Create a new job": [[23, "create-a-new-job"]], "Create a new job cluster specific to your job": [[23, "create-a-new-job-cluster-specific-to-your-job"]], "Configure the job": [[23, "configure-the-job"]], "Run the job": [[23, "run-the-job"]], "Resources for automatically deploying to Databricks": [[23, "resources-for-automatically-deploying-to-databricks"]], "How to use the Databricks API to automatically deploy a Kedro project": [[23, "how-to-use-the-databricks-api-to-automatically-deploy-a-kedro-project"]], "How to use the Databricks CLI to automatically deploy a Kedro project": [[23, "how-to-use-the-databricks-cli-to-automatically-deploy-a-kedro-project"]], "Argo Workflows (outdated documentation that needs review)": [[18, "argo-workflows-outdated-documentation-that-needs-review"]], "Why would you use Argo Workflows?": [[18, "why-would-you-use-argo-workflows"]], "How to run your Kedro pipeline using Argo Workflows": [[18, "how-to-run-your-kedro-pipeline-using-argo-workflows"]], "Create Argo Workflows spec": [[18, "create-argo-workflows-spec"]], "Submit Argo Workflows spec to Kubernetes": [[18, "submit-argo-workflows-spec-to-kubernetes"]], "Kedro-Argo plugin": [[18, "kedro-argo-plugin"]], "Amazon EMR Serverless": [[16, "amazon-emr-serverless"]], "Context": [[16, "context"]], "Overview of approach": [[16, "overview-of-approach"]], "Resources": [[16, "resources"]], "Infrastructure": [[16, "infrastructure"]], "IAM": [[16, "iam"]], "(Optional) Validate the custom image": [[16, "optional-validate-the-custom-image"]], "Run a job": [[16, "run-a-job"]], "FAQ": [[16, "faq"]], "How is the approach defined here different from the approach in \u201cSeven steps to deploy Kedro pipelines on Amazon EMR\u201d on the Kedro blog?": [[16, "how-is-the-approach-defined-here-different-from-the-approach-in-seven-steps-to-deploy-kedro-pipelines-on-amazon-emr-on-the-kedro-blog"]], "EMR Serverless already has Python installed. Why do we need a custom Python version?": [[16, "emr-serverless-already-has-python-installed-why-do-we-need-a-custom-python-version"]], "Why do we need to create a custom image to provide the custom Python version?": [[16, "why-do-we-need-to-create-a-custom-image-to-provide-the-custom-python-version"]], "Why do we need to package the Kedro project and invoke using an entrypoint script? Why can\u2019t we use [CMD] or [ENTRYPOINT] with kedro run in the custom image?": [[16, "why-do-we-need-to-package-the-kedro-project-and-invoke-using-an-entrypoint-script-why-can-t-we-use-cmd-or-entrypoint-with-kedro-run-in-the-custom-image"]], "How about using the method described in Lifecycle management with KedroSession to run Kedro programmatically?": [[16, "how-about-using-the-method-described-in-lifecycle-management-with-kedrosession-to-run-kedro-programmatically"]], "Azure ML pipelines": [[21, "azure-ml-pipelines"]], "kedro-azureml plugin": [[21, "kedro-azureml-plugin"]], "Distributed deployment": [[28, "distributed-deployment"]], "1. Containerise the pipeline": [[28, "containerise-the-pipeline"]], "2. Convert your Kedro pipeline into targeted platform primitives": [[28, "convert-your-kedro-pipeline-into-targeted-platform-primitives"]], "3. Parameterise the runs": [[28, "parameterise-the-runs"]], "4. (Optional) Create starters": [[28, "optional-create-starters"]], "Visualise a Kedro project in Databricks notebooks": [[26, "visualise-a-kedro-project-in-databricks-notebooks"]], "AWS Step Functions": [[20, "aws-step-functions"]], "Why would you run a Kedro pipeline with AWS Step Functions?": [[20, "why-would-you-run-a-kedro-pipeline-with-aws-step-functions"]], "Strategy": [[20, "strategy"], [15, "strategy"]], "Deployment process": [[20, "deployment-process"], [15, "deployment-process"]], "Step 1. Create new configuration environment to prepare a compatible DataCatalog": [[20, "step-1-create-new-configuration-environment-to-prepare-a-compatible-datacatalog"], [15, "step-1-create-new-configuration-environment-to-prepare-a-compatible-datacatalog"]], "Step 2. Package the Kedro pipeline as an AWS Lambda-compliant Docker image": [[20, "step-2-package-the-kedro-pipeline-as-an-aws-lambda-compliant-docker-image"]], "Step 3. Write the deployment script": [[20, "step-3-write-the-deployment-script"]], "Step 4. Deploy the pipeline": [[20, "step-4-deploy-the-pipeline"]], "Limitations": [[20, "limitations"]], "Common use cases": [[43, "common-use-cases"], [51, "common-use-cases"]], "Use Case 1: How to add extra behaviour to Kedro\u2019s execution timeline": [[43, "use-case-1-how-to-add-extra-behaviour-to-kedro-s-execution-timeline"]], "Use Case 2: How to integrate Kedro with additional data sources": [[43, "use-case-2-how-to-integrate-kedro-with-additional-data-sources"]], "Use Case 3: How to add or modify CLI commands": [[43, "use-case-3-how-to-add-or-modify-cli-commands"]], "Use Case 4: How to customise the initial boilerplate of your project": [[43, "use-case-4-how-to-customise-the-initial-boilerplate-of-your-project"]], "Debugging": [[36, "debugging"], [39, "debugging"], [40, "debugging"]], "Introduction": [[36, "introduction"], [34, "introduction"], [38, "introduction"], [273, "introduction"]], "Debugging Node": [[36, "debugging-node"]], "Debugging Pipeline": [[36, "debugging-pipeline"]], "VertexAI": [[33, "vertexai"]], "The kedro-vertexai plugin": [[33, "the-kedro-vertexai-plugin"]], "Single-machine deployment": [[32, "single-machine-deployment"]], "Container-based": [[32, "container-based"]], "How to use container registry": [[32, "how-to-use-container-registry"]], "Package-based": [[32, "package-based"]], "CLI-based": [[32, "cli-based"]], "Use GitHub workflow to copy your project": [[32, "use-github-workflow-to-copy-your-project"]], "Install and run the Kedro project": [[32, "install-and-run-the-kedro-project"]], "Automated Testing": [[34, "automated-testing"]], "Set up automated testing with pytest": [[34, "set-up-automated-testing-with-pytest"]], "Install pytest": [[34, "install-pytest"]], "Create a /tests directory": [[34, "create-a-tests-directory"]], "Test directory structure": [[34, "test-directory-structure"]], "Create an example test": [[34, "create-an-example-test"]], "Run your tests": [[34, "run-your-tests"]], "Add test coverage reports with pytest-cov": [[34, "add-test-coverage-reports-with-pytest-cov"]], "Install pytest-cov": [[34, "install-pytest-cov"]], "Configure pytest to use pytest-cov": [[34, "configure-pytest-to-use-pytest-cov"]], "Run pytest with pytest-cov": [[34, "run-pytest-with-pytest-cov"]], "Set up PyCharm": [[39, "set-up-pycharm"]], "Set up Run configurations": [[39, "set-up-run-configurations"]], "Advanced: Remote SSH interpreter": [[39, "advanced-remote-ssh-interpreter"]], "Advanced: Docker interpreter": [[39, "advanced-docker-interpreter"]], "Configure Python Console": [[39, "configure-python-console"]], "Configuring the Kedro catalog validation schema": [[39, "configuring-the-kedro-catalog-validation-schema"], [40, "configuring-the-kedro-catalog-validation-schema"]], "Set up Visual Studio Code": [[40, "set-up-visual-studio-code"]], "Advanced: For those using venv / virtualenv": [[40, "advanced-for-those-using-venv-virtualenv"]], "Setting up tasks": [[40, "setting-up-tasks"]], "Advanced: Remote Interpreter / Debugging": [[40, "advanced-remote-interpreter-debugging"]], "Code formatting and linting": [[38, "code-formatting-and-linting"]], "Set up Python tools": [[38, "set-up-python-tools"]], "Install the tools": [[38, "install-the-tools"]], "Configure ruff": [[38, "configure-ruff"]], "Configure flake8": [[38, "configure-flake8"]], "Run the tools": [[38, "run-the-tools"]], "Automated formatting and linting with pre-commit hooks": [[38, "automated-formatting-and-linting-with-pre-commit-hooks"]], "Install pre-commit": [[38, "install-pre-commit"]], "Add pre-commit configuration file": [[38, "add-pre-commit-configuration-file"]], "Install git hook scripts": [[38, "install-git-hook-scripts"]], "FAQs": [[46, "faqs"]], "Visualisation": [[46, "visualisation"]], "Working with Jupyter": [[46, "working-with-jupyter"]], "Kedro project development": [[46, "kedro-project-development"]], "Configuration": [[46, "configuration"], [2, "configuration"], [4, "configuration"]], "Advanced topics": [[46, "advanced-topics"]], "Nodes and pipelines": [[46, "nodes-and-pipelines"], [258, "nodes-and-pipelines"]], "What is data engineering convention?": [[46, "what-is-data-engineering-convention"]], "Experiment tracking in Kedro-Viz": [[41, "experiment-tracking-in-kedro-viz"]], "Kedro versions supporting experiment tracking": [[41, "kedro-versions-supporting-experiment-tracking"]], "When should I use experiment tracking in Kedro?": [[41, "when-should-i-use-experiment-tracking-in-kedro"]], "Set up a project": [[41, "set-up-a-project"]], "Install Kedro and Kedro-Viz": [[41, "install-kedro-and-kedro-viz"]], "Install the dependencies for the project": [[41, "install-the-dependencies-for-the-project"]], "Set up the session store": [[41, "set-up-the-session-store"]], "Local storage": [[41, "local-storage"]], "Collaborative experiment tracking": [[41, "collaborative-experiment-tracking"]], "Set up experiment tracking datasets": [[41, "set-up-experiment-tracking-datasets"]], "Modify your nodes and pipelines to log metrics": [[41, "modify-your-nodes-and-pipelines-to-log-metrics"]], "Generate the run data": [[41, "generate-the-run-data"]], "Access run data and compare runs": [[41, "access-run-data-and-compare-runs"]], "View and compare plots": [[41, "view-and-compare-plots"]], "Update the dependencies": [[41, "update-the-dependencies"], [283, "update-the-dependencies"], [283, "id1"]], "Add a plotting node": [[41, "add-a-plotting-node"]], "View and compare metrics data": [[41, "view-and-compare-metrics-data"]], "Kedro plugins": [[45, "kedro-plugins"]], "Overview": [[45, "overview"], [253, "overview"]], "Example of a simple plugin": [[45, "example-of-a-simple-plugin"]], "Extend starter aliases": [[45, "extend-starter-aliases"]], "Working with click": [[45, "working-with-click"]], "Project context": [[45, "project-context"]], "Initialisation": [[45, "initialisation"]], "global and project commands": [[45, "global-and-project-commands"]], "Suggested command convention": [[45, "suggested-command-convention"]], "Hooks": [[45, "hooks"], [53, "hooks"], [54, "hooks"]], "CLI Hooks": [[45, "cli-hooks"], [54, "cli-hooks"]], "Contributing process": [[45, "contributing-process"]], "Supported Kedro plugins": [[45, "supported-kedro-plugins"]], "Community-developed plugins": [[45, "community-developed-plugins"]], "Extend Kedro": [[44, "extend-kedro"]], "Development": [[37, "development"]], "First steps": [[47, "first-steps"]], "Kedro architecture overview": [[42, "kedro-architecture-overview"]], "Kedro project": [[42, "kedro-project"]], "Kedro framework": [[42, "kedro-framework"]], "Kedro starter": [[42, "kedro-starter"]], "Kedro library": [[42, "kedro-library"]], "Kedro extension": [[42, "kedro-extension"]], "Kedro\u2019s command line interface": [[35, "kedro-s-command-line-interface"]], "Autocompletion (optional)": [[35, "autocompletion-optional"]], "Invoke Kedro CLI from Python (optional)": [[35, "invoke-kedro-cli-from-python-optional"]], "Kedro commands": [[35, "kedro-commands"]], "Global Kedro commands": [[35, "global-kedro-commands"]], "Get help on Kedro commands": [[35, "get-help-on-kedro-commands"]], "Confirm the Kedro version": [[35, "confirm-the-kedro-version"]], "Confirm Kedro information": [[35, "confirm-kedro-information"]], "Open the Kedro documentation in your browser": [[35, "open-the-kedro-documentation-in-your-browser"]], "Customise or Override Project-specific Kedro commands": [[35, "customise-or-override-project-specific-kedro-commands"]], "Project setup": [[35, "project-setup"], [11, "project-setup"]], "Build the project\u2019s dependency tree": [[35, "build-the-project-s-dependency-tree"]], "Install all package dependencies": [[35, "install-all-package-dependencies"]], "Run the project": [[35, "run-the-project"], [50, "run-the-project"]], "Modifying a kedro run": [[35, "modifying-a-kedro-run"]], "Deploy the project": [[35, "deploy-the-project"]], "Pull a micro-package": [[35, "pull-a-micro-package"], [259, "pull-a-micro-package"]], "Project quality": [[35, "project-quality"]], "Build the project documentation": [[35, "build-the-project-documentation"]], "Lint your project": [[35, "lint-your-project"]], "Test your project": [[35, "test-your-project"]], "Project development": [[35, "project-development"]], "Modular pipelines": [[35, "modular-pipelines"], [272, "modular-pipelines"], [260, "modular-pipelines"]], "Create a new modular pipeline in your project": [[35, "create-a-new-modular-pipeline-in-your-project"]], "Package a micro-package": [[35, "package-a-micro-package"], [259, "package-a-micro-package"]], "Pull a micro-package in your project": [[35, "pull-a-micro-package-in-your-project"]], "Delete a modular pipeline": [[35, "delete-a-modular-pipeline"]], "Registered pipelines": [[35, "registered-pipelines"]], "Describe a registered pipeline": [[35, "describe-a-registered-pipeline"]], "List all registered pipelines in your project": [[35, "list-all-registered-pipelines-in-your-project"]], "Datasets": [[35, "datasets"]], "List datasets per pipeline per type": [[35, "list-datasets-per-pipeline-per-type"]], "Resolve dataset factories in the catalog": [[35, "resolve-dataset-factories-in-the-catalog"]], "Rank dataset factories in the catalog": [[35, "rank-dataset-factories-in-the-catalog"]], "Data Catalog": [[35, "data-catalog"], [49, "data-catalog"], [270, "data-catalog"]], "Create a Data Catalog YAML configuration file": [[35, "create-a-data-catalog-yaml-configuration-file"]], "Notebooks": [[35, "notebooks"]], "Copy tagged cells": [[35, "copy-tagged-cells"]], "Strip output cells": [[35, "strip-output-cells"]], "Migration guide for config loaders": [[1, "migration-guide-for-config-loaders"]], "ConfigLoader to OmegaConfigLoader": [[1, "configloader-to-omegaconfigloader"]], "1. Install the Required Library": [[1, "install-the-required-library"]], "2. Use the OmegaConfigLoader": [[1, "use-the-omegaconfigloader"], [1, "id2"]], "3. Import Statements": [[1, "import-statements"]], "4. File Format Support": [[1, "file-format-support"]], "5. Load Configuration": [[1, "load-configuration"]], "6. Exception Handling": [[1, "exception-handling"]], "TemplatedConfigLoader to OmegaConfigLoader": [[1, "templatedconfigloader-to-omegaconfigloader"]], "1. Install the required library": [[1, "id1"]], "3. Import statements": [[1, "id3"]], "4. File format support": [[1, "id4"]], "5. Load configuration": [[1, "id5"]], "6. Templating of values": [[1, "templating-of-values"]], "Providing default values for templates via oc.select": [[1, "providing-default-values-for-templates-via-oc-select"]], "7. Globals": [[1, "globals"]], "8. Deprecation of Jinja2": [[1, "deprecation-of-jinja2"]], "9. Exception handling": [[1, "id6"]], "Advanced: Partitioned and incremental datasets": [[14, "advanced-partitioned-and-incremental-datasets"]], "Partitioned datasets": [[14, "partitioned-datasets"]], "How to use PartitionedDataset": [[14, "how-to-use-partitioneddataset"]], "Dataset definition": [[14, "dataset-definition"]], "Shorthand notation": [[14, "shorthand-notation"]], "Full notation": [[14, "full-notation"]], "Partitioned dataset credentials": [[14, "partitioned-dataset-credentials"]], "Partitioned dataset load": [[14, "partitioned-dataset-load"]], "Partitioned dataset save": [[14, "partitioned-dataset-save"]], "Partitioned dataset lazy saving": [[14, "partitioned-dataset-lazy-saving"]], "Incremental datasets": [[14, "incremental-datasets"]], "Incremental dataset loads": [[14, "incremental-dataset-loads"]], "Incremental dataset save": [[14, "incremental-dataset-save"]], "Incremental dataset confirm": [[14, "incremental-dataset-confirm"]], "Checkpoint configuration": [[14, "checkpoint-configuration"]], "Special checkpoint config keys": [[14, "special-checkpoint-config-keys"]], "The Kedro Data Catalog": [[12, "the-kedro-data-catalog"]], "Configuration source": [[2, "configuration-source"]], "Configuration environments": [[2, "configuration-environments"]], "Base": [[2, "base"]], "Local": [[2, "local"]], "Configuration loading": [[2, "configuration-loading"]], "Configuration file names": [[2, "configuration-file-names"]], "Configuration patterns": [[2, "configuration-patterns"]], "How to use Kedro configuration": [[2, "how-to-use-kedro-configuration"]], "How to change the setting for a configuration source folder": [[2, "how-to-change-the-setting-for-a-configuration-source-folder"]], "How to change the configuration source folder at runtime": [[2, "how-to-change-the-configuration-source-folder-at-runtime"]], "How to read configuration from a compressed file": [[2, "how-to-read-configuration-from-a-compressed-file"]], "How to access configuration in code": [[2, "how-to-access-configuration-in-code"]], "How to specify additional configuration environments": [[2, "how-to-specify-additional-configuration-environments"]], "How to change the default overriding environment": [[2, "how-to-change-the-default-overriding-environment"]], "How to use only one configuration environment": [[2, "how-to-use-only-one-configuration-environment"]], "Data Catalog YAML examples": [[10, "data-catalog-yaml-examples"]], "Table of Contents": [[10, "table-of-contents"]], "Load data from a local binary file using utf-8 encoding": [[10, "load-data-from-a-local-binary-file-using-utf-8-encoding"]], "Save data to a CSV file without row names (index) using utf-8 encoding": [[10, "save-data-to-a-csv-file-without-row-names-index-using-utf-8-encoding"]], "Load/save a CSV file from/to a local file system": [[10, "load-save-a-csv-file-from-to-a-local-file-system"]], "Load/save a CSV on a local file system, using specified load/save arguments": [[10, "load-save-a-csv-on-a-local-file-system-using-specified-load-save-arguments"]], "Load/save a compressed CSV on a local file system": [[10, "load-save-a-compressed-csv-on-a-local-file-system"]], "Load a CSV file from a specific S3 bucket, using credentials and load arguments": [[10, "load-a-csv-file-from-a-specific-s3-bucket-using-credentials-and-load-arguments"]], "Load/save a pickle file from/to a local file system": [[10, "load-save-a-pickle-file-from-to-a-local-file-system"]], "Load an Excel file from Google Cloud Storage": [[10, "load-an-excel-file-from-google-cloud-storage"]], "Load a multi-sheet Excel file from a local file system": [[10, "load-a-multi-sheet-excel-file-from-a-local-file-system"]], "Save an image created with Matplotlib on Google Cloud Storage": [[10, "save-an-image-created-with-matplotlib-on-google-cloud-storage"]], "Load/save an HDF file on local file system storage, using specified load/save arguments": [[10, "load-save-an-hdf-file-on-local-file-system-storage-using-specified-load-save-arguments"]], "Load/save a parquet file on local file system storage, using specified load/save arguments": [[10, "load-save-a-parquet-file-on-local-file-system-storage-using-specified-load-save-arguments"]], "Load/save a Spark table on S3, using specified load/save arguments": [[10, "load-save-a-spark-table-on-s3-using-specified-load-save-arguments"]], "Load/save a SQL table using credentials, a database connection, and specified load/save arguments": [[10, "load-save-a-sql-table-using-credentials-a-database-connection-and-specified-load-save-arguments"]], "Load a SQL table with credentials and a database connection, and apply a SQL query to the table": [[10, "load-a-sql-table-with-credentials-and-a-database-connection-and-apply-a-sql-query-to-the-table"]], "Load data from an API endpoint": [[10, "load-data-from-an-api-endpoint"]], "Load data from Minio (S3 API Compatible Storage)": [[10, "load-data-from-minio-s3-api-compatible-storage"]], "Load a model saved as a pickle from Azure Blob Storage": [[10, "load-a-model-saved-as-a-pickle-from-azure-blob-storage"]], "Load a CSV file stored in a remote location through SSH": [[10, "load-a-csv-file-stored-in-a-remote-location-through-ssh"]], "Load multiple datasets with similar configuration using YAML anchors": [[10, "load-multiple-datasets-with-similar-configuration-using-yaml-anchors"]], "Read the same file using two different datasets": [[10, "read-the-same-file-using-two-different-datasets"]], "Create a Data Catalog YAML configuration file via the CLI": [[10, "create-a-data-catalog-yaml-configuration-file-via-the-cli"]], "Apache Airflow": [[15, "apache-airflow"]], "How to run a Kedro pipeline on Apache Airflow using a Kubernetes cluster": [[15, "how-to-run-a-kedro-pipeline-on-apache-airflow-using-a-kubernetes-cluster"]], "How to run a Kedro pipeline on Apache Airflow with Astronomer": [[15, "how-to-run-a-kedro-pipeline-on-apache-airflow-with-astronomer"]], "Tutorial project setup": [[15, "tutorial-project-setup"]], "Step 2. Package the Kedro pipeline as an Astronomer-compliant Docker image": [[15, "step-2-package-the-kedro-pipeline-as-an-astronomer-compliant-docker-image"]], "Step 3. Convert the Kedro pipeline into an Airflow DAG with kedro airflow": [[15, "step-3-convert-the-kedro-pipeline-into-an-airflow-dag-with-kedro-airflow"]], "Step 4. Launch the local Airflow cluster with Astronomer": [[15, "step-4-launch-the-local-airflow-cluster-with-astronomer"]], "Contribute to Kedro": [[6, "contribute-to-kedro"], [55, null]], "Credentials": [[3, "credentials"]], "How to load credentials in code": [[3, "how-to-load-credentials-in-code"]], "How to work with AWS credentials": [[3, "how-to-work-with-aws-credentials"]], "Parameters": [[5, "parameters"], [0, "parameters"]], "How to use parameters": [[5, "how-to-use-parameters"]], "How to load parameters in code": [[5, "how-to-load-parameters-in-code"]], "How to specify parameters at runtime": [[5, "how-to-specify-parameters-at-runtime"]], "Kedro\u2019s Technical Steering Committee": [[7, "kedro-s-technical-steering-committee"]], "Responsibilities of a maintainer": [[7, "responsibilities-of-a-maintainer"]], "Product development": [[7, "product-development"]], "Community management": [[7, "community-management"]], "Requirements to become a maintainer": [[7, "requirements-to-become-a-maintainer"]], "Current maintainers": [[7, "current-maintainers"]], "Past maintainers": [[7, "past-maintainers"]], "Application process": [[7, "application-process"]], "Voting process": [[7, "voting-process"]], "Other issues or proposals": [[7, "other-issues-or-proposals"]], "Adding or removing maintainers": [[7, "adding-or-removing-maintainers"]], "Advanced: Access the Data Catalog in code": [[8, "advanced-access-the-data-catalog-in-code"]], "How to configure the Data Catalog": [[8, "how-to-configure-the-data-catalog"]], "How to view the available data sources": [[8, "how-to-view-the-available-data-sources"]], "How to load datasets programmatically": [[8, "how-to-load-datasets-programmatically"]], "How to save data programmatically": [[8, "how-to-save-data-programmatically"]], "How to save data to memory": [[8, "how-to-save-data-to-memory"]], "How to save data to a SQL database for querying": [[8, "how-to-save-data-to-a-sql-database-for-querying"]], "How to save data in Parquet": [[8, "how-to-save-data-in-parquet"]], "How to access a dataset with credentials": [[8, "how-to-access-a-dataset-with-credentials"]], "How to version a dataset using the Code API": [[8, "how-to-version-a-dataset-using-the-code-api"]], "Advanced: Tutorial to create a custom dataset": [[11, "advanced-tutorial-to-create-a-custom-dataset"]], "AbstractDataset": [[11, "abstractdataset"]], "Scenario": [[11, "scenario"]], "The anatomy of a dataset": [[11, "the-anatomy-of-a-dataset"]], "Implement the _load method with fsspec": [[11, "implement-the-load-method-with-fsspec"]], "Implement the _save method with fsspec": [[11, "implement-the-save-method-with-fsspec"]], "Implement the _describe method": [[11, "implement-the-describe-method"]], "The complete example": [[11, "the-complete-example"]], "Integration with PartitionedDataset": [[11, "integration-with-partitioneddataset"]], "Versioning": [[11, "versioning"]], "How to implement versioning in your dataset": [[11, "how-to-implement-versioning-in-your-dataset"]], "Thread-safety": [[11, "thread-safety"]], "How to handle credentials and different filesystems": [[11, "how-to-handle-credentials-and-different-filesystems"]], "How to contribute a custom dataset implementation": [[11, "how-to-contribute-a-custom-dataset-implementation"]], "Advanced configuration": [[0, "advanced-configuration"]], "OmegaConfigLoader": [[0, "omegaconfigloader"]], "TemplatedConfigLoader": [[0, "templatedconfigloader"]], "Provide template values through globals": [[0, "provide-template-values-through-globals"]], "Advanced Kedro configuration": [[0, "advanced-kedro-configuration"]], "How to change which configuration files are loaded": [[0, "how-to-change-which-configuration-files-are-loaded"]], "How to ensure non default configuration files get loaded": [[0, "how-to-ensure-non-default-configuration-files-get-loaded"]], "How to bypass the configuration loading rules": [[0, "how-to-bypass-the-configuration-loading-rules"]], "How to use Jinja2 syntax in configuration": [[0, "how-to-use-jinja2-syntax-in-configuration"]], "How to do templating with the OmegaConfigLoader": [[0, "how-to-do-templating-with-the-omegaconfigloader"]], "Catalog": [[0, "catalog"]], "Other configuration files": [[0, "other-configuration-files"]], "How to use global variables with the OmegaConfigLoader": [[0, "how-to-use-global-variables-with-the-omegaconfigloader"]], "How to override configuration with runtime parameters with the OmegaConfigLoader": [[0, "how-to-override-configuration-with-runtime-parameters-with-the-omegaconfigloader"]], "How to use resolvers in the OmegaConfigLoader": [[0, "how-to-use-resolvers-in-the-omegaconfigloader"]], "How to load credentials through environment variables": [[0, "how-to-load-credentials-through-environment-variables"]], "Kedro dataset factories": [[13, "kedro-dataset-factories"]], "How to generalise datasets with similar names and types": [[13, "how-to-generalise-datasets-with-similar-names-and-types"]], "How to generalise datasets of the same type": [[13, "how-to-generalise-datasets-of-the-same-type"]], "How to generalise datasets using namespaces": [[13, "how-to-generalise-datasets-using-namespaces"]], "How to generalise datasets of the same type in different layers": [[13, "how-to-generalise-datasets-of-the-same-type-in-different-layers"]], "How to generalise datasets using multiple dataset factories": [[13, "how-to-generalise-datasets-using-multiple-dataset-factories"]], "How to override the default dataset creation with dataset factories": [[13, "how-to-override-the-default-dataset-creation-with-dataset-factories"]], "CLI commands for dataset factories": [[13, "cli-commands-for-dataset-factories"]], "How to use kedro catalog rank": [[13, "how-to-use-kedro-catalog-rank"]], "How to use kedro catalog resolve": [[13, "how-to-use-kedro-catalog-resolve"]], "Introduction to the Data Catalog": [[9, "introduction-to-the-data-catalog"]], "The basics of catalog.yml": [[9, "the-basics-of-catalog-yml"]], "Dataset type": [[9, "dataset-type"]], "Dataset filepath": [[9, "dataset-filepath"]], "Additional settings in catalog.yml": [[9, "additional-settings-in-catalog-yml"]], "Load and save arguments": [[9, "load-and-save-arguments"]], "Dataset access credentials": [[9, "dataset-access-credentials"]], "Dataset versioning": [[9, "dataset-versioning"]], "Use the Data Catalog within Kedro configuration": [[9, "use-the-data-catalog-within-kedro-configuration"]], "Set up Kedro": [[48, "set-up-kedro"]], "Installation prerequisites": [[48, "installation-prerequisites"]], "Create a virtual environment for your Kedro project": [[48, "create-a-virtual-environment-for-your-kedro-project"]], "How to create a new virtual environment using conda": [[48, "how-to-create-a-new-virtual-environment-using-conda"]], "How to create a new virtual environment without using conda": [[48, "how-to-create-a-new-virtual-environment-without-using-conda"]], "How to install Kedro using pip": [[48, "how-to-install-kedro-using-pip"]], "How to verify your Kedro installation": [[48, "how-to-verify-your-kedro-installation"]], "How to upgrade Kedro": [[48, "how-to-upgrade-kedro"]], "How to install a development version of Kedro": [[48, "how-to-install-a-development-version-of-kedro"]], "PySpark integration": [[56, "pyspark-integration"]], "Centralise Spark configuration in conf/base/spark.yml": [[56, "centralise-spark-configuration-in-conf-base-spark-yml"]], "Initialise a SparkSession using a hook": [[56, "initialise-a-sparksession-using-a-hook"]], "Use Kedro\u2019s built-in Spark datasets to load and save raw data": [[56, "use-kedro-s-built-in-spark-datasets-to-load-and-save-raw-data"]], "Spark and Delta Lake interaction": [[56, "spark-and-delta-lake-interaction"]], "Use MemoryDataset for intermediary DataFrame": [[56, "use-memorydataset-for-intermediary-dataframe"]], "Use MemoryDataset with copy_mode=\"assign\" for non-DataFrame Spark objects": [[56, "use-memorydataset-with-copy-mode-assign-for-non-dataframe-spark-objects"]], "Tips for maximising concurrency using ThreadRunner": [[56, "tips-for-maximising-concurrency-using-threadrunner"]], "Learn how to use Kedro": [[58, "learn-how-to-use-kedro"]], "Assumptions": [[58, "assumptions"]], "kedro.config": [[61, "kedro-config"]], "Create a new empty project": [[50, "create-a-new-empty-project"]], "Create a new project from a configuration file": [[50, "create-a-new-project-from-a-configuration-file"]], "Create a new project containing example code": [[50, "create-a-new-project-containing-example-code"]], "Visualise a Kedro project": [[50, "visualise-a-kedro-project"]], "Where next?": [[50, "where-next"], [266, "Where-next?"]], "More information about the pandas-iris example project": [[50, "more-information-about-the-pandas-iris-example-project"]], "Background information": [[50, "background-information"]], "Iris example: visualisation": [[50, "iris-example-visualisation"]], "kedro": [[59, "kedro"]], "Welcome to Kedro\u2019s documentation!": [[55, "welcome-to-kedro-s-documentation"]], "Learn about Kedro": [[55, null]], "Tutorial and basic Kedro usage": [[55, null]], "Kedro projects": [[55, null]], "Advanced usage": [[55, null]], "API documentation": [[55, "api-documentation"]], "Indices and tables": [[55, "indices-and-tables"]], "kedro.config.MissingConfigException": [[63, "kedro-config-missingconfigexception"]], "Introduction to Kedro": [[57, "introduction-to-kedro"]], "kedro.config.ConfigLoader": [[62, "kedro-config-configloader"]], "kedro.KedroPythonVersionWarning": [[60, "kedro-kedropythonversionwarning"]], "Hooks examples": [[52, "hooks-examples"]], "Add memory consumption tracking": [[52, "add-memory-consumption-tracking"]], "Add data validation": [[52, "add-data-validation"]], "V2 API": [[52, "v2-api"]], "V3 API": [[52, "v3-api"]], "Add observability to your pipeline": [[52, "add-observability-to-your-pipeline"]], "Add metrics tracking to your model": [[52, "add-metrics-tracking-to-your-model"]], "Modify node inputs using before_node_run hook": [[52, "modify-node-inputs-using-before-node-run-hook"]], "Concepts": [[54, "concepts"]], "Hook specifications": [[54, "hook-specifications"]], "Hook implementation": [[54, "hook-implementation"]], "Define the Hook implementation": [[54, "define-the-hook-implementation"]], "Registering the Hook implementation with Kedro": [[54, "registering-the-hook-implementation-with-kedro"]], "Auto-registered Hook with plugin": [[54, "auto-registered-hook-with-plugin"]], "Disable auto-registered plugins\u2019 Hooks": [[54, "disable-auto-registered-plugins-hooks"]], "Hook execution order": [[54, "hook-execution-order"]], "Under the hood": [[54, "under-the-hood"]], "Plugin Hooks": [[54, "plugin-hooks"]], "Kedro concepts": [[49, "kedro-concepts"]], "Node": [[49, "node"], [270, "node"]], "Pipeline": [[49, "pipeline"], [270, "pipeline"]], "Kedro project directory structure": [[49, "kedro-project-directory-structure"]], "conf": [[49, "conf"]], "conf/base": [[49, "conf-base"]], "conf/local": [[49, "conf-local"]], "data": [[49, "data"]], "src": [[49, "src"]], "Use Hooks to extend a node\u2019s behaviour": [[51, "use-hooks-to-extend-a-node-s-behaviour"]], "Use Hooks to customise the dataset load and save methods": [[51, "use-hooks-to-customise-the-dataset-load-and-save-methods"]], "Use Hooks to load external credentials": [[51, "use-hooks-to-load-external-credentials"]], "Use a Hook to read metadata from DataCatalog": [[51, "use-a-hook-to-read-metadata-from-datacatalog"]], "kedro.framework.hooks.markers": [[149, "kedro-framework-hooks-markers"]], "kedro.framework.hooks.specs.PipelineSpecs": [[155, "kedro-framework-hooks-specs-pipelinespecs"]], "kedro.framework.context.KedroContext": [[145, "kedro-framework-context-kedrocontext"]], "kedro.framework.project.find_pipelines": [[159, "kedro-framework-project-find-pipelines"]], "kedro.framework.hooks.specs.NodeSpecs": [[154, "kedro-framework-hooks-specs-nodespecs"]], "kedro.framework.hooks.specs.DataCatalogSpecs": [[151, "kedro-framework-hooks-specs-datacatalogspecs"]], "kedro.framework.project": [[156, "kedro-framework-project"]], "kedro.framework.hooks": [[147, "kedro-framework-hooks"]], "kedro.framework.project.configure_logging": [[157, "kedro-framework-project-configure-logging"]], "kedro.framework.hooks.specs.KedroContextSpecs": [[153, "kedro-framework-hooks-specs-kedrocontextspecs"]], "kedro.framework.hooks.specs": [[150, "kedro-framework-hooks-specs"]], "kedro.framework.hooks.manager": [[148, "kedro-framework-hooks-manager"]], "kedro.framework.hooks.specs.DatasetSpecs": [[152, "kedro-framework-hooks-specs-datasetspecs"]], "kedro.framework.context": [[144, "kedro-framework-context"]], "kedro.framework.context.KedroContextError": [[146, "kedro-framework-context-kedrocontexterror"]], "kedro.framework.project.configure_project": [[158, "kedro-framework-project-configure-project"]], "Preview data in Kedro-Viz": [[281, "preview-data-in-kedro-viz"]], "Configure the Data Catalog": [[281, "configure-the-data-catalog"], [283, "configure-the-data-catalog"], [283, "id2"]], "Previewing Data on Kedro-viz": [[281, "previewing-data-on-kedro-viz"]], "Spaceflights tutorial FAQs": [[277, "spaceflights-tutorial-faqs"]], "How do I resolve these common errors?": [[277, "how-do-i-resolve-these-common-errors"]], "Dataset errors": [[277, "dataset-errors"]], "DatasetError: Failed while loading data from data set": [[277, "dataseterror-failed-while-loading-data-from-data-set"]], "DatasetNotFoundError: Dataset not found in the catalog": [[277, "datasetnotfounderror-dataset-not-found-in-the-catalog"]], "DatasetError: An exception occurred when parsing config for Dataset": [[277, "dataseterror-an-exception-occurred-when-parsing-config-for-dataset"]], "Pipeline run": [[277, "pipeline-run"]], "Create a data science pipeline": [[272, "create-a-data-science-pipeline"]], "Data science nodes": [[272, "data-science-nodes"]], "Input parameter configuration": [[272, "input-parameter-configuration"]], "Model registration": [[272, "model-registration"]], "Data science pipeline": [[272, "data-science-pipeline"]], "Test the pipelines": [[272, "test-the-pipelines"]], "Slice a pipeline": [[272, "slice-a-pipeline"], [265, "slice-a-pipeline"]], "Optional: Extend the project with namespacing and a modular pipeline": [[272, "optional-extend-the-project-with-namespacing-and-a-modular-pipeline"]], "How it works: the modular pipeline() wrapper": [[272, "how-it-works-the-modular-pipeline-wrapper"]], "How do namespaces affect parameters?": [[272, "how-do-namespaces-affect-parameters"]], "Optional: Kedro runners": [[272, "optional-kedro-runners"]], "Next steps: Tutorial": [[276, "next-steps-tutorial"]], "Get help": [[276, "get-help"]], "Terminology": [[276, "terminology"]], "Project root directory": [[276, "project-root-directory"]], "Dependencies": [[276, "dependencies"], [251, "dependencies"]], "Standard development workflow": [[276, "standard-development-workflow"]], "Visualise the spaceflights project": [[280, "visualise-the-spaceflights-project"]], "Automatic visualisation updates": [[280, "automatic-visualisation-updates"]], "Visualise layers": [[280, "visualise-layers"]], "Share a pipeline visualisation": [[280, "share-a-pipeline-visualisation"]], "Create a data processing pipeline": [[273, "create-a-data-processing-pipeline"]], "Data preprocessing node functions": [[273, "data-preprocessing-node-functions"]], "The data processing pipeline": [[273, "the-data-processing-pipeline"]], "Test the example": [[273, "test-the-example"]], "Preprocessed data registration": [[273, "preprocessed-data-registration"]], "Create a table for model input": [[273, "create-a-table-for-model-input"]], "Model input table registration": [[273, "model-input-table-registration"]], "Test the example again": [[273, "test-the-example-again"]], "Visualise the project": [[273, "visualise-the-project"]], "Checkpoint": [[273, "checkpoint"]], "Set up the data": [[275, "set-up-the-data"]], "Project datasets": [[275, "project-datasets"]], "Dataset registration": [[275, "dataset-registration"]], "Test that Kedro can load the data": [[275, "test-that-kedro-can-load-the-data"]], "Further information": [[275, "further-information"]], "Custom data": [[275, "custom-data"]], "Supported data locations": [[275, "supported-data-locations"]], "Package an entire Kedro project": [[274, "package-an-entire-kedro-project"]], "Add documentation to a Kedro project": [[274, "add-documentation-to-a-kedro-project"]], "Set up the Sphinx project files": [[274, "set-up-the-sphinx-project-files"]], "Build HTML documentation": [[274, "build-html-documentation"]], "Documentation from docstrings": [[274, "documentation-from-docstrings"]], "Package a Kedro project": [[274, "package-a-kedro-project"]], "Run a packaged project": [[274, "run-a-packaged-project"]], "Docker, Airflow and other deployment targets": [[274, "docker-airflow-and-other-deployment-targets"]], "Visualise charts in Kedro-Viz": [[283, "visualise-charts-in-kedro-viz"]], "Visualisation with Plotly": [[283, "visualisation-with-plotly"]], "Create the template reporting pipeline": [[283, "create-the-template-reporting-pipeline"]], "Add the Plotly reporting nodes": [[283, "add-the-plotly-reporting-nodes"]], "Update the reporting pipeline code": [[283, "update-the-reporting-pipeline-code"]], "Run the pipeline": [[283, "run-the-pipeline"], [283, "id3"]], "Visualisation with Matplotlib": [[283, "visualisation-with-matplotlib"]], "Add another node": [[283, "add-another-node"]], "Update the pipeline": [[283, "update-the-pipeline"]], "Publish and share Kedro-Viz": [[282, "publish-and-share-kedro-viz"]], "Update and install the dependencies": [[282, "update-and-install-the-dependencies"]], "Configure your AWS S3 bucket and set credentials": [[282, "configure-your-aws-s3-bucket-and-set-credentials"]], "Publish and share the project": [[282, "publish-and-share-the-project"]], "Permissions and access control": [[282, "permissions-and-access-control"]], "Set up the spaceflights project": [[278, "set-up-the-spaceflights-project"]], "Create a new project": [[278, "create-a-new-project"]], "Install project dependencies": [[278, "install-project-dependencies"]], "Install the dependencies": [[278, "install-the-dependencies"]], "Optional: logging and configuration": [[278, "optional-logging-and-configuration"]], "Configuration best practice to avoid leaking confidential data": [[278, "configuration-best-practice-to-avoid-leaking-confidential-data"]], "Visualisation with Kedro-Viz": [[279, "visualisation-with-kedro-viz"]], "kedro.ipython": [[185, "kedro-ipython"]], "kedro.io.DataSetError": [[178, "kedro-io-dataseterror"]], "kedro.logging.RichHandler": [[190, "kedro-logging-richhandler"]], "kedro.logging": [[189, "kedro-logging"]], "kedro.io.IncrementalDataSet": [[180, "kedro-io-incrementaldataset"]], "kedro.io.DataSetAlreadyExistsError": [[177, "kedro-io-datasetalreadyexistserror"]], "kedro.io.DataCatalog": [[176, "kedro-io-datacatalog"]], "kedro.io.LambdaDataSet": [[181, "kedro-io-lambdadataset"]], "kedro.io.PartitionedDataSet": [[183, "kedro-io-partitioneddataset"]], "kedro.io.Version": [[184, "kedro-io-version"]], "kedro.ipython.magic_reload_kedro": [[187, "kedro-ipython-magic-reload-kedro"]], "kedro.ipython.reload_kedro": [[188, "kedro-ipython-reload-kedro"]], "kedro.io.MemoryDataSet": [[182, "kedro-io-memorydataset"]], "kedro.io.DataSetNotFoundError": [[179, "kedro-io-datasetnotfounderror"]], "kedro.pipeline": [[191, "kedro-pipeline"]], "kedro.ipython.load_ipython_extension": [[186, "kedro-ipython-load-ipython-extension"]], "kedro.extras.datasets.spark.DeltaTableDataSet": [[96, "kedro-extras-datasets-spark-deltatabledataset"]], "kedro.extras.datasets.spark.SparkJDBCDataSet": [[99, "kedro-extras-datasets-spark-sparkjdbcdataset"]], "kedro.framework": [[111, "kedro-framework"]], "kedro.extras.extensions": [[106, "kedro-extras-extensions"]], "kedro.extras.datasets.svmlight.SVMLightDataSet": [[100, "kedro-extras-datasets-svmlight-svmlightdataset"]], "kedro.extras.datasets.tensorflow.TensorFlowModelDataset": [[101, "kedro-extras-datasets-tensorflow-tensorflowmodeldataset"]], "kedro.extras.logging.color_logger": [[109, "kedro-extras-logging-color-logger"]], "kedro.extras.logging": [[108, "kedro-extras-logging"]], "kedro.extras.datasets.yaml.YAMLDataSet": [[105, "kedro-extras-datasets-yaml-yamldataset"]], "kedro.extras.logging.color_logger.ColorHandler": [[110, "kedro-extras-logging-color-logger-colorhandler"]], "kedro.extras.datasets.spark.SparkDataSet": [[97, "kedro-extras-datasets-spark-sparkdataset"]], "kedro.extras.datasets.tracking.MetricsDataSet": [[104, "kedro-extras-datasets-tracking-metricsdataset"]], "kedro.extras.datasets.tracking.JSONDataSet": [[103, "kedro-extras-datasets-tracking-jsondataset"]], "kedro.extras.datasets.spark.SparkHiveDataSet": [[98, "kedro-extras-datasets-spark-sparkhivedataset"]], "kedro.extras.datasets.text.TextDataSet": [[102, "kedro-extras-datasets-text-textdataset"]], "kedro.extras.extensions.ipython": [[107, "kedro-extras-extensions-ipython"]], "kedro.io.CachedDataSet": [[175, "kedro-io-cacheddataset"]], "kedro.framework.session.shelvestore": [[165, "kedro-framework-session-shelvestore"]], "kedro.framework.session.session": [[162, "kedro-framework-session-session"]], "kedro.framework.session.session.KedroSessionError": [[164, "kedro-framework-session-session-kedrosessionerror"]], "kedro.framework.session.shelvestore.ShelveStore": [[166, "kedro-framework-session-shelvestore-shelvestore"]], "kedro.io": [[172, "kedro-io"]], "kedro.framework.session.session.KedroSession": [[163, "kedro-framework-session-session-kedrosession"]], "kedro.framework.project.validate_settings": [[160, "kedro-framework-project-validate-settings"]], "kedro.framework.session.store": [[167, "kedro-framework-session-store"]], "kedro.framework.startup.bootstrap_project": [[171, "kedro-framework-startup-bootstrap-project"]], "kedro.io.AbstractDataSet": [[173, "kedro-io-abstractdataset"]], "kedro.io.AbstractVersionedDataSet": [[174, "kedro-io-abstractversioneddataset"]], "kedro.framework.startup": [[169, "kedro-framework-startup"]], "kedro.framework.session": [[161, "kedro-framework-session"]], "kedro.framework.startup.ProjectMetadata": [[170, "kedro-framework-startup-projectmetadata"]], "kedro.framework.session.store.BaseSessionStore": [[168, "kedro-framework-session-store-basesessionstore"]], "kedro_datasets.spark.SparkHiveDataSet": [[241, "kedro-datasets-spark-sparkhivedataset"]], "kedro_datasets.svmlight.SVMLightDataSet": [[244, "kedro-datasets-svmlight-svmlightdataset"]], "kedro_datasets.spark.SparkJDBCDataSet": [[242, "kedro-datasets-spark-sparkjdbcdataset"]], "Kedro project setup": [[252, "kedro-project-setup"]], "Kedro starters": [[255, "kedro-starters"]], "How to use Kedro starters": [[255, "how-to-use-kedro-starters"]], "Starter aliases": [[255, "starter-aliases"]], "List of official starters": [[255, "list-of-official-starters"]], "Starter versioning": [[255, "starter-versioning"]], "Use a starter with a configuration file": [[255, "use-a-starter-with-a-configuration-file"]], "How to create a Kedro starter": [[255, "how-to-create-a-kedro-starter"]], "Configuration variables": [[255, "configuration-variables"]], "Example Kedro starter": [[255, "example-kedro-starter"]], "kedro_datasets.tracking.JSONDataSet": [[247, "kedro-datasets-tracking-jsondataset"]], "kedro_datasets.spark.SparkDataSet": [[240, "kedro-datasets-spark-sparkdataset"]], "kedro_datasets.tracking.MetricsDataSet": [[248, "kedro-datasets-tracking-metricsdataset"]], "kedro_datasets.text.TextDataSet": [[246, "kedro-datasets-text-textdataset"]], "kedro_datasets.yaml.YAMLDataSet": [[250, "kedro-datasets-yaml-yamldataset"]], "kedro_datasets.tensorflow.TensorFlowModelDataSet": [[245, "kedro-datasets-tensorflow-tensorflowmodeldataset"]], "Lifecycle management with KedroSession": [[253, "lifecycle-management-with-kedrosession"]], "Create a session": [[253, "create-a-session"]], "Project settings": [[254, "project-settings"]], "Application settings": [[254, "application-settings"]], "Project metadata": [[254, "project-metadata"]], "Project-specific dependencies": [[251, "project-specific-dependencies"]], "Install project-specific dependencies": [[251, "install-project-specific-dependencies"]], "Workflow dependencies": [[251, "workflow-dependencies"], [270, "workflow-dependencies"]], "Install dependencies related to the Data Catalog": [[251, "install-dependencies-related-to-the-data-catalog"]], "Install dependencies at a group-level": [[251, "install-dependencies-at-a-group-level"]], "Install dependencies at a type-level": [[251, "install-dependencies-at-a-type-level"]], "kedro_datasets.spark.SparkStreamingDataSet": [[243, "kedro-datasets-spark-sparkstreamingdataset"]], "kedro_datasets.video.VideoDataSet": [[249, "kedro-datasets-video-videodataset"]], "kedro.extras.datasets.geopandas.GeoJSONDataSet": [[72, "kedro-extras-datasets-geopandas-geojsondataset"]], "kedro.config.OmegaConfigLoader": [[64, "kedro-config-omegaconfigloader"]], "kedro.extras.datasets.pandas.CSVDataSet": [[79, "kedro-extras-datasets-pandas-csvdataset"]], "kedro.extras.datasets.matplotlib.MatplotlibWriter": [[75, "kedro-extras-datasets-matplotlib-matplotlibwriter"]], "kedro.extras.datasets.networkx.GMLDataSet": [[76, "kedro-extras-datasets-networkx-gmldataset"]], "kedro.extras.datasets.holoviews.HoloviewsWriter": [[73, "kedro-extras-datasets-holoviews-holoviewswriter"]], "kedro.extras": [[66, "kedro-extras"]], "kedro.extras.datasets.email.EmailMessageDataSet": [[71, "kedro-extras-datasets-email-emailmessagedataset"]], "kedro.extras.datasets.networkx.JSONDataSet": [[78, "kedro-extras-datasets-networkx-jsondataset"]], "kedro.extras.datasets.dask.ParquetDataSet": [[70, "kedro-extras-datasets-dask-parquetdataset"]], "kedro.config.TemplatedConfigLoader": [[65, "kedro-config-templatedconfigloader"]], "kedro.extras.datasets.biosequence.BioSequenceDataSet": [[69, "kedro-extras-datasets-biosequence-biosequencedataset"]], "kedro.extras.datasets.json.JSONDataSet": [[74, "kedro-extras-datasets-json-jsondataset"]], "kedro.extras.datasets.networkx.GraphMLDataSet": [[77, "kedro-extras-datasets-networkx-graphmldataset"]], "kedro.extras.datasets": [[67, "kedro-extras-datasets"]], "kedro.extras.datasets.api.APIDataSet": [[68, "kedro-extras-datasets-api-apidataset"]], "kedro_datasets": [[205, "kedro-datasets"]], "kedro.pipeline.modular_pipeline.pipeline": [[194, "kedro-pipeline-modular-pipeline-pipeline"]], "kedro.utils": [[203, "kedro-utils"]], "kedro_datasets.biosequence.BioSequenceDataSet": [[207, "kedro-datasets-biosequence-biosequencedataset"]], "kedro.runner.AbstractRunner": [[198, "kedro-runner-abstractrunner"]], "kedro.pipeline.node.Node": [[196, "kedro-pipeline-node-node"]], "kedro.utils.load_obj": [[204, "kedro-utils-load-obj"]], "kedro.pipeline.modular_pipeline.ModularPipelineError": [[193, "kedro-pipeline-modular-pipeline-modularpipelineerror"]], "kedro.pipeline.node": [[195, "kedro-pipeline-node"]], "kedro.runner": [[197, "kedro-runner"]], "kedro.runner.ParallelRunner": [[199, "kedro-runner-parallelrunner"]], "kedro.pipeline.Pipeline": [[192, "kedro-pipeline-pipeline"]], "kedro.runner.run_node": [[202, "kedro-runner-run-node"]], "kedro_datasets.api.APIDataSet": [[206, "kedro-datasets-api-apidataset"]], "kedro.runner.ThreadRunner": [[201, "kedro-runner-threadrunner"]], "kedro.runner.SequentialRunner": [[200, "kedro-runner-sequentialrunner"]], "kedro.extras.datasets.pillow.ImageDataSet": [[92, "kedro-extras-datasets-pillow-imagedataset"]], "kedro.extras.datasets.pandas.GBQTableDataSet": [[83, "kedro-extras-datasets-pandas-gbqtabledataset"]], "kedro.extras.datasets.pandas.ExcelDataSet": [[80, "kedro-extras-datasets-pandas-exceldataset"]], "kedro.extras.datasets.plotly.PlotlyDataSet": [[94, "kedro-extras-datasets-plotly-plotlydataset"]], "kedro.extras.datasets.pandas.GBQQueryDataSet": [[82, "kedro-extras-datasets-pandas-gbqquerydataset"]], "kedro.extras.datasets.pandas.HDFDataSet": [[85, "kedro-extras-datasets-pandas-hdfdataset"]], "kedro.extras.datasets.pandas.ParquetDataSet": [[87, "kedro-extras-datasets-pandas-parquetdataset"]], "kedro.extras.datasets.pandas.XMLDataSet": [[90, "kedro-extras-datasets-pandas-xmldataset"]], "kedro.extras.datasets.pandas.GenericDataSet": [[84, "kedro-extras-datasets-pandas-genericdataset"]], "kedro.extras.datasets.plotly.JSONDataSet": [[93, "kedro-extras-datasets-plotly-jsondataset"]], "kedro.extras.datasets.pickle.PickleDataSet": [[91, "kedro-extras-datasets-pickle-pickledataset"]], "kedro.extras.datasets.pandas.SQLQueryDataSet": [[88, "kedro-extras-datasets-pandas-sqlquerydataset"]], "kedro.extras.datasets.redis.PickleDataSet": [[95, "kedro-extras-datasets-redis-pickledataset"]], "kedro.extras.datasets.pandas.SQLTableDataSet": [[89, "kedro-extras-datasets-pandas-sqltabledataset"]], "kedro.extras.datasets.pandas.JSONDataSet": [[86, "kedro-extras-datasets-pandas-jsondataset"]], "kedro.extras.datasets.pandas.FeatherDataSet": [[81, "kedro-extras-datasets-pandas-featherdataset"]], "kedro_datasets.pandas.HDFDataSet": [[225, "kedro-datasets-pandas-hdfdataset"]], "kedro_datasets.pandas.ParquetDataSet": [[227, "kedro-datasets-pandas-parquetdataset"]], "kedro_datasets.pandas.GenericDataSet": [[224, "kedro-datasets-pandas-genericdataset"]], "kedro_datasets.pandas.SQLTableDataSet": [[229, "kedro-datasets-pandas-sqltabledataset"]], "kedro_datasets.plotly.PlotlyDataSet": [[234, "kedro-datasets-plotly-plotlydataset"]], "kedro_datasets.pandas.SQLQueryDataSet": [[228, "kedro-datasets-pandas-sqlquerydataset"]], "kedro_datasets.pandas.JSONDataSet": [[226, "kedro-datasets-pandas-jsondataset"]], "kedro_datasets.redis.PickleDataSet": [[237, "kedro-datasets-redis-pickledataset"]], "kedro_datasets.polars.GenericDataSet": [[236, "kedro-datasets-polars-genericdataset"]], "kedro_datasets.pickle.PickleDataSet": [[231, "kedro-datasets-pickle-pickledataset"]], "kedro_datasets.plotly.JSONDataSet": [[233, "kedro-datasets-plotly-jsondataset"]], "kedro_datasets.pandas.XMLDataSet": [[230, "kedro-datasets-pandas-xmldataset"]], "kedro_datasets.snowflake.SnowparkTableDataSet": [[238, "kedro-datasets-snowflake-snowparktabledataset"]], "kedro_datasets.polars.CSVDataSet": [[235, "kedro-datasets-polars-csvdataset"]], "kedro_datasets.spark.DeltaTableDataSet": [[239, "kedro-datasets-spark-deltatabledataset"]], "kedro_datasets.pillow.ImageDataSet": [[232, "kedro-datasets-pillow-imagedataset"]], "kedro_datasets.networkx.GraphMLDataSet": [[216, "kedro-datasets-networkx-graphmldataset"]], "kedro_datasets.geopandas.GeoJSONDataSet": [[211, "kedro-datasets-geopandas-geojsondataset"]], "kedro_datasets.holoviews.HoloviewsWriter": [[212, "kedro-datasets-holoviews-holoviewswriter"]], "kedro_datasets.pandas.ExcelDataSet": [[220, "kedro-datasets-pandas-exceldataset"]], "kedro_datasets.networkx.JSONDataSet": [[217, "kedro-datasets-networkx-jsondataset"]], "kedro_datasets.pandas.CSVDataSet": [[218, "kedro-datasets-pandas-csvdataset"]], "kedro_datasets.pandas.GBQTableDataSet": [[223, "kedro-datasets-pandas-gbqtabledataset"]], "kedro_datasets.dask.ParquetDataSet": [[208, "kedro-datasets-dask-parquetdataset"]], "kedro_datasets.json.JSONDataSet": [[213, "kedro-datasets-json-jsondataset"]], "kedro_datasets.pandas.FeatherDataSet": [[221, "kedro-datasets-pandas-featherdataset"]], "kedro_datasets.networkx.GMLDataSet": [[215, "kedro-datasets-networkx-gmldataset"]], "kedro_datasets.databricks.ManagedTableDataSet": [[209, "kedro-datasets-databricks-managedtabledataset"]], "kedro_datasets.email.EmailMessageDataSet": [[210, "kedro-datasets-email-emailmessagedataset"]], "kedro_datasets.pandas.DeltaTableDataSet": [[219, "kedro-datasets-pandas-deltatabledataset"]], "kedro_datasets.pandas.GBQQueryDataSet": [[222, "kedro-datasets-pandas-gbqquerydataset"]], "kedro_datasets.matplotlib.MatplotlibWriter": [[214, "kedro-datasets-matplotlib-matplotlibwriter"]], "Pipelines": [[262, "pipelines"]], "How to build a pipeline": [[262, "how-to-build-a-pipeline"]], "How to tag a pipeline": [[262, "how-to-tag-a-pipeline"]], "How to merge multiple pipelines": [[262, "how-to-merge-multiple-pipelines"]], "Information about the nodes in a pipeline": [[262, "information-about-the-nodes-in-a-pipeline"]], "Information about pipeline inputs and outputs": [[262, "information-about-pipeline-inputs-and-outputs"]], "Bad pipelines": [[262, "bad-pipelines"]], "Pipeline with bad nodes": [[262, "pipeline-with-bad-nodes"]], "Pipeline with circular dependencies": [[262, "pipeline-with-circular-dependencies"]], "Pipeline nodes named with the dot notation": [[262, "pipeline-nodes-named-with-the-dot-notation"]], "What are modular pipelines?": [[260, "what-are-modular-pipelines"]], "Key concepts": [[260, "key-concepts"]], "How do I create a modular pipeline?": [[260, "how-do-i-create-a-modular-pipeline"]], "What does kedro pipeline create do?": [[260, "what-does-kedro-pipeline-create-do"]], "Custom templates": [[260, "custom-templates"]], "Creating custom templates": [[260, "creating-custom-templates"]], "Ensuring portability": [[260, "ensuring-portability"]], "Providing modular pipeline specific dependencies": [[260, "providing-modular-pipeline-specific-dependencies"]], "Using the modular pipeline() wrapper to provide overrides": [[260, "using-the-modular-pipeline-wrapper-to-provide-overrides"]], "Combining disconnected pipelines": [[260, "combining-disconnected-pipelines"]], "Using a modular pipeline multiple times": [[260, "using-a-modular-pipeline-multiple-times"]], "How to use a modular pipeline with different parameters": [[260, "how-to-use-a-modular-pipeline-with-different-parameters"]], "Default framework-side logging configuration": [[257, "default-framework-side-logging-configuration"]], "Project-side logging configuration": [[257, "project-side-logging-configuration"]], "Using KEDRO_LOGGING_CONFIG environment variable": [[257, "using-kedro-logging-config-environment-variable"]], "Disable file-based logging": [[257, "disable-file-based-logging"]], "Customise the rich Handler": [[257, "customise-the-rich-handler"]], "Use plain console logging": [[257, "use-plain-console-logging"]], "Rich logging in a dumb terminal": [[257, "rich-logging-in-a-dumb-terminal"]], "Rich logging in Jupyter": [[257, "rich-logging-in-jupyter"]], "Perform logging in your project": [[257, "perform-logging-in-your-project"]], "Use a Jupyter notebook for Kedro project experiments": [[268, "use-a-jupyter-notebook-for-kedro-project-experiments"]], "Iris dataset example": [[268, "iris-dataset-example"]], "What does kedro jupyter notebook do?": [[268, "what-does-kedro-jupyter-notebook-do"]], "How to explore a Kedro project in my notebook": [[268, "how-to-explore-a-kedro-project-in-my-notebook"]], "%run_viz line magic": [[268, "run-viz-line-magic"]], "catalog": [[268, "catalog"]], "context": [[268, "context"]], "pipelines": [[268, "pipelines"]], "session": [[268, "session"]], "%reload_kedro line magic": [[268, "reload-kedro-line-magic"]], "How to use tags to convert functions from Jupyter notebooks into Kedro nodes": [[268, "how-to-use-tags-to-convert-functions-from-jupyter-notebooks-into-kedro-nodes"]], "Useful to know (for advanced users)": [[268, "useful-to-know-for-advanced-users"]], "Managed services": [[268, "managed-services"]], "IPython, JupyterLab and other Jupyter clients": [[268, "ipython-jupyterlab-and-other-jupyter-clients"]], "Find out more": [[268, "find-out-more"]], "Micro-packaging": [[259, "micro-packaging"]], "Package multiple micro-packages": [[259, "package-multiple-micro-packages"]], "Providing fsspec arguments": [[259, "providing-fsspec-arguments"]], "Pull multiple micro-packages": [[259, "pull-multiple-micro-packages"]], "The pipeline registry": [[263, "the-pipeline-registry"]], "Pipeline autodiscovery": [[263, "pipeline-autodiscovery"]], "Kedro for notebook users": [[267, "kedro-for-notebook-users"]], "FAQs and resources": [[271, "faqs-and-resources"]], "Logging": [[256, "logging"]], "Kedro glossary": [[270, "kedro-glossary"]], "Data engineering vs Data science": [[270, "data-engineering-vs-data-science"]], "Kedro": [[270, "kedro"]], "KedroContext": [[270, "kedrocontext"]], "KedroSession": [[270, "kedrosession"]], "Kedro-Viz": [[270, "kedro-viz"]], "Layers (data engineering convention)": [[270, "layers-data-engineering-convention"]], "Modular pipeline": [[270, "modular-pipeline"]], "Node execution order": [[270, "node-execution-order"]], "Pipeline slicing": [[270, "pipeline-slicing"]], "Runner": [[270, "runner"]], "Starters": [[270, "starters"]], "Tags": [[270, "tags"]], "Nodes": [[261, "nodes"]], "How to create a node": [[261, "how-to-create-a-node"]], "Node definition syntax": [[261, "node-definition-syntax"]], "Syntax for input variables": [[261, "syntax-for-input-variables"]], "Syntax for output variables": [[261, "syntax-for-output-variables"]], "**kwargs-only node functions": [[261, "kwargs-only-node-functions"]], "How to tag a node": [[261, "how-to-tag-a-node"]], "How to run a node": [[261, "how-to-run-a-node"]], "How to use generator functions in a node": [[261, "how-to-use-generator-functions-in-a-node"]], "Set up the project": [[261, "set-up-the-project"]], "Loading data with Generators": [[261, "loading-data-with-generators"]], "Saving data with Generators": [[261, "saving-data-with-generators"]], "Add Kedro features to a notebook": [[266, "Add-Kedro-features-to-a-notebook"]], "Spaceflights in a notebook": [[266, "Spaceflights-in-a-notebook"]], "The notebook example": [[266, "The-notebook-example"]], "Use Kedro for data processing": [[266, "Use-Kedro-for-data-processing"]], "Use a YAML configuration file": [[266, "Use-a-YAML-configuration-file"]], "Use a configuration file just for \u201cmagic numbers\u201d": [[266, "Use-a-configuration-file-just-for-\u201cmagic-numbers\u201d"]], "Use a configuration file for all \u201cmagic values\u201d": [[266, "Use-a-configuration-file-for-all-\u201cmagic-values\u201d"]], "Use Kedro configuration": [[266, "Use-Kedro-configuration"]], "Use Kedro\u2019s configuration loader to load \u201cmagic values\u201d": [[266, "Use-Kedro\u2019s-configuration-loader-to-load-\u201cmagic-values\u201d"]], "Use Kedro\u2019s configuration loader to load the Data Catalog": [[266, "Use-Kedro\u2019s-configuration-loader-to-load-the-Data-Catalog"]], "Refactor your code into functions": [[266, "Refactor-your-code-into-functions"]], "Kedro as a data registry": [[269, "kedro-as-a-data-registry"]], "Usage": [[269, "usage"]], "Run a pipeline": [[264, "run-a-pipeline"]], "Runners": [[264, "runners"]], "SequentialRunner": [[264, "sequentialrunner"]], "ParallelRunner": [[264, "parallelrunner"]], "Multiprocessing": [[264, "multiprocessing"]], "Multithreading": [[264, "multithreading"]], "Custom runners": [[264, "custom-runners"]], "Load and save asynchronously": [[264, "load-and-save-asynchronously"]], "Run a pipeline by name": [[264, "run-a-pipeline-by-name"]], "Run pipelines with IO": [[264, "run-pipelines-with-io"]], "Output to a file": [[264, "output-to-a-file"]], "Configure kedro run arguments": [[264, "configure-kedro-run-arguments"]], "Slice a pipeline by providing inputs": [[265, "slice-a-pipeline-by-providing-inputs"]], "Slice a pipeline by specifying nodes": [[265, "slice-a-pipeline-by-specifying-nodes"]], "Slice a pipeline by specifying final nodes": [[265, "slice-a-pipeline-by-specifying-final-nodes"]], "Slice a pipeline with tagged nodes": [[265, "slice-a-pipeline-with-tagged-nodes"]], "Slice a pipeline by running specified nodes": [[265, "slice-a-pipeline-by-running-specified-nodes"]], "How to recreate missing outputs": [[265, "how-to-recreate-missing-outputs"]]}, "indexentries": {"kedro": [[59, "module-kedro"]], "module": [[59, "module-kedro"], [61, "module-kedro.config"], [66, "module-kedro.extras"], [67, "module-kedro.extras.datasets"], [106, "module-kedro.extras.extensions"], [107, "module-kedro.extras.extensions.ipython"], [108, "module-kedro.extras.logging"], [109, "module-kedro.extras.logging.color_logger"], [111, "module-kedro.framework"], [112, "module-kedro.framework.cli"], [113, "module-kedro.framework.cli.catalog"], [114, "module-kedro.framework.cli.cli"], [117, "module-kedro.framework.cli.hooks"], [118, "module-kedro.framework.cli.hooks.manager"], [121, "module-kedro.framework.cli.hooks.markers"], [122, "module-kedro.framework.cli.hooks.specs"], [124, "module-kedro.framework.cli.jupyter"], [126, "module-kedro.framework.cli.micropkg"], [128, "module-kedro.framework.cli.pipeline"], [130, "module-kedro.framework.cli.project"], [131, "module-kedro.framework.cli.registry"], [132, "module-kedro.framework.cli.starters"], [134, "module-kedro.framework.cli.utils"], [144, "module-kedro.framework.context"], [147, "module-kedro.framework.hooks"], [148, "module-kedro.framework.hooks.manager"], [149, "module-kedro.framework.hooks.markers"], [150, "module-kedro.framework.hooks.specs"], [156, "module-kedro.framework.project"], [161, "module-kedro.framework.session"], [162, "module-kedro.framework.session.session"], [165, "module-kedro.framework.session.shelvestore"], [167, "module-kedro.framework.session.store"], [169, "module-kedro.framework.startup"], [172, "module-kedro.io"], [185, "module-kedro.ipython"], [189, "module-kedro.logging"], [191, "module-kedro.pipeline"], [197, "module-kedro.runner"], [203, "module-kedro.utils"], [205, "module-kedro_datasets"]], "kedropythonversionwarning (class in kedro)": [[60, "kedro.KedroPythonVersionWarning"]], "args (kedro.kedropythonversionwarning attribute)": [[60, "kedro.KedroPythonVersionWarning.args"]], "with_traceback() (kedro.kedropythonversionwarning method)": [[60, "kedro.KedroPythonVersionWarning.with_traceback"]], "kedro.config": [[61, "module-kedro.config"]], "configloader (class in kedro.config)": [[62, "kedro.config.ConfigLoader"]], "__init__() (kedro.config.configloader method)": [[62, "kedro.config.ConfigLoader.__init__"]], "clear() (kedro.config.configloader method)": [[62, "kedro.config.ConfigLoader.clear"]], "conf_paths (kedro.config.configloader property)": [[62, "kedro.config.ConfigLoader.conf_paths"]], "copy() (kedro.config.configloader method)": [[62, "kedro.config.ConfigLoader.copy"]], "fromkeys() (kedro.config.configloader class method)": [[62, "kedro.config.ConfigLoader.fromkeys"]], "get() (kedro.config.configloader method)": [[62, "kedro.config.ConfigLoader.get"]], "items() (kedro.config.configloader method)": [[62, "kedro.config.ConfigLoader.items"]], "keys() (kedro.config.configloader method)": [[62, "kedro.config.ConfigLoader.keys"]], "pop() (kedro.config.configloader method)": [[62, "kedro.config.ConfigLoader.pop"]], "popitem() (kedro.config.configloader method)": [[62, "kedro.config.ConfigLoader.popitem"]], "setdefault() (kedro.config.configloader method)": [[62, "kedro.config.ConfigLoader.setdefault"]], "update() (kedro.config.configloader method)": [[62, "kedro.config.ConfigLoader.update"]], "values() (kedro.config.configloader method)": [[62, "kedro.config.ConfigLoader.values"]], "missingconfigexception (class in kedro.config)": [[63, "kedro.config.MissingConfigException"]], "args (kedro.config.missingconfigexception attribute)": [[63, "kedro.config.MissingConfigException.args"]], "with_traceback() (kedro.config.missingconfigexception method)": [[63, "kedro.config.MissingConfigException.with_traceback"]], "omegaconfigloader (class in kedro.config)": [[64, "kedro.config.OmegaConfigLoader"]], "__init__() (kedro.config.omegaconfigloader method)": [[64, "kedro.config.OmegaConfigLoader.__init__"]], "clear() (kedro.config.omegaconfigloader method)": [[64, "kedro.config.OmegaConfigLoader.clear"]], "copy() (kedro.config.omegaconfigloader method)": [[64, "kedro.config.OmegaConfigLoader.copy"]], "fromkeys() (kedro.config.omegaconfigloader class method)": [[64, "kedro.config.OmegaConfigLoader.fromkeys"]], "get() (kedro.config.omegaconfigloader method)": [[64, "kedro.config.OmegaConfigLoader.get"]], "items() (kedro.config.omegaconfigloader method)": [[64, "kedro.config.OmegaConfigLoader.items"]], "keys() (kedro.config.omegaconfigloader method)": [[64, "kedro.config.OmegaConfigLoader.keys"]], "load_and_merge_dir_config() (kedro.config.omegaconfigloader method)": [[64, "kedro.config.OmegaConfigLoader.load_and_merge_dir_config"]], "pop() (kedro.config.omegaconfigloader method)": [[64, "kedro.config.OmegaConfigLoader.pop"]], "popitem() (kedro.config.omegaconfigloader method)": [[64, "kedro.config.OmegaConfigLoader.popitem"]], "setdefault() (kedro.config.omegaconfigloader method)": [[64, "kedro.config.OmegaConfigLoader.setdefault"]], "update() (kedro.config.omegaconfigloader method)": [[64, "kedro.config.OmegaConfigLoader.update"]], "values() (kedro.config.omegaconfigloader method)": [[64, "kedro.config.OmegaConfigLoader.values"]], "templatedconfigloader (class in kedro.config)": [[65, "kedro.config.TemplatedConfigLoader"]], "__init__() (kedro.config.templatedconfigloader method)": [[65, "kedro.config.TemplatedConfigLoader.__init__"]], "clear() (kedro.config.templatedconfigloader method)": [[65, "kedro.config.TemplatedConfigLoader.clear"]], "conf_paths (kedro.config.templatedconfigloader property)": [[65, "kedro.config.TemplatedConfigLoader.conf_paths"]], "copy() (kedro.config.templatedconfigloader method)": [[65, "kedro.config.TemplatedConfigLoader.copy"]], "fromkeys() (kedro.config.templatedconfigloader class method)": [[65, "kedro.config.TemplatedConfigLoader.fromkeys"]], "get() (kedro.config.templatedconfigloader method)": [[65, "kedro.config.TemplatedConfigLoader.get"]], "items() (kedro.config.templatedconfigloader method)": [[65, "kedro.config.TemplatedConfigLoader.items"]], "keys() (kedro.config.templatedconfigloader method)": [[65, "kedro.config.TemplatedConfigLoader.keys"]], "pop() (kedro.config.templatedconfigloader method)": [[65, "kedro.config.TemplatedConfigLoader.pop"]], "popitem() (kedro.config.templatedconfigloader method)": [[65, "kedro.config.TemplatedConfigLoader.popitem"]], "setdefault() (kedro.config.templatedconfigloader method)": [[65, "kedro.config.TemplatedConfigLoader.setdefault"]], "update() (kedro.config.templatedconfigloader method)": [[65, "kedro.config.TemplatedConfigLoader.update"]], "values() (kedro.config.templatedconfigloader method)": [[65, "kedro.config.TemplatedConfigLoader.values"]], "kedro.extras": [[66, "module-kedro.extras"]], "kedro.extras.datasets": [[67, "module-kedro.extras.datasets"]], "apidataset (class in kedro.extras.datasets.api)": [[68, "kedro.extras.datasets.api.APIDataSet"]], "__init__() (kedro.extras.datasets.api.apidataset method)": [[68, "kedro.extras.datasets.api.APIDataSet.__init__"]], "exists() (kedro.extras.datasets.api.apidataset method)": [[68, "kedro.extras.datasets.api.APIDataSet.exists"]], "from_config() (kedro.extras.datasets.api.apidataset class method)": [[68, "kedro.extras.datasets.api.APIDataSet.from_config"]], "load() (kedro.extras.datasets.api.apidataset method)": [[68, "kedro.extras.datasets.api.APIDataSet.load"]], "release() (kedro.extras.datasets.api.apidataset method)": [[68, "kedro.extras.datasets.api.APIDataSet.release"]], "save() (kedro.extras.datasets.api.apidataset method)": [[68, "kedro.extras.datasets.api.APIDataSet.save"]], "biosequencedataset (class in kedro.extras.datasets.biosequence)": [[69, "kedro.extras.datasets.biosequence.BioSequenceDataSet"]], "default_load_args (kedro.extras.datasets.biosequence.biosequencedataset attribute)": [[69, "kedro.extras.datasets.biosequence.BioSequenceDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.biosequence.biosequencedataset attribute)": [[69, "kedro.extras.datasets.biosequence.BioSequenceDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[69, "kedro.extras.datasets.biosequence.BioSequenceDataSet.__init__"]], "exists() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[69, "kedro.extras.datasets.biosequence.BioSequenceDataSet.exists"]], "from_config() (kedro.extras.datasets.biosequence.biosequencedataset class method)": [[69, "kedro.extras.datasets.biosequence.BioSequenceDataSet.from_config"]], "invalidate_cache() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[69, "kedro.extras.datasets.biosequence.BioSequenceDataSet.invalidate_cache"]], "load() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[69, "kedro.extras.datasets.biosequence.BioSequenceDataSet.load"]], "release() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[69, "kedro.extras.datasets.biosequence.BioSequenceDataSet.release"]], "save() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[69, "kedro.extras.datasets.biosequence.BioSequenceDataSet.save"]], "default_load_args (kedro.extras.datasets.dask.parquetdataset attribute)": [[70, "kedro.extras.datasets.dask.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.dask.parquetdataset attribute)": [[70, "kedro.extras.datasets.dask.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro.extras.datasets.dask)": [[70, "kedro.extras.datasets.dask.ParquetDataSet"]], "__init__() (kedro.extras.datasets.dask.parquetdataset method)": [[70, "kedro.extras.datasets.dask.ParquetDataSet.__init__"]], "exists() (kedro.extras.datasets.dask.parquetdataset method)": [[70, "kedro.extras.datasets.dask.ParquetDataSet.exists"]], "from_config() (kedro.extras.datasets.dask.parquetdataset class method)": [[70, "kedro.extras.datasets.dask.ParquetDataSet.from_config"]], "fs_args (kedro.extras.datasets.dask.parquetdataset property)": [[70, "kedro.extras.datasets.dask.ParquetDataSet.fs_args"]], "load() (kedro.extras.datasets.dask.parquetdataset method)": [[70, "kedro.extras.datasets.dask.ParquetDataSet.load"]], "release() (kedro.extras.datasets.dask.parquetdataset method)": [[70, "kedro.extras.datasets.dask.ParquetDataSet.release"]], "save() (kedro.extras.datasets.dask.parquetdataset method)": [[70, "kedro.extras.datasets.dask.ParquetDataSet.save"]], "default_load_args (kedro.extras.datasets.email.emailmessagedataset attribute)": [[71, "kedro.extras.datasets.email.EmailMessageDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.email.emailmessagedataset attribute)": [[71, "kedro.extras.datasets.email.EmailMessageDataSet.DEFAULT_SAVE_ARGS"]], "emailmessagedataset (class in kedro.extras.datasets.email)": [[71, "kedro.extras.datasets.email.EmailMessageDataSet"]], "__init__() (kedro.extras.datasets.email.emailmessagedataset method)": [[71, "kedro.extras.datasets.email.EmailMessageDataSet.__init__"]], "exists() (kedro.extras.datasets.email.emailmessagedataset method)": [[71, "kedro.extras.datasets.email.EmailMessageDataSet.exists"]], "from_config() (kedro.extras.datasets.email.emailmessagedataset class method)": [[71, "kedro.extras.datasets.email.EmailMessageDataSet.from_config"]], "load() (kedro.extras.datasets.email.emailmessagedataset method)": [[71, "kedro.extras.datasets.email.EmailMessageDataSet.load"]], "release() (kedro.extras.datasets.email.emailmessagedataset method)": [[71, "kedro.extras.datasets.email.EmailMessageDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.email.emailmessagedataset method)": [[71, "kedro.extras.datasets.email.EmailMessageDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.email.emailmessagedataset method)": [[71, "kedro.extras.datasets.email.EmailMessageDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.email.emailmessagedataset method)": [[71, "kedro.extras.datasets.email.EmailMessageDataSet.save"]], "default_load_args (kedro.extras.datasets.geopandas.geojsondataset attribute)": [[72, "kedro.extras.datasets.geopandas.GeoJSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.geopandas.geojsondataset attribute)": [[72, "kedro.extras.datasets.geopandas.GeoJSONDataSet.DEFAULT_SAVE_ARGS"]], "geojsondataset (class in kedro.extras.datasets.geopandas)": [[72, "kedro.extras.datasets.geopandas.GeoJSONDataSet"]], "__init__() (kedro.extras.datasets.geopandas.geojsondataset method)": [[72, "kedro.extras.datasets.geopandas.GeoJSONDataSet.__init__"]], "exists() (kedro.extras.datasets.geopandas.geojsondataset method)": [[72, "kedro.extras.datasets.geopandas.GeoJSONDataSet.exists"]], "from_config() (kedro.extras.datasets.geopandas.geojsondataset class method)": [[72, "kedro.extras.datasets.geopandas.GeoJSONDataSet.from_config"]], "invalidate_cache() (kedro.extras.datasets.geopandas.geojsondataset method)": [[72, "kedro.extras.datasets.geopandas.GeoJSONDataSet.invalidate_cache"]], "load() (kedro.extras.datasets.geopandas.geojsondataset method)": [[72, "kedro.extras.datasets.geopandas.GeoJSONDataSet.load"]], "release() (kedro.extras.datasets.geopandas.geojsondataset method)": [[72, "kedro.extras.datasets.geopandas.GeoJSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.geopandas.geojsondataset method)": [[72, "kedro.extras.datasets.geopandas.GeoJSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.geopandas.geojsondataset method)": [[72, "kedro.extras.datasets.geopandas.GeoJSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.geopandas.geojsondataset method)": [[72, "kedro.extras.datasets.geopandas.GeoJSONDataSet.save"]], "default_save_args (kedro.extras.datasets.holoviews.holoviewswriter attribute)": [[73, "kedro.extras.datasets.holoviews.HoloviewsWriter.DEFAULT_SAVE_ARGS"]], "holoviewswriter (class in kedro.extras.datasets.holoviews)": [[73, "kedro.extras.datasets.holoviews.HoloviewsWriter"]], "__init__() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[73, "kedro.extras.datasets.holoviews.HoloviewsWriter.__init__"]], "exists() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[73, "kedro.extras.datasets.holoviews.HoloviewsWriter.exists"]], "from_config() (kedro.extras.datasets.holoviews.holoviewswriter class method)": [[73, "kedro.extras.datasets.holoviews.HoloviewsWriter.from_config"]], "load() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[73, "kedro.extras.datasets.holoviews.HoloviewsWriter.load"]], "release() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[73, "kedro.extras.datasets.holoviews.HoloviewsWriter.release"]], "resolve_load_version() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[73, "kedro.extras.datasets.holoviews.HoloviewsWriter.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[73, "kedro.extras.datasets.holoviews.HoloviewsWriter.resolve_save_version"]], "save() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[73, "kedro.extras.datasets.holoviews.HoloviewsWriter.save"]], "default_save_args (kedro.extras.datasets.json.jsondataset attribute)": [[74, "kedro.extras.datasets.json.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.json)": [[74, "kedro.extras.datasets.json.JSONDataSet"]], "__init__() (kedro.extras.datasets.json.jsondataset method)": [[74, "kedro.extras.datasets.json.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.json.jsondataset method)": [[74, "kedro.extras.datasets.json.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.json.jsondataset class method)": [[74, "kedro.extras.datasets.json.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.json.jsondataset method)": [[74, "kedro.extras.datasets.json.JSONDataSet.load"]], "release() (kedro.extras.datasets.json.jsondataset method)": [[74, "kedro.extras.datasets.json.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.json.jsondataset method)": [[74, "kedro.extras.datasets.json.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.json.jsondataset method)": [[74, "kedro.extras.datasets.json.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.json.jsondataset method)": [[74, "kedro.extras.datasets.json.JSONDataSet.save"]], "default_save_args (kedro.extras.datasets.matplotlib.matplotlibwriter attribute)": [[75, "kedro.extras.datasets.matplotlib.MatplotlibWriter.DEFAULT_SAVE_ARGS"]], "matplotlibwriter (class in kedro.extras.datasets.matplotlib)": [[75, "kedro.extras.datasets.matplotlib.MatplotlibWriter"]], "__init__() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[75, "kedro.extras.datasets.matplotlib.MatplotlibWriter.__init__"]], "exists() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[75, "kedro.extras.datasets.matplotlib.MatplotlibWriter.exists"]], "from_config() (kedro.extras.datasets.matplotlib.matplotlibwriter class method)": [[75, "kedro.extras.datasets.matplotlib.MatplotlibWriter.from_config"]], "load() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[75, "kedro.extras.datasets.matplotlib.MatplotlibWriter.load"]], "release() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[75, "kedro.extras.datasets.matplotlib.MatplotlibWriter.release"]], "resolve_load_version() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[75, "kedro.extras.datasets.matplotlib.MatplotlibWriter.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[75, "kedro.extras.datasets.matplotlib.MatplotlibWriter.resolve_save_version"]], "save() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[75, "kedro.extras.datasets.matplotlib.MatplotlibWriter.save"]], "default_load_args (kedro.extras.datasets.networkx.gmldataset attribute)": [[76, "kedro.extras.datasets.networkx.GMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.networkx.gmldataset attribute)": [[76, "kedro.extras.datasets.networkx.GMLDataSet.DEFAULT_SAVE_ARGS"]], "gmldataset (class in kedro.extras.datasets.networkx)": [[76, "kedro.extras.datasets.networkx.GMLDataSet"]], "__init__() (kedro.extras.datasets.networkx.gmldataset method)": [[76, "kedro.extras.datasets.networkx.GMLDataSet.__init__"]], "exists() (kedro.extras.datasets.networkx.gmldataset method)": [[76, "kedro.extras.datasets.networkx.GMLDataSet.exists"]], "from_config() (kedro.extras.datasets.networkx.gmldataset class method)": [[76, "kedro.extras.datasets.networkx.GMLDataSet.from_config"]], "load() (kedro.extras.datasets.networkx.gmldataset method)": [[76, "kedro.extras.datasets.networkx.GMLDataSet.load"]], "release() (kedro.extras.datasets.networkx.gmldataset method)": [[76, "kedro.extras.datasets.networkx.GMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.networkx.gmldataset method)": [[76, "kedro.extras.datasets.networkx.GMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.networkx.gmldataset method)": [[76, "kedro.extras.datasets.networkx.GMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.networkx.gmldataset method)": [[76, "kedro.extras.datasets.networkx.GMLDataSet.save"]], "default_load_args (kedro.extras.datasets.networkx.graphmldataset attribute)": [[77, "kedro.extras.datasets.networkx.GraphMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.networkx.graphmldataset attribute)": [[77, "kedro.extras.datasets.networkx.GraphMLDataSet.DEFAULT_SAVE_ARGS"]], "graphmldataset (class in kedro.extras.datasets.networkx)": [[77, "kedro.extras.datasets.networkx.GraphMLDataSet"]], "__init__() (kedro.extras.datasets.networkx.graphmldataset method)": [[77, "kedro.extras.datasets.networkx.GraphMLDataSet.__init__"]], "exists() (kedro.extras.datasets.networkx.graphmldataset method)": [[77, "kedro.extras.datasets.networkx.GraphMLDataSet.exists"]], "from_config() (kedro.extras.datasets.networkx.graphmldataset class method)": [[77, "kedro.extras.datasets.networkx.GraphMLDataSet.from_config"]], "load() (kedro.extras.datasets.networkx.graphmldataset method)": [[77, "kedro.extras.datasets.networkx.GraphMLDataSet.load"]], "release() (kedro.extras.datasets.networkx.graphmldataset method)": [[77, "kedro.extras.datasets.networkx.GraphMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.networkx.graphmldataset method)": [[77, "kedro.extras.datasets.networkx.GraphMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.networkx.graphmldataset method)": [[77, "kedro.extras.datasets.networkx.GraphMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.networkx.graphmldataset method)": [[77, "kedro.extras.datasets.networkx.GraphMLDataSet.save"]], "default_load_args (kedro.extras.datasets.networkx.jsondataset attribute)": [[78, "kedro.extras.datasets.networkx.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.networkx.jsondataset attribute)": [[78, "kedro.extras.datasets.networkx.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.networkx)": [[78, "kedro.extras.datasets.networkx.JSONDataSet"]], "__init__() (kedro.extras.datasets.networkx.jsondataset method)": [[78, "kedro.extras.datasets.networkx.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.networkx.jsondataset method)": [[78, "kedro.extras.datasets.networkx.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.networkx.jsondataset class method)": [[78, "kedro.extras.datasets.networkx.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.networkx.jsondataset method)": [[78, "kedro.extras.datasets.networkx.JSONDataSet.load"]], "release() (kedro.extras.datasets.networkx.jsondataset method)": [[78, "kedro.extras.datasets.networkx.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.networkx.jsondataset method)": [[78, "kedro.extras.datasets.networkx.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.networkx.jsondataset method)": [[78, "kedro.extras.datasets.networkx.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.networkx.jsondataset method)": [[78, "kedro.extras.datasets.networkx.JSONDataSet.save"]], "csvdataset (class in kedro.extras.datasets.pandas)": [[79, "kedro.extras.datasets.pandas.CSVDataSet"]], "default_load_args (kedro.extras.datasets.pandas.csvdataset attribute)": [[79, "kedro.extras.datasets.pandas.CSVDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.csvdataset attribute)": [[79, "kedro.extras.datasets.pandas.CSVDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro.extras.datasets.pandas.csvdataset method)": [[79, "kedro.extras.datasets.pandas.CSVDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.csvdataset method)": [[79, "kedro.extras.datasets.pandas.CSVDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.csvdataset class method)": [[79, "kedro.extras.datasets.pandas.CSVDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.csvdataset method)": [[79, "kedro.extras.datasets.pandas.CSVDataSet.load"]], "release() (kedro.extras.datasets.pandas.csvdataset method)": [[79, "kedro.extras.datasets.pandas.CSVDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.csvdataset method)": [[79, "kedro.extras.datasets.pandas.CSVDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.csvdataset method)": [[79, "kedro.extras.datasets.pandas.CSVDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.csvdataset method)": [[79, "kedro.extras.datasets.pandas.CSVDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.exceldataset attribute)": [[80, "kedro.extras.datasets.pandas.ExcelDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.exceldataset attribute)": [[80, "kedro.extras.datasets.pandas.ExcelDataSet.DEFAULT_SAVE_ARGS"]], "exceldataset (class in kedro.extras.datasets.pandas)": [[80, "kedro.extras.datasets.pandas.ExcelDataSet"]], "__init__() (kedro.extras.datasets.pandas.exceldataset method)": [[80, "kedro.extras.datasets.pandas.ExcelDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.exceldataset method)": [[80, "kedro.extras.datasets.pandas.ExcelDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.exceldataset class method)": [[80, "kedro.extras.datasets.pandas.ExcelDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.exceldataset method)": [[80, "kedro.extras.datasets.pandas.ExcelDataSet.load"]], "release() (kedro.extras.datasets.pandas.exceldataset method)": [[80, "kedro.extras.datasets.pandas.ExcelDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.exceldataset method)": [[80, "kedro.extras.datasets.pandas.ExcelDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.exceldataset method)": [[80, "kedro.extras.datasets.pandas.ExcelDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.exceldataset method)": [[80, "kedro.extras.datasets.pandas.ExcelDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.featherdataset attribute)": [[81, "kedro.extras.datasets.pandas.FeatherDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.featherdataset attribute)": [[81, "kedro.extras.datasets.pandas.FeatherDataSet.DEFAULT_SAVE_ARGS"]], "featherdataset (class in kedro.extras.datasets.pandas)": [[81, "kedro.extras.datasets.pandas.FeatherDataSet"]], "__init__() (kedro.extras.datasets.pandas.featherdataset method)": [[81, "kedro.extras.datasets.pandas.FeatherDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.featherdataset method)": [[81, "kedro.extras.datasets.pandas.FeatherDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.featherdataset class method)": [[81, "kedro.extras.datasets.pandas.FeatherDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.featherdataset method)": [[81, "kedro.extras.datasets.pandas.FeatherDataSet.load"]], "release() (kedro.extras.datasets.pandas.featherdataset method)": [[81, "kedro.extras.datasets.pandas.FeatherDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.featherdataset method)": [[81, "kedro.extras.datasets.pandas.FeatherDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.featherdataset method)": [[81, "kedro.extras.datasets.pandas.FeatherDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.featherdataset method)": [[81, "kedro.extras.datasets.pandas.FeatherDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.gbqquerydataset attribute)": [[82, "kedro.extras.datasets.pandas.GBQQueryDataSet.DEFAULT_LOAD_ARGS"]], "gbqquerydataset (class in kedro.extras.datasets.pandas)": [[82, "kedro.extras.datasets.pandas.GBQQueryDataSet"]], "__init__() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[82, "kedro.extras.datasets.pandas.GBQQueryDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[82, "kedro.extras.datasets.pandas.GBQQueryDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.gbqquerydataset class method)": [[82, "kedro.extras.datasets.pandas.GBQQueryDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[82, "kedro.extras.datasets.pandas.GBQQueryDataSet.load"]], "release() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[82, "kedro.extras.datasets.pandas.GBQQueryDataSet.release"]], "save() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[82, "kedro.extras.datasets.pandas.GBQQueryDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.gbqtabledataset attribute)": [[83, "kedro.extras.datasets.pandas.GBQTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.gbqtabledataset attribute)": [[83, "kedro.extras.datasets.pandas.GBQTableDataSet.DEFAULT_SAVE_ARGS"]], "gbqtabledataset (class in kedro.extras.datasets.pandas)": [[83, "kedro.extras.datasets.pandas.GBQTableDataSet"]], "__init__() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[83, "kedro.extras.datasets.pandas.GBQTableDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[83, "kedro.extras.datasets.pandas.GBQTableDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.gbqtabledataset class method)": [[83, "kedro.extras.datasets.pandas.GBQTableDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[83, "kedro.extras.datasets.pandas.GBQTableDataSet.load"]], "release() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[83, "kedro.extras.datasets.pandas.GBQTableDataSet.release"]], "save() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[83, "kedro.extras.datasets.pandas.GBQTableDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.genericdataset attribute)": [[84, "kedro.extras.datasets.pandas.GenericDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.genericdataset attribute)": [[84, "kedro.extras.datasets.pandas.GenericDataSet.DEFAULT_SAVE_ARGS"]], "genericdataset (class in kedro.extras.datasets.pandas)": [[84, "kedro.extras.datasets.pandas.GenericDataSet"]], "__init__() (kedro.extras.datasets.pandas.genericdataset method)": [[84, "kedro.extras.datasets.pandas.GenericDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.genericdataset method)": [[84, "kedro.extras.datasets.pandas.GenericDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.genericdataset class method)": [[84, "kedro.extras.datasets.pandas.GenericDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.genericdataset method)": [[84, "kedro.extras.datasets.pandas.GenericDataSet.load"]], "release() (kedro.extras.datasets.pandas.genericdataset method)": [[84, "kedro.extras.datasets.pandas.GenericDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.genericdataset method)": [[84, "kedro.extras.datasets.pandas.GenericDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.genericdataset method)": [[84, "kedro.extras.datasets.pandas.GenericDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.genericdataset method)": [[84, "kedro.extras.datasets.pandas.GenericDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.hdfdataset attribute)": [[85, "kedro.extras.datasets.pandas.HDFDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.hdfdataset attribute)": [[85, "kedro.extras.datasets.pandas.HDFDataSet.DEFAULT_SAVE_ARGS"]], "hdfdataset (class in kedro.extras.datasets.pandas)": [[85, "kedro.extras.datasets.pandas.HDFDataSet"]], "__init__() (kedro.extras.datasets.pandas.hdfdataset method)": [[85, "kedro.extras.datasets.pandas.HDFDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.hdfdataset method)": [[85, "kedro.extras.datasets.pandas.HDFDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.hdfdataset class method)": [[85, "kedro.extras.datasets.pandas.HDFDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.hdfdataset method)": [[85, "kedro.extras.datasets.pandas.HDFDataSet.load"]], "release() (kedro.extras.datasets.pandas.hdfdataset method)": [[85, "kedro.extras.datasets.pandas.HDFDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.hdfdataset method)": [[85, "kedro.extras.datasets.pandas.HDFDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.hdfdataset method)": [[85, "kedro.extras.datasets.pandas.HDFDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.hdfdataset method)": [[85, "kedro.extras.datasets.pandas.HDFDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.jsondataset attribute)": [[86, "kedro.extras.datasets.pandas.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.jsondataset attribute)": [[86, "kedro.extras.datasets.pandas.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.pandas)": [[86, "kedro.extras.datasets.pandas.JSONDataSet"]], "__init__() (kedro.extras.datasets.pandas.jsondataset method)": [[86, "kedro.extras.datasets.pandas.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.jsondataset method)": [[86, "kedro.extras.datasets.pandas.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.jsondataset class method)": [[86, "kedro.extras.datasets.pandas.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.jsondataset method)": [[86, "kedro.extras.datasets.pandas.JSONDataSet.load"]], "release() (kedro.extras.datasets.pandas.jsondataset method)": [[86, "kedro.extras.datasets.pandas.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.jsondataset method)": [[86, "kedro.extras.datasets.pandas.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.jsondataset method)": [[86, "kedro.extras.datasets.pandas.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.jsondataset method)": [[86, "kedro.extras.datasets.pandas.JSONDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.parquetdataset attribute)": [[87, "kedro.extras.datasets.pandas.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.parquetdataset attribute)": [[87, "kedro.extras.datasets.pandas.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro.extras.datasets.pandas)": [[87, "kedro.extras.datasets.pandas.ParquetDataSet"]], "__init__() (kedro.extras.datasets.pandas.parquetdataset method)": [[87, "kedro.extras.datasets.pandas.ParquetDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.parquetdataset method)": [[87, "kedro.extras.datasets.pandas.ParquetDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.parquetdataset class method)": [[87, "kedro.extras.datasets.pandas.ParquetDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.parquetdataset method)": [[87, "kedro.extras.datasets.pandas.ParquetDataSet.load"]], "release() (kedro.extras.datasets.pandas.parquetdataset method)": [[87, "kedro.extras.datasets.pandas.ParquetDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.parquetdataset method)": [[87, "kedro.extras.datasets.pandas.ParquetDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.parquetdataset method)": [[87, "kedro.extras.datasets.pandas.ParquetDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.parquetdataset method)": [[87, "kedro.extras.datasets.pandas.ParquetDataSet.save"]], "sqlquerydataset (class in kedro.extras.datasets.pandas)": [[88, "kedro.extras.datasets.pandas.SQLQueryDataSet"]], "__init__() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[88, "kedro.extras.datasets.pandas.SQLQueryDataSet.__init__"]], "create_connection() (kedro.extras.datasets.pandas.sqlquerydataset class method)": [[88, "kedro.extras.datasets.pandas.SQLQueryDataSet.create_connection"]], "engines (kedro.extras.datasets.pandas.sqlquerydataset attribute)": [[88, "kedro.extras.datasets.pandas.SQLQueryDataSet.engines"]], "exists() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[88, "kedro.extras.datasets.pandas.SQLQueryDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.sqlquerydataset class method)": [[88, "kedro.extras.datasets.pandas.SQLQueryDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[88, "kedro.extras.datasets.pandas.SQLQueryDataSet.load"]], "release() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[88, "kedro.extras.datasets.pandas.SQLQueryDataSet.release"]], "save() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[88, "kedro.extras.datasets.pandas.SQLQueryDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.sqltabledataset attribute)": [[89, "kedro.extras.datasets.pandas.SQLTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.sqltabledataset attribute)": [[89, "kedro.extras.datasets.pandas.SQLTableDataSet.DEFAULT_SAVE_ARGS"]], "sqltabledataset (class in kedro.extras.datasets.pandas)": [[89, "kedro.extras.datasets.pandas.SQLTableDataSet"]], "__init__() (kedro.extras.datasets.pandas.sqltabledataset method)": [[89, "kedro.extras.datasets.pandas.SQLTableDataSet.__init__"]], "create_connection() (kedro.extras.datasets.pandas.sqltabledataset class method)": [[89, "kedro.extras.datasets.pandas.SQLTableDataSet.create_connection"]], "engines (kedro.extras.datasets.pandas.sqltabledataset attribute)": [[89, "kedro.extras.datasets.pandas.SQLTableDataSet.engines"]], "exists() (kedro.extras.datasets.pandas.sqltabledataset method)": [[89, "kedro.extras.datasets.pandas.SQLTableDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.sqltabledataset class method)": [[89, "kedro.extras.datasets.pandas.SQLTableDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.sqltabledataset method)": [[89, "kedro.extras.datasets.pandas.SQLTableDataSet.load"]], "release() (kedro.extras.datasets.pandas.sqltabledataset method)": [[89, "kedro.extras.datasets.pandas.SQLTableDataSet.release"]], "save() (kedro.extras.datasets.pandas.sqltabledataset method)": [[89, "kedro.extras.datasets.pandas.SQLTableDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.xmldataset attribute)": [[90, "kedro.extras.datasets.pandas.XMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.xmldataset attribute)": [[90, "kedro.extras.datasets.pandas.XMLDataSet.DEFAULT_SAVE_ARGS"]], "xmldataset (class in kedro.extras.datasets.pandas)": [[90, "kedro.extras.datasets.pandas.XMLDataSet"]], "__init__() (kedro.extras.datasets.pandas.xmldataset method)": [[90, "kedro.extras.datasets.pandas.XMLDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.xmldataset method)": [[90, "kedro.extras.datasets.pandas.XMLDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.xmldataset class method)": [[90, "kedro.extras.datasets.pandas.XMLDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.xmldataset method)": [[90, "kedro.extras.datasets.pandas.XMLDataSet.load"]], "release() (kedro.extras.datasets.pandas.xmldataset method)": [[90, "kedro.extras.datasets.pandas.XMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.xmldataset method)": [[90, "kedro.extras.datasets.pandas.XMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.xmldataset method)": [[90, "kedro.extras.datasets.pandas.XMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.xmldataset method)": [[90, "kedro.extras.datasets.pandas.XMLDataSet.save"]], "default_load_args (kedro.extras.datasets.pickle.pickledataset attribute)": [[91, "kedro.extras.datasets.pickle.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pickle.pickledataset attribute)": [[91, "kedro.extras.datasets.pickle.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro.extras.datasets.pickle)": [[91, "kedro.extras.datasets.pickle.PickleDataSet"]], "__init__() (kedro.extras.datasets.pickle.pickledataset method)": [[91, "kedro.extras.datasets.pickle.PickleDataSet.__init__"]], "exists() (kedro.extras.datasets.pickle.pickledataset method)": [[91, "kedro.extras.datasets.pickle.PickleDataSet.exists"]], "from_config() (kedro.extras.datasets.pickle.pickledataset class method)": [[91, "kedro.extras.datasets.pickle.PickleDataSet.from_config"]], "load() (kedro.extras.datasets.pickle.pickledataset method)": [[91, "kedro.extras.datasets.pickle.PickleDataSet.load"]], "release() (kedro.extras.datasets.pickle.pickledataset method)": [[91, "kedro.extras.datasets.pickle.PickleDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pickle.pickledataset method)": [[91, "kedro.extras.datasets.pickle.PickleDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pickle.pickledataset method)": [[91, "kedro.extras.datasets.pickle.PickleDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pickle.pickledataset method)": [[91, "kedro.extras.datasets.pickle.PickleDataSet.save"]], "default_save_args (kedro.extras.datasets.pillow.imagedataset attribute)": [[92, "kedro.extras.datasets.pillow.ImageDataSet.DEFAULT_SAVE_ARGS"]], "imagedataset (class in kedro.extras.datasets.pillow)": [[92, "kedro.extras.datasets.pillow.ImageDataSet"]], "__init__() (kedro.extras.datasets.pillow.imagedataset method)": [[92, "kedro.extras.datasets.pillow.ImageDataSet.__init__"]], "exists() (kedro.extras.datasets.pillow.imagedataset method)": [[92, "kedro.extras.datasets.pillow.ImageDataSet.exists"]], "from_config() (kedro.extras.datasets.pillow.imagedataset class method)": [[92, "kedro.extras.datasets.pillow.ImageDataSet.from_config"]], "load() (kedro.extras.datasets.pillow.imagedataset method)": [[92, "kedro.extras.datasets.pillow.ImageDataSet.load"]], "release() (kedro.extras.datasets.pillow.imagedataset method)": [[92, "kedro.extras.datasets.pillow.ImageDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pillow.imagedataset method)": [[92, "kedro.extras.datasets.pillow.ImageDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pillow.imagedataset method)": [[92, "kedro.extras.datasets.pillow.ImageDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pillow.imagedataset method)": [[92, "kedro.extras.datasets.pillow.ImageDataSet.save"]], "default_load_args (kedro.extras.datasets.plotly.jsondataset attribute)": [[93, "kedro.extras.datasets.plotly.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.plotly.jsondataset attribute)": [[93, "kedro.extras.datasets.plotly.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.plotly)": [[93, "kedro.extras.datasets.plotly.JSONDataSet"]], "__init__() (kedro.extras.datasets.plotly.jsondataset method)": [[93, "kedro.extras.datasets.plotly.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.plotly.jsondataset method)": [[93, "kedro.extras.datasets.plotly.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.plotly.jsondataset class method)": [[93, "kedro.extras.datasets.plotly.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.plotly.jsondataset method)": [[93, "kedro.extras.datasets.plotly.JSONDataSet.load"]], "release() (kedro.extras.datasets.plotly.jsondataset method)": [[93, "kedro.extras.datasets.plotly.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.plotly.jsondataset method)": [[93, "kedro.extras.datasets.plotly.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.plotly.jsondataset method)": [[93, "kedro.extras.datasets.plotly.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.plotly.jsondataset method)": [[93, "kedro.extras.datasets.plotly.JSONDataSet.save"]], "default_load_args (kedro.extras.datasets.plotly.plotlydataset attribute)": [[94, "kedro.extras.datasets.plotly.PlotlyDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.plotly.plotlydataset attribute)": [[94, "kedro.extras.datasets.plotly.PlotlyDataSet.DEFAULT_SAVE_ARGS"]], "plotlydataset (class in kedro.extras.datasets.plotly)": [[94, "kedro.extras.datasets.plotly.PlotlyDataSet"]], "__init__() (kedro.extras.datasets.plotly.plotlydataset method)": [[94, "kedro.extras.datasets.plotly.PlotlyDataSet.__init__"]], "exists() (kedro.extras.datasets.plotly.plotlydataset method)": [[94, "kedro.extras.datasets.plotly.PlotlyDataSet.exists"]], "from_config() (kedro.extras.datasets.plotly.plotlydataset class method)": [[94, "kedro.extras.datasets.plotly.PlotlyDataSet.from_config"]], "load() (kedro.extras.datasets.plotly.plotlydataset method)": [[94, "kedro.extras.datasets.plotly.PlotlyDataSet.load"]], "release() (kedro.extras.datasets.plotly.plotlydataset method)": [[94, "kedro.extras.datasets.plotly.PlotlyDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.plotly.plotlydataset method)": [[94, "kedro.extras.datasets.plotly.PlotlyDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.plotly.plotlydataset method)": [[94, "kedro.extras.datasets.plotly.PlotlyDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.plotly.plotlydataset method)": [[94, "kedro.extras.datasets.plotly.PlotlyDataSet.save"]], "default_load_args (kedro.extras.datasets.redis.pickledataset attribute)": [[95, "kedro.extras.datasets.redis.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_redis_url (kedro.extras.datasets.redis.pickledataset attribute)": [[95, "kedro.extras.datasets.redis.PickleDataSet.DEFAULT_REDIS_URL"]], "default_save_args (kedro.extras.datasets.redis.pickledataset attribute)": [[95, "kedro.extras.datasets.redis.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro.extras.datasets.redis)": [[95, "kedro.extras.datasets.redis.PickleDataSet"]], "__init__() (kedro.extras.datasets.redis.pickledataset method)": [[95, "kedro.extras.datasets.redis.PickleDataSet.__init__"]], "exists() (kedro.extras.datasets.redis.pickledataset method)": [[95, "kedro.extras.datasets.redis.PickleDataSet.exists"]], "from_config() (kedro.extras.datasets.redis.pickledataset class method)": [[95, "kedro.extras.datasets.redis.PickleDataSet.from_config"]], "load() (kedro.extras.datasets.redis.pickledataset method)": [[95, "kedro.extras.datasets.redis.PickleDataSet.load"]], "release() (kedro.extras.datasets.redis.pickledataset method)": [[95, "kedro.extras.datasets.redis.PickleDataSet.release"]], "save() (kedro.extras.datasets.redis.pickledataset method)": [[95, "kedro.extras.datasets.redis.PickleDataSet.save"]], "deltatabledataset (class in kedro.extras.datasets.spark)": [[96, "kedro.extras.datasets.spark.DeltaTableDataSet"]], "__init__() (kedro.extras.datasets.spark.deltatabledataset method)": [[96, "kedro.extras.datasets.spark.DeltaTableDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.deltatabledataset method)": [[96, "kedro.extras.datasets.spark.DeltaTableDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.deltatabledataset class method)": [[96, "kedro.extras.datasets.spark.DeltaTableDataSet.from_config"]], "load() (kedro.extras.datasets.spark.deltatabledataset method)": [[96, "kedro.extras.datasets.spark.DeltaTableDataSet.load"]], "release() (kedro.extras.datasets.spark.deltatabledataset method)": [[96, "kedro.extras.datasets.spark.DeltaTableDataSet.release"]], "save() (kedro.extras.datasets.spark.deltatabledataset method)": [[96, "kedro.extras.datasets.spark.DeltaTableDataSet.save"]], "default_load_args (kedro.extras.datasets.spark.sparkdataset attribute)": [[97, "kedro.extras.datasets.spark.SparkDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.spark.sparkdataset attribute)": [[97, "kedro.extras.datasets.spark.SparkDataSet.DEFAULT_SAVE_ARGS"]], "sparkdataset (class in kedro.extras.datasets.spark)": [[97, "kedro.extras.datasets.spark.SparkDataSet"]], "__init__() (kedro.extras.datasets.spark.sparkdataset method)": [[97, "kedro.extras.datasets.spark.SparkDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.sparkdataset method)": [[97, "kedro.extras.datasets.spark.SparkDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.sparkdataset class method)": [[97, "kedro.extras.datasets.spark.SparkDataSet.from_config"]], "load() (kedro.extras.datasets.spark.sparkdataset method)": [[97, "kedro.extras.datasets.spark.SparkDataSet.load"]], "release() (kedro.extras.datasets.spark.sparkdataset method)": [[97, "kedro.extras.datasets.spark.SparkDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.spark.sparkdataset method)": [[97, "kedro.extras.datasets.spark.SparkDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.spark.sparkdataset method)": [[97, "kedro.extras.datasets.spark.SparkDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.spark.sparkdataset method)": [[97, "kedro.extras.datasets.spark.SparkDataSet.save"]], "default_save_args (kedro.extras.datasets.spark.sparkhivedataset attribute)": [[98, "kedro.extras.datasets.spark.SparkHiveDataSet.DEFAULT_SAVE_ARGS"]], "sparkhivedataset (class in kedro.extras.datasets.spark)": [[98, "kedro.extras.datasets.spark.SparkHiveDataSet"]], "__init__() (kedro.extras.datasets.spark.sparkhivedataset method)": [[98, "kedro.extras.datasets.spark.SparkHiveDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.sparkhivedataset method)": [[98, "kedro.extras.datasets.spark.SparkHiveDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.sparkhivedataset class method)": [[98, "kedro.extras.datasets.spark.SparkHiveDataSet.from_config"]], "load() (kedro.extras.datasets.spark.sparkhivedataset method)": [[98, "kedro.extras.datasets.spark.SparkHiveDataSet.load"]], "release() (kedro.extras.datasets.spark.sparkhivedataset method)": [[98, "kedro.extras.datasets.spark.SparkHiveDataSet.release"]], "save() (kedro.extras.datasets.spark.sparkhivedataset method)": [[98, "kedro.extras.datasets.spark.SparkHiveDataSet.save"]], "default_load_args (kedro.extras.datasets.spark.sparkjdbcdataset attribute)": [[99, "kedro.extras.datasets.spark.SparkJDBCDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.spark.sparkjdbcdataset attribute)": [[99, "kedro.extras.datasets.spark.SparkJDBCDataSet.DEFAULT_SAVE_ARGS"]], "sparkjdbcdataset (class in kedro.extras.datasets.spark)": [[99, "kedro.extras.datasets.spark.SparkJDBCDataSet"]], "__init__() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[99, "kedro.extras.datasets.spark.SparkJDBCDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[99, "kedro.extras.datasets.spark.SparkJDBCDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.sparkjdbcdataset class method)": [[99, "kedro.extras.datasets.spark.SparkJDBCDataSet.from_config"]], "load() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[99, "kedro.extras.datasets.spark.SparkJDBCDataSet.load"]], "release() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[99, "kedro.extras.datasets.spark.SparkJDBCDataSet.release"]], "save() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[99, "kedro.extras.datasets.spark.SparkJDBCDataSet.save"]], "default_load_args (kedro.extras.datasets.svmlight.svmlightdataset attribute)": [[100, "kedro.extras.datasets.svmlight.SVMLightDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.svmlight.svmlightdataset attribute)": [[100, "kedro.extras.datasets.svmlight.SVMLightDataSet.DEFAULT_SAVE_ARGS"]], "svmlightdataset (class in kedro.extras.datasets.svmlight)": [[100, "kedro.extras.datasets.svmlight.SVMLightDataSet"]], "exists() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[100, "kedro.extras.datasets.svmlight.SVMLightDataSet.exists"]], "from_config() (kedro.extras.datasets.svmlight.svmlightdataset class method)": [[100, "kedro.extras.datasets.svmlight.SVMLightDataSet.from_config"]], "load() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[100, "kedro.extras.datasets.svmlight.SVMLightDataSet.load"]], "release() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[100, "kedro.extras.datasets.svmlight.SVMLightDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[100, "kedro.extras.datasets.svmlight.SVMLightDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[100, "kedro.extras.datasets.svmlight.SVMLightDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[100, "kedro.extras.datasets.svmlight.SVMLightDataSet.save"]], "default_load_args (kedro.extras.datasets.tensorflow.tensorflowmodeldataset attribute)": [[101, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.tensorflow.tensorflowmodeldataset attribute)": [[101, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.DEFAULT_SAVE_ARGS"]], "tensorflowmodeldataset (class in kedro.extras.datasets.tensorflow)": [[101, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset"]], "__init__() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[101, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.__init__"]], "exists() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[101, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.exists"]], "from_config() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset class method)": [[101, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.from_config"]], "load() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[101, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.load"]], "release() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[101, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.release"]], "resolve_load_version() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[101, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[101, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.resolve_save_version"]], "save() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[101, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.save"]], "textdataset (class in kedro.extras.datasets.text)": [[102, "kedro.extras.datasets.text.TextDataSet"]], "__init__() (kedro.extras.datasets.text.textdataset method)": [[102, "kedro.extras.datasets.text.TextDataSet.__init__"]], "exists() (kedro.extras.datasets.text.textdataset method)": [[102, "kedro.extras.datasets.text.TextDataSet.exists"]], "from_config() (kedro.extras.datasets.text.textdataset class method)": [[102, "kedro.extras.datasets.text.TextDataSet.from_config"]], "load() (kedro.extras.datasets.text.textdataset method)": [[102, "kedro.extras.datasets.text.TextDataSet.load"]], "release() (kedro.extras.datasets.text.textdataset method)": [[102, "kedro.extras.datasets.text.TextDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.text.textdataset method)": [[102, "kedro.extras.datasets.text.TextDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.text.textdataset method)": [[102, "kedro.extras.datasets.text.TextDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.text.textdataset method)": [[102, "kedro.extras.datasets.text.TextDataSet.save"]], "default_save_args (kedro.extras.datasets.tracking.jsondataset attribute)": [[103, "kedro.extras.datasets.tracking.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.tracking)": [[103, "kedro.extras.datasets.tracking.JSONDataSet"]], "__init__() (kedro.extras.datasets.tracking.jsondataset method)": [[103, "kedro.extras.datasets.tracking.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.tracking.jsondataset method)": [[103, "kedro.extras.datasets.tracking.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.tracking.jsondataset class method)": [[103, "kedro.extras.datasets.tracking.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.tracking.jsondataset method)": [[103, "kedro.extras.datasets.tracking.JSONDataSet.load"]], "release() (kedro.extras.datasets.tracking.jsondataset method)": [[103, "kedro.extras.datasets.tracking.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.tracking.jsondataset method)": [[103, "kedro.extras.datasets.tracking.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.tracking.jsondataset method)": [[103, "kedro.extras.datasets.tracking.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.tracking.jsondataset method)": [[103, "kedro.extras.datasets.tracking.JSONDataSet.save"]], "versioned (kedro.extras.datasets.tracking.jsondataset attribute)": [[103, "kedro.extras.datasets.tracking.JSONDataSet.versioned"]], "default_save_args (kedro.extras.datasets.tracking.metricsdataset attribute)": [[104, "kedro.extras.datasets.tracking.MetricsDataSet.DEFAULT_SAVE_ARGS"]], "metricsdataset (class in kedro.extras.datasets.tracking)": [[104, "kedro.extras.datasets.tracking.MetricsDataSet"]], "__init__() (kedro.extras.datasets.tracking.metricsdataset method)": [[104, "kedro.extras.datasets.tracking.MetricsDataSet.__init__"]], "exists() (kedro.extras.datasets.tracking.metricsdataset method)": [[104, "kedro.extras.datasets.tracking.MetricsDataSet.exists"]], "from_config() (kedro.extras.datasets.tracking.metricsdataset class method)": [[104, "kedro.extras.datasets.tracking.MetricsDataSet.from_config"]], "load() (kedro.extras.datasets.tracking.metricsdataset method)": [[104, "kedro.extras.datasets.tracking.MetricsDataSet.load"]], "release() (kedro.extras.datasets.tracking.metricsdataset method)": [[104, "kedro.extras.datasets.tracking.MetricsDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.tracking.metricsdataset method)": [[104, "kedro.extras.datasets.tracking.MetricsDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.tracking.metricsdataset method)": [[104, "kedro.extras.datasets.tracking.MetricsDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.tracking.metricsdataset method)": [[104, "kedro.extras.datasets.tracking.MetricsDataSet.save"]], "versioned (kedro.extras.datasets.tracking.metricsdataset attribute)": [[104, "kedro.extras.datasets.tracking.MetricsDataSet.versioned"]], "default_save_args (kedro.extras.datasets.yaml.yamldataset attribute)": [[105, "kedro.extras.datasets.yaml.YAMLDataSet.DEFAULT_SAVE_ARGS"]], "yamldataset (class in kedro.extras.datasets.yaml)": [[105, "kedro.extras.datasets.yaml.YAMLDataSet"]], "__init__() (kedro.extras.datasets.yaml.yamldataset method)": [[105, "kedro.extras.datasets.yaml.YAMLDataSet.__init__"]], "exists() (kedro.extras.datasets.yaml.yamldataset method)": [[105, "kedro.extras.datasets.yaml.YAMLDataSet.exists"]], "from_config() (kedro.extras.datasets.yaml.yamldataset class method)": [[105, "kedro.extras.datasets.yaml.YAMLDataSet.from_config"]], "load() (kedro.extras.datasets.yaml.yamldataset method)": [[105, "kedro.extras.datasets.yaml.YAMLDataSet.load"]], "release() (kedro.extras.datasets.yaml.yamldataset method)": [[105, "kedro.extras.datasets.yaml.YAMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.yaml.yamldataset method)": [[105, "kedro.extras.datasets.yaml.YAMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.yaml.yamldataset method)": [[105, "kedro.extras.datasets.yaml.YAMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.yaml.yamldataset method)": [[105, "kedro.extras.datasets.yaml.YAMLDataSet.save"]], "kedro.extras.extensions": [[106, "module-kedro.extras.extensions"]], "kedro.extras.extensions.ipython": [[107, "module-kedro.extras.extensions.ipython"]], "kedro.extras.logging": [[108, "module-kedro.extras.logging"]], "kedro.extras.logging.color_logger": [[109, "module-kedro.extras.logging.color_logger"]], "colorhandler (class in kedro.extras.logging.color_logger)": [[110, "kedro.extras.logging.color_logger.ColorHandler"]], "kedro.framework": [[111, "module-kedro.framework"]], "kedro.framework.cli": [[112, "module-kedro.framework.cli"]], "kedro.framework.cli.catalog": [[113, "module-kedro.framework.cli.catalog"]], "kedro.framework.cli.cli": [[114, "module-kedro.framework.cli.cli"]], "kedrocli (class in kedro.framework.cli.cli)": [[115, "kedro.framework.cli.cli.KedroCLI"]], "main() (in module kedro.framework.cli.cli)": [[116, "kedro.framework.cli.cli.main"]], "kedro.framework.cli.hooks": [[117, "module-kedro.framework.cli.hooks"]], "kedro.framework.cli.hooks.manager": [[118, "module-kedro.framework.cli.hooks.manager"]], "clihooksmanager (class in kedro.framework.cli.hooks.manager)": [[119, "kedro.framework.cli.hooks.manager.CLIHooksManager"]], "get_cli_hook_manager() (in module kedro.framework.cli.hooks.manager)": [[120, "kedro.framework.cli.hooks.manager.get_cli_hook_manager"]], "kedro.framework.cli.hooks.markers": [[121, "module-kedro.framework.cli.hooks.markers"]], "kedro.framework.cli.hooks.specs": [[122, "module-kedro.framework.cli.hooks.specs"]], "clicommandspecs (class in kedro.framework.cli.hooks.specs)": [[123, "kedro.framework.cli.hooks.specs.CLICommandSpecs"]], "after_command_run() (kedro.framework.cli.hooks.specs.clicommandspecs method)": [[123, "kedro.framework.cli.hooks.specs.CLICommandSpecs.after_command_run"]], "before_command_run() (kedro.framework.cli.hooks.specs.clicommandspecs method)": [[123, "kedro.framework.cli.hooks.specs.CLICommandSpecs.before_command_run"]], "kedro.framework.cli.jupyter": [[124, "module-kedro.framework.cli.jupyter"]], "jupytercommandgroup (class in kedro.framework.cli.jupyter)": [[125, "kedro.framework.cli.jupyter.JupyterCommandGroup"]], "list_commands() (kedro.framework.cli.jupyter.jupytercommandgroup method)": [[125, "kedro.framework.cli.jupyter.JupyterCommandGroup.list_commands"]], "kedro.framework.cli.micropkg": [[126, "module-kedro.framework.cli.micropkg"]], "safe_extract() (in module kedro.framework.cli.micropkg)": [[127, "kedro.framework.cli.micropkg.safe_extract"]], "kedro.framework.cli.pipeline": [[128, "module-kedro.framework.cli.pipeline"]], "pipelineartifacts (class in kedro.framework.cli.pipeline)": [[129, "kedro.framework.cli.pipeline.PipelineArtifacts"]], "count() (kedro.framework.cli.pipeline.pipelineartifacts method)": [[129, "kedro.framework.cli.pipeline.PipelineArtifacts.count"]], "index() (kedro.framework.cli.pipeline.pipelineartifacts method)": [[129, "kedro.framework.cli.pipeline.PipelineArtifacts.index"]], "pipeline_conf (kedro.framework.cli.pipeline.pipelineartifacts attribute)": [[129, "kedro.framework.cli.pipeline.PipelineArtifacts.pipeline_conf"]], "pipeline_dir (kedro.framework.cli.pipeline.pipelineartifacts attribute)": [[129, "kedro.framework.cli.pipeline.PipelineArtifacts.pipeline_dir"]], "pipeline_tests (kedro.framework.cli.pipeline.pipelineartifacts attribute)": [[129, "kedro.framework.cli.pipeline.PipelineArtifacts.pipeline_tests"]], "kedro.framework.cli.project": [[130, "module-kedro.framework.cli.project"]], "kedro.framework.cli.registry": [[131, "module-kedro.framework.cli.registry"]], "kedro.framework.cli.starters": [[132, "module-kedro.framework.cli.starters"]], "kedrostarterspec (class in kedro.framework.cli.starters)": [[133, "kedro.framework.cli.starters.KedroStarterSpec"]], "alias (kedro.framework.cli.starters.kedrostarterspec attribute)": [[133, "kedro.framework.cli.starters.KedroStarterSpec.alias"]], "directory (kedro.framework.cli.starters.kedrostarterspec attribute)": [[133, "kedro.framework.cli.starters.KedroStarterSpec.directory"]], "origin (kedro.framework.cli.starters.kedrostarterspec attribute)": [[133, "kedro.framework.cli.starters.KedroStarterSpec.origin"]], "template_path (kedro.framework.cli.starters.kedrostarterspec attribute)": [[133, "kedro.framework.cli.starters.KedroStarterSpec.template_path"]], "kedro.framework.cli.utils": [[134, "module-kedro.framework.cli.utils"]], "commandcollection (class in kedro.framework.cli.utils)": [[135, "kedro.framework.cli.utils.CommandCollection"]], "kedroclierror (class in kedro.framework.cli.utils)": [[136, "kedro.framework.cli.utils.KedroCliError"]], "verbose_error (kedro.framework.cli.utils.kedroclierror attribute)": [[136, "kedro.framework.cli.utils.KedroCliError.VERBOSE_ERROR"]], "args (kedro.framework.cli.utils.kedroclierror attribute)": [[136, "kedro.framework.cli.utils.KedroCliError.args"]], "exit_code (kedro.framework.cli.utils.kedroclierror attribute)": [[136, "kedro.framework.cli.utils.KedroCliError.exit_code"]], "format_message() (kedro.framework.cli.utils.kedroclierror method)": [[136, "kedro.framework.cli.utils.KedroCliError.format_message"]], "show() (kedro.framework.cli.utils.kedroclierror method)": [[136, "kedro.framework.cli.utils.KedroCliError.show"]], "with_traceback() (kedro.framework.cli.utils.kedroclierror method)": [[136, "kedro.framework.cli.utils.KedroCliError.with_traceback"]], "command_with_verbosity() (in module kedro.framework.cli.utils)": [[137, "kedro.framework.cli.utils.command_with_verbosity"]], "env_option() (in module kedro.framework.cli.utils)": [[138, "kedro.framework.cli.utils.env_option"]], "find_stylesheets() (in module kedro.framework.cli.utils)": [[139, "kedro.framework.cli.utils.find_stylesheets"]], "forward_command() (in module kedro.framework.cli.utils)": [[140, "kedro.framework.cli.utils.forward_command"]], "get_pkg_version() (in module kedro.framework.cli.utils)": [[141, "kedro.framework.cli.utils.get_pkg_version"]], "python_call() (in module kedro.framework.cli.utils)": [[142, "kedro.framework.cli.utils.python_call"]], "split_string() (in module kedro.framework.cli.utils)": [[143, "kedro.framework.cli.utils.split_string"]], "kedro.framework.context": [[144, "module-kedro.framework.context"]], "kedrocontext (class in kedro.framework.context)": [[145, "kedro.framework.context.KedroContext"]], "__init__() (kedro.framework.context.kedrocontext method)": [[145, "kedro.framework.context.KedroContext.__init__"]], "catalog (kedro.framework.context.kedrocontext property)": [[145, "kedro.framework.context.KedroContext.catalog"]], "config_loader (kedro.framework.context.kedrocontext property)": [[145, "kedro.framework.context.KedroContext.config_loader"]], "env (kedro.framework.context.kedrocontext property)": [[145, "kedro.framework.context.KedroContext.env"]], "params (kedro.framework.context.kedrocontext property)": [[145, "kedro.framework.context.KedroContext.params"]], "project_path (kedro.framework.context.kedrocontext property)": [[145, "kedro.framework.context.KedroContext.project_path"]], "kedrocontexterror (class in kedro.framework.context)": [[146, "kedro.framework.context.KedroContextError"]], "args (kedro.framework.context.kedrocontexterror attribute)": [[146, "kedro.framework.context.KedroContextError.args"]], "with_traceback() (kedro.framework.context.kedrocontexterror method)": [[146, "kedro.framework.context.KedroContextError.with_traceback"]], "kedro.framework.hooks": [[147, "module-kedro.framework.hooks"]], "kedro.framework.hooks.manager": [[148, "module-kedro.framework.hooks.manager"]], "kedro.framework.hooks.markers": [[149, "module-kedro.framework.hooks.markers"]], "kedro.framework.hooks.specs": [[150, "module-kedro.framework.hooks.specs"]], "datacatalogspecs (class in kedro.framework.hooks.specs)": [[151, "kedro.framework.hooks.specs.DataCatalogSpecs"]], "after_catalog_created() (kedro.framework.hooks.specs.datacatalogspecs method)": [[151, "kedro.framework.hooks.specs.DataCatalogSpecs.after_catalog_created"]], "datasetspecs (class in kedro.framework.hooks.specs)": [[152, "kedro.framework.hooks.specs.DatasetSpecs"]], "after_dataset_loaded() (kedro.framework.hooks.specs.datasetspecs method)": [[152, "kedro.framework.hooks.specs.DatasetSpecs.after_dataset_loaded"]], "after_dataset_saved() (kedro.framework.hooks.specs.datasetspecs method)": [[152, "kedro.framework.hooks.specs.DatasetSpecs.after_dataset_saved"]], "before_dataset_loaded() (kedro.framework.hooks.specs.datasetspecs method)": [[152, "kedro.framework.hooks.specs.DatasetSpecs.before_dataset_loaded"]], "before_dataset_saved() (kedro.framework.hooks.specs.datasetspecs method)": [[152, "kedro.framework.hooks.specs.DatasetSpecs.before_dataset_saved"]], "kedrocontextspecs (class in kedro.framework.hooks.specs)": [[153, "kedro.framework.hooks.specs.KedroContextSpecs"]], "after_context_created() (kedro.framework.hooks.specs.kedrocontextspecs method)": [[153, "kedro.framework.hooks.specs.KedroContextSpecs.after_context_created"]], "nodespecs (class in kedro.framework.hooks.specs)": [[154, "kedro.framework.hooks.specs.NodeSpecs"]], "after_node_run() (kedro.framework.hooks.specs.nodespecs method)": [[154, "kedro.framework.hooks.specs.NodeSpecs.after_node_run"]], "before_node_run() (kedro.framework.hooks.specs.nodespecs method)": [[154, "kedro.framework.hooks.specs.NodeSpecs.before_node_run"]], "on_node_error() (kedro.framework.hooks.specs.nodespecs method)": [[154, "kedro.framework.hooks.specs.NodeSpecs.on_node_error"]], "pipelinespecs (class in kedro.framework.hooks.specs)": [[155, "kedro.framework.hooks.specs.PipelineSpecs"]], "after_pipeline_run() (kedro.framework.hooks.specs.pipelinespecs method)": [[155, "kedro.framework.hooks.specs.PipelineSpecs.after_pipeline_run"]], "before_pipeline_run() (kedro.framework.hooks.specs.pipelinespecs method)": [[155, "kedro.framework.hooks.specs.PipelineSpecs.before_pipeline_run"]], "on_pipeline_error() (kedro.framework.hooks.specs.pipelinespecs method)": [[155, "kedro.framework.hooks.specs.PipelineSpecs.on_pipeline_error"]], "kedro.framework.project": [[156, "module-kedro.framework.project"]], "configure_logging() (in module kedro.framework.project)": [[157, "kedro.framework.project.configure_logging"]], "configure_project() (in module kedro.framework.project)": [[158, "kedro.framework.project.configure_project"]], "find_pipelines() (in module kedro.framework.project)": [[159, "kedro.framework.project.find_pipelines"]], "validate_settings() (in module kedro.framework.project)": [[160, "kedro.framework.project.validate_settings"]], "kedro.framework.session": [[161, "module-kedro.framework.session"]], "kedro.framework.session.session": [[162, "module-kedro.framework.session.session"]], "kedrosession (class in kedro.framework.session.session)": [[163, "kedro.framework.session.session.KedroSession"]], "close() (kedro.framework.session.session.kedrosession method)": [[163, "kedro.framework.session.session.KedroSession.close"]], "create() (kedro.framework.session.session.kedrosession class method)": [[163, "kedro.framework.session.session.KedroSession.create"]], "load_context() (kedro.framework.session.session.kedrosession method)": [[163, "kedro.framework.session.session.KedroSession.load_context"]], "run() (kedro.framework.session.session.kedrosession method)": [[163, "kedro.framework.session.session.KedroSession.run"]], "store (kedro.framework.session.session.kedrosession property)": [[163, "kedro.framework.session.session.KedroSession.store"]], "kedrosessionerror (class in kedro.framework.session.session)": [[164, "kedro.framework.session.session.KedroSessionError"]], "args (kedro.framework.session.session.kedrosessionerror attribute)": [[164, "kedro.framework.session.session.KedroSessionError.args"]], "with_traceback() (kedro.framework.session.session.kedrosessionerror method)": [[164, "kedro.framework.session.session.KedroSessionError.with_traceback"]], "kedro.framework.session.shelvestore": [[165, "module-kedro.framework.session.shelvestore"]], "shelvestore (class in kedro.framework.session.shelvestore)": [[166, "kedro.framework.session.shelvestore.ShelveStore"]], "kedro.framework.session.store": [[167, "module-kedro.framework.session.store"]], "basesessionstore (class in kedro.framework.session.store)": [[168, "kedro.framework.session.store.BaseSessionStore"]], "kedro.framework.startup": [[169, "module-kedro.framework.startup"]], "projectmetadata (class in kedro.framework.startup)": [[170, "kedro.framework.startup.ProjectMetadata"]], "config_file (kedro.framework.startup.projectmetadata attribute)": [[170, "kedro.framework.startup.ProjectMetadata.config_file"]], "count() (kedro.framework.startup.projectmetadata method)": [[170, "kedro.framework.startup.ProjectMetadata.count"]], "index() (kedro.framework.startup.projectmetadata method)": [[170, "kedro.framework.startup.ProjectMetadata.index"]], "kedro_init_version (kedro.framework.startup.projectmetadata attribute)": [[170, "kedro.framework.startup.ProjectMetadata.kedro_init_version"]], "package_name (kedro.framework.startup.projectmetadata attribute)": [[170, "kedro.framework.startup.ProjectMetadata.package_name"]], "project_name (kedro.framework.startup.projectmetadata attribute)": [[170, "kedro.framework.startup.ProjectMetadata.project_name"]], "project_path (kedro.framework.startup.projectmetadata attribute)": [[170, "kedro.framework.startup.ProjectMetadata.project_path"]], "project_version (kedro.framework.startup.projectmetadata attribute)": [[170, "kedro.framework.startup.ProjectMetadata.project_version"]], "source_dir (kedro.framework.startup.projectmetadata attribute)": [[170, "kedro.framework.startup.ProjectMetadata.source_dir"]], "bootstrap_project() (in module kedro.framework.startup)": [[171, "kedro.framework.startup.bootstrap_project"]], "kedro.io": [[172, "module-kedro.io"]], "abstractdataset (in module kedro.io)": [[173, "kedro.io.AbstractDataSet"]], "abstractversioneddataset (in module kedro.io)": [[174, "kedro.io.AbstractVersionedDataSet"]], "cacheddataset (in module kedro.io)": [[175, "kedro.io.CachedDataSet"]], "datacatalog (class in kedro.io)": [[176, "kedro.io.DataCatalog"]], "__init__() (kedro.io.datacatalog method)": [[176, "kedro.io.DataCatalog.__init__"]], "add() (kedro.io.datacatalog method)": [[176, "kedro.io.DataCatalog.add"]], "add_all() (kedro.io.datacatalog method)": [[176, "kedro.io.DataCatalog.add_all"]], "add_feed_dict() (kedro.io.datacatalog method)": [[176, "kedro.io.DataCatalog.add_feed_dict"]], "confirm() (kedro.io.datacatalog method)": [[176, "kedro.io.DataCatalog.confirm"]], "exists() (kedro.io.datacatalog method)": [[176, "kedro.io.DataCatalog.exists"]], "from_config() (kedro.io.datacatalog class method)": [[176, "kedro.io.DataCatalog.from_config"]], "list() (kedro.io.datacatalog method)": [[176, "kedro.io.DataCatalog.list"]], "load() (kedro.io.datacatalog method)": [[176, "kedro.io.DataCatalog.load"]], "release() (kedro.io.datacatalog method)": [[176, "kedro.io.DataCatalog.release"]], "save() (kedro.io.datacatalog method)": [[176, "kedro.io.DataCatalog.save"]], "shallow_copy() (kedro.io.datacatalog method)": [[176, "kedro.io.DataCatalog.shallow_copy"]], "datasetalreadyexistserror (in module kedro.io)": [[177, "kedro.io.DataSetAlreadyExistsError"]], "dataseterror (in module kedro.io)": [[178, "kedro.io.DataSetError"]], "datasetnotfounderror (in module kedro.io)": [[179, "kedro.io.DataSetNotFoundError"]], "incrementaldataset (in module kedro.io)": [[180, "kedro.io.IncrementalDataSet"]], "lambdadataset (in module kedro.io)": [[181, "kedro.io.LambdaDataSet"]], "memorydataset (in module kedro.io)": [[182, "kedro.io.MemoryDataSet"]], "partitioneddataset (in module kedro.io)": [[183, "kedro.io.PartitionedDataSet"]], "version (class in kedro.io)": [[184, "kedro.io.Version"]], "count() (kedro.io.version method)": [[184, "kedro.io.Version.count"]], "index() (kedro.io.version method)": [[184, "kedro.io.Version.index"]], "load (kedro.io.version attribute)": [[184, "kedro.io.Version.load"]], "save (kedro.io.version attribute)": [[184, "kedro.io.Version.save"]], "kedro.ipython": [[185, "module-kedro.ipython"]], "load_ipython_extension() (in module kedro.ipython)": [[186, "kedro.ipython.load_ipython_extension"]], "magic_reload_kedro() (in module kedro.ipython)": [[187, "kedro.ipython.magic_reload_kedro"]], "reload_kedro() (in module kedro.ipython)": [[188, "kedro.ipython.reload_kedro"]], "kedro.logging": [[189, "module-kedro.logging"]], "richhandler (class in kedro.logging)": [[190, "kedro.logging.RichHandler"]], "kedro.pipeline": [[191, "module-kedro.pipeline"]], "pipeline (class in kedro.pipeline)": [[192, "kedro.pipeline.Pipeline"]], "__init__() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.__init__"]], "all_inputs() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.all_inputs"]], "all_outputs() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.all_outputs"]], "data_sets() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.data_sets"]], "describe() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.describe"]], "filter() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.filter"]], "from_inputs() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.from_inputs"]], "from_nodes() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.from_nodes"]], "grouped_nodes (kedro.pipeline.pipeline property)": [[192, "kedro.pipeline.Pipeline.grouped_nodes"]], "inputs() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.inputs"]], "node_dependencies (kedro.pipeline.pipeline property)": [[192, "kedro.pipeline.Pipeline.node_dependencies"]], "nodes (kedro.pipeline.pipeline property)": [[192, "kedro.pipeline.Pipeline.nodes"]], "only_nodes() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.only_nodes"]], "only_nodes_with_inputs() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.only_nodes_with_inputs"]], "only_nodes_with_namespace() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.only_nodes_with_namespace"]], "only_nodes_with_outputs() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.only_nodes_with_outputs"]], "only_nodes_with_tags() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.only_nodes_with_tags"]], "outputs() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.outputs"]], "tag() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.tag"]], "to_json() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.to_json"]], "to_nodes() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.to_nodes"]], "to_outputs() (kedro.pipeline.pipeline method)": [[192, "kedro.pipeline.Pipeline.to_outputs"]], "modularpipelineerror (class in kedro.pipeline.modular_pipeline)": [[193, "kedro.pipeline.modular_pipeline.ModularPipelineError"]], "args (kedro.pipeline.modular_pipeline.modularpipelineerror attribute)": [[193, "kedro.pipeline.modular_pipeline.ModularPipelineError.args"]], "with_traceback() (kedro.pipeline.modular_pipeline.modularpipelineerror method)": [[193, "kedro.pipeline.modular_pipeline.ModularPipelineError.with_traceback"]], "pipeline() (in module kedro.pipeline.modular_pipeline)": [[194, "kedro.pipeline.modular_pipeline.pipeline"]], "node() (in module kedro.pipeline)": [[195, "kedro.pipeline.node"]], "node (class in kedro.pipeline.node)": [[196, "kedro.pipeline.node.Node"]], "__init__() (kedro.pipeline.node.node method)": [[196, "kedro.pipeline.node.Node.__init__"]], "confirms (kedro.pipeline.node.node property)": [[196, "kedro.pipeline.node.Node.confirms"]], "func (kedro.pipeline.node.node property)": [[196, "kedro.pipeline.node.Node.func"]], "inputs (kedro.pipeline.node.node property)": [[196, "kedro.pipeline.node.Node.inputs"]], "name (kedro.pipeline.node.node property)": [[196, "kedro.pipeline.node.Node.name"]], "namespace (kedro.pipeline.node.node property)": [[196, "kedro.pipeline.node.Node.namespace"]], "outputs (kedro.pipeline.node.node property)": [[196, "kedro.pipeline.node.Node.outputs"]], "run() (kedro.pipeline.node.node method)": [[196, "kedro.pipeline.node.Node.run"]], "short_name (kedro.pipeline.node.node property)": [[196, "kedro.pipeline.node.Node.short_name"]], "tag() (kedro.pipeline.node.node method)": [[196, "kedro.pipeline.node.Node.tag"]], "tags (kedro.pipeline.node.node property)": [[196, "kedro.pipeline.node.Node.tags"]], "kedro.runner": [[197, "module-kedro.runner"]], "abstractrunner (class in kedro.runner)": [[198, "kedro.runner.AbstractRunner"]], "__init__() (kedro.runner.abstractrunner method)": [[198, "kedro.runner.AbstractRunner.__init__"]], "create_default_data_set() (kedro.runner.abstractrunner method)": [[198, "kedro.runner.AbstractRunner.create_default_data_set"]], "run() (kedro.runner.abstractrunner method)": [[198, "kedro.runner.AbstractRunner.run"]], "run_only_missing() (kedro.runner.abstractrunner method)": [[198, "kedro.runner.AbstractRunner.run_only_missing"]], "parallelrunner (class in kedro.runner)": [[199, "kedro.runner.ParallelRunner"]], "__init__() (kedro.runner.parallelrunner method)": [[199, "kedro.runner.ParallelRunner.__init__"]], "create_default_data_set() (kedro.runner.parallelrunner method)": [[199, "kedro.runner.ParallelRunner.create_default_data_set"]], "run() (kedro.runner.parallelrunner method)": [[199, "kedro.runner.ParallelRunner.run"]], "run_only_missing() (kedro.runner.parallelrunner method)": [[199, "kedro.runner.ParallelRunner.run_only_missing"]], "sequentialrunner (class in kedro.runner)": [[200, "kedro.runner.SequentialRunner"]], "__init__() (kedro.runner.sequentialrunner method)": [[200, "kedro.runner.SequentialRunner.__init__"]], "create_default_data_set() (kedro.runner.sequentialrunner method)": [[200, "kedro.runner.SequentialRunner.create_default_data_set"]], "run() (kedro.runner.sequentialrunner method)": [[200, "kedro.runner.SequentialRunner.run"]], "run_only_missing() (kedro.runner.sequentialrunner method)": [[200, "kedro.runner.SequentialRunner.run_only_missing"]], "threadrunner (class in kedro.runner)": [[201, "kedro.runner.ThreadRunner"]], "__init__() (kedro.runner.threadrunner method)": [[201, "kedro.runner.ThreadRunner.__init__"]], "create_default_data_set() (kedro.runner.threadrunner method)": [[201, "kedro.runner.ThreadRunner.create_default_data_set"]], "run() (kedro.runner.threadrunner method)": [[201, "kedro.runner.ThreadRunner.run"]], "run_only_missing() (kedro.runner.threadrunner method)": [[201, "kedro.runner.ThreadRunner.run_only_missing"]], "run_node() (in module kedro.runner)": [[202, "kedro.runner.run_node"]], "kedro.utils": [[203, "module-kedro.utils"]], "load_obj() (in module kedro.utils)": [[204, "kedro.utils.load_obj"]], "kedro_datasets": [[205, "module-kedro_datasets"]], "apidataset (class in kedro_datasets.api)": [[206, "kedro_datasets.api.APIDataSet"]], "default_save_args (kedro_datasets.api.apidataset attribute)": [[206, "kedro_datasets.api.APIDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.api.apidataset method)": [[206, "kedro_datasets.api.APIDataSet.__init__"]], "exists() (kedro_datasets.api.apidataset method)": [[206, "kedro_datasets.api.APIDataSet.exists"]], "from_config() (kedro_datasets.api.apidataset class method)": [[206, "kedro_datasets.api.APIDataSet.from_config"]], "load() (kedro_datasets.api.apidataset method)": [[206, "kedro_datasets.api.APIDataSet.load"]], "release() (kedro_datasets.api.apidataset method)": [[206, "kedro_datasets.api.APIDataSet.release"]], "save() (kedro_datasets.api.apidataset method)": [[206, "kedro_datasets.api.APIDataSet.save"]], "biosequencedataset (class in kedro_datasets.biosequence)": [[207, "kedro_datasets.biosequence.BioSequenceDataSet"]], "default_load_args (kedro_datasets.biosequence.biosequencedataset attribute)": [[207, "kedro_datasets.biosequence.BioSequenceDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.biosequence.biosequencedataset attribute)": [[207, "kedro_datasets.biosequence.BioSequenceDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.biosequence.biosequencedataset method)": [[207, "kedro_datasets.biosequence.BioSequenceDataSet.__init__"]], "exists() (kedro_datasets.biosequence.biosequencedataset method)": [[207, "kedro_datasets.biosequence.BioSequenceDataSet.exists"]], "from_config() (kedro_datasets.biosequence.biosequencedataset class method)": [[207, "kedro_datasets.biosequence.BioSequenceDataSet.from_config"]], "invalidate_cache() (kedro_datasets.biosequence.biosequencedataset method)": [[207, "kedro_datasets.biosequence.BioSequenceDataSet.invalidate_cache"]], "load() (kedro_datasets.biosequence.biosequencedataset method)": [[207, "kedro_datasets.biosequence.BioSequenceDataSet.load"]], "release() (kedro_datasets.biosequence.biosequencedataset method)": [[207, "kedro_datasets.biosequence.BioSequenceDataSet.release"]], "save() (kedro_datasets.biosequence.biosequencedataset method)": [[207, "kedro_datasets.biosequence.BioSequenceDataSet.save"]], "default_load_args (kedro_datasets.dask.parquetdataset attribute)": [[208, "kedro_datasets.dask.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.dask.parquetdataset attribute)": [[208, "kedro_datasets.dask.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro_datasets.dask)": [[208, "kedro_datasets.dask.ParquetDataSet"]], "__init__() (kedro_datasets.dask.parquetdataset method)": [[208, "kedro_datasets.dask.ParquetDataSet.__init__"]], "exists() (kedro_datasets.dask.parquetdataset method)": [[208, "kedro_datasets.dask.ParquetDataSet.exists"]], "from_config() (kedro_datasets.dask.parquetdataset class method)": [[208, "kedro_datasets.dask.ParquetDataSet.from_config"]], "fs_args (kedro_datasets.dask.parquetdataset property)": [[208, "kedro_datasets.dask.ParquetDataSet.fs_args"]], "load() (kedro_datasets.dask.parquetdataset method)": [[208, "kedro_datasets.dask.ParquetDataSet.load"]], "release() (kedro_datasets.dask.parquetdataset method)": [[208, "kedro_datasets.dask.ParquetDataSet.release"]], "save() (kedro_datasets.dask.parquetdataset method)": [[208, "kedro_datasets.dask.ParquetDataSet.save"]], "managedtabledataset (class in kedro_datasets.databricks)": [[209, "kedro_datasets.databricks.ManagedTableDataSet"]], "__init__() (kedro_datasets.databricks.managedtabledataset method)": [[209, "kedro_datasets.databricks.ManagedTableDataSet.__init__"]], "exists() (kedro_datasets.databricks.managedtabledataset method)": [[209, "kedro_datasets.databricks.ManagedTableDataSet.exists"]], "from_config() (kedro_datasets.databricks.managedtabledataset class method)": [[209, "kedro_datasets.databricks.ManagedTableDataSet.from_config"]], "load() (kedro_datasets.databricks.managedtabledataset method)": [[209, "kedro_datasets.databricks.ManagedTableDataSet.load"]], "release() (kedro_datasets.databricks.managedtabledataset method)": [[209, "kedro_datasets.databricks.ManagedTableDataSet.release"]], "resolve_load_version() (kedro_datasets.databricks.managedtabledataset method)": [[209, "kedro_datasets.databricks.ManagedTableDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.databricks.managedtabledataset method)": [[209, "kedro_datasets.databricks.ManagedTableDataSet.resolve_save_version"]], "save() (kedro_datasets.databricks.managedtabledataset method)": [[209, "kedro_datasets.databricks.ManagedTableDataSet.save"]], "default_load_args (kedro_datasets.email.emailmessagedataset attribute)": [[210, "kedro_datasets.email.EmailMessageDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.email.emailmessagedataset attribute)": [[210, "kedro_datasets.email.EmailMessageDataSet.DEFAULT_SAVE_ARGS"]], "emailmessagedataset (class in kedro_datasets.email)": [[210, "kedro_datasets.email.EmailMessageDataSet"]], "__init__() (kedro_datasets.email.emailmessagedataset method)": [[210, "kedro_datasets.email.EmailMessageDataSet.__init__"]], "exists() (kedro_datasets.email.emailmessagedataset method)": [[210, "kedro_datasets.email.EmailMessageDataSet.exists"]], "from_config() (kedro_datasets.email.emailmessagedataset class method)": [[210, "kedro_datasets.email.EmailMessageDataSet.from_config"]], "load() (kedro_datasets.email.emailmessagedataset method)": [[210, "kedro_datasets.email.EmailMessageDataSet.load"]], "release() (kedro_datasets.email.emailmessagedataset method)": [[210, "kedro_datasets.email.EmailMessageDataSet.release"]], "resolve_load_version() (kedro_datasets.email.emailmessagedataset method)": [[210, "kedro_datasets.email.EmailMessageDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.email.emailmessagedataset method)": [[210, "kedro_datasets.email.EmailMessageDataSet.resolve_save_version"]], "save() (kedro_datasets.email.emailmessagedataset method)": [[210, "kedro_datasets.email.EmailMessageDataSet.save"]], "default_load_args (kedro_datasets.geopandas.geojsondataset attribute)": [[211, "kedro_datasets.geopandas.GeoJSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.geopandas.geojsondataset attribute)": [[211, "kedro_datasets.geopandas.GeoJSONDataSet.DEFAULT_SAVE_ARGS"]], "geojsondataset (class in kedro_datasets.geopandas)": [[211, "kedro_datasets.geopandas.GeoJSONDataSet"]], "__init__() (kedro_datasets.geopandas.geojsondataset method)": [[211, "kedro_datasets.geopandas.GeoJSONDataSet.__init__"]], "exists() (kedro_datasets.geopandas.geojsondataset method)": [[211, "kedro_datasets.geopandas.GeoJSONDataSet.exists"]], "from_config() (kedro_datasets.geopandas.geojsondataset class method)": [[211, "kedro_datasets.geopandas.GeoJSONDataSet.from_config"]], "invalidate_cache() (kedro_datasets.geopandas.geojsondataset method)": [[211, "kedro_datasets.geopandas.GeoJSONDataSet.invalidate_cache"]], "load() (kedro_datasets.geopandas.geojsondataset method)": [[211, "kedro_datasets.geopandas.GeoJSONDataSet.load"]], "release() (kedro_datasets.geopandas.geojsondataset method)": [[211, "kedro_datasets.geopandas.GeoJSONDataSet.release"]], "resolve_load_version() (kedro_datasets.geopandas.geojsondataset method)": [[211, "kedro_datasets.geopandas.GeoJSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.geopandas.geojsondataset method)": [[211, "kedro_datasets.geopandas.GeoJSONDataSet.resolve_save_version"]], "save() (kedro_datasets.geopandas.geojsondataset method)": [[211, "kedro_datasets.geopandas.GeoJSONDataSet.save"]], "default_save_args (kedro_datasets.holoviews.holoviewswriter attribute)": [[212, "kedro_datasets.holoviews.HoloviewsWriter.DEFAULT_SAVE_ARGS"]], "holoviewswriter (class in kedro_datasets.holoviews)": [[212, "kedro_datasets.holoviews.HoloviewsWriter"]], "__init__() (kedro_datasets.holoviews.holoviewswriter method)": [[212, "kedro_datasets.holoviews.HoloviewsWriter.__init__"]], "exists() (kedro_datasets.holoviews.holoviewswriter method)": [[212, "kedro_datasets.holoviews.HoloviewsWriter.exists"]], "from_config() (kedro_datasets.holoviews.holoviewswriter class method)": [[212, "kedro_datasets.holoviews.HoloviewsWriter.from_config"]], "load() (kedro_datasets.holoviews.holoviewswriter method)": [[212, "kedro_datasets.holoviews.HoloviewsWriter.load"]], "release() (kedro_datasets.holoviews.holoviewswriter method)": [[212, "kedro_datasets.holoviews.HoloviewsWriter.release"]], "resolve_load_version() (kedro_datasets.holoviews.holoviewswriter method)": [[212, "kedro_datasets.holoviews.HoloviewsWriter.resolve_load_version"]], "resolve_save_version() (kedro_datasets.holoviews.holoviewswriter method)": [[212, "kedro_datasets.holoviews.HoloviewsWriter.resolve_save_version"]], "save() (kedro_datasets.holoviews.holoviewswriter method)": [[212, "kedro_datasets.holoviews.HoloviewsWriter.save"]], "default_save_args (kedro_datasets.json.jsondataset attribute)": [[213, "kedro_datasets.json.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.json)": [[213, "kedro_datasets.json.JSONDataSet"]], "__init__() (kedro_datasets.json.jsondataset method)": [[213, "kedro_datasets.json.JSONDataSet.__init__"]], "exists() (kedro_datasets.json.jsondataset method)": [[213, "kedro_datasets.json.JSONDataSet.exists"]], "from_config() (kedro_datasets.json.jsondataset class method)": [[213, "kedro_datasets.json.JSONDataSet.from_config"]], "load() (kedro_datasets.json.jsondataset method)": [[213, "kedro_datasets.json.JSONDataSet.load"]], "release() (kedro_datasets.json.jsondataset method)": [[213, "kedro_datasets.json.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.json.jsondataset method)": [[213, "kedro_datasets.json.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.json.jsondataset method)": [[213, "kedro_datasets.json.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.json.jsondataset method)": [[213, "kedro_datasets.json.JSONDataSet.save"]], "default_save_args (kedro_datasets.matplotlib.matplotlibwriter attribute)": [[214, "kedro_datasets.matplotlib.MatplotlibWriter.DEFAULT_SAVE_ARGS"]], "matplotlibwriter (class in kedro_datasets.matplotlib)": [[214, "kedro_datasets.matplotlib.MatplotlibWriter"]], "__init__() (kedro_datasets.matplotlib.matplotlibwriter method)": [[214, "kedro_datasets.matplotlib.MatplotlibWriter.__init__"]], "exists() (kedro_datasets.matplotlib.matplotlibwriter method)": [[214, "kedro_datasets.matplotlib.MatplotlibWriter.exists"]], "from_config() (kedro_datasets.matplotlib.matplotlibwriter class method)": [[214, "kedro_datasets.matplotlib.MatplotlibWriter.from_config"]], "load() (kedro_datasets.matplotlib.matplotlibwriter method)": [[214, "kedro_datasets.matplotlib.MatplotlibWriter.load"]], "release() (kedro_datasets.matplotlib.matplotlibwriter method)": [[214, "kedro_datasets.matplotlib.MatplotlibWriter.release"]], "resolve_load_version() (kedro_datasets.matplotlib.matplotlibwriter method)": [[214, "kedro_datasets.matplotlib.MatplotlibWriter.resolve_load_version"]], "resolve_save_version() (kedro_datasets.matplotlib.matplotlibwriter method)": [[214, "kedro_datasets.matplotlib.MatplotlibWriter.resolve_save_version"]], "save() (kedro_datasets.matplotlib.matplotlibwriter method)": [[214, "kedro_datasets.matplotlib.MatplotlibWriter.save"]], "default_load_args (kedro_datasets.networkx.gmldataset attribute)": [[215, "kedro_datasets.networkx.GMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.networkx.gmldataset attribute)": [[215, "kedro_datasets.networkx.GMLDataSet.DEFAULT_SAVE_ARGS"]], "gmldataset (class in kedro_datasets.networkx)": [[215, "kedro_datasets.networkx.GMLDataSet"]], "__init__() (kedro_datasets.networkx.gmldataset method)": [[215, "kedro_datasets.networkx.GMLDataSet.__init__"]], "exists() (kedro_datasets.networkx.gmldataset method)": [[215, "kedro_datasets.networkx.GMLDataSet.exists"]], "from_config() (kedro_datasets.networkx.gmldataset class method)": [[215, "kedro_datasets.networkx.GMLDataSet.from_config"]], "load() (kedro_datasets.networkx.gmldataset method)": [[215, "kedro_datasets.networkx.GMLDataSet.load"]], "release() (kedro_datasets.networkx.gmldataset method)": [[215, "kedro_datasets.networkx.GMLDataSet.release"]], "resolve_load_version() (kedro_datasets.networkx.gmldataset method)": [[215, "kedro_datasets.networkx.GMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.networkx.gmldataset method)": [[215, "kedro_datasets.networkx.GMLDataSet.resolve_save_version"]], "save() (kedro_datasets.networkx.gmldataset method)": [[215, "kedro_datasets.networkx.GMLDataSet.save"]], "default_load_args (kedro_datasets.networkx.graphmldataset attribute)": [[216, "kedro_datasets.networkx.GraphMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.networkx.graphmldataset attribute)": [[216, "kedro_datasets.networkx.GraphMLDataSet.DEFAULT_SAVE_ARGS"]], "graphmldataset (class in kedro_datasets.networkx)": [[216, "kedro_datasets.networkx.GraphMLDataSet"]], "__init__() (kedro_datasets.networkx.graphmldataset method)": [[216, "kedro_datasets.networkx.GraphMLDataSet.__init__"]], "exists() (kedro_datasets.networkx.graphmldataset method)": [[216, "kedro_datasets.networkx.GraphMLDataSet.exists"]], "from_config() (kedro_datasets.networkx.graphmldataset class method)": [[216, "kedro_datasets.networkx.GraphMLDataSet.from_config"]], "load() (kedro_datasets.networkx.graphmldataset method)": [[216, "kedro_datasets.networkx.GraphMLDataSet.load"]], "release() (kedro_datasets.networkx.graphmldataset method)": [[216, "kedro_datasets.networkx.GraphMLDataSet.release"]], "resolve_load_version() (kedro_datasets.networkx.graphmldataset method)": [[216, "kedro_datasets.networkx.GraphMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.networkx.graphmldataset method)": [[216, "kedro_datasets.networkx.GraphMLDataSet.resolve_save_version"]], "save() (kedro_datasets.networkx.graphmldataset method)": [[216, "kedro_datasets.networkx.GraphMLDataSet.save"]], "default_load_args (kedro_datasets.networkx.jsondataset attribute)": [[217, "kedro_datasets.networkx.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.networkx.jsondataset attribute)": [[217, "kedro_datasets.networkx.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.networkx)": [[217, "kedro_datasets.networkx.JSONDataSet"]], "__init__() (kedro_datasets.networkx.jsondataset method)": [[217, "kedro_datasets.networkx.JSONDataSet.__init__"]], "exists() (kedro_datasets.networkx.jsondataset method)": [[217, "kedro_datasets.networkx.JSONDataSet.exists"]], "from_config() (kedro_datasets.networkx.jsondataset class method)": [[217, "kedro_datasets.networkx.JSONDataSet.from_config"]], "load() (kedro_datasets.networkx.jsondataset method)": [[217, "kedro_datasets.networkx.JSONDataSet.load"]], "release() (kedro_datasets.networkx.jsondataset method)": [[217, "kedro_datasets.networkx.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.networkx.jsondataset method)": [[217, "kedro_datasets.networkx.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.networkx.jsondataset method)": [[217, "kedro_datasets.networkx.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.networkx.jsondataset method)": [[217, "kedro_datasets.networkx.JSONDataSet.save"]], "csvdataset (class in kedro_datasets.pandas)": [[218, "kedro_datasets.pandas.CSVDataSet"]], "default_load_args (kedro_datasets.pandas.csvdataset attribute)": [[218, "kedro_datasets.pandas.CSVDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.csvdataset attribute)": [[218, "kedro_datasets.pandas.CSVDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.pandas.csvdataset method)": [[218, "kedro_datasets.pandas.CSVDataSet.__init__"]], "exists() (kedro_datasets.pandas.csvdataset method)": [[218, "kedro_datasets.pandas.CSVDataSet.exists"]], "from_config() (kedro_datasets.pandas.csvdataset class method)": [[218, "kedro_datasets.pandas.CSVDataSet.from_config"]], "load() (kedro_datasets.pandas.csvdataset method)": [[218, "kedro_datasets.pandas.CSVDataSet.load"]], "release() (kedro_datasets.pandas.csvdataset method)": [[218, "kedro_datasets.pandas.CSVDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.csvdataset method)": [[218, "kedro_datasets.pandas.CSVDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.csvdataset method)": [[218, "kedro_datasets.pandas.CSVDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.csvdataset method)": [[218, "kedro_datasets.pandas.CSVDataSet.save"]], "accepted_write_modes (kedro_datasets.pandas.deltatabledataset attribute)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.ACCEPTED_WRITE_MODES"]], "default_load_args (kedro_datasets.pandas.deltatabledataset attribute)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.deltatabledataset attribute)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.DEFAULT_SAVE_ARGS"]], "default_write_mode (kedro_datasets.pandas.deltatabledataset attribute)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.DEFAULT_WRITE_MODE"]], "deltatabledataset (class in kedro_datasets.pandas)": [[219, "kedro_datasets.pandas.DeltaTableDataSet"]], "__init__() (kedro_datasets.pandas.deltatabledataset method)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.__init__"]], "exists() (kedro_datasets.pandas.deltatabledataset method)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.exists"]], "from_config() (kedro_datasets.pandas.deltatabledataset class method)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.from_config"]], "fs_args (kedro_datasets.pandas.deltatabledataset property)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.fs_args"]], "get_loaded_version() (kedro_datasets.pandas.deltatabledataset method)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.get_loaded_version"]], "history (kedro_datasets.pandas.deltatabledataset property)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.history"]], "load() (kedro_datasets.pandas.deltatabledataset method)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.load"]], "metadata (kedro_datasets.pandas.deltatabledataset property)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.metadata"]], "release() (kedro_datasets.pandas.deltatabledataset method)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.release"]], "save() (kedro_datasets.pandas.deltatabledataset method)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.save"]], "schema (kedro_datasets.pandas.deltatabledataset property)": [[219, "kedro_datasets.pandas.DeltaTableDataSet.schema"]], "default_load_args (kedro_datasets.pandas.exceldataset attribute)": [[220, "kedro_datasets.pandas.ExcelDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.exceldataset attribute)": [[220, "kedro_datasets.pandas.ExcelDataSet.DEFAULT_SAVE_ARGS"]], "exceldataset (class in kedro_datasets.pandas)": [[220, "kedro_datasets.pandas.ExcelDataSet"]], "__init__() (kedro_datasets.pandas.exceldataset method)": [[220, "kedro_datasets.pandas.ExcelDataSet.__init__"]], "exists() (kedro_datasets.pandas.exceldataset method)": [[220, "kedro_datasets.pandas.ExcelDataSet.exists"]], "from_config() (kedro_datasets.pandas.exceldataset class method)": [[220, "kedro_datasets.pandas.ExcelDataSet.from_config"]], "load() (kedro_datasets.pandas.exceldataset method)": [[220, "kedro_datasets.pandas.ExcelDataSet.load"]], "release() (kedro_datasets.pandas.exceldataset method)": [[220, "kedro_datasets.pandas.ExcelDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.exceldataset method)": [[220, "kedro_datasets.pandas.ExcelDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.exceldataset method)": [[220, "kedro_datasets.pandas.ExcelDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.exceldataset method)": [[220, "kedro_datasets.pandas.ExcelDataSet.save"]], "default_load_args (kedro_datasets.pandas.featherdataset attribute)": [[221, "kedro_datasets.pandas.FeatherDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.featherdataset attribute)": [[221, "kedro_datasets.pandas.FeatherDataSet.DEFAULT_SAVE_ARGS"]], "featherdataset (class in kedro_datasets.pandas)": [[221, "kedro_datasets.pandas.FeatherDataSet"]], "__init__() (kedro_datasets.pandas.featherdataset method)": [[221, "kedro_datasets.pandas.FeatherDataSet.__init__"]], "exists() (kedro_datasets.pandas.featherdataset method)": [[221, "kedro_datasets.pandas.FeatherDataSet.exists"]], "from_config() (kedro_datasets.pandas.featherdataset class method)": [[221, "kedro_datasets.pandas.FeatherDataSet.from_config"]], "load() (kedro_datasets.pandas.featherdataset method)": [[221, "kedro_datasets.pandas.FeatherDataSet.load"]], "release() (kedro_datasets.pandas.featherdataset method)": [[221, "kedro_datasets.pandas.FeatherDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.featherdataset method)": [[221, "kedro_datasets.pandas.FeatherDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.featherdataset method)": [[221, "kedro_datasets.pandas.FeatherDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.featherdataset method)": [[221, "kedro_datasets.pandas.FeatherDataSet.save"]], "default_load_args (kedro_datasets.pandas.gbqquerydataset attribute)": [[222, "kedro_datasets.pandas.GBQQueryDataSet.DEFAULT_LOAD_ARGS"]], "gbqquerydataset (class in kedro_datasets.pandas)": [[222, "kedro_datasets.pandas.GBQQueryDataSet"]], "__init__() (kedro_datasets.pandas.gbqquerydataset method)": [[222, "kedro_datasets.pandas.GBQQueryDataSet.__init__"]], "exists() (kedro_datasets.pandas.gbqquerydataset method)": [[222, "kedro_datasets.pandas.GBQQueryDataSet.exists"]], "from_config() (kedro_datasets.pandas.gbqquerydataset class method)": [[222, "kedro_datasets.pandas.GBQQueryDataSet.from_config"]], "load() (kedro_datasets.pandas.gbqquerydataset method)": [[222, "kedro_datasets.pandas.GBQQueryDataSet.load"]], "release() (kedro_datasets.pandas.gbqquerydataset method)": [[222, "kedro_datasets.pandas.GBQQueryDataSet.release"]], "save() (kedro_datasets.pandas.gbqquerydataset method)": [[222, "kedro_datasets.pandas.GBQQueryDataSet.save"]], "default_load_args (kedro_datasets.pandas.gbqtabledataset attribute)": [[223, "kedro_datasets.pandas.GBQTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.gbqtabledataset attribute)": [[223, "kedro_datasets.pandas.GBQTableDataSet.DEFAULT_SAVE_ARGS"]], "gbqtabledataset (class in kedro_datasets.pandas)": [[223, "kedro_datasets.pandas.GBQTableDataSet"]], "__init__() (kedro_datasets.pandas.gbqtabledataset method)": [[223, "kedro_datasets.pandas.GBQTableDataSet.__init__"]], "exists() (kedro_datasets.pandas.gbqtabledataset method)": [[223, "kedro_datasets.pandas.GBQTableDataSet.exists"]], "from_config() (kedro_datasets.pandas.gbqtabledataset class method)": [[223, "kedro_datasets.pandas.GBQTableDataSet.from_config"]], "load() (kedro_datasets.pandas.gbqtabledataset method)": [[223, "kedro_datasets.pandas.GBQTableDataSet.load"]], "release() (kedro_datasets.pandas.gbqtabledataset method)": [[223, "kedro_datasets.pandas.GBQTableDataSet.release"]], "save() (kedro_datasets.pandas.gbqtabledataset method)": [[223, "kedro_datasets.pandas.GBQTableDataSet.save"]], "default_load_args (kedro_datasets.pandas.genericdataset attribute)": [[224, "kedro_datasets.pandas.GenericDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.genericdataset attribute)": [[224, "kedro_datasets.pandas.GenericDataSet.DEFAULT_SAVE_ARGS"]], "genericdataset (class in kedro_datasets.pandas)": [[224, "kedro_datasets.pandas.GenericDataSet"]], "__init__() (kedro_datasets.pandas.genericdataset method)": [[224, "kedro_datasets.pandas.GenericDataSet.__init__"]], "exists() (kedro_datasets.pandas.genericdataset method)": [[224, "kedro_datasets.pandas.GenericDataSet.exists"]], "from_config() (kedro_datasets.pandas.genericdataset class method)": [[224, "kedro_datasets.pandas.GenericDataSet.from_config"]], "load() (kedro_datasets.pandas.genericdataset method)": [[224, "kedro_datasets.pandas.GenericDataSet.load"]], "release() (kedro_datasets.pandas.genericdataset method)": [[224, "kedro_datasets.pandas.GenericDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.genericdataset method)": [[224, "kedro_datasets.pandas.GenericDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.genericdataset method)": [[224, "kedro_datasets.pandas.GenericDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.genericdataset method)": [[224, "kedro_datasets.pandas.GenericDataSet.save"]], "default_load_args (kedro_datasets.pandas.hdfdataset attribute)": [[225, "kedro_datasets.pandas.HDFDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.hdfdataset attribute)": [[225, "kedro_datasets.pandas.HDFDataSet.DEFAULT_SAVE_ARGS"]], "hdfdataset (class in kedro_datasets.pandas)": [[225, "kedro_datasets.pandas.HDFDataSet"]], "__init__() (kedro_datasets.pandas.hdfdataset method)": [[225, "kedro_datasets.pandas.HDFDataSet.__init__"]], "exists() (kedro_datasets.pandas.hdfdataset method)": [[225, "kedro_datasets.pandas.HDFDataSet.exists"]], "from_config() (kedro_datasets.pandas.hdfdataset class method)": [[225, "kedro_datasets.pandas.HDFDataSet.from_config"]], "load() (kedro_datasets.pandas.hdfdataset method)": [[225, "kedro_datasets.pandas.HDFDataSet.load"]], "release() (kedro_datasets.pandas.hdfdataset method)": [[225, "kedro_datasets.pandas.HDFDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.hdfdataset method)": [[225, "kedro_datasets.pandas.HDFDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.hdfdataset method)": [[225, "kedro_datasets.pandas.HDFDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.hdfdataset method)": [[225, "kedro_datasets.pandas.HDFDataSet.save"]], "default_load_args (kedro_datasets.pandas.jsondataset attribute)": [[226, "kedro_datasets.pandas.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.jsondataset attribute)": [[226, "kedro_datasets.pandas.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.pandas)": [[226, "kedro_datasets.pandas.JSONDataSet"]], "__init__() (kedro_datasets.pandas.jsondataset method)": [[226, "kedro_datasets.pandas.JSONDataSet.__init__"]], "exists() (kedro_datasets.pandas.jsondataset method)": [[226, "kedro_datasets.pandas.JSONDataSet.exists"]], "from_config() (kedro_datasets.pandas.jsondataset class method)": [[226, "kedro_datasets.pandas.JSONDataSet.from_config"]], "load() (kedro_datasets.pandas.jsondataset method)": [[226, "kedro_datasets.pandas.JSONDataSet.load"]], "release() (kedro_datasets.pandas.jsondataset method)": [[226, "kedro_datasets.pandas.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.jsondataset method)": [[226, "kedro_datasets.pandas.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.jsondataset method)": [[226, "kedro_datasets.pandas.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.jsondataset method)": [[226, "kedro_datasets.pandas.JSONDataSet.save"]], "default_load_args (kedro_datasets.pandas.parquetdataset attribute)": [[227, "kedro_datasets.pandas.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.parquetdataset attribute)": [[227, "kedro_datasets.pandas.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro_datasets.pandas)": [[227, "kedro_datasets.pandas.ParquetDataSet"]], "__init__() (kedro_datasets.pandas.parquetdataset method)": [[227, "kedro_datasets.pandas.ParquetDataSet.__init__"]], "exists() (kedro_datasets.pandas.parquetdataset method)": [[227, "kedro_datasets.pandas.ParquetDataSet.exists"]], "from_config() (kedro_datasets.pandas.parquetdataset class method)": [[227, "kedro_datasets.pandas.ParquetDataSet.from_config"]], "load() (kedro_datasets.pandas.parquetdataset method)": [[227, "kedro_datasets.pandas.ParquetDataSet.load"]], "release() (kedro_datasets.pandas.parquetdataset method)": [[227, "kedro_datasets.pandas.ParquetDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.parquetdataset method)": [[227, "kedro_datasets.pandas.ParquetDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.parquetdataset method)": [[227, "kedro_datasets.pandas.ParquetDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.parquetdataset method)": [[227, "kedro_datasets.pandas.ParquetDataSet.save"]], "sqlquerydataset (class in kedro_datasets.pandas)": [[228, "kedro_datasets.pandas.SQLQueryDataSet"]], "__init__() (kedro_datasets.pandas.sqlquerydataset method)": [[228, "kedro_datasets.pandas.SQLQueryDataSet.__init__"]], "adapt_mssql_date_params() (kedro_datasets.pandas.sqlquerydataset method)": [[228, "kedro_datasets.pandas.SQLQueryDataSet.adapt_mssql_date_params"]], "create_connection() (kedro_datasets.pandas.sqlquerydataset class method)": [[228, "kedro_datasets.pandas.SQLQueryDataSet.create_connection"]], "engines (kedro_datasets.pandas.sqlquerydataset attribute)": [[228, "kedro_datasets.pandas.SQLQueryDataSet.engines"]], "exists() (kedro_datasets.pandas.sqlquerydataset method)": [[228, "kedro_datasets.pandas.SQLQueryDataSet.exists"]], "from_config() (kedro_datasets.pandas.sqlquerydataset class method)": [[228, "kedro_datasets.pandas.SQLQueryDataSet.from_config"]], "load() (kedro_datasets.pandas.sqlquerydataset method)": [[228, "kedro_datasets.pandas.SQLQueryDataSet.load"]], "release() (kedro_datasets.pandas.sqlquerydataset method)": [[228, "kedro_datasets.pandas.SQLQueryDataSet.release"]], "save() (kedro_datasets.pandas.sqlquerydataset method)": [[228, "kedro_datasets.pandas.SQLQueryDataSet.save"]], "default_load_args (kedro_datasets.pandas.sqltabledataset attribute)": [[229, "kedro_datasets.pandas.SQLTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.sqltabledataset attribute)": [[229, "kedro_datasets.pandas.SQLTableDataSet.DEFAULT_SAVE_ARGS"]], "sqltabledataset (class in kedro_datasets.pandas)": [[229, "kedro_datasets.pandas.SQLTableDataSet"]], "__init__() (kedro_datasets.pandas.sqltabledataset method)": [[229, "kedro_datasets.pandas.SQLTableDataSet.__init__"]], "create_connection() (kedro_datasets.pandas.sqltabledataset class method)": [[229, "kedro_datasets.pandas.SQLTableDataSet.create_connection"]], "engines (kedro_datasets.pandas.sqltabledataset attribute)": [[229, "kedro_datasets.pandas.SQLTableDataSet.engines"]], "exists() (kedro_datasets.pandas.sqltabledataset method)": [[229, "kedro_datasets.pandas.SQLTableDataSet.exists"]], "from_config() (kedro_datasets.pandas.sqltabledataset class method)": [[229, "kedro_datasets.pandas.SQLTableDataSet.from_config"]], "load() (kedro_datasets.pandas.sqltabledataset method)": [[229, "kedro_datasets.pandas.SQLTableDataSet.load"]], "release() (kedro_datasets.pandas.sqltabledataset method)": [[229, "kedro_datasets.pandas.SQLTableDataSet.release"]], "save() (kedro_datasets.pandas.sqltabledataset method)": [[229, "kedro_datasets.pandas.SQLTableDataSet.save"]], "default_load_args (kedro_datasets.pandas.xmldataset attribute)": [[230, "kedro_datasets.pandas.XMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.xmldataset attribute)": [[230, "kedro_datasets.pandas.XMLDataSet.DEFAULT_SAVE_ARGS"]], "xmldataset (class in kedro_datasets.pandas)": [[230, "kedro_datasets.pandas.XMLDataSet"]], "__init__() (kedro_datasets.pandas.xmldataset method)": [[230, "kedro_datasets.pandas.XMLDataSet.__init__"]], "exists() (kedro_datasets.pandas.xmldataset method)": [[230, "kedro_datasets.pandas.XMLDataSet.exists"]], "from_config() (kedro_datasets.pandas.xmldataset class method)": [[230, "kedro_datasets.pandas.XMLDataSet.from_config"]], "load() (kedro_datasets.pandas.xmldataset method)": [[230, "kedro_datasets.pandas.XMLDataSet.load"]], "release() (kedro_datasets.pandas.xmldataset method)": [[230, "kedro_datasets.pandas.XMLDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.xmldataset method)": [[230, "kedro_datasets.pandas.XMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.xmldataset method)": [[230, "kedro_datasets.pandas.XMLDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.xmldataset method)": [[230, "kedro_datasets.pandas.XMLDataSet.save"]], "default_load_args (kedro_datasets.pickle.pickledataset attribute)": [[231, "kedro_datasets.pickle.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pickle.pickledataset attribute)": [[231, "kedro_datasets.pickle.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro_datasets.pickle)": [[231, "kedro_datasets.pickle.PickleDataSet"]], "__init__() (kedro_datasets.pickle.pickledataset method)": [[231, "kedro_datasets.pickle.PickleDataSet.__init__"]], "exists() (kedro_datasets.pickle.pickledataset method)": [[231, "kedro_datasets.pickle.PickleDataSet.exists"]], "from_config() (kedro_datasets.pickle.pickledataset class method)": [[231, "kedro_datasets.pickle.PickleDataSet.from_config"]], "load() (kedro_datasets.pickle.pickledataset method)": [[231, "kedro_datasets.pickle.PickleDataSet.load"]], "release() (kedro_datasets.pickle.pickledataset method)": [[231, "kedro_datasets.pickle.PickleDataSet.release"]], "resolve_load_version() (kedro_datasets.pickle.pickledataset method)": [[231, "kedro_datasets.pickle.PickleDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pickle.pickledataset method)": [[231, "kedro_datasets.pickle.PickleDataSet.resolve_save_version"]], "save() (kedro_datasets.pickle.pickledataset method)": [[231, "kedro_datasets.pickle.PickleDataSet.save"]], "default_save_args (kedro_datasets.pillow.imagedataset attribute)": [[232, "kedro_datasets.pillow.ImageDataSet.DEFAULT_SAVE_ARGS"]], "imagedataset (class in kedro_datasets.pillow)": [[232, "kedro_datasets.pillow.ImageDataSet"]], "__init__() (kedro_datasets.pillow.imagedataset method)": [[232, "kedro_datasets.pillow.ImageDataSet.__init__"]], "exists() (kedro_datasets.pillow.imagedataset method)": [[232, "kedro_datasets.pillow.ImageDataSet.exists"]], "from_config() (kedro_datasets.pillow.imagedataset class method)": [[232, "kedro_datasets.pillow.ImageDataSet.from_config"]], "load() (kedro_datasets.pillow.imagedataset method)": [[232, "kedro_datasets.pillow.ImageDataSet.load"]], "release() (kedro_datasets.pillow.imagedataset method)": [[232, "kedro_datasets.pillow.ImageDataSet.release"]], "resolve_load_version() (kedro_datasets.pillow.imagedataset method)": [[232, "kedro_datasets.pillow.ImageDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pillow.imagedataset method)": [[232, "kedro_datasets.pillow.ImageDataSet.resolve_save_version"]], "save() (kedro_datasets.pillow.imagedataset method)": [[232, "kedro_datasets.pillow.ImageDataSet.save"]], "default_load_args (kedro_datasets.plotly.jsondataset attribute)": [[233, "kedro_datasets.plotly.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.plotly.jsondataset attribute)": [[233, "kedro_datasets.plotly.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.plotly)": [[233, "kedro_datasets.plotly.JSONDataSet"]], "__init__() (kedro_datasets.plotly.jsondataset method)": [[233, "kedro_datasets.plotly.JSONDataSet.__init__"]], "exists() (kedro_datasets.plotly.jsondataset method)": [[233, "kedro_datasets.plotly.JSONDataSet.exists"]], "from_config() (kedro_datasets.plotly.jsondataset class method)": [[233, "kedro_datasets.plotly.JSONDataSet.from_config"]], "load() (kedro_datasets.plotly.jsondataset method)": [[233, "kedro_datasets.plotly.JSONDataSet.load"]], "release() (kedro_datasets.plotly.jsondataset method)": [[233, "kedro_datasets.plotly.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.plotly.jsondataset method)": [[233, "kedro_datasets.plotly.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.plotly.jsondataset method)": [[233, "kedro_datasets.plotly.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.plotly.jsondataset method)": [[233, "kedro_datasets.plotly.JSONDataSet.save"]], "default_load_args (kedro_datasets.plotly.plotlydataset attribute)": [[234, "kedro_datasets.plotly.PlotlyDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.plotly.plotlydataset attribute)": [[234, "kedro_datasets.plotly.PlotlyDataSet.DEFAULT_SAVE_ARGS"]], "plotlydataset (class in kedro_datasets.plotly)": [[234, "kedro_datasets.plotly.PlotlyDataSet"]], "__init__() (kedro_datasets.plotly.plotlydataset method)": [[234, "kedro_datasets.plotly.PlotlyDataSet.__init__"]], "exists() (kedro_datasets.plotly.plotlydataset method)": [[234, "kedro_datasets.plotly.PlotlyDataSet.exists"]], "from_config() (kedro_datasets.plotly.plotlydataset class method)": [[234, "kedro_datasets.plotly.PlotlyDataSet.from_config"]], "load() (kedro_datasets.plotly.plotlydataset method)": [[234, "kedro_datasets.plotly.PlotlyDataSet.load"]], "release() (kedro_datasets.plotly.plotlydataset method)": [[234, "kedro_datasets.plotly.PlotlyDataSet.release"]], "resolve_load_version() (kedro_datasets.plotly.plotlydataset method)": [[234, "kedro_datasets.plotly.PlotlyDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.plotly.plotlydataset method)": [[234, "kedro_datasets.plotly.PlotlyDataSet.resolve_save_version"]], "save() (kedro_datasets.plotly.plotlydataset method)": [[234, "kedro_datasets.plotly.PlotlyDataSet.save"]], "csvdataset (class in kedro_datasets.polars)": [[235, "kedro_datasets.polars.CSVDataSet"]], "default_load_args (kedro_datasets.polars.csvdataset attribute)": [[235, "kedro_datasets.polars.CSVDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.polars.csvdataset attribute)": [[235, "kedro_datasets.polars.CSVDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.polars.csvdataset method)": [[235, "kedro_datasets.polars.CSVDataSet.__init__"]], "exists() (kedro_datasets.polars.csvdataset method)": [[235, "kedro_datasets.polars.CSVDataSet.exists"]], "from_config() (kedro_datasets.polars.csvdataset class method)": [[235, "kedro_datasets.polars.CSVDataSet.from_config"]], "load() (kedro_datasets.polars.csvdataset method)": [[235, "kedro_datasets.polars.CSVDataSet.load"]], "release() (kedro_datasets.polars.csvdataset method)": [[235, "kedro_datasets.polars.CSVDataSet.release"]], "resolve_load_version() (kedro_datasets.polars.csvdataset method)": [[235, "kedro_datasets.polars.CSVDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.polars.csvdataset method)": [[235, "kedro_datasets.polars.CSVDataSet.resolve_save_version"]], "save() (kedro_datasets.polars.csvdataset method)": [[235, "kedro_datasets.polars.CSVDataSet.save"]], "default_load_args (kedro_datasets.polars.genericdataset attribute)": [[236, "kedro_datasets.polars.GenericDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.polars.genericdataset attribute)": [[236, "kedro_datasets.polars.GenericDataSet.DEFAULT_SAVE_ARGS"]], "genericdataset (class in kedro_datasets.polars)": [[236, "kedro_datasets.polars.GenericDataSet"]], "__init__() (kedro_datasets.polars.genericdataset method)": [[236, "kedro_datasets.polars.GenericDataSet.__init__"]], "exists() (kedro_datasets.polars.genericdataset method)": [[236, "kedro_datasets.polars.GenericDataSet.exists"]], "from_config() (kedro_datasets.polars.genericdataset class method)": [[236, "kedro_datasets.polars.GenericDataSet.from_config"]], "load() (kedro_datasets.polars.genericdataset method)": [[236, "kedro_datasets.polars.GenericDataSet.load"]], "release() (kedro_datasets.polars.genericdataset method)": [[236, "kedro_datasets.polars.GenericDataSet.release"]], "resolve_load_version() (kedro_datasets.polars.genericdataset method)": [[236, "kedro_datasets.polars.GenericDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.polars.genericdataset method)": [[236, "kedro_datasets.polars.GenericDataSet.resolve_save_version"]], "save() (kedro_datasets.polars.genericdataset method)": [[236, "kedro_datasets.polars.GenericDataSet.save"]], "default_load_args (kedro_datasets.redis.pickledataset attribute)": [[237, "kedro_datasets.redis.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_redis_url (kedro_datasets.redis.pickledataset attribute)": [[237, "kedro_datasets.redis.PickleDataSet.DEFAULT_REDIS_URL"]], "default_save_args (kedro_datasets.redis.pickledataset attribute)": [[237, "kedro_datasets.redis.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro_datasets.redis)": [[237, "kedro_datasets.redis.PickleDataSet"]], "__init__() (kedro_datasets.redis.pickledataset method)": [[237, "kedro_datasets.redis.PickleDataSet.__init__"]], "exists() (kedro_datasets.redis.pickledataset method)": [[237, "kedro_datasets.redis.PickleDataSet.exists"]], "from_config() (kedro_datasets.redis.pickledataset class method)": [[237, "kedro_datasets.redis.PickleDataSet.from_config"]], "load() (kedro_datasets.redis.pickledataset method)": [[237, "kedro_datasets.redis.PickleDataSet.load"]], "release() (kedro_datasets.redis.pickledataset method)": [[237, "kedro_datasets.redis.PickleDataSet.release"]], "save() (kedro_datasets.redis.pickledataset method)": [[237, "kedro_datasets.redis.PickleDataSet.save"]], "default_load_args (kedro_datasets.snowflake.snowparktabledataset attribute)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.snowflake.snowparktabledataset attribute)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.DEFAULT_SAVE_ARGS"]], "snowparktabledataset (class in kedro_datasets.snowflake)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet"]], "__init__() (kedro_datasets.snowflake.snowparktabledataset method)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.__init__"]], "exists() (kedro_datasets.snowflake.snowparktabledataset method)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.exists"]], "from_config() (kedro_datasets.snowflake.snowparktabledataset class method)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.from_config"]], "load() (kedro_datasets.snowflake.snowparktabledataset method)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.load"]], "release() (kedro_datasets.snowflake.snowparktabledataset method)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.release"]], "save() (kedro_datasets.snowflake.snowparktabledataset method)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.save"]], "deltatabledataset (class in kedro_datasets.spark)": [[239, "kedro_datasets.spark.DeltaTableDataSet"]], "__init__() (kedro_datasets.spark.deltatabledataset method)": [[239, "kedro_datasets.spark.DeltaTableDataSet.__init__"]], "exists() (kedro_datasets.spark.deltatabledataset method)": [[239, "kedro_datasets.spark.DeltaTableDataSet.exists"]], "from_config() (kedro_datasets.spark.deltatabledataset class method)": [[239, "kedro_datasets.spark.DeltaTableDataSet.from_config"]], "load() (kedro_datasets.spark.deltatabledataset method)": [[239, "kedro_datasets.spark.DeltaTableDataSet.load"]], "release() (kedro_datasets.spark.deltatabledataset method)": [[239, "kedro_datasets.spark.DeltaTableDataSet.release"]], "save() (kedro_datasets.spark.deltatabledataset method)": [[239, "kedro_datasets.spark.DeltaTableDataSet.save"]], "default_load_args (kedro_datasets.spark.sparkdataset attribute)": [[240, "kedro_datasets.spark.SparkDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.spark.sparkdataset attribute)": [[240, "kedro_datasets.spark.SparkDataSet.DEFAULT_SAVE_ARGS"]], "sparkdataset (class in kedro_datasets.spark)": [[240, "kedro_datasets.spark.SparkDataSet"]], "__init__() (kedro_datasets.spark.sparkdataset method)": [[240, "kedro_datasets.spark.SparkDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkdataset method)": [[240, "kedro_datasets.spark.SparkDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkdataset class method)": [[240, "kedro_datasets.spark.SparkDataSet.from_config"]], "load() (kedro_datasets.spark.sparkdataset method)": [[240, "kedro_datasets.spark.SparkDataSet.load"]], "release() (kedro_datasets.spark.sparkdataset method)": [[240, "kedro_datasets.spark.SparkDataSet.release"]], "resolve_load_version() (kedro_datasets.spark.sparkdataset method)": [[240, "kedro_datasets.spark.SparkDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.spark.sparkdataset method)": [[240, "kedro_datasets.spark.SparkDataSet.resolve_save_version"]], "save() (kedro_datasets.spark.sparkdataset method)": [[240, "kedro_datasets.spark.SparkDataSet.save"]], "default_save_args (kedro_datasets.spark.sparkhivedataset attribute)": [[241, "kedro_datasets.spark.SparkHiveDataSet.DEFAULT_SAVE_ARGS"]], "sparkhivedataset (class in kedro_datasets.spark)": [[241, "kedro_datasets.spark.SparkHiveDataSet"]], "__init__() (kedro_datasets.spark.sparkhivedataset method)": [[241, "kedro_datasets.spark.SparkHiveDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkhivedataset method)": [[241, "kedro_datasets.spark.SparkHiveDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkhivedataset class method)": [[241, "kedro_datasets.spark.SparkHiveDataSet.from_config"]], "load() (kedro_datasets.spark.sparkhivedataset method)": [[241, "kedro_datasets.spark.SparkHiveDataSet.load"]], "release() (kedro_datasets.spark.sparkhivedataset method)": [[241, "kedro_datasets.spark.SparkHiveDataSet.release"]], "save() (kedro_datasets.spark.sparkhivedataset method)": [[241, "kedro_datasets.spark.SparkHiveDataSet.save"]], "default_load_args (kedro_datasets.spark.sparkjdbcdataset attribute)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.spark.sparkjdbcdataset attribute)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.DEFAULT_SAVE_ARGS"]], "sparkjdbcdataset (class in kedro_datasets.spark)": [[242, "kedro_datasets.spark.SparkJDBCDataSet"]], "__init__() (kedro_datasets.spark.sparkjdbcdataset method)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkjdbcdataset method)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkjdbcdataset class method)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.from_config"]], "load() (kedro_datasets.spark.sparkjdbcdataset method)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.load"]], "release() (kedro_datasets.spark.sparkjdbcdataset method)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.release"]], "save() (kedro_datasets.spark.sparkjdbcdataset method)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.save"]], "default_load_args (kedro_datasets.spark.sparkstreamingdataset attribute)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.spark.sparkstreamingdataset attribute)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.DEFAULT_SAVE_ARGS"]], "sparkstreamingdataset (class in kedro_datasets.spark)": [[243, "kedro_datasets.spark.SparkStreamingDataSet"]], "__init__() (kedro_datasets.spark.sparkstreamingdataset method)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkstreamingdataset method)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkstreamingdataset class method)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.from_config"]], "load() (kedro_datasets.spark.sparkstreamingdataset method)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.load"]], "release() (kedro_datasets.spark.sparkstreamingdataset method)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.release"]], "save() (kedro_datasets.spark.sparkstreamingdataset method)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.save"]], "default_load_args (kedro_datasets.svmlight.svmlightdataset attribute)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.svmlight.svmlightdataset attribute)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.DEFAULT_SAVE_ARGS"]], "svmlightdataset (class in kedro_datasets.svmlight)": [[244, "kedro_datasets.svmlight.SVMLightDataSet"]], "__init__() (kedro_datasets.svmlight.svmlightdataset method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.__init__"]], "exists() (kedro_datasets.svmlight.svmlightdataset method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.exists"]], "from_config() (kedro_datasets.svmlight.svmlightdataset class method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.from_config"]], "load() (kedro_datasets.svmlight.svmlightdataset method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.load"]], "release() (kedro_datasets.svmlight.svmlightdataset method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.release"]], "resolve_load_version() (kedro_datasets.svmlight.svmlightdataset method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.svmlight.svmlightdataset method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.resolve_save_version"]], "save() (kedro_datasets.svmlight.svmlightdataset method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.save"]], "default_load_args (kedro_datasets.tensorflow.tensorflowmodeldataset attribute)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.tensorflow.tensorflowmodeldataset attribute)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.DEFAULT_SAVE_ARGS"]], "tensorflowmodeldataset (class in kedro_datasets.tensorflow)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet"]], "__init__() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.__init__"]], "exists() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.exists"]], "from_config() (kedro_datasets.tensorflow.tensorflowmodeldataset class method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.from_config"]], "load() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.load"]], "release() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.release"]], "resolve_load_version() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.resolve_save_version"]], "save() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.save"]], "textdataset (class in kedro_datasets.text)": [[246, "kedro_datasets.text.TextDataSet"]], "__init__() (kedro_datasets.text.textdataset method)": [[246, "kedro_datasets.text.TextDataSet.__init__"]], "exists() (kedro_datasets.text.textdataset method)": [[246, "kedro_datasets.text.TextDataSet.exists"]], "from_config() (kedro_datasets.text.textdataset class method)": [[246, "kedro_datasets.text.TextDataSet.from_config"]], "load() (kedro_datasets.text.textdataset method)": [[246, "kedro_datasets.text.TextDataSet.load"]], "release() (kedro_datasets.text.textdataset method)": [[246, "kedro_datasets.text.TextDataSet.release"]], "resolve_load_version() (kedro_datasets.text.textdataset method)": [[246, "kedro_datasets.text.TextDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.text.textdataset method)": [[246, "kedro_datasets.text.TextDataSet.resolve_save_version"]], "save() (kedro_datasets.text.textdataset method)": [[246, "kedro_datasets.text.TextDataSet.save"]], "default_save_args (kedro_datasets.tracking.jsondataset attribute)": [[247, "kedro_datasets.tracking.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.tracking)": [[247, "kedro_datasets.tracking.JSONDataSet"]], "__init__() (kedro_datasets.tracking.jsondataset method)": [[247, "kedro_datasets.tracking.JSONDataSet.__init__"]], "exists() (kedro_datasets.tracking.jsondataset method)": [[247, "kedro_datasets.tracking.JSONDataSet.exists"]], "from_config() (kedro_datasets.tracking.jsondataset class method)": [[247, "kedro_datasets.tracking.JSONDataSet.from_config"]], "load() (kedro_datasets.tracking.jsondataset method)": [[247, "kedro_datasets.tracking.JSONDataSet.load"]], "release() (kedro_datasets.tracking.jsondataset method)": [[247, "kedro_datasets.tracking.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.tracking.jsondataset method)": [[247, "kedro_datasets.tracking.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.tracking.jsondataset method)": [[247, "kedro_datasets.tracking.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.tracking.jsondataset method)": [[247, "kedro_datasets.tracking.JSONDataSet.save"]], "versioned (kedro_datasets.tracking.jsondataset attribute)": [[247, "kedro_datasets.tracking.JSONDataSet.versioned"]], "default_save_args (kedro_datasets.tracking.metricsdataset attribute)": [[248, "kedro_datasets.tracking.MetricsDataSet.DEFAULT_SAVE_ARGS"]], "metricsdataset (class in kedro_datasets.tracking)": [[248, "kedro_datasets.tracking.MetricsDataSet"]], "__init__() (kedro_datasets.tracking.metricsdataset method)": [[248, "kedro_datasets.tracking.MetricsDataSet.__init__"]], "exists() (kedro_datasets.tracking.metricsdataset method)": [[248, "kedro_datasets.tracking.MetricsDataSet.exists"]], "from_config() (kedro_datasets.tracking.metricsdataset class method)": [[248, "kedro_datasets.tracking.MetricsDataSet.from_config"]], "load() (kedro_datasets.tracking.metricsdataset method)": [[248, "kedro_datasets.tracking.MetricsDataSet.load"]], "release() (kedro_datasets.tracking.metricsdataset method)": [[248, "kedro_datasets.tracking.MetricsDataSet.release"]], "resolve_load_version() (kedro_datasets.tracking.metricsdataset method)": [[248, "kedro_datasets.tracking.MetricsDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.tracking.metricsdataset method)": [[248, "kedro_datasets.tracking.MetricsDataSet.resolve_save_version"]], "save() (kedro_datasets.tracking.metricsdataset method)": [[248, "kedro_datasets.tracking.MetricsDataSet.save"]], "versioned (kedro_datasets.tracking.metricsdataset attribute)": [[248, "kedro_datasets.tracking.MetricsDataSet.versioned"]], "videodataset (class in kedro_datasets.video)": [[249, "kedro_datasets.video.VideoDataSet"]], "__init__() (kedro_datasets.video.videodataset method)": [[249, "kedro_datasets.video.VideoDataSet.__init__"]], "exists() (kedro_datasets.video.videodataset method)": [[249, "kedro_datasets.video.VideoDataSet.exists"]], "from_config() (kedro_datasets.video.videodataset class method)": [[249, "kedro_datasets.video.VideoDataSet.from_config"]], "load() (kedro_datasets.video.videodataset method)": [[249, "kedro_datasets.video.VideoDataSet.load"]], "release() (kedro_datasets.video.videodataset method)": [[249, "kedro_datasets.video.VideoDataSet.release"]], "save() (kedro_datasets.video.videodataset method)": [[249, "kedro_datasets.video.VideoDataSet.save"]], "default_save_args (kedro_datasets.yaml.yamldataset attribute)": [[250, "kedro_datasets.yaml.YAMLDataSet.DEFAULT_SAVE_ARGS"]], "yamldataset (class in kedro_datasets.yaml)": [[250, "kedro_datasets.yaml.YAMLDataSet"]], "__init__() (kedro_datasets.yaml.yamldataset method)": [[250, "kedro_datasets.yaml.YAMLDataSet.__init__"]], "exists() (kedro_datasets.yaml.yamldataset method)": [[250, "kedro_datasets.yaml.YAMLDataSet.exists"]], "from_config() (kedro_datasets.yaml.yamldataset class method)": [[250, "kedro_datasets.yaml.YAMLDataSet.from_config"]], "load() (kedro_datasets.yaml.yamldataset method)": [[250, "kedro_datasets.yaml.YAMLDataSet.load"]], "release() (kedro_datasets.yaml.yamldataset method)": [[250, "kedro_datasets.yaml.YAMLDataSet.release"]], "resolve_load_version() (kedro_datasets.yaml.yamldataset method)": [[250, "kedro_datasets.yaml.YAMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.yaml.yamldataset method)": [[250, "kedro_datasets.yaml.YAMLDataSet.resolve_save_version"]], "save() (kedro_datasets.yaml.yamldataset method)": [[250, "kedro_datasets.yaml.YAMLDataSet.save"]]}})