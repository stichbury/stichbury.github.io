Search.setIndex({"docnames": ["configuration/advanced_configuration", "configuration/config_loader_migration", "configuration/configuration_basics", "configuration/credentials", "configuration/index", "configuration/parameters", "contribution/index", "contribution/technical_steering_committee", "data/advanced_data_catalog_usage", "data/data_catalog", "data/data_catalog_yaml_examples", "data/how_to_create_a_custom_dataset", "data/index", "data/kedro_dataset_factories", "data/partitioned_and_incremental_datasets", "deployment/airflow_astronomer", "deployment/amazon_sagemaker", "deployment/argo", "deployment/aws_batch", "deployment/aws_step_functions", "deployment/azure", "deployment/dask", "deployment/databricks/databricks_deployment_workflow", "deployment/databricks/databricks_ide_development_workflow", "deployment/databricks/databricks_notebooks_development_workflow", "deployment/databricks/databricks_visualisation", "deployment/databricks/index", "deployment/distributed", "deployment/index", "deployment/kubeflow", "deployment/prefect", "deployment/single_machine", "deployment/vertexai", "development/automated_testing", "development/commands_reference", "development/debugging", "development/index", "development/linting", "development/set_up_pycharm", "development/set_up_vscode", "experiment_tracking/index", "extend_kedro/common_use_cases", "extend_kedro/index", "extend_kedro/plugins", "faq/faq", "get_started/index", "get_started/install", "get_started/kedro_concepts", "get_started/new_project", "hooks/common_use_cases", "hooks/examples", "hooks/index", "hooks/introduction", "index", "integrations/pyspark_integration", "introduction/index", "introduction/introduction", "kedro", "kedro.KedroPythonVersionWarning", "kedro.config", "kedro.config.ConfigLoader", "kedro.config.MissingConfigException", "kedro.config.OmegaConfigLoader", "kedro.config.TemplatedConfigLoader", "kedro.extras", "kedro.extras.datasets", "kedro.extras.datasets.api.APIDataSet", "kedro.extras.datasets.biosequence.BioSequenceDataSet", "kedro.extras.datasets.dask.ParquetDataSet", "kedro.extras.datasets.email.EmailMessageDataSet", "kedro.extras.datasets.geopandas.GeoJSONDataSet", "kedro.extras.datasets.holoviews.HoloviewsWriter", "kedro.extras.datasets.json.JSONDataSet", "kedro.extras.datasets.matplotlib.MatplotlibWriter", "kedro.extras.datasets.networkx.GMLDataSet", "kedro.extras.datasets.networkx.GraphMLDataSet", "kedro.extras.datasets.networkx.JSONDataSet", "kedro.extras.datasets.pandas.CSVDataSet", "kedro.extras.datasets.pandas.ExcelDataSet", "kedro.extras.datasets.pandas.FeatherDataSet", "kedro.extras.datasets.pandas.GBQQueryDataSet", "kedro.extras.datasets.pandas.GBQTableDataSet", "kedro.extras.datasets.pandas.GenericDataSet", "kedro.extras.datasets.pandas.HDFDataSet", "kedro.extras.datasets.pandas.JSONDataSet", "kedro.extras.datasets.pandas.ParquetDataSet", "kedro.extras.datasets.pandas.SQLQueryDataSet", "kedro.extras.datasets.pandas.SQLTableDataSet", "kedro.extras.datasets.pandas.XMLDataSet", "kedro.extras.datasets.pickle.PickleDataSet", "kedro.extras.datasets.pillow.ImageDataSet", "kedro.extras.datasets.plotly.JSONDataSet", "kedro.extras.datasets.plotly.PlotlyDataSet", "kedro.extras.datasets.redis.PickleDataSet", "kedro.extras.datasets.spark.DeltaTableDataSet", "kedro.extras.datasets.spark.SparkDataSet", "kedro.extras.datasets.spark.SparkHiveDataSet", "kedro.extras.datasets.spark.SparkJDBCDataSet", "kedro.extras.datasets.svmlight.SVMLightDataSet", "kedro.extras.datasets.tensorflow.TensorFlowModelDataset", "kedro.extras.datasets.text.TextDataSet", "kedro.extras.datasets.tracking.JSONDataSet", "kedro.extras.datasets.tracking.MetricsDataSet", "kedro.extras.datasets.yaml.YAMLDataSet", "kedro.extras.extensions", "kedro.extras.extensions.ipython", "kedro.extras.logging", "kedro.extras.logging.color_logger", "kedro.extras.logging.color_logger.ColorHandler", "kedro.framework", "kedro.framework.cli", "kedro.framework.cli.catalog", "kedro.framework.cli.cli", "kedro.framework.cli.cli.KedroCLI", "kedro.framework.cli.cli.main", "kedro.framework.cli.hooks", "kedro.framework.cli.hooks.manager", "kedro.framework.cli.hooks.manager.CLIHooksManager", "kedro.framework.cli.hooks.manager.get_cli_hook_manager", "kedro.framework.cli.hooks.markers", "kedro.framework.cli.hooks.specs", "kedro.framework.cli.hooks.specs.CLICommandSpecs", "kedro.framework.cli.jupyter", "kedro.framework.cli.jupyter.JupyterCommandGroup", "kedro.framework.cli.micropkg", "kedro.framework.cli.micropkg.safe_extract", "kedro.framework.cli.pipeline", "kedro.framework.cli.pipeline.PipelineArtifacts", "kedro.framework.cli.project", "kedro.framework.cli.registry", "kedro.framework.cli.starters", "kedro.framework.cli.starters.KedroStarterSpec", "kedro.framework.cli.utils", "kedro.framework.cli.utils.CommandCollection", "kedro.framework.cli.utils.KedroCliError", "kedro.framework.cli.utils.command_with_verbosity", "kedro.framework.cli.utils.env_option", "kedro.framework.cli.utils.find_stylesheets", "kedro.framework.cli.utils.forward_command", "kedro.framework.cli.utils.get_pkg_version", "kedro.framework.cli.utils.python_call", "kedro.framework.cli.utils.split_string", "kedro.framework.context", "kedro.framework.context.KedroContext", "kedro.framework.context.KedroContextError", "kedro.framework.hooks", "kedro.framework.hooks.manager", "kedro.framework.hooks.markers", "kedro.framework.hooks.specs", "kedro.framework.hooks.specs.DataCatalogSpecs", "kedro.framework.hooks.specs.DatasetSpecs", "kedro.framework.hooks.specs.KedroContextSpecs", "kedro.framework.hooks.specs.NodeSpecs", "kedro.framework.hooks.specs.PipelineSpecs", "kedro.framework.project", "kedro.framework.project.configure_logging", "kedro.framework.project.configure_project", "kedro.framework.project.find_pipelines", "kedro.framework.project.validate_settings", "kedro.framework.session", "kedro.framework.session.session", "kedro.framework.session.session.KedroSession", "kedro.framework.session.session.KedroSessionError", "kedro.framework.session.shelvestore", "kedro.framework.session.shelvestore.ShelveStore", "kedro.framework.session.store", "kedro.framework.session.store.BaseSessionStore", "kedro.framework.startup", "kedro.framework.startup.ProjectMetadata", "kedro.framework.startup.bootstrap_project", "kedro.io", "kedro.io.AbstractDataSet", "kedro.io.AbstractVersionedDataSet", "kedro.io.CachedDataSet", "kedro.io.DataCatalog", "kedro.io.DataSetAlreadyExistsError", "kedro.io.DataSetError", "kedro.io.DataSetNotFoundError", "kedro.io.IncrementalDataSet", "kedro.io.LambdaDataSet", "kedro.io.MemoryDataSet", "kedro.io.PartitionedDataSet", "kedro.io.Version", "kedro.ipython", "kedro.ipython.load_ipython_extension", "kedro.ipython.magic_reload_kedro", "kedro.ipython.reload_kedro", "kedro.logging", "kedro.logging.RichHandler", "kedro.pipeline", "kedro.pipeline.Pipeline", "kedro.pipeline.modular_pipeline.ModularPipelineError", "kedro.pipeline.modular_pipeline.pipeline", "kedro.pipeline.node", "kedro.pipeline.node.Node", "kedro.runner", "kedro.runner.AbstractRunner", "kedro.runner.ParallelRunner", "kedro.runner.SequentialRunner", "kedro.runner.ThreadRunner", "kedro.runner.run_node", "kedro.utils", "kedro.utils.load_obj", "kedro_datasets", "kedro_datasets.api.APIDataSet", "kedro_datasets.biosequence.BioSequenceDataSet", "kedro_datasets.dask.ParquetDataSet", "kedro_datasets.databricks.ManagedTableDataSet", "kedro_datasets.email.EmailMessageDataSet", "kedro_datasets.geopandas.GeoJSONDataSet", "kedro_datasets.holoviews.HoloviewsWriter", "kedro_datasets.json.JSONDataSet", "kedro_datasets.matplotlib.MatplotlibWriter", "kedro_datasets.networkx.GMLDataSet", "kedro_datasets.networkx.GraphMLDataSet", "kedro_datasets.networkx.JSONDataSet", "kedro_datasets.pandas.CSVDataSet", "kedro_datasets.pandas.DeltaTableDataSet", "kedro_datasets.pandas.ExcelDataSet", "kedro_datasets.pandas.FeatherDataSet", "kedro_datasets.pandas.GBQQueryDataSet", "kedro_datasets.pandas.GBQTableDataSet", "kedro_datasets.pandas.GenericDataSet", "kedro_datasets.pandas.HDFDataSet", "kedro_datasets.pandas.JSONDataSet", "kedro_datasets.pandas.ParquetDataSet", "kedro_datasets.pandas.SQLQueryDataSet", "kedro_datasets.pandas.SQLTableDataSet", "kedro_datasets.pandas.XMLDataSet", "kedro_datasets.pickle.PickleDataSet", "kedro_datasets.pillow.ImageDataSet", "kedro_datasets.plotly.JSONDataSet", "kedro_datasets.plotly.PlotlyDataSet", "kedro_datasets.polars.CSVDataSet", "kedro_datasets.redis.PickleDataSet", "kedro_datasets.snowflake.SnowparkTableDataSet", "kedro_datasets.spark.DeltaTableDataSet", "kedro_datasets.spark.SparkDataSet", "kedro_datasets.spark.SparkHiveDataSet", "kedro_datasets.spark.SparkJDBCDataSet", "kedro_datasets.spark.SparkStreamingDataSet", "kedro_datasets.svmlight.SVMLightDataSet", "kedro_datasets.tensorflow.TensorFlowModelDataSet", "kedro_datasets.text.TextDataSet", "kedro_datasets.tracking.JSONDataSet", "kedro_datasets.tracking.MetricsDataSet", "kedro_datasets.video.VideoDataSet", "kedro_datasets.yaml.YAMLDataSet", "kedro_project_setup/dependencies", "kedro_project_setup/index", "kedro_project_setup/session", "kedro_project_setup/settings", "kedro_project_setup/starters", "logging/index", "logging/logging", "nodes_and_pipelines/index", "nodes_and_pipelines/micro_packaging", "nodes_and_pipelines/modular_pipelines", "nodes_and_pipelines/nodes", "nodes_and_pipelines/pipeline_introduction", "nodes_and_pipelines/pipeline_registry", "nodes_and_pipelines/run_a_pipeline", "nodes_and_pipelines/slice_a_pipeline", "notebooks_and_ipython/index", "notebooks_and_ipython/kedro_and_notebooks", "notebooks_and_ipython/kedro_as_a_data_registry", "resources/glossary", "resources/index", "tutorial/add_another_pipeline", "tutorial/create_a_pipeline", "tutorial/package_a_project", "tutorial/set_up_data", "tutorial/spaceflights_tutorial", "tutorial/spaceflights_tutorial_faqs", "tutorial/tutorial_template", "visualisation/index", "visualisation/kedro-viz_visualisation", "visualisation/preview_datasets", "visualisation/visualise_charts_with_plotly"], "filenames": ["configuration/advanced_configuration.md", "configuration/config_loader_migration.md", "configuration/configuration_basics.md", "configuration/credentials.md", "configuration/index.md", "configuration/parameters.md", "contribution/index.md", "contribution/technical_steering_committee.md", "data/advanced_data_catalog_usage.md", "data/data_catalog.md", "data/data_catalog_yaml_examples.md", "data/how_to_create_a_custom_dataset.md", "data/index.md", "data/kedro_dataset_factories.md", "data/partitioned_and_incremental_datasets.md", "deployment/airflow_astronomer.md", "deployment/amazon_sagemaker.md", "deployment/argo.md", "deployment/aws_batch.md", "deployment/aws_step_functions.md", "deployment/azure.md", "deployment/dask.md", "deployment/databricks/databricks_deployment_workflow.md", "deployment/databricks/databricks_ide_development_workflow.md", "deployment/databricks/databricks_notebooks_development_workflow.md", "deployment/databricks/databricks_visualisation.md", "deployment/databricks/index.md", "deployment/distributed.md", "deployment/index.md", "deployment/kubeflow.md", "deployment/prefect.md", "deployment/single_machine.md", "deployment/vertexai.md", "development/automated_testing.md", "development/commands_reference.md", "development/debugging.md", "development/index.md", "development/linting.md", "development/set_up_pycharm.md", "development/set_up_vscode.md", "experiment_tracking/index.md", "extend_kedro/common_use_cases.md", "extend_kedro/index.md", "extend_kedro/plugins.md", "faq/faq.md", "get_started/index.md", "get_started/install.md", "get_started/kedro_concepts.md", "get_started/new_project.md", "hooks/common_use_cases.md", "hooks/examples.md", "hooks/index.md", "hooks/introduction.md", "index.rst", "integrations/pyspark_integration.md", "introduction/index.md", "introduction/introduction.md", "kedro.rst", "kedro.KedroPythonVersionWarning.rst", "kedro.config.rst", "kedro.config.ConfigLoader.rst", "kedro.config.MissingConfigException.rst", "kedro.config.OmegaConfigLoader.rst", "kedro.config.TemplatedConfigLoader.rst", "kedro.extras.rst", "kedro.extras.datasets.rst", "kedro.extras.datasets.api.APIDataSet.rst", "kedro.extras.datasets.biosequence.BioSequenceDataSet.rst", "kedro.extras.datasets.dask.ParquetDataSet.rst", "kedro.extras.datasets.email.EmailMessageDataSet.rst", "kedro.extras.datasets.geopandas.GeoJSONDataSet.rst", "kedro.extras.datasets.holoviews.HoloviewsWriter.rst", "kedro.extras.datasets.json.JSONDataSet.rst", "kedro.extras.datasets.matplotlib.MatplotlibWriter.rst", "kedro.extras.datasets.networkx.GMLDataSet.rst", "kedro.extras.datasets.networkx.GraphMLDataSet.rst", "kedro.extras.datasets.networkx.JSONDataSet.rst", "kedro.extras.datasets.pandas.CSVDataSet.rst", "kedro.extras.datasets.pandas.ExcelDataSet.rst", "kedro.extras.datasets.pandas.FeatherDataSet.rst", "kedro.extras.datasets.pandas.GBQQueryDataSet.rst", "kedro.extras.datasets.pandas.GBQTableDataSet.rst", "kedro.extras.datasets.pandas.GenericDataSet.rst", "kedro.extras.datasets.pandas.HDFDataSet.rst", "kedro.extras.datasets.pandas.JSONDataSet.rst", "kedro.extras.datasets.pandas.ParquetDataSet.rst", "kedro.extras.datasets.pandas.SQLQueryDataSet.rst", "kedro.extras.datasets.pandas.SQLTableDataSet.rst", "kedro.extras.datasets.pandas.XMLDataSet.rst", "kedro.extras.datasets.pickle.PickleDataSet.rst", "kedro.extras.datasets.pillow.ImageDataSet.rst", "kedro.extras.datasets.plotly.JSONDataSet.rst", "kedro.extras.datasets.plotly.PlotlyDataSet.rst", "kedro.extras.datasets.redis.PickleDataSet.rst", "kedro.extras.datasets.spark.DeltaTableDataSet.rst", "kedro.extras.datasets.spark.SparkDataSet.rst", "kedro.extras.datasets.spark.SparkHiveDataSet.rst", "kedro.extras.datasets.spark.SparkJDBCDataSet.rst", "kedro.extras.datasets.svmlight.SVMLightDataSet.rst", "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.rst", "kedro.extras.datasets.text.TextDataSet.rst", "kedro.extras.datasets.tracking.JSONDataSet.rst", "kedro.extras.datasets.tracking.MetricsDataSet.rst", "kedro.extras.datasets.yaml.YAMLDataSet.rst", "kedro.extras.extensions.rst", "kedro.extras.extensions.ipython.rst", "kedro.extras.logging.rst", "kedro.extras.logging.color_logger.rst", "kedro.extras.logging.color_logger.ColorHandler.rst", "kedro.framework.rst", "kedro.framework.cli.rst", "kedro.framework.cli.catalog.rst", "kedro.framework.cli.cli.rst", "kedro.framework.cli.cli.KedroCLI.rst", "kedro.framework.cli.cli.main.rst", "kedro.framework.cli.hooks.rst", "kedro.framework.cli.hooks.manager.rst", "kedro.framework.cli.hooks.manager.CLIHooksManager.rst", "kedro.framework.cli.hooks.manager.get_cli_hook_manager.rst", "kedro.framework.cli.hooks.markers.rst", "kedro.framework.cli.hooks.specs.rst", "kedro.framework.cli.hooks.specs.CLICommandSpecs.rst", "kedro.framework.cli.jupyter.rst", "kedro.framework.cli.jupyter.JupyterCommandGroup.rst", "kedro.framework.cli.micropkg.rst", "kedro.framework.cli.micropkg.safe_extract.rst", "kedro.framework.cli.pipeline.rst", "kedro.framework.cli.pipeline.PipelineArtifacts.rst", "kedro.framework.cli.project.rst", "kedro.framework.cli.registry.rst", "kedro.framework.cli.starters.rst", "kedro.framework.cli.starters.KedroStarterSpec.rst", "kedro.framework.cli.utils.rst", "kedro.framework.cli.utils.CommandCollection.rst", "kedro.framework.cli.utils.KedroCliError.rst", "kedro.framework.cli.utils.command_with_verbosity.rst", "kedro.framework.cli.utils.env_option.rst", "kedro.framework.cli.utils.find_stylesheets.rst", "kedro.framework.cli.utils.forward_command.rst", "kedro.framework.cli.utils.get_pkg_version.rst", "kedro.framework.cli.utils.python_call.rst", "kedro.framework.cli.utils.split_string.rst", "kedro.framework.context.rst", "kedro.framework.context.KedroContext.rst", "kedro.framework.context.KedroContextError.rst", "kedro.framework.hooks.rst", "kedro.framework.hooks.manager.rst", "kedro.framework.hooks.markers.rst", "kedro.framework.hooks.specs.rst", "kedro.framework.hooks.specs.DataCatalogSpecs.rst", "kedro.framework.hooks.specs.DatasetSpecs.rst", "kedro.framework.hooks.specs.KedroContextSpecs.rst", "kedro.framework.hooks.specs.NodeSpecs.rst", "kedro.framework.hooks.specs.PipelineSpecs.rst", "kedro.framework.project.rst", "kedro.framework.project.configure_logging.rst", "kedro.framework.project.configure_project.rst", "kedro.framework.project.find_pipelines.rst", "kedro.framework.project.validate_settings.rst", "kedro.framework.session.rst", "kedro.framework.session.session.rst", "kedro.framework.session.session.KedroSession.rst", "kedro.framework.session.session.KedroSessionError.rst", "kedro.framework.session.shelvestore.rst", "kedro.framework.session.shelvestore.ShelveStore.rst", "kedro.framework.session.store.rst", "kedro.framework.session.store.BaseSessionStore.rst", "kedro.framework.startup.rst", "kedro.framework.startup.ProjectMetadata.rst", "kedro.framework.startup.bootstrap_project.rst", "kedro.io.rst", "kedro.io.AbstractDataSet.rst", "kedro.io.AbstractVersionedDataSet.rst", "kedro.io.CachedDataSet.rst", "kedro.io.DataCatalog.rst", "kedro.io.DataSetAlreadyExistsError.rst", "kedro.io.DataSetError.rst", "kedro.io.DataSetNotFoundError.rst", "kedro.io.IncrementalDataSet.rst", "kedro.io.LambdaDataSet.rst", "kedro.io.MemoryDataSet.rst", "kedro.io.PartitionedDataSet.rst", "kedro.io.Version.rst", "kedro.ipython.rst", "kedro.ipython.load_ipython_extension.rst", "kedro.ipython.magic_reload_kedro.rst", "kedro.ipython.reload_kedro.rst", "kedro.logging.rst", "kedro.logging.RichHandler.rst", "kedro.pipeline.rst", "kedro.pipeline.Pipeline.rst", "kedro.pipeline.modular_pipeline.ModularPipelineError.rst", "kedro.pipeline.modular_pipeline.pipeline.rst", "kedro.pipeline.node.rst", "kedro.pipeline.node.Node.rst", "kedro.runner.rst", "kedro.runner.AbstractRunner.rst", "kedro.runner.ParallelRunner.rst", "kedro.runner.SequentialRunner.rst", "kedro.runner.ThreadRunner.rst", "kedro.runner.run_node.rst", "kedro.utils.rst", "kedro.utils.load_obj.rst", "kedro_datasets.rst", "kedro_datasets.api.APIDataSet.rst", "kedro_datasets.biosequence.BioSequenceDataSet.rst", "kedro_datasets.dask.ParquetDataSet.rst", "kedro_datasets.databricks.ManagedTableDataSet.rst", "kedro_datasets.email.EmailMessageDataSet.rst", "kedro_datasets.geopandas.GeoJSONDataSet.rst", "kedro_datasets.holoviews.HoloviewsWriter.rst", "kedro_datasets.json.JSONDataSet.rst", "kedro_datasets.matplotlib.MatplotlibWriter.rst", "kedro_datasets.networkx.GMLDataSet.rst", "kedro_datasets.networkx.GraphMLDataSet.rst", "kedro_datasets.networkx.JSONDataSet.rst", "kedro_datasets.pandas.CSVDataSet.rst", "kedro_datasets.pandas.DeltaTableDataSet.rst", "kedro_datasets.pandas.ExcelDataSet.rst", "kedro_datasets.pandas.FeatherDataSet.rst", "kedro_datasets.pandas.GBQQueryDataSet.rst", "kedro_datasets.pandas.GBQTableDataSet.rst", "kedro_datasets.pandas.GenericDataSet.rst", "kedro_datasets.pandas.HDFDataSet.rst", "kedro_datasets.pandas.JSONDataSet.rst", "kedro_datasets.pandas.ParquetDataSet.rst", "kedro_datasets.pandas.SQLQueryDataSet.rst", "kedro_datasets.pandas.SQLTableDataSet.rst", "kedro_datasets.pandas.XMLDataSet.rst", "kedro_datasets.pickle.PickleDataSet.rst", "kedro_datasets.pillow.ImageDataSet.rst", "kedro_datasets.plotly.JSONDataSet.rst", "kedro_datasets.plotly.PlotlyDataSet.rst", "kedro_datasets.polars.CSVDataSet.rst", "kedro_datasets.redis.PickleDataSet.rst", "kedro_datasets.snowflake.SnowparkTableDataSet.rst", "kedro_datasets.spark.DeltaTableDataSet.rst", "kedro_datasets.spark.SparkDataSet.rst", "kedro_datasets.spark.SparkHiveDataSet.rst", "kedro_datasets.spark.SparkJDBCDataSet.rst", "kedro_datasets.spark.SparkStreamingDataSet.rst", "kedro_datasets.svmlight.SVMLightDataSet.rst", "kedro_datasets.tensorflow.TensorFlowModelDataSet.rst", "kedro_datasets.text.TextDataSet.rst", "kedro_datasets.tracking.JSONDataSet.rst", "kedro_datasets.tracking.MetricsDataSet.rst", "kedro_datasets.video.VideoDataSet.rst", "kedro_datasets.yaml.YAMLDataSet.rst", "kedro_project_setup/dependencies.md", "kedro_project_setup/index.md", "kedro_project_setup/session.md", "kedro_project_setup/settings.md", "kedro_project_setup/starters.md", "logging/index.md", "logging/logging.md", "nodes_and_pipelines/index.md", "nodes_and_pipelines/micro_packaging.md", "nodes_and_pipelines/modular_pipelines.md", "nodes_and_pipelines/nodes.md", "nodes_and_pipelines/pipeline_introduction.md", "nodes_and_pipelines/pipeline_registry.md", "nodes_and_pipelines/run_a_pipeline.md", "nodes_and_pipelines/slice_a_pipeline.md", "notebooks_and_ipython/index.md", "notebooks_and_ipython/kedro_and_notebooks.md", "notebooks_and_ipython/kedro_as_a_data_registry.md", "resources/glossary.md", "resources/index.md", "tutorial/add_another_pipeline.md", "tutorial/create_a_pipeline.md", "tutorial/package_a_project.md", "tutorial/set_up_data.md", "tutorial/spaceflights_tutorial.md", "tutorial/spaceflights_tutorial_faqs.md", "tutorial/tutorial_template.md", "visualisation/index.md", "visualisation/kedro-viz_visualisation.md", "visualisation/preview_datasets.md", "visualisation/visualise_charts_with_plotly.md"], "titles": ["Advanced configuration", "Migration guide for config loaders", "Configuration", "Credentials", "Configuration", "Parameters", "Contribute to Kedro", "Kedro\u2019s Technical Steering Committee", "Advanced: Access the Data Catalog in code", "Introduction to the Data Catalog", "Data Catalog YAML examples", "Advanced: Tutorial to create a custom dataset", "The Kedro Data Catalog", "Kedro dataset factories", "Advanced: Partitioned and incremental datasets", "Apache Airflow", "Amazon SageMaker", "Argo Workflows (outdated documentation that needs review)", "AWS Batch (outdated documentation that needs review)", "AWS Step Functions", "Azure ML pipelines", "Dask", "Use a Databricks job to deploy a Kedro project", "Use an IDE, dbx and Databricks Repos to develop a Kedro project", "Use a Databricks workspace to develop a Kedro project", "Visualise a Kedro project in Databricks notebooks", "Databricks", "Distributed deployment", "Deployment", "Kubeflow Pipelines", "Prefect", "Single-machine deployment", "VertexAI", "Automated Testing", "Kedro\u2019s command line interface", "Debugging", "Development", "Code formatting and linting", "Set up PyCharm", "Set up Visual Studio Code", "Experiment tracking in Kedro-Viz", "Common use cases", "Extend Kedro", "Kedro plugins", "FAQs", "First steps", "Set up Kedro", "Kedro concepts", "Create a new Kedro project", "Common use cases", "Hooks examples", "Hooks", "Hooks", "Welcome to Kedro\u2019s documentation!", "PySpark integration", "Introduction to Kedro", "Learn how to use Kedro", "kedro", "kedro.KedroPythonVersionWarning", "kedro.config", "kedro.config.ConfigLoader", "kedro.config.MissingConfigException", "kedro.config.OmegaConfigLoader", "kedro.config.TemplatedConfigLoader", "kedro.extras", "kedro.extras.datasets", "kedro.extras.datasets.api.APIDataSet", "kedro.extras.datasets.biosequence.BioSequenceDataSet", "kedro.extras.datasets.dask.ParquetDataSet", "kedro.extras.datasets.email.EmailMessageDataSet", "kedro.extras.datasets.geopandas.GeoJSONDataSet", "kedro.extras.datasets.holoviews.HoloviewsWriter", "kedro.extras.datasets.json.JSONDataSet", "kedro.extras.datasets.matplotlib.MatplotlibWriter", "kedro.extras.datasets.networkx.GMLDataSet", "kedro.extras.datasets.networkx.GraphMLDataSet", "kedro.extras.datasets.networkx.JSONDataSet", "kedro.extras.datasets.pandas.CSVDataSet", "kedro.extras.datasets.pandas.ExcelDataSet", "kedro.extras.datasets.pandas.FeatherDataSet", "kedro.extras.datasets.pandas.GBQQueryDataSet", "kedro.extras.datasets.pandas.GBQTableDataSet", "kedro.extras.datasets.pandas.GenericDataSet", "kedro.extras.datasets.pandas.HDFDataSet", "kedro.extras.datasets.pandas.JSONDataSet", "kedro.extras.datasets.pandas.ParquetDataSet", "kedro.extras.datasets.pandas.SQLQueryDataSet", "kedro.extras.datasets.pandas.SQLTableDataSet", "kedro.extras.datasets.pandas.XMLDataSet", "kedro.extras.datasets.pickle.PickleDataSet", "kedro.extras.datasets.pillow.ImageDataSet", "kedro.extras.datasets.plotly.JSONDataSet", "kedro.extras.datasets.plotly.PlotlyDataSet", "kedro.extras.datasets.redis.PickleDataSet", "kedro.extras.datasets.spark.DeltaTableDataSet", "kedro.extras.datasets.spark.SparkDataSet", "kedro.extras.datasets.spark.SparkHiveDataSet", "kedro.extras.datasets.spark.SparkJDBCDataSet", "kedro.extras.datasets.svmlight.SVMLightDataSet", "kedro.extras.datasets.tensorflow.TensorFlowModelDataset", "kedro.extras.datasets.text.TextDataSet", "kedro.extras.datasets.tracking.JSONDataSet", "kedro.extras.datasets.tracking.MetricsDataSet", "kedro.extras.datasets.yaml.YAMLDataSet", "kedro.extras.extensions", "kedro.extras.extensions.ipython", "kedro.extras.logging", "kedro.extras.logging.color_logger", "kedro.extras.logging.color_logger.ColorHandler", "kedro.framework", "kedro.framework.cli", "kedro.framework.cli.catalog", "kedro.framework.cli.cli", "kedro.framework.cli.cli.KedroCLI", "kedro.framework.cli.cli.main", "kedro.framework.cli.hooks", "kedro.framework.cli.hooks.manager", "kedro.framework.cli.hooks.manager.CLIHooksManager", "kedro.framework.cli.hooks.manager.get_cli_hook_manager", "kedro.framework.cli.hooks.markers", "kedro.framework.cli.hooks.specs", "kedro.framework.cli.hooks.specs.CLICommandSpecs", "kedro.framework.cli.jupyter", "kedro.framework.cli.jupyter.JupyterCommandGroup", "kedro.framework.cli.micropkg", "kedro.framework.cli.micropkg.safe_extract", "kedro.framework.cli.pipeline", "kedro.framework.cli.pipeline.PipelineArtifacts", "kedro.framework.cli.project", "kedro.framework.cli.registry", "kedro.framework.cli.starters", "kedro.framework.cli.starters.KedroStarterSpec", "kedro.framework.cli.utils", "kedro.framework.cli.utils.CommandCollection", "kedro.framework.cli.utils.KedroCliError", "kedro.framework.cli.utils.command_with_verbosity", "kedro.framework.cli.utils.env_option", "kedro.framework.cli.utils.find_stylesheets", "kedro.framework.cli.utils.forward_command", "kedro.framework.cli.utils.get_pkg_version", "kedro.framework.cli.utils.python_call", "kedro.framework.cli.utils.split_string", "kedro.framework.context", "kedro.framework.context.KedroContext", "kedro.framework.context.KedroContextError", "kedro.framework.hooks", "kedro.framework.hooks.manager", "kedro.framework.hooks.markers", "kedro.framework.hooks.specs", "kedro.framework.hooks.specs.DataCatalogSpecs", "kedro.framework.hooks.specs.DatasetSpecs", "kedro.framework.hooks.specs.KedroContextSpecs", "kedro.framework.hooks.specs.NodeSpecs", "kedro.framework.hooks.specs.PipelineSpecs", "kedro.framework.project", "kedro.framework.project.configure_logging", "kedro.framework.project.configure_project", "kedro.framework.project.find_pipelines", "kedro.framework.project.validate_settings", "kedro.framework.session", "kedro.framework.session.session", "kedro.framework.session.session.KedroSession", "kedro.framework.session.session.KedroSessionError", "kedro.framework.session.shelvestore", "kedro.framework.session.shelvestore.ShelveStore", "kedro.framework.session.store", "kedro.framework.session.store.BaseSessionStore", "kedro.framework.startup", "kedro.framework.startup.ProjectMetadata", "kedro.framework.startup.bootstrap_project", "kedro.io", "kedro.io.AbstractDataSet", "kedro.io.AbstractVersionedDataSet", "kedro.io.CachedDataSet", "kedro.io.DataCatalog", "kedro.io.DataSetAlreadyExistsError", "kedro.io.DataSetError", "kedro.io.DataSetNotFoundError", "kedro.io.IncrementalDataSet", "kedro.io.LambdaDataSet", "kedro.io.MemoryDataSet", "kedro.io.PartitionedDataSet", "kedro.io.Version", "kedro.ipython", "kedro.ipython.load_ipython_extension", "kedro.ipython.magic_reload_kedro", "kedro.ipython.reload_kedro", "kedro.logging", "kedro.logging.RichHandler", "kedro.pipeline", "kedro.pipeline.Pipeline", "kedro.pipeline.modular_pipeline.ModularPipelineError", "kedro.pipeline.modular_pipeline.pipeline", "kedro.pipeline.node", "kedro.pipeline.node.Node", "kedro.runner", "kedro.runner.AbstractRunner", "kedro.runner.ParallelRunner", "kedro.runner.SequentialRunner", "kedro.runner.ThreadRunner", "kedro.runner.run_node", "kedro.utils", "kedro.utils.load_obj", "kedro_datasets", "kedro_datasets.api.APIDataSet", "kedro_datasets.biosequence.BioSequenceDataSet", "kedro_datasets.dask.ParquetDataSet", "kedro_datasets.databricks.ManagedTableDataSet", "kedro_datasets.email.EmailMessageDataSet", "kedro_datasets.geopandas.GeoJSONDataSet", "kedro_datasets.holoviews.HoloviewsWriter", "kedro_datasets.json.JSONDataSet", "kedro_datasets.matplotlib.MatplotlibWriter", "kedro_datasets.networkx.GMLDataSet", "kedro_datasets.networkx.GraphMLDataSet", "kedro_datasets.networkx.JSONDataSet", "kedro_datasets.pandas.CSVDataSet", "kedro_datasets.pandas.DeltaTableDataSet", "kedro_datasets.pandas.ExcelDataSet", "kedro_datasets.pandas.FeatherDataSet", "kedro_datasets.pandas.GBQQueryDataSet", "kedro_datasets.pandas.GBQTableDataSet", "kedro_datasets.pandas.GenericDataSet", "kedro_datasets.pandas.HDFDataSet", "kedro_datasets.pandas.JSONDataSet", "kedro_datasets.pandas.ParquetDataSet", "kedro_datasets.pandas.SQLQueryDataSet", "kedro_datasets.pandas.SQLTableDataSet", "kedro_datasets.pandas.XMLDataSet", "kedro_datasets.pickle.PickleDataSet", "kedro_datasets.pillow.ImageDataSet", "kedro_datasets.plotly.JSONDataSet", "kedro_datasets.plotly.PlotlyDataSet", "kedro_datasets.polars.CSVDataSet", "kedro_datasets.redis.PickleDataSet", "kedro_datasets.snowflake.SnowparkTableDataSet", "kedro_datasets.spark.DeltaTableDataSet", "kedro_datasets.spark.SparkDataSet", "kedro_datasets.spark.SparkHiveDataSet", "kedro_datasets.spark.SparkJDBCDataSet", "kedro_datasets.spark.SparkStreamingDataSet", "kedro_datasets.svmlight.SVMLightDataSet", "kedro_datasets.tensorflow.TensorFlowModelDataSet", "kedro_datasets.text.TextDataSet", "kedro_datasets.tracking.JSONDataSet", "kedro_datasets.tracking.MetricsDataSet", "kedro_datasets.video.VideoDataSet", "kedro_datasets.yaml.YAMLDataSet", "Dependencies", "Kedro project setup", "Lifecycle management with <code class=\"docutils literal notranslate\"><span class=\"pre\">KedroSession</span></code>", "Project settings", "Kedro starters", "Logging", "Default framework-side logging configuration", "Nodes and pipelines", "Micro-packaging", "Modular pipelines", "Nodes", "Pipelines", "The pipeline registry", "Run a pipeline", "Slice a pipeline", "Kedro for notebook users", "Kedro and Jupyter Notebooks", "Kedro as a data registry", "Kedro glossary", "FAQs and resources", "Create a data science pipeline", "Create a data processing pipeline", "Package an entire Kedro project", "Set up the data", "Next steps: Tutorial", "Spaceflights tutorial FAQs", "Set up the spaceflights project", "Visualisation with Kedro-Viz", "Visualise the spaceflights project", "Preview data in Kedro-Viz", "Visualise charts in Kedro-Viz"], "terms": {"The": [0, 1, 2, 3, 5, 7, 8, 10, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 33, 34, 35, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 52, 53, 54, 56, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 99, 100, 101, 102, 103, 105, 108, 121, 134, 143, 149, 150, 151, 152, 153, 161, 174, 185, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278], "document": [0, 2, 3, 6, 8, 9, 10, 11, 15, 16, 20, 21, 22, 23, 26, 28, 29, 30, 32, 33, 37, 39, 41, 43, 47, 48, 49, 50, 52, 54, 56, 65, 69, 74, 75, 76, 95, 119, 120, 137, 147, 148, 208, 213, 214, 215, 237, 240, 248, 251, 252, 254, 257, 258, 261, 262, 264, 266, 268, 269, 271, 272, 273, 274, 276, 277, 278], "describ": [0, 2, 3, 7, 8, 11, 12, 15, 22, 31, 38, 39, 40, 43, 50, 52, 190, 252, 258, 259, 261, 262, 266, 268, 270, 276, 277, 278], "satisfi": [0, 14, 21, 62, 89, 93, 196, 197, 198, 199, 229, 234], "most": [0, 1, 2, 8, 33, 41, 44, 46, 47, 252, 254, 261, 273, 274], "common": [0, 2, 7, 10, 42, 44, 51, 53, 252, 254, 266], "requir": [0, 2, 3, 8, 9, 10, 11, 14, 15, 17, 19, 21, 22, 23, 24, 26, 27, 30, 31, 33, 34, 37, 38, 40, 41, 44, 47, 48, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 139, 157, 169, 190, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 254, 256, 257, 261, 262, 266, 268, 269, 273, 274, 276, 278], "standard": [0, 2, 7, 14, 30, 37, 41, 46, 48, 69, 86, 208, 226, 251, 253, 254, 258, 269, 275], "project": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 19, 21, 26, 27, 28, 30, 33, 35, 37, 38, 39, 45, 52, 54, 56, 57, 60, 62, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 98, 99, 100, 101, 102, 103, 108, 112, 121, 130, 142, 143, 144, 159, 160, 161, 167, 168, 169, 185, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 241, 242, 243, 244, 245, 246, 247, 250, 252, 253, 256, 257, 260, 261, 263, 264, 265, 266, 273, 275, 277, 278], "By": [0, 2, 5, 9, 13, 22, 23, 40, 47, 54, 157, 251, 252, 254, 256, 261, 268, 276], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 112, 127, 130, 131, 143, 149, 150, 151, 158, 161, 163, 164, 166, 168, 170, 174, 182, 184, 185, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 272, 275, 276, 277, 278], "setup": [0, 3, 8, 11, 15, 17, 19, 26, 27, 30, 31, 34, 35, 36, 43, 45, 47, 48, 52, 53, 54, 56, 131, 157, 190, 252, 257, 264, 265, 266, 268, 269, 272, 276, 277, 278], "configload": [0, 2, 3, 5, 33, 63, 143, 158, 251], "class": [0, 1, 2, 3, 5, 9, 10, 11, 12, 14, 18, 19, 21, 33, 35, 43, 47, 48, 49, 50, 52, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 120, 121, 122, 123, 126, 127, 130, 131, 132, 133, 134, 142, 143, 144, 148, 149, 150, 151, 152, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 174, 182, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 254, 257, 258, 261, 266, 269], "also": [0, 1, 5, 8, 9, 10, 11, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 28, 31, 34, 37, 38, 39, 40, 43, 46, 48, 49, 52, 54, 56, 60, 62, 63, 68, 85, 93, 96, 204, 206, 207, 217, 225, 226, 234, 238, 248, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 264, 266, 268, 270, 271, 272, 274, 278], "two": [0, 2, 8, 9, 11, 13, 14, 17, 22, 24, 34, 40, 43, 47, 48, 62, 204, 217, 252, 253, 254, 257, 258, 259, 264, 268, 269, 270, 271, 277, 278], "addit": [0, 7, 11, 21, 22, 33, 43, 44, 52, 68, 85, 143, 157, 174, 204, 206, 217, 225, 226, 248, 251, 254, 256, 270, 271, 272, 274], "loader": [0, 2, 3, 4, 5, 8, 9, 17, 49, 53, 54], "more": [0, 2, 3, 5, 9, 11, 12, 14, 17, 18, 19, 21, 33, 34, 37, 38, 39, 43, 46, 47, 49, 52, 54, 56, 62, 63, 66, 73, 119, 120, 147, 148, 157, 158, 161, 174, 185, 190, 194, 204, 212, 246, 248, 252, 254, 257, 259, 261, 266, 268, 269, 270], "function": [0, 5, 8, 11, 14, 18, 21, 28, 30, 32, 33, 34, 40, 41, 43, 44, 46, 47, 49, 54, 59, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 112, 116, 122, 124, 132, 133, 136, 142, 143, 146, 154, 157, 167, 170, 174, 183, 184, 186, 189, 190, 193, 194, 195, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 256, 257, 259, 260, 261, 265, 266, 268, 278], "each": [0, 5, 8, 9, 10, 13, 14, 17, 18, 19, 21, 22, 26, 27, 29, 30, 31, 33, 34, 37, 40, 44, 46, 47, 48, 49, 54, 95, 149, 185, 190, 204, 237, 240, 248, 252, 259, 260, 264, 268, 269, 272, 277, 278], "altern": [0, 2, 5, 8, 10, 11, 14, 17, 18, 31, 37, 157, 252, 254, 258, 261, 270], "have": [0, 1, 2, 5, 7, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 28, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 50, 52, 54, 56, 153, 157, 174, 190, 193, 194, 202, 207, 217, 251, 252, 254, 257, 258, 259, 261, 262, 264, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278], "differ": [0, 1, 2, 8, 9, 12, 15, 22, 23, 24, 27, 28, 30, 31, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 54, 59, 60, 62, 81, 174, 194, 201, 221, 235, 248, 253, 254, 256, 258, 261, 266, 268, 269, 270, 271, 274, 276, 277], "featur": [0, 6, 7, 14, 16, 19, 23, 24, 33, 38, 40, 43, 44, 54, 92, 98, 232, 241, 257, 258, 264, 265, 268, 270], "follow": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 28, 30, 31, 33, 34, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 52, 54, 56, 60, 62, 63, 105, 153, 190, 194, 207, 217, 248, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278], "section": [0, 2, 7, 8, 9, 11, 12, 14, 18, 22, 23, 24, 28, 33, 37, 38, 39, 40, 45, 46, 47, 48, 54, 56, 251, 254, 256, 257, 258, 266, 268, 269, 270, 271, 274, 276, 277], "specif": [0, 2, 8, 9, 11, 12, 13, 14, 19, 21, 23, 30, 35, 37, 40, 41, 43, 44, 46, 47, 50, 62, 68, 69, 70, 72, 77, 78, 82, 83, 84, 85, 88, 89, 90, 91, 92, 100, 101, 102, 103, 120, 121, 131, 148, 149, 150, 151, 152, 153, 184, 206, 208, 209, 211, 216, 217, 218, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 243, 244, 245, 247, 252, 256, 260, 262, 264, 266, 270, 271, 272, 273, 274], "detail": [0, 2, 3, 9, 13, 14, 15, 16, 17, 19, 24, 29, 32, 33, 38, 48, 74, 75, 76, 174, 213, 214, 215, 241, 250, 264, 269], "an": [0, 2, 5, 7, 8, 9, 11, 12, 14, 17, 18, 21, 24, 26, 27, 29, 30, 31, 34, 35, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 127, 134, 146, 152, 153, 158, 161, 164, 166, 174, 183, 190, 194, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 254, 256, 257, 258, 260, 261, 264, 265, 266, 268, 269, 272, 276], "extens": [0, 2, 23, 24, 25, 34, 38, 41, 43, 60, 62, 63, 64, 183, 184, 264, 270, 274], "allow": [0, 1, 2, 5, 8, 9, 11, 13, 14, 15, 17, 18, 21, 22, 23, 24, 31, 33, 34, 38, 39, 43, 47, 54, 63, 66, 70, 79, 80, 86, 87, 89, 93, 96, 97, 152, 174, 185, 204, 207, 209, 219, 220, 226, 227, 229, 234, 238, 239, 250, 252, 256, 257, 258, 264, 266, 270, 278], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 54, 55, 56, 60, 62, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 99, 100, 101, 102, 103, 108, 161, 174, 185, 190, 192, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278], "To": [0, 1, 2, 8, 9, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 35, 37, 38, 39, 40, 41, 43, 46, 48, 50, 52, 54, 62, 69, 78, 86, 87, 97, 174, 185, 208, 218, 226, 227, 235, 239, 248, 252, 254, 256, 257, 258, 259, 261, 262, 264, 266, 268, 269, 270, 273, 274, 276, 277, 278], "appli": [0, 24, 30, 34, 49, 50, 54, 86, 190, 192, 193, 194, 226, 252, 256, 257, 261, 264, 266], "your": [0, 1, 2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15, 19, 20, 25, 26, 28, 29, 35, 37, 38, 39, 43, 44, 47, 48, 49, 53, 54, 60, 68, 78, 95, 108, 161, 174, 206, 207, 217, 218, 237, 240, 248, 251, 252, 253, 256, 257, 258, 259, 261, 262, 264, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278], "config_loader_class": [0, 1, 62, 63, 251], "constant": [0, 1, 26, 62, 63], "src": [0, 1, 2, 11, 13, 15, 18, 19, 21, 22, 23, 24, 27, 31, 33, 34, 37, 38, 39, 40, 41, 46, 48, 49, 50, 52, 54, 248, 252, 256, 257, 258, 260, 261, 264, 268, 269, 270, 273, 274, 276, 278], "package_nam": [0, 1, 2, 17, 22, 33, 34, 39, 46, 49, 50, 52, 54, 139, 143, 156, 161, 168, 251, 256, 258, 260, 261, 264, 268, 270], "py": [0, 1, 2, 8, 11, 13, 17, 18, 19, 21, 22, 23, 30, 33, 34, 35, 38, 39, 40, 41, 43, 46, 48, 49, 50, 52, 54, 60, 62, 63, 93, 114, 156, 163, 233, 234, 248, 251, 252, 256, 257, 258, 260, 261, 264, 268, 269, 270, 276, 278], "from": [0, 1, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 52, 54, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 110, 112, 130, 131, 133, 134, 139, 143, 149, 150, 157, 161, 163, 168, 174, 190, 192, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 266, 268, 269, 271, 274, 276, 277, 278], "config": [0, 2, 3, 4, 5, 22, 30, 31, 33, 34, 37, 39, 43, 48, 49, 50, 53, 54, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 143, 149, 174, 184, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 256, 261, 270], "import": [0, 2, 3, 5, 8, 10, 11, 13, 14, 17, 18, 19, 21, 22, 23, 24, 30, 33, 34, 35, 37, 38, 39, 40, 41, 43, 47, 49, 50, 52, 54, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 157, 158, 161, 163, 174, 186, 190, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 250, 254, 256, 257, 258, 260, 261, 262, 268, 269, 270, 278], "new": [0, 1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 18, 21, 25, 30, 31, 33, 38, 39, 40, 41, 43, 45, 50, 53, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 131, 152, 161, 174, 190, 192, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 252, 253, 256, 258, 261, 262, 264, 265, 268, 269, 272, 276, 277, 278], "when": [0, 1, 2, 3, 5, 8, 9, 10, 11, 13, 14, 19, 21, 22, 23, 24, 26, 30, 31, 33, 34, 35, 37, 38, 41, 43, 46, 47, 52, 53, 54, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 144, 157, 161, 163, 169, 174, 184, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 256, 257, 258, 261, 262, 263, 264, 266, 268, 269, 271, 272, 274, 276, 277, 278], "can": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 54, 55, 56, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 108, 157, 174, 188, 192, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 272, 273, 274, 276, 277, 278], "dictionari": [0, 2, 5, 8, 9, 10, 11, 14, 21, 50, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 143, 152, 155, 161, 174, 185, 190, 194, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 258, 260, 261, 264], "let": [0, 8, 9, 11, 14, 15, 18, 26, 33, 43, 161, 258, 261, 262], "": [0, 2, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 30, 31, 33, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 48, 50, 51, 52, 56, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 114, 115, 119, 120, 121, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 161, 163, 188, 192, 194, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 276], "assum": [0, 2, 8, 9, 10, 11, 14, 15, 17, 18, 21, 27, 31, 38, 39, 40, 48, 54, 264, 274, 276, 277, 278], "contain": [0, 2, 3, 5, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 38, 39, 40, 43, 44, 47, 50, 52, 60, 62, 85, 89, 93, 104, 106, 120, 143, 148, 152, 161, 174, 185, 187, 190, 194, 200, 204, 217, 225, 229, 234, 248, 250, 251, 252, 256, 258, 260, 261, 264, 265, 266, 268, 269, 270, 271, 272], "conf": [0, 2, 3, 5, 8, 9, 10, 11, 14, 15, 18, 19, 21, 22, 24, 31, 34, 38, 39, 40, 53, 60, 62, 96, 108, 149, 238, 251, 252, 253, 254, 256, 257, 265, 268, 269, 270, 271, 274, 278], "base": [0, 1, 3, 5, 7, 9, 10, 11, 14, 15, 19, 20, 23, 24, 26, 28, 30, 33, 34, 40, 43, 44, 48, 49, 50, 53, 60, 62, 63, 98, 143, 166, 196, 197, 199, 241, 252, 253, 256, 257, 261, 265, 266, 268, 269, 271, 278], "yml": [0, 2, 5, 8, 10, 11, 12, 14, 15, 17, 18, 19, 21, 23, 24, 34, 38, 40, 47, 48, 53, 60, 62, 63, 66, 86, 87, 108, 143, 204, 226, 227, 235, 252, 253, 254, 256, 257, 258, 261, 265, 268, 269, 271, 273, 274, 276, 278], "content": [0, 5, 6, 8, 9, 11, 15, 18, 19, 21, 22, 23, 24, 47, 52, 54, 56, 63, 97, 239, 268, 270, 271, 272], "bucket_nam": [0, 19, 68, 206], "my_s3_bucket": [0, 63], "key_prefix": 0, "my": [0, 9, 10, 11, 14, 34, 40, 44, 48, 50, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 98, 99, 100, 101, 102, 103, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 241, 242, 243, 244, 245, 246, 247, 268], "kei": [0, 1, 2, 3, 5, 8, 9, 10, 12, 17, 18, 21, 22, 23, 24, 31, 34, 38, 40, 43, 47, 52, 56, 60, 62, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 86, 89, 90, 91, 92, 93, 95, 96, 100, 101, 102, 103, 152, 161, 174, 185, 190, 194, 196, 197, 198, 199, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 222, 223, 226, 229, 230, 231, 232, 234, 237, 238, 243, 244, 245, 247, 251, 252, 253, 254, 256, 266, 268, 271, 275, 276], "prefix": [0, 2, 5, 13, 50, 67, 69, 70, 71, 72, 73, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 95, 99, 100, 101, 102, 103, 192, 205, 208, 209, 210, 211, 212, 216, 217, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 237, 241, 242, 243, 244, 245, 247, 257, 268], "dataset": [0, 3, 12, 15, 17, 18, 21, 30, 35, 41, 43, 47, 48, 50, 53, 63, 64, 149, 150, 152, 161, 174, 190, 192, 193, 194, 196, 197, 198, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 241, 242, 243, 244, 245, 247, 248, 252, 257, 258, 259, 261, 265, 266, 268, 269, 270, 272, 274, 276, 277, 278], "csv": [0, 8, 9, 11, 13, 14, 15, 18, 19, 40, 44, 49, 54, 63, 77, 79, 82, 95, 174, 216, 219, 222, 233, 237, 240, 258, 265, 269, 271, 273, 274, 276, 277], "panda": [0, 8, 9, 10, 13, 14, 15, 18, 19, 43, 49, 63, 68, 70, 89, 92, 93, 97, 174, 193, 206, 207, 209, 229, 232, 234, 239, 248, 252, 258, 262, 264, 265, 268, 269, 271, 273, 274, 276, 277, 278], "csvdataset": [0, 8, 9, 10, 13, 14, 15, 18, 19, 49, 50, 63, 174, 248, 258, 261, 264, 265, 268, 269, 271, 273, 274, 276, 277, 278], "spark": [0, 9, 11, 13, 14, 49, 53, 63, 207, 248, 265, 268], "sparkdataset": [0, 9, 10, 11, 13, 14, 49, 54, 63, 94, 236, 261, 265], "folder": [0, 3, 5, 9, 10, 14, 18, 21, 22, 23, 31, 33, 34, 39, 40, 44, 47, 48, 54, 63, 68, 73, 96, 206, 212, 238, 251, 252, 256, 257, 264, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278], "raw": [0, 11, 17, 19, 38, 39, 40, 44, 47, 53, 63, 83, 174, 223, 240, 269, 273, 276, 277], "01_raw": [0, 8, 9, 10, 11, 13, 15, 22, 23, 24, 40, 49, 54, 63, 77, 78, 79, 82, 84, 85, 95, 98, 100, 216, 217, 218, 219, 222, 224, 225, 233, 237, 240, 241, 243, 246, 265, 271, 276, 277], "int": [0, 18, 63, 66, 197, 199, 217], "02_intermedi": [0, 8, 9, 10, 13, 22, 23, 24, 63, 77, 78, 79, 85, 94, 95, 216, 218, 219, 225, 233, 236, 237, 246, 269, 276], "pri": [0, 63], "03_primari": [0, 13, 22, 23, 24, 54, 63, 269, 273, 276], "fea": [0, 63], "04_featur": [0, 22, 23, 24, 63], "point": [0, 1, 8, 23, 24, 30, 34, 37, 40, 41, 43, 52, 67, 68, 69, 70, 72, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 94, 95, 100, 101, 102, 103, 114, 161, 174, 184, 190, 192, 205, 206, 208, 209, 211, 216, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 243, 244, 245, 247, 252, 254, 256, 257, 264], "add": [0, 2, 5, 6, 7, 8, 10, 11, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 30, 31, 34, 38, 39, 43, 47, 48, 49, 51, 52, 114, 136, 174, 204, 248, 252, 256, 257, 258, 260, 261, 264, 268, 269, 271, 272, 274, 276, 277], "config_loader_arg": [0, 1, 2, 60, 62, 63, 251], "globals_pattern": [0, 63], "now": [0, 5, 8, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 30, 33, 40, 41, 48, 105, 254, 257, 261, 264, 276, 278], "here": [0, 9, 11, 13, 14, 15, 17, 22, 26, 29, 34, 38, 39, 40, 41, 43, 47, 48, 49, 62, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 99, 100, 101, 102, 103, 188, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 242, 243, 244, 245, 247, 252, 257, 258, 261, 268, 271, 273, 276], "exampl": [0, 1, 2, 3, 5, 6, 8, 9, 12, 13, 14, 15, 17, 18, 19, 27, 30, 31, 34, 35, 37, 38, 39, 40, 41, 46, 47, 49, 51, 52, 53, 54, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 161, 164, 174, 185, 190, 193, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 254, 256, 257, 258, 259, 260, 261, 262, 265, 266, 268, 272, 274, 276, 277, 278], "raw_boat_data": [0, 63], "type": [0, 2, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 30, 31, 37, 39, 40, 43, 44, 46, 47, 48, 49, 50, 54, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 131, 134, 137, 139, 143, 150, 151, 161, 169, 174, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 257, 258, 264, 265, 266, 268, 269, 271, 273, 274, 276, 277, 278], "nest": [0, 5, 10, 11, 34, 67, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 86, 89, 90, 91, 92, 93, 100, 101, 102, 103, 185, 205, 208, 209, 210, 211, 212, 213, 214, 215, 222, 223, 226, 229, 230, 231, 232, 234, 243, 244, 245, 247, 257], "path": [0, 1, 2, 8, 9, 10, 11, 14, 17, 19, 24, 30, 31, 33, 34, 38, 39, 40, 43, 47, 48, 50, 60, 61, 62, 63, 68, 80, 85, 86, 89, 93, 94, 95, 96, 125, 127, 131, 139, 143, 161, 164, 166, 168, 185, 186, 202, 206, 217, 220, 225, 226, 229, 234, 236, 237, 238, 246, 250, 252, 254, 256, 264, 265, 268, 270, 271], "dict": [0, 8, 11, 14, 18, 21, 30, 34, 40, 50, 52, 54, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 143, 153, 161, 163, 165, 174, 190, 192, 193, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 258, 260, 261, 262, 264, 268], "filepath": [0, 8, 10, 11, 13, 14, 15, 18, 19, 40, 49, 50, 54, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 174, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 258, 262, 265, 268, 269, 271, 273, 276, 277, 278], "s3a": [0, 10, 49, 54, 63, 95, 217, 237, 265], "boat": [0, 10, 13, 63, 85, 174, 193, 217, 225], "file_format": [0, 10, 13, 49, 54, 63, 82, 94, 95, 222, 236, 237, 240, 265], "parquet": [0, 9, 13, 14, 63, 68, 85, 94, 95, 96, 206, 225, 236, 237, 238, 240, 269, 274], "raw_car_data": [0, 63], "s3": [0, 8, 9, 11, 14, 17, 18, 19, 34, 40, 44, 49, 54, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 174, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 237, 241, 242, 243, 244, 245, 246, 247, 256], "data": [0, 2, 5, 7, 11, 13, 14, 15, 17, 19, 21, 25, 31, 35, 43, 48, 49, 51, 52, 53, 55, 57, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 149, 150, 152, 161, 164, 166, 170, 174, 182, 189, 190, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 257, 260, 261, 262, 263, 264, 270, 272, 275, 276], "filenam": [0, 2, 3, 5, 14, 40, 62, 174], "car": [0, 8, 9, 10, 13, 49, 63, 68, 72, 77, 79, 82, 98, 101, 102, 103, 174, 193, 206, 211, 216, 219, 222, 233, 241, 244, 245, 246, 247], "found": [0, 8, 11, 18, 34, 38, 39, 46, 60, 61, 62, 63, 86, 87, 96, 114, 139, 188, 226, 227, 238, 254, 256, 258, 260, 261, 270, 272], "under": [0, 2, 5, 7, 15, 18, 24, 31, 34, 39, 40, 54, 69, 78, 208, 218, 251, 252, 256, 260, 276, 277], "hood": [0, 2, 5, 54, 252, 260], "jmespath": [0, 63], "extract": [0, 19, 202, 266], "element": [0, 37, 47, 252], "declar": [0, 10, 18, 21, 22, 43, 52, 119, 147, 257], "fill": [0, 23, 24, 38], "thi": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 25, 26, 27, 28, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 60, 62, 63, 68, 82, 86, 87, 93, 95, 96, 98, 100, 104, 105, 106, 108, 112, 116, 119, 130, 131, 134, 143, 146, 147, 151, 152, 153, 157, 158, 160, 163, 164, 165, 167, 174, 182, 183, 184, 186, 187, 190, 192, 193, 194, 197, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278], "could": [0, 6, 10, 13, 14, 19, 21, 35, 41, 54, 63, 86, 89, 93, 226, 229, 234, 248, 252, 257, 260, 264, 268], "look": [0, 7, 8, 11, 14, 15, 16, 18, 21, 22, 23, 29, 32, 33, 38, 40, 50, 54, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 114, 184, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 241, 242, 243, 244, 245, 246, 247, 252, 257, 262, 268, 269, 270, 273], "like": [0, 8, 10, 11, 13, 14, 16, 18, 19, 21, 23, 31, 34, 37, 38, 39, 40, 43, 44, 46, 49, 51, 54, 60, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 163, 165, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 241, 242, 243, 244, 245, 246, 247, 254, 256, 257, 261, 262, 264, 274], "another_bucket_nam": 0, "non_string_kei": 0, "10": [0, 19, 22, 23, 24, 30, 46, 54, 71, 78, 93, 210, 217, 218, 234, 258, 261, 268, 269, 273, 274, 277], "globals_dict": [0, 63], "If": [0, 1, 2, 3, 5, 8, 9, 11, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 38, 39, 40, 41, 43, 46, 48, 49, 50, 54, 60, 62, 63, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 139, 143, 152, 161, 182, 185, 190, 192, 196, 197, 198, 199, 200, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 237, 238, 241, 242, 243, 244, 245, 246, 247, 252, 254, 256, 257, 258, 260, 261, 264, 268, 269, 270, 272, 273, 276, 277, 278], "specifi": [0, 1, 3, 9, 11, 14, 17, 18, 22, 24, 30, 34, 38, 39, 40, 44, 48, 52, 54, 60, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 139, 143, 161, 174, 185, 190, 192, 193, 194, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 254, 256, 257, 258, 260, 261, 264, 266, 268, 270, 271, 274, 276, 277, 278], "both": [0, 1, 2, 5, 9, 11, 14, 16, 19, 20, 21, 22, 25, 30, 37, 39, 40, 43, 54, 66, 80, 98, 192, 204, 220, 241, 248, 250, 251, 254, 257, 259, 260, 261, 262, 269, 270], "result": [0, 2, 8, 9, 13, 14, 18, 21, 23, 24, 31, 33, 34, 40, 44, 54, 62, 63, 190, 192, 193, 194, 196, 197, 198, 199, 250, 257, 258, 260, 262, 264, 270, 278], "merg": [0, 2, 9, 43, 54, 62, 63, 269], "In": [0, 1, 2, 5, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 28, 30, 33, 34, 39, 40, 43, 47, 49, 50, 54, 56, 60, 62, 63, 158, 190, 194, 226, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 270, 272, 274, 276, 278], "case": [0, 5, 8, 11, 12, 14, 22, 26, 30, 40, 42, 44, 51, 53, 60, 62, 63, 66, 86, 87, 97, 162, 174, 194, 204, 226, 227, 239, 252, 256, 257, 258, 259, 261], "conflict": [0, 37, 63, 248, 257], "take": [0, 2, 5, 13, 15, 16, 19, 21, 22, 23, 24, 29, 32, 34, 37, 38, 40, 41, 49, 50, 54, 60, 62, 63, 82, 95, 96, 102, 143, 161, 207, 222, 235, 237, 238, 245, 250, 254, 257, 261, 262, 263, 266, 268, 269, 272, 273], "preced": [0, 2, 5, 34, 60, 62, 63, 143, 161, 250, 261], "omegaconf": [0, 1, 62], "python": [0, 11, 14, 15, 17, 18, 19, 21, 22, 23, 24, 30, 31, 33, 39, 43, 46, 47, 48, 54, 55, 56, 58, 63, 66, 68, 69, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 140, 188, 204, 206, 207, 208, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 256, 257, 258, 261, 264, 266, 268, 269, 270, 272, 274, 276], "librari": [0, 9, 10, 16, 21, 22, 23, 24, 25, 33, 34, 39, 41, 43, 46, 47, 49, 66, 69, 72, 89, 93, 101, 102, 170, 204, 208, 211, 229, 234, 244, 245, 250, 251, 253, 258, 264, 268, 272], "design": [0, 2, 7, 9, 56, 87, 227, 257], "It": [0, 9, 10, 11, 14, 15, 17, 18, 21, 24, 25, 26, 29, 33, 34, 37, 38, 39, 40, 43, 44, 47, 48, 54, 55, 62, 66, 68, 69, 72, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 95, 97, 98, 101, 102, 103, 121, 149, 174, 197, 198, 199, 204, 206, 208, 211, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 237, 239, 240, 241, 244, 245, 247, 256, 257, 258, 261, 266, 271, 272, 275, 276], "yaml": [0, 1, 2, 8, 9, 11, 12, 13, 15, 37, 39, 53, 54, 60, 62, 66, 68, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 204, 206, 207, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 256, 268, 269, 276], "hierarch": 0, "system": [0, 9, 12, 14, 22, 23, 24, 27, 29, 30, 40, 41, 46, 47, 68, 174, 206, 254, 271], "support": [0, 7, 9, 11, 14, 16, 17, 20, 26, 34, 38, 39, 41, 46, 47, 53, 54, 62, 67, 69, 70, 71, 72, 73, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 131, 199, 204, 205, 208, 209, 210, 211, 212, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 252, 254, 258, 261, 264, 270, 276, 277, 278], "multipl": [0, 5, 11, 12, 14, 18, 19, 27, 34, 35, 40, 43, 47, 73, 162, 190, 194, 212, 258, 261, 262, 264, 268], "sourc": [0, 9, 11, 12, 15, 17, 21, 22, 23, 30, 31, 34, 38, 39, 44, 46, 47, 54, 55, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 113, 114, 117, 118, 121, 123, 125, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 149, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 164, 166, 168, 169, 174, 182, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 256, 261, 264, 266, 270, 271, 272, 274], "0": [0, 1, 5, 9, 12, 13, 15, 18, 19, 21, 22, 23, 24, 33, 34, 37, 38, 39, 40, 43, 46, 48, 49, 50, 54, 65, 67, 92, 93, 98, 101, 102, 127, 157, 161, 168, 182, 205, 232, 234, 241, 244, 245, 246, 252, 256, 259, 260, 261, 262, 264, 268, 269, 270, 271, 274, 276, 277, 278], "18": [0, 1, 9, 12, 13, 15, 23, 30, 34, 38, 39, 40, 43, 157, 260, 262, 268, 271, 274, 276], "5": [0, 8, 10, 19, 33, 40, 68, 70, 72, 73, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 97, 103, 168, 174, 194, 206, 209, 211, 212, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 239, 247, 258, 261, 264, 268, 274, 277], "activ": [0, 7, 22, 23, 24, 33, 34, 38, 40, 46, 143, 196, 197, 198, 199, 200], "develop": [0, 2, 6, 9, 19, 22, 26, 27, 31, 33, 37, 38, 39, 52, 53, 174, 235, 257, 263, 264, 266, 268], "wa": [0, 1, 7, 8, 11, 15, 17, 18, 21, 24, 31, 40, 43, 46, 48, 52, 54, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 121, 139, 149, 150, 151, 152, 153, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 262, 268, 273, 274, 276, 277], "first": [0, 5, 8, 9, 10, 11, 12, 14, 17, 18, 22, 23, 24, 25, 30, 34, 38, 39, 40, 47, 48, 52, 53, 60, 62, 82, 127, 168, 182, 185, 190, 222, 256, 258, 259, 262, 264, 268, 269, 270, 271], "avail": [0, 2, 5, 7, 9, 10, 11, 12, 14, 15, 19, 23, 24, 27, 33, 34, 35, 37, 39, 40, 43, 46, 56, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 99, 100, 101, 102, 103, 110, 112, 130, 174, 182, 188, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 242, 243, 244, 245, 247, 251, 252, 254, 257, 261, 264, 266, 268, 271], "due": [0, 8, 26, 190], "later": [0, 7, 15, 19, 26, 30, 46, 256, 260, 263, 264, 268], "releas": [0, 14, 17, 18, 21, 28, 46, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 269], "u": [0, 1, 10, 14, 17, 18, 46, 257, 259, 262], "know": [0, 10, 34, 258, 259, 266], "ani": [0, 2, 3, 5, 6, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 23, 24, 27, 29, 31, 34, 37, 39, 40, 41, 43, 44, 46, 49, 50, 52, 54, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 143, 150, 153, 158, 161, 174, 190, 192, 193, 194, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 252, 254, 256, 257, 258, 260, 261, 264, 265, 266, 268, 270, 271, 272], "feedback": 0, "about": [0, 2, 6, 7, 11, 12, 14, 17, 22, 33, 34, 38, 39, 43, 46, 47, 49, 52, 58, 120, 148, 252, 257, 261, 264, 266, 268, 270, 271], "json": [0, 1, 2, 9, 10, 11, 14, 19, 22, 38, 39, 40, 43, 60, 62, 66, 76, 84, 91, 92, 95, 101, 102, 190, 204, 207, 215, 224, 231, 232, 237, 240, 244, 245, 252, 262, 276, 278], "accept": [0, 7, 9, 11, 14, 17, 21, 30, 34, 47, 66, 89, 93, 217, 226, 229, 234, 256, 264, 274], "guidanc": [0, 2, 7, 22], "want": [0, 2, 7, 14, 17, 18, 24, 26, 27, 28, 30, 34, 35, 37, 38, 39, 40, 41, 46, 49, 52, 54, 161, 185, 252, 254, 257, 261, 262, 264, 265, 268, 269, 270, 272, 274, 276, 277, 278], "pattern": [0, 1, 8, 12, 13, 38, 43, 54, 60, 62, 63, 174], "find": [0, 11, 12, 14, 18, 22, 23, 27, 34, 38, 39, 43, 44, 47, 55, 56, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 157, 161, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 242, 243, 244, 245, 247, 252, 254, 259, 268, 271, 273, 274], "need": [0, 1, 2, 7, 9, 10, 11, 12, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 38, 39, 40, 41, 43, 44, 46, 47, 48, 52, 54, 86, 87, 131, 161, 174, 190, 192, 193, 194, 226, 227, 250, 251, 252, 254, 256, 257, 258, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 274, 275, 277, 278], "For": [0, 1, 2, 3, 6, 8, 9, 10, 11, 13, 14, 17, 18, 19, 20, 21, 22, 24, 25, 27, 30, 31, 33, 34, 35, 37, 38, 40, 41, 43, 46, 48, 49, 50, 52, 54, 56, 60, 62, 63, 68, 82, 95, 96, 119, 120, 147, 148, 157, 174, 204, 206, 222, 237, 238, 240, 248, 252, 254, 257, 258, 259, 260, 261, 262, 264, 268, 272, 274, 276], "param": [0, 5, 10, 13, 18, 21, 34, 50, 66, 131, 141, 143, 153, 185, 192, 204, 226, 257, 264, 268], "name": [0, 3, 5, 8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 30, 31, 33, 34, 37, 38, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 54, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 123, 138, 143, 150, 152, 157, 161, 174, 185, 190, 192, 193, 194, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 254, 256, 257, 258, 259, 260, 262, 264, 266, 268, 269, 270, 271, 274, 276, 277, 278], "convent": [0, 2, 11, 27, 47, 52, 60, 62, 63, 174, 252, 257, 276], "instead": [0, 1, 3, 13, 14, 22, 23, 31, 34, 46, 50, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 158, 186, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 258, 268], "e": [0, 2, 9, 10, 11, 14, 17, 18, 21, 22, 23, 27, 30, 31, 34, 37, 38, 39, 43, 44, 51, 52, 54, 60, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 101, 102, 103, 158, 161, 174, 185, 190, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 238, 241, 242, 243, 244, 245, 246, 247, 248, 252, 254, 257, 259, 261, 262, 264, 270, 276], "g": [0, 2, 9, 10, 11, 14, 17, 18, 19, 22, 23, 31, 34, 38, 39, 43, 44, 51, 52, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 101, 102, 103, 158, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 238, 241, 242, 243, 244, 245, 246, 247, 248, 252, 254, 259, 261, 264, 276], "updat": [0, 1, 6, 7, 13, 14, 19, 34, 46, 50, 54, 60, 62, 63, 94, 97, 143, 152, 161, 236, 239, 248, 250, 251, 256, 258, 260, 264, 268, 270], "config_pattern": [0, 2, 60, 62, 63], "behaviour": [0, 5, 8, 27, 43, 51, 52, 115, 116, 145, 188, 251], "replac": [0, 1, 10, 18, 22, 23, 24, 30, 34, 37, 38, 43, 44, 50, 63, 87, 96, 174, 227, 238, 252, 264, 265, 268, 269, 278], "while": [0, 9, 10, 14, 15, 18, 23, 24, 26, 39, 47, 78, 93, 96, 218, 234, 238, 248, 257, 259, 261, 268], "remain": 0, "state": [0, 10, 14, 18, 19, 66, 204, 261, 266], "match": [0, 2, 3, 5, 8, 12, 13, 18, 23, 24, 30, 34, 38, 40, 43, 60, 62, 63, 82, 152, 153, 174, 190, 193, 194, 207, 217, 222, 261], "than": [0, 1, 14, 19, 22, 23, 24, 33, 40, 43, 52, 82, 105, 161, 197, 222, 251, 252, 254, 266], "log": [0, 2, 11, 18, 19, 22, 23, 24, 30, 31, 43, 47, 49, 50, 51, 52, 53, 60, 62, 155, 190, 193, 194, 258, 261, 268, 270, 272], "directli": [0, 2, 3, 9, 10, 24, 26, 33, 43, 49, 92, 96, 186, 190, 232, 238, 256, 261, 264, 270], "instanc": [0, 9, 11, 18, 21, 22, 23, 30, 34, 43, 49, 54, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 118, 143, 152, 158, 161, 174, 190, 193, 194, 195, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 257, 258, 261, 264, 268], "well": [0, 2, 11, 19, 20, 22, 54, 63, 67, 69, 70, 71, 72, 73, 74, 75, 76, 80, 82, 83, 86, 89, 90, 91, 92, 93, 100, 101, 102, 103, 121, 149, 152, 192, 205, 208, 209, 210, 211, 212, 213, 214, 215, 220, 222, 223, 226, 229, 230, 231, 232, 234, 243, 244, 245, 247, 259, 270], "framework": [0, 2, 3, 5, 16, 17, 19, 21, 22, 30, 33, 34, 35, 41, 43, 49, 50, 52, 54, 55, 57, 60, 62, 248, 250, 251, 253, 260, 263, 266, 270], "conf_path": [0, 1, 2, 3, 5, 60, 62, 63], "str": [0, 1, 2, 3, 5, 11, 14, 17, 18, 19, 21, 22, 30, 33, 34, 40, 49, 50, 52, 60, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 131, 134, 137, 139, 143, 150, 153, 161, 168, 174, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 258, 260, 261, 264, 269], "project_path": [0, 1, 2, 3, 5, 17, 19, 30, 33, 43, 54, 60, 62, 113, 143, 153, 161, 168, 169, 250, 264], "conf_sourc": [0, 1, 2, 3, 5, 22, 33, 34, 60, 62, 63, 161, 251], "conf_load": [0, 1, 2, 3, 5, 60, 62], "catalog_config": 0, "something_new": 0, "version": [0, 1, 2, 3, 10, 13, 14, 15, 17, 18, 19, 22, 23, 24, 27, 30, 31, 37, 38, 39, 43, 47, 53, 54, 58, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 139, 143, 161, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 264, 266, 268, 270, 271, 273, 274, 276, 277, 278], "17": [0, 15, 23, 30, 34, 46, 260, 262, 269], "engin": [0, 9, 13, 15, 17, 19, 22, 43, 47, 55, 78, 85, 86, 87, 91, 174, 218, 225, 226, 227, 231, 257, 260, 268, 271, 276], "alongsid": [0, 26, 40, 252], "origin": [0, 1, 7, 11, 19, 24, 131, 192, 194, 262], "below": [0, 2, 9, 13, 14, 17, 18, 21, 23, 24, 30, 33, 34, 37, 39, 40, 41, 44, 46, 54, 86, 87, 108, 161, 174, 226, 227, 257, 258, 259, 261, 264, 268, 269, 272], "speed": [0, 23, 27, 43], "fast": [0, 37, 261], "slow": 0, "train": [0, 10, 11, 20, 40, 43, 44, 47, 48, 50, 54, 78, 218, 257, 258, 268], "memorydataset": [0, 5, 8, 10, 13, 17, 19, 30, 34, 43, 50, 53, 174, 199, 258, 261, 262, 264, 268, 269], "save_arg": [0, 8, 9, 10, 13, 14, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 174, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 247, 265, 271, 273], "index": [0, 8, 9, 14, 38, 46, 50, 53, 77, 78, 82, 84, 85, 87, 88, 89, 93, 127, 168, 174, 182, 184, 216, 218, 222, 224, 225, 227, 228, 229, 234, 258, 270, 273], "true": [0, 2, 9, 10, 11, 13, 14, 17, 18, 19, 21, 24, 30, 34, 39, 40, 50, 54, 73, 79, 80, 81, 84, 85, 86, 94, 95, 96, 99, 101, 102, 161, 174, 188, 190, 196, 197, 198, 199, 200, 204, 207, 212, 217, 219, 220, 221, 224, 225, 226, 233, 236, 237, 238, 240, 242, 244, 245, 253, 254, 258, 261, 262, 268, 270, 276, 278], "endfor": [0, 17], "pars": [0, 11, 13, 67, 69, 174, 205, 208, 226, 256, 261, 266], "read": [0, 7, 8, 9, 11, 12, 14, 15, 18, 19, 33, 37, 39, 44, 46, 47, 52, 54, 62, 80, 81, 82, 85, 86, 95, 143, 170, 220, 221, 222, 225, 226, 237, 240, 252, 254, 258, 270, 271], "compil": [0, 27, 34, 99, 242, 248, 256, 259], "parser": [0, 22, 69, 208, 270, 273], "expand": [0, 11, 13, 18, 19, 34, 40, 43, 46, 48, 190, 192, 259, 261, 262, 268, 269, 271, 277, 278], "argument": [0, 1, 2, 8, 11, 14, 17, 21, 30, 34, 39, 43, 60, 62, 63, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 121, 131, 140, 143, 149, 152, 161, 174, 185, 188, 192, 193, 194, 200, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 257, 258, 259, 264, 268, 270, 271], "previou": [0, 14, 19, 21, 24, 33, 40, 48, 54], "output": [0, 5, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 27, 33, 38, 40, 43, 44, 47, 48, 50, 51, 54, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 152, 153, 161, 174, 190, 192, 193, 194, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 254, 257, 264, 266, 268, 269, 270, 271, 274, 278], "although": [0, 9, 26, 47, 250, 271], "veri": [0, 19, 22, 27, 35, 252, 257], "power": [0, 23, 24, 33, 43, 257, 264], "extrem": 0, "flexibl": [0, 5, 21, 26], "come": [0, 10, 14, 25, 40, 131, 207, 251, 258, 271], "wide": [0, 271], "rang": [0, 9, 11, 12, 26, 28, 48, 71, 73, 210, 212, 246, 252, 258, 264, 268, 270], "we": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 27, 28, 30, 31, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 52, 54, 56, 204, 226, 233, 250, 252, 254, 257, 258, 259, 261, 262, 264, 268, 272, 274, 276, 277, 278], "recommend": [0, 1, 2, 3, 8, 17, 18, 22, 23, 24, 27, 30, 31, 34, 37, 44, 46, 47, 49, 52, 54, 56, 62, 250, 257, 261, 264, 268, 274], "unless": [0, 2, 8, 14, 24, 30, 39, 82, 222], "absolut": [0, 40], "necessari": [0, 15, 18, 22, 23, 24, 26, 38, 40, 43, 190, 204], "dynam": [0, 18, 34, 82, 222, 250, 257, 268], "cost": [0, 14, 18], "significantli": [0, 14, 22], "reduc": [0, 12, 13, 86, 226, 261], "readabl": [0, 33, 37, 40, 48, 251, 252], "much": [0, 14, 33, 39, 54, 264], "higher": [0, 40, 157], "mainten": [0, 7], "overhead": [0, 24, 26], "believ": 0, "major": [0, 7, 19, 33], "analyt": [0, 23, 24, 30, 44, 48], "doe": [0, 2, 7, 8, 11, 14, 18, 21, 23, 33, 34, 38, 40, 47, 54, 60, 62, 63, 82, 86, 89, 93, 98, 139, 157, 174, 190, 202, 222, 226, 229, 234, 241, 254, 256, 258, 259, 262, 266, 268, 273], "harm": 0, "good": [0, 19, 37, 252], "interpol": [0, 62], "call": [0, 2, 3, 5, 8, 9, 11, 14, 15, 18, 19, 31, 33, 34, 39, 43, 46, 47, 48, 52, 54, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 157, 174, 193, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 252, 253, 254, 258, 260, 261, 262, 264, 273, 276], "work": [0, 7, 9, 11, 12, 14, 18, 19, 20, 22, 23, 26, 27, 30, 33, 34, 37, 38, 39, 40, 41, 46, 47, 48, 54, 56, 63, 94, 95, 96, 111, 122, 124, 126, 128, 129, 161, 174, 207, 235, 236, 238, 251, 256, 257, 261, 264, 272, 274, 276, 277, 278], "out": [0, 9, 11, 18, 19, 21, 22, 23, 24, 34, 37, 41, 43, 46, 50, 52, 54, 194, 248, 251, 252, 254, 258, 259, 261, 262, 268, 269, 271, 276], "box": [0, 11, 34, 41, 271], "within": [0, 7, 8, 10, 11, 14, 22, 23, 24, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 43, 44, 52, 54, 61, 96, 151, 217, 238, 252, 256, 257, 258, 261, 263, 264, 266, 268, 269, 270, 273, 276, 277, 278], "same": [0, 1, 2, 3, 5, 9, 11, 14, 15, 17, 18, 19, 21, 22, 25, 27, 34, 35, 38, 39, 40, 41, 43, 52, 54, 60, 62, 66, 86, 87, 152, 174, 190, 192, 194, 196, 197, 198, 199, 207, 226, 227, 235, 252, 254, 257, 259, 260, 268, 274], "suppos": [0, 2, 49, 54, 86, 87, 226, 227], "one": [0, 1, 7, 11, 13, 14, 15, 17, 18, 23, 24, 26, 30, 31, 33, 34, 39, 40, 41, 43, 44, 47, 52, 69, 73, 82, 86, 87, 98, 133, 161, 162, 190, 193, 194, 204, 207, 208, 212, 217, 222, 226, 227, 235, 241, 254, 257, 261, 264, 265, 266, 268], "placehold": [0, 13, 34], "model_opt": [0, 13, 268], "test_siz": [0, 268], "size": [0, 19, 24, 50, 204, 254], "random_st": [0, 258, 268], "3": [0, 7, 11, 14, 18, 22, 23, 24, 33, 39, 40, 46, 48, 50, 56, 69, 72, 73, 89, 91, 93, 98, 101, 102, 157, 168, 208, 211, 212, 217, 229, 231, 234, 235, 241, 244, 245, 246, 256, 258, 260, 261, 262, 264, 268, 269, 271, 273, 274, 277], "parameters_glob": 0, "2": [0, 5, 7, 8, 9, 11, 14, 18, 22, 24, 33, 34, 39, 40, 43, 50, 60, 62, 63, 68, 70, 72, 73, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 97, 98, 99, 101, 102, 103, 127, 168, 174, 193, 194, 206, 209, 211, 212, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 239, 241, 242, 244, 245, 247, 258, 259, 260, 261, 262, 264, 268, 269, 271, 273, 274], "sinc": [0, 1, 5, 8, 9, 11, 13, 17, 19, 34, 35, 37, 40, 54, 82, 86, 87, 222, 226, 227, 257, 260, 271], "correctli": [0, 11, 18, 21, 23, 24, 33, 261], "enabl": [0, 2, 8, 9, 11, 14, 15, 16, 19, 20, 22, 25, 29, 32, 37, 38, 39, 40, 43, 52, 54, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 174, 188, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 254, 259, 261, 264, 268, 270, 274, 277, 278], "addition": [0, 15, 34, 40], "start": [0, 2, 3, 5, 6, 7, 10, 14, 15, 18, 19, 21, 22, 23, 30, 33, 34, 35, 37, 38, 39, 41, 43, 44, 46, 48, 49, 50, 63, 94, 95, 127, 161, 168, 174, 182, 190, 236, 237, 240, 257, 258, 262, 264, 266, 268, 269, 276, 277], "underscor": [0, 48, 194, 261], "_": [0, 2, 10, 13, 18, 21, 34, 35, 52, 63], "becaus": [0, 14, 15, 21, 22, 23, 35, 37, 48, 54, 199, 257, 261, 262, 266, 269], "entri": [0, 5, 10, 12, 13, 27, 37, 43, 52, 80, 86, 87, 114, 184, 220, 226, 227, 233, 235, 252, 269, 270], "valid": [0, 3, 5, 11, 14, 43, 46, 51, 62, 158, 197, 207, 217, 251, 252, 257, 260, 273], "neither": [0, 2, 31], "trigger": [0, 1, 2, 14, 18, 19, 21, 30, 35, 54, 151, 252, 276], "duplic": [0, 2, 11, 30, 63], "error": [0, 1, 2, 3, 5, 8, 11, 13, 18, 21, 22, 26, 34, 35, 37, 39, 40, 46, 50, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 144, 152, 153, 158, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 254, 264], "nor": [0, 2, 31, 276], "appear": [0, 2, 11, 13, 14, 18, 21, 22, 23, 24, 30, 38, 60, 62, 190], "compani": [0, 8, 9, 10, 13, 18, 19, 40, 50, 77, 78, 79, 82, 216, 218, 219, 222, 233, 246, 268, 269, 271, 272, 273, 276, 277, 278], "_panda": 0, "catalog_glob": 0, "possibl": [0, 1, 8, 13, 14, 15, 33, 34, 39, 43, 50, 51, 190, 194, 253, 257, 258, 259, 261], "mlflow": [0, 20, 22, 40, 43, 50, 51], "wai": [0, 2, 3, 5, 7, 8, 10, 11, 14, 15, 18, 21, 22, 23, 27, 33, 38, 40, 43, 44, 46, 48, 63, 174, 235, 248, 251, 254, 257, 259, 262, 266, 268, 276], "still": [0, 2, 19, 34, 41, 49, 133, 157, 261, 269, 276, 277, 278], "mandatori": [0, 240, 251], "regist": [0, 9, 10, 12, 19, 30, 35, 43, 48, 49, 50, 54, 62, 129, 143, 174, 260, 261, 264, 268, 269, 271], "extend": [9, 10, 11, 30, 34, 37, 41, 48, 53, 115, 116, 145, 252, 266], "illustr": [0, 8, 9, 12, 13, 18, 40, 48, 50, 54, 262, 264, 272, 274], "customomegaconfigload": [], "def": [0, 5, 11, 13, 14, 17, 18, 19, 21, 22, 30, 33, 34, 35, 40, 41, 43, 47, 49, 50, 52, 54, 190, 193, 226, 246, 258, 259, 260, 261, 262, 264, 268, 269, 278], "__init__": [9, 11, 18, 19, 21, 23, 33, 49, 50, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 143, 174, 190, 194, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 256, 257, 268, 269], "self": [11, 18, 19, 21, 30, 33, 35, 43, 49, 50, 52, 54, 58, 61, 134, 144, 162, 191, 258, 261], "env": [0, 1, 2, 10, 15, 17, 18, 19, 21, 22, 30, 34, 39, 60, 62, 63, 93, 136, 143, 151, 153, 161, 185, 186, 234, 250, 256, 261, 264], "none": [8, 11, 14, 15, 17, 18, 19, 21, 30, 34, 47, 49, 50, 52, 54, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 123, 131, 134, 136, 138, 143, 150, 151, 152, 161, 174, 182, 185, 186, 190, 192, 193, 194, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 256, 257, 258, 259, 261, 262, 264, 268], "runtime_param": [60, 62, 63], "super": [11, 18, 19, 21, 63, 257], "number": [5, 11, 12, 13, 18, 24, 38, 46, 47, 127, 168, 170, 182, 193, 194, 197, 199, 258, 259, 262, 277], "register_custom_resolv": [], "lambda": [0, 11, 14, 30, 258, 259], "sum": [0, 246, 257, 258, 259, 260, 261, 262], "staticmethod": 21, "helper": [17, 18, 21, 122, 191, 201, 258], "method": [1, 5, 8, 9, 10, 14, 18, 19, 21, 22, 24, 28, 31, 33, 34, 48, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 121, 127, 131, 143, 149, 150, 151, 152, 153, 161, 168, 174, 182, 190, 193, 194, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 261, 262, 264, 268, 270, 271], "check": [14, 17, 18, 23, 24, 30, 33, 37, 38, 40, 46, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 174, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 259, 261, 262, 272, 273, 274, 276], "ha": [2, 5, 9, 10, 11, 14, 17, 18, 19, 22, 23, 24, 30, 33, 34, 40, 41, 43, 47, 48, 51, 52, 54, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 174, 190, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 256, 257, 258, 259, 261, 262, 264, 266, 268, 270, 271, 273, 274, 276], "alreadi": [7, 8, 10, 11, 14, 18, 21, 22, 24, 25, 40, 46, 48, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 256, 258, 262, 264, 269, 271, 272, 273, 274], "been": [1, 13, 14, 17, 18, 19, 21, 22, 28, 30, 33, 40, 48, 54, 174, 252, 261, 262, 272, 276], "throw": [1, 3, 5, 11, 52, 152, 153], "twice": [257, 268], "register_new_resolv": 0, "has_resolv": [], "order": [1, 10, 13, 17, 18, 19, 22, 23, 30, 34, 47, 52, 54, 60, 62, 123, 127, 174, 190, 194, 226, 259, 260, 261, 262, 269], "custom_configload": [], "1": [0, 5, 7, 8, 10, 11, 14, 17, 18, 21, 22, 23, 24, 30, 33, 34, 39, 40, 48, 50, 66, 68, 70, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 97, 98, 101, 102, 103, 127, 134, 168, 174, 182, 194, 204, 206, 209, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 239, 241, 244, 245, 246, 247, 252, 256, 258, 259, 261, 262, 264, 268, 269, 271, 274, 276, 278], "achiev": [0, 24, 33, 41, 248, 260], "oc": 0, "access": [0, 1, 5, 10, 11, 12, 18, 22, 23, 34, 35, 39, 44, 47, 49, 53, 60, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 154, 159, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 237, 239, 241, 242, 243, 244, 245, 246, 247, 250, 259, 260, 264, 265, 274], "demonstr": [0, 7, 22, 23, 24, 33, 257, 258, 262, 277], "dev_s3": [0, 8, 9, 10, 77, 79, 216, 219, 233, 246, 265], "client_kwarg": [0, 8, 9, 10, 68, 174, 206, 256], "aws_access_key_id": [0, 3, 8, 9, 17, 40, 68, 174, 206], "aws_secret_access_kei": [0, 3, 8, 9, 17, 40, 68, 174, 206], "note": [0, 2, 9, 10, 11, 14, 18, 19, 30, 34, 35, 39, 40, 41, 44, 46, 49, 63, 67, 69, 70, 71, 72, 77, 78, 79, 83, 84, 85, 86, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 197, 205, 208, 209, 210, 211, 216, 218, 219, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 240, 242, 243, 244, 245, 246, 247, 259, 262, 269], "onli": [0, 1, 8, 10, 11, 14, 15, 21, 22, 23, 24, 31, 34, 38, 40, 43, 44, 49, 50, 63, 73, 86, 101, 102, 143, 161, 163, 174, 190, 192, 194, 196, 197, 198, 199, 204, 212, 226, 235, 244, 245, 251, 252, 254, 257, 261, 262, 264, 268, 270, 274, 278], "encourag": [0, 27, 257], "usag": [0, 17, 30, 31, 48, 52, 56, 62, 66, 68, 72, 73, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 204, 206, 207, 211, 212, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 271], "anyth": [0, 8, 34, 46, 54, 66, 261, 276, 277, 278], "inform": [2, 6, 9, 11, 14, 19, 21, 22, 26, 28, 35, 38, 39, 43, 47, 49, 54, 62, 63, 119, 120, 147, 148, 151, 157, 248, 252, 254, 257, 258, 261, 266, 268, 270, 272, 274], "which": [1, 2, 5, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 26, 27, 30, 31, 33, 34, 38, 39, 40, 41, 43, 44, 46, 47, 48, 50, 52, 54, 62, 63, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 106, 107, 131, 143, 149, 152, 161, 174, 187, 190, 194, 196, 197, 198, 199, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 234, 238, 242, 243, 244, 245, 247, 248, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 276, 277, 278], "store": [2, 3, 8, 9, 11, 12, 14, 17, 18, 19, 22, 23, 24, 25, 27, 30, 31, 37, 44, 47, 48, 49, 53, 54, 83, 87, 96, 98, 151, 161, 163, 164, 174, 223, 227, 238, 241, 251, 252, 261, 264, 268, 269, 270, 271, 273, 274, 276, 277, 278], "paramet": [2, 4, 8, 9, 10, 11, 17, 18, 21, 22, 23, 24, 30, 34, 38, 40, 43, 44, 47, 50, 52, 53, 54, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 121, 139, 143, 149, 150, 151, 152, 153, 161, 174, 185, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 256, 258, 262, 264, 266, 269, 271], "credenti": [2, 4, 19, 23, 24, 40, 44, 47, 53, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 149, 151, 174, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241, 242, 243, 244, 245, 246, 247, 265, 272, 274], "catalog": [1, 2, 5, 11, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 30, 40, 43, 48, 49, 50, 51, 52, 53, 54, 60, 62, 63, 80, 122, 143, 149, 150, 152, 153, 174, 196, 197, 198, 199, 200, 207, 217, 220, 226, 233, 235, 251, 256, 257, 258, 261, 262, 265, 268, 269, 271, 276], "make": [1, 2, 5, 6, 7, 11, 18, 19, 21, 22, 23, 24, 26, 27, 30, 33, 34, 37, 39, 40, 46, 47, 48, 50, 51, 54, 57, 87, 227, 248, 252, 254, 256, 257, 258, 261, 264, 266, 268, 270, 271, 272, 276, 278], "ar": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 29, 30, 31, 33, 34, 37, 38, 39, 40, 43, 44, 47, 48, 50, 51, 52, 54, 56, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 108, 152, 161, 162, 174, 185, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278], "templatedconfigload": [1, 2, 3, 5], "omegaconfigload": [2, 3, 5, 34, 44, 270], "otherwis": [2, 5, 54, 60, 62, 63, 95, 190, 204, 237, 259, 273], "advanc": [2, 3, 4, 12, 18, 26, 37, 47, 56, 86, 226, 258, 270, 271], "cover": [2, 16, 33, 271], "keep": [2, 5, 14, 23, 24, 47, 48, 204, 254, 257, 259, 266, 268], "all": [0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 31, 33, 37, 40, 43, 44, 47, 48, 49, 50, 52, 54, 60, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 120, 121, 137, 148, 149, 150, 151, 152, 153, 166, 174, 188, 190, 192, 194, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 240, 241, 242, 243, 244, 245, 247, 248, 251, 252, 256, 257, 258, 259, 260, 261, 262, 264, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278], "A": [2, 9, 14, 17, 18, 19, 21, 22, 23, 24, 27, 30, 31, 34, 35, 40, 43, 47, 48, 49, 52, 62, 63, 68, 80, 86, 87, 97, 107, 108, 111, 113, 120, 122, 123, 124, 126, 128, 129, 138, 148, 152, 157, 161, 174, 190, 192, 193, 194, 200, 206, 217, 220, 226, 227, 235, 239, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 265, 266, 268, 269], "organis": [2, 7, 9, 15, 41, 46, 47, 256, 257, 259, 266], "stage": [2, 9, 19, 24, 26, 37, 39, 47, 266, 274, 276], "pipelin": [2, 5, 8, 9, 10, 11, 12, 13, 14, 16, 22, 23, 24, 25, 28, 31, 32, 33, 39, 41, 43, 48, 49, 51, 52, 53, 54, 55, 57, 96, 129, 143, 144, 153, 157, 158, 161, 195, 196, 197, 198, 199, 200, 238, 248, 250, 252, 254, 256, 258, 270, 272, 274, 275], "might": [2, 8, 9, 10, 13, 14, 26, 41, 51, 54, 62, 246, 248, 254, 257, 258, 262, 264, 274], "test": [2, 7, 8, 9, 10, 11, 17, 18, 22, 26, 28, 30, 36, 38, 39, 40, 47, 48, 53, 54, 69, 70, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 99, 100, 101, 102, 103, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 239, 241, 242, 243, 244, 245, 247, 251, 252, 256, 257, 258, 266, 273, 274], "product": [2, 9, 15, 19, 22, 26, 31, 33, 44, 46, 55, 258, 263], "refer": [2, 3, 5, 8, 9, 13, 17, 18, 22, 23, 27, 34, 41, 43, 44, 52, 56, 65, 70, 74, 75, 76, 78, 79, 80, 81, 82, 85, 88, 90, 91, 92, 95, 97, 143, 174, 188, 192, 207, 209, 213, 214, 215, 217, 218, 219, 220, 221, 222, 225, 228, 230, 231, 232, 233, 235, 237, 239, 240, 256, 257, 269, 270, 272], "foundat": [2, 55], "other": [1, 2, 3, 5, 6, 9, 11, 14, 19, 22, 23, 26, 30, 31, 33, 37, 38, 39, 40, 41, 43, 44, 46, 47, 51, 54, 70, 96, 190, 192, 193, 194, 209, 238, 248, 251, 254, 258, 260, 261, 262, 265, 266, 272], "across": [2, 5, 10, 18, 21, 26, 28, 33, 40, 41, 47, 86, 87, 201, 226, 227, 256, 257, 258, 268, 270, 271, 274], "thei": [2, 5, 7, 9, 11, 13, 14, 18, 22, 34, 43, 47, 50, 52, 54, 60, 62, 63, 82, 157, 192, 222, 226, 251, 252, 254, 257, 258, 259, 261, 264, 266, 268, 269, 274, 276], "overridden": [2, 10, 14, 62, 257], "do": [2, 3, 7, 8, 13, 14, 18, 22, 23, 24, 27, 30, 31, 34, 39, 40, 43, 44, 46, 47, 48, 50, 52, 54, 69, 82, 96, 131, 190, 192, 193, 194, 208, 222, 238, 252, 254, 258, 261, 264, 269, 270, 274], "put": [2, 8, 10, 19, 23, 30, 33, 47, 54, 66, 204, 258], "privat": [2, 11, 24, 31, 38], "control": [2, 3, 8, 22, 31, 40, 47, 48, 157, 207, 252, 254, 261, 264, 269, 274, 276], "should": [0, 2, 9, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 33, 34, 38, 39, 41, 43, 44, 46, 47, 48, 50, 52, 53, 54, 56, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 105, 134, 152, 153, 161, 186, 190, 193, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 237, 241, 242, 243, 244, 245, 246, 247, 251, 252, 254, 256, 257, 258, 259, 260, 262, 264, 268, 269, 271, 274, 276], "either": [2, 14, 18, 25, 30, 33, 34, 40, 44, 49, 60, 62, 63, 66, 80, 81, 82, 86, 87, 97, 152, 184, 220, 221, 222, 226, 227, 239, 256, 270], "user": [1, 2, 7, 9, 15, 22, 23, 24, 31, 39, 40, 43, 47, 48, 52, 53, 56, 66, 86, 87, 96, 97, 131, 134, 156, 158, 194, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 252, 254, 256, 257, 264], "id": [2, 11, 14, 18, 19, 21, 22, 24, 26, 30, 31, 35, 37, 38, 39, 47, 67, 71, 73, 80, 81, 152, 174, 196, 197, 198, 199, 200, 205, 210, 212, 217, 220, 221, 250, 261, 269, 271, 272], "protect": 2, "secur": [2, 3, 7], "datacatalog": [2, 3, 5, 8, 9, 10, 12, 18, 21, 30, 34, 41, 47, 50, 52, 54, 143, 152, 153, 161, 196, 197, 198, 199, 200, 217, 251, 252, 261, 262, 264, 265, 268], "o": [2, 8, 38, 39, 41, 43, 49, 258, 261, 262, 270], "interact": [2, 9, 18, 22, 23, 53, 248, 252, 261, 264, 265, 270, 278], "through": [1, 2, 5, 7, 8, 9, 11, 17, 18, 19, 26, 27, 31, 34, 37, 38, 40, 43, 44, 47, 48, 49, 54, 62, 67, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 86, 87, 89, 90, 91, 92, 93, 99, 100, 101, 102, 103, 174, 184, 186, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 222, 223, 226, 227, 229, 230, 231, 232, 234, 242, 243, 244, 245, 247, 252, 253, 254, 261, 268, 276, 277, 278], "command": [1, 2, 5, 10, 17, 18, 19, 21, 22, 23, 24, 25, 30, 36, 37, 38, 39, 40, 46, 48, 52, 53, 98, 110, 111, 112, 113, 114, 121, 122, 123, 124, 126, 128, 129, 130, 135, 138, 140, 241, 248, 250, 252, 253, 254, 256, 257, 258, 261, 262, 264, 266, 268, 269, 270, 271, 273, 276, 277, 278], "line": [2, 5, 22, 23, 24, 25, 33, 36, 37, 38, 39, 40, 53, 84, 92, 98, 105, 121, 138, 185, 186, 224, 232, 241, 254, 261, 269, 270, 271, 273], "run": [1, 2, 5, 9, 10, 13, 14, 16, 20, 21, 25, 26, 28, 29, 32, 35, 39, 41, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 60, 62, 63, 65, 95, 96, 121, 133, 140, 143, 144, 150, 151, 152, 153, 161, 162, 169, 186, 190, 194, 196, 197, 198, 199, 200, 237, 238, 240, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 264, 266, 268, 269, 272, 274, 276, 277], "recurs": [2, 9, 14, 22, 23, 24, 60, 62], "scan": [2, 9, 60, 62], "insid": [2, 3, 5, 9, 11, 14, 18, 21, 23, 24, 25, 30, 31, 34, 38, 43, 54, 60, 62, 131, 250, 252, 254, 256, 257, 258, 270], "firstli": [2, 9, 13, 27, 38], "being": [2, 11, 14, 22, 27, 30, 34, 54, 96, 161, 190, 201, 238, 257, 258], "return": [0, 2, 5, 8, 9, 11, 13, 14, 17, 18, 19, 21, 23, 24, 30, 33, 34, 40, 46, 47, 49, 50, 52, 54, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 118, 127, 134, 137, 139, 143, 144, 150, 151, 152, 157, 161, 162, 168, 169, 174, 182, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 258, 259, 260, 261, 262, 264, 268, 269, 272, 278], "accord": [2, 9, 13, 47, 123, 155, 174, 253, 264, 266, 276], "rule": [2, 9, 37, 44, 252, 257], "locat": [2, 3, 5, 8, 9, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 34, 54, 60, 62, 81, 82, 98, 221, 222, 241, 246, 254, 256, 261, 270], "top": [2, 5, 9, 10, 14, 18, 22, 23, 24, 38, 39, 43, 54, 60, 62, 226, 252, 257, 260, 271, 272], "level": [2, 5, 6, 9, 10, 14, 18, 21, 26, 41, 43, 44, 54, 60, 62, 108, 190, 252, 254, 256, 257, 260, 270, 271, 272], "rais": [2, 6, 8, 14, 18, 21, 35, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 121, 127, 139, 143, 152, 153, 161, 162, 168, 174, 182, 190, 191, 192, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 260, 261, 273], "valueerror": [1, 2, 18, 21, 60, 62, 63, 66, 89, 93, 127, 161, 168, 182, 190, 192, 194, 196, 197, 198, 199, 200, 204, 229, 234], "indic": [2, 8, 9, 22, 33, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250], "anoth": [2, 18, 19, 21, 22, 33, 43, 47, 252, 257, 262, 266, 269], "last": [2, 13, 14, 18, 52, 60, 62, 273], "valu": [2, 5, 8, 9, 10, 11, 14, 15, 17, 21, 22, 30, 33, 34, 40, 44, 48, 49, 50, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 127, 141, 152, 156, 168, 174, 182, 185, 190, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 254, 256, 257, 258, 260, 261, 266, 271], "get": [1, 2, 5, 11, 12, 15, 17, 18, 19, 21, 22, 30, 31, 33, 35, 38, 39, 40, 44, 48, 53, 54, 56, 60, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 99, 100, 101, 102, 103, 139, 158, 174, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 241, 242, 243, 244, 245, 246, 247, 252, 258, 261, 264, 266, 268, 270, 273, 276, 277, 278], "debug": [2, 21, 30, 36, 37, 53, 108, 254], "messag": [2, 34, 39, 46, 69, 108, 134, 158, 208, 240, 254, 264, 273], "emit": [2, 8, 14, 254], "consid": [2, 11, 13, 14, 15, 17, 18, 24, 26, 40, 43, 258], "hidden": [2, 47], "reserv": [2, 131], "ignor": [2, 3, 14, 37, 47, 63, 95, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247], "those": [1, 2, 11, 22, 23, 26, 27, 34, 40, 46, 48, 56, 152, 190, 192, 235, 248, 252, 256, 264, 269, 270, 271], "howev": [0, 2, 9, 11, 13, 14, 19, 24, 31, 48, 52, 252, 254, 256, 268], "anchor": [2, 62], "alias": 2, "templat": [2, 10, 15, 17, 18, 21, 22, 23, 24, 34, 41, 43, 44, 47, 48, 50, 57, 63, 131, 248, 252, 266, 268, 270, 272, 276], "fetch": [1, 2, 21, 49, 62, 66, 137, 196, 197, 198, 199, 204, 261], "search": [2, 39, 139, 266, 272, 276], "subfold": [2, 3, 11, 31, 40, 47, 143, 252, 270], "whose": [2, 3, 174, 266], "And": [2, 19, 25, 40, 261], "ini": [2, 60], "pickl": [2, 9, 13, 15, 18, 19, 60, 93, 234, 248, 258, 261, 268, 276], "xml": [2, 60, 88, 228], "properti": [2, 39, 49, 52, 60, 62, 63, 68, 97, 143, 161, 190, 194, 206, 217, 239, 250], "regex": [2, 60, 62, 63, 174, 252], "These": [0, 2, 5, 7, 10, 11, 13, 21, 22, 34, 37, 43, 44, 49, 54, 65, 95, 161, 196, 197, 198, 199, 237, 240, 256, 257, 272], "customis": [2, 14, 48, 60, 62, 63, 251, 252, 256, 264, 270], "bypass": [2, 44], "chapter": [2, 3, 56], "time": [0, 2, 7, 9, 10, 11, 14, 18, 23, 24, 27, 33, 35, 37, 38, 39, 40, 44, 48, 49, 50, 52, 66, 251, 258, 261, 262, 268], "variabl": [2, 3, 17, 23, 24, 34, 39, 40, 44, 49, 50, 54, 62, 63, 93, 183, 190, 193, 194, 234, 250, 259, 260, 261, 264, 266, 268, 271], "new_conf": 2, "cli": [2, 5, 15, 17, 28, 35, 38, 39, 248, 250, 253, 256, 257, 260, 261, 262, 266, 268], "flag": [2, 9, 14, 22, 23, 27, 34, 37, 40, 43, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 135, 161, 190, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 252, 261, 266, 268, 276], "tar": [2, 31, 34, 125, 256, 270], "gz": [2, 10, 31, 34, 256, 270], "zip": [2, 19, 34], "format": [2, 8, 9, 10, 11, 12, 19, 31, 34, 36, 43, 53, 59, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 108, 182, 190, 194, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 254, 259, 261, 269, 270, 271, 274], "packag": [2, 9, 11, 12, 17, 18, 21, 25, 26, 28, 33, 38, 39, 43, 46, 48, 53, 69, 124, 139, 143, 161, 164, 201, 204, 208, 248, 251, 252, 255, 257, 261, 266, 268, 269, 272, 274, 275], "build": [2, 7, 17, 18, 19, 22, 27, 30, 31, 38, 39, 47, 54, 55, 57, 251, 252, 258, 261, 266, 268, 269, 272], "dist": [2, 15, 19, 22, 31, 34, 256, 270], "creat": [2, 9, 12, 14, 29, 30, 31, 35, 37, 38, 39, 40, 41, 43, 44, 45, 47, 50, 52, 53, 54, 55, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 118, 130, 143, 149, 151, 157, 161, 174, 183, 190, 192, 193, 194, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 260, 261, 262, 264, 265, 266, 270, 271, 272], "whl": [2, 15, 19, 22, 31, 34, 270], "exclud": [2, 31, 270], "czf": 2, "my_conf_nam": 2, "directori": [2, 5, 11, 14, 15, 17, 18, 19, 21, 22, 24, 30, 31, 34, 37, 38, 39, 40, 41, 43, 46, 48, 60, 62, 63, 68, 85, 96, 99, 105, 131, 143, 161, 185, 206, 225, 238, 242, 248, 250, 251, 252, 256, 260, 264, 265, 270, 271, 273, 274, 276, 277, 278], "dir": [2, 15, 19, 47, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 264], "Or": [1, 2, 49, 54], "x": [0, 2, 11, 50, 78, 91, 92, 99, 218, 231, 232, 242, 258, 259, 261, 262, 268, 269, 278], "r": [2, 11, 15, 17, 19, 23, 24, 31, 34, 37, 39, 40, 48, 67, 69, 72, 74, 75, 76, 82, 86, 90, 100, 101, 102, 103, 205, 208, 211, 213, 214, 215, 217, 222, 226, 230, 233, 243, 244, 245, 247, 248, 268, 273, 274, 276, 278], "structur": [2, 5, 10, 11, 15, 19, 22, 24, 26, 27, 43, 44, 168, 192, 240, 252, 257, 268, 276], "expect": [2, 24, 33, 43, 50, 51, 158, 190, 192, 204, 226, 252, 257, 258, 271], "conf_dir": 2, "mai": [2, 11, 12, 14, 15, 24, 26, 27, 28, 38, 39, 40, 43, 47, 48, 54, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 252, 261, 264, 265, 268, 270, 272, 273, 274], "distribut": [2, 9, 14, 15, 19, 20, 22, 28, 31, 34, 256, 270, 272], "readm": [2, 11, 15, 17, 18, 27, 31, 43, 47, 60, 252, 257], "md": [2, 11, 15, 17, 18, 27, 31, 34, 43, 47, 60, 100, 243, 252, 257], "option": [2, 3, 5, 11, 14, 17, 22, 23, 24, 30, 31, 38, 43, 44, 47, 50, 54, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 108, 131, 136, 143, 153, 161, 174, 185, 188, 190, 192, 193, 194, 197, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 252, 253, 254, 256, 257, 258, 260, 261, 262, 264, 270, 276], "includ": [1, 2, 6, 7, 9, 10, 11, 14, 15, 18, 19, 21, 22, 23, 24, 30, 34, 37, 40, 41, 43, 46, 51, 54, 68, 69, 78, 95, 121, 188, 190, 202, 204, 206, 208, 217, 218, 237, 240, 248, 251, 253, 254, 256, 257, 258, 260, 262, 264, 266, 268, 270, 271, 274, 276], "so": [2, 3, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 28, 34, 37, 38, 43, 47, 48, 52, 60, 62, 63, 70, 79, 86, 87, 89, 93, 97, 185, 190, 209, 219, 226, 227, 229, 234, 239, 248, 252, 254, 257, 258, 260, 261, 262, 264, 265, 266, 268, 269, 274], "instanti": [2, 5, 8, 9, 10, 14, 18, 21, 30, 35, 38, 60, 62, 63, 80, 81, 86, 87, 93, 174, 196, 197, 198, 199, 220, 221, 226, 227, 234, 250, 257, 258, 261, 265, 268], "show": [2, 7, 11, 15, 22, 37, 38, 39, 40, 44, 49, 90, 131, 134, 230, 252, 254, 264, 265, 271, 274, 275], "conf_catalog": [2, 52, 60, 62, 149], "built": [0, 2, 8, 10, 11, 12, 14, 17, 18, 19, 22, 24, 27, 31, 41, 43, 46, 47, 53, 56, 62, 253, 258, 261, 266, 268, 270], "own": [2, 3, 5, 6, 11, 12, 14, 17, 18, 19, 22, 27, 33, 40, 44, 252, 254, 261, 264, 268], "bottom": [2, 23, 38, 277, 278], "overwrit": [2, 5, 10, 13, 41, 50, 54, 73, 86, 87, 95, 96, 99, 152, 207, 212, 217, 226, 227, 235, 237, 238, 240, 242, 253, 258], "server": [2, 9, 10, 19, 27, 28, 30, 31, 86, 93, 204, 226, 234], "kedro_env": 2, "ipython": [2, 11, 23, 24, 25, 34, 38, 104, 122, 188, 271, 273, 274], "jupyt": [2, 34, 41, 47, 48, 53, 56, 161, 184, 188, 252, 263, 265, 272, 274], "notebook": [2, 8, 15, 22, 26, 41, 44, 47, 48, 53, 56, 184, 252, 254, 265, 272, 274], "lab": [2, 34, 184, 264], "session": [2, 11, 18, 19, 21, 22, 23, 24, 30, 33, 34, 35, 38, 39, 43, 46, 49, 53, 54, 143, 152, 196, 197, 198, 199, 200, 251, 261, 271, 273], "export": [2, 40, 163, 254, 264], "provid": [1, 2, 5, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 21, 22, 23, 24, 28, 34, 35, 43, 47, 49, 52, 54, 57, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 109, 115, 119, 131, 142, 143, 145, 146, 147, 154, 159, 161, 167, 170, 174, 182, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 258, 259, 261, 264, 265, 266, 268, 269, 270], "default_run_env": [2, 60, 62, 63], "custom": [0, 2, 12, 14, 19, 27, 34, 41, 43, 47, 52, 53, 58, 62, 66, 89, 93, 123, 131, 135, 229, 234, 252, 258, 259, 268, 272, 277], "prod": [2, 264], "some": [0, 2, 13, 14, 19, 21, 22, 40, 50, 51, 54, 60, 62, 63, 82, 96, 190, 222, 238, 254, 256, 259, 262, 264, 265, 270, 271, 272, 274], "reason": [2, 3, 14, 17, 18, 22, 29], "apart": 2, "must": [2, 8, 10, 11, 13, 14, 17, 18, 19, 22, 23, 24, 25, 31, 39, 40, 41, 43, 46, 48, 50, 52, 89, 93, 96, 174, 185, 190, 192, 194, 226, 229, 234, 238, 252, 254, 256, 257, 258, 259, 260, 261, 262, 264, 270, 271, 273, 276, 278], "strongli": [1, 3, 46], "commit": [3, 7, 23, 24, 31, 34, 47, 252, 274], "secret": [3, 8, 9, 10, 14, 17, 49, 66, 68, 71, 73, 95, 174, 204, 206, 210, 212, 237], "kedro": [1, 3, 5, 8, 10, 11, 14, 26, 28, 33, 35, 36, 37, 45, 49, 50, 51, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 254, 256, 258, 259, 260, 262, 267, 269, 272, 273, 274, 276], "default": [1, 3, 5, 9, 10, 11, 13, 14, 15, 17, 18, 21, 22, 23, 24, 30, 31, 34, 39, 40, 43, 44, 47, 48, 52, 54, 60, 62, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 108, 143, 157, 161, 174, 185, 196, 197, 198, 199, 200, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 243, 244, 245, 247, 251, 252, 253, 256, 260, 261, 264, 268, 270, 271, 274], "file": [3, 5, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 30, 31, 33, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 52, 54, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 134, 139, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 253, 256, 257, 258, 264, 265, 268, 269, 271, 272, 273, 274, 276, 278], "its": [3, 8, 9, 10, 11, 14, 16, 17, 18, 19, 22, 23, 24, 26, 33, 34, 40, 41, 43, 46, 47, 48, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 139, 154, 156, 161, 174, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 257, 258, 259, 261, 262, 263, 264, 266, 268, 269], "git": [3, 23, 24, 31, 34, 40, 43, 46, 47], "configur": [3, 5, 12, 13, 17, 23, 24, 30, 31, 40, 43, 47, 53, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 143, 154, 155, 156, 161, 174, 185, 197, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 256, 257, 264, 265, 266, 270, 272], "us": [3, 7, 11, 12, 16, 19, 26, 27, 28, 34, 35, 37, 38, 42, 43, 44, 47, 48, 51, 52, 53, 55, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 115, 121, 131, 132, 137, 143, 145, 149, 151, 152, 153, 157, 161, 163, 164, 165, 174, 182, 185, 190, 191, 193, 194, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 256, 259, 260, 261, 262, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278], "fed": [3, 5, 204], "would": [1, 3, 8, 9, 10, 11, 13, 15, 27, 33, 41, 49, 69, 70, 78, 158, 208, 209, 218, 252, 254, 256, 257, 260, 261, 271], "rather": [1, 3, 14, 23, 24, 33, 43, 105, 254], "environ": [3, 8, 9, 17, 21, 26, 27, 31, 33, 34, 38, 39, 40, 44, 48, 49, 60, 62, 63, 80, 81, 143, 161, 185, 220, 221, 248, 250, 251, 253, 256, 263, 264, 266, 269], "local": [1, 3, 8, 9, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 30, 31, 34, 35, 38, 39, 44, 48, 60, 62, 63, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 98, 99, 100, 101, 102, 103, 143, 183, 185, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 241, 242, 243, 244, 245, 247, 252, 254, 256, 257, 261, 270, 271, 274], "abov": [0, 1, 3, 5, 8, 9, 10, 14, 18, 19, 21, 22, 31, 34, 38, 39, 40, 41, 47, 50, 54, 217, 248, 254, 256, 257, 258, 259, 260, 261, 269, 273, 278], "missingconfigexcept": [1, 3, 5, 62], "given": [3, 5, 10, 11, 14, 17, 18, 26, 30, 34, 54, 60, 62, 63, 86, 87, 174, 185, 190, 194, 202, 204, 226, 227, 246, 271], "But": [3, 5], "workflow": [3, 5, 10, 14, 15, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 40, 43, 54, 169, 258, 259, 274], "applic": [3, 5, 18, 19, 25, 27, 34, 38, 54, 121], "handl": [3, 5, 14, 18, 21, 68, 69, 72, 77, 78, 83, 84, 85, 86, 88, 90, 96, 101, 102, 103, 188, 206, 208, 211, 216, 217, 218, 223, 224, 225, 226, 228, 230, 233, 238, 244, 245, 247, 251, 253, 258, 261, 264], "try": [3, 5, 8, 10, 11, 18, 21, 46, 82, 204, 222, 259, 261, 262, 264, 273], "except": [0, 3, 5, 8, 9, 11, 14, 18, 21, 35, 57, 58, 59, 61, 67, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 86, 89, 90, 91, 92, 93, 99, 100, 101, 102, 103, 132, 134, 142, 144, 152, 153, 160, 161, 162, 170, 189, 191, 192, 194, 205, 208, 209, 210, 211, 212, 213, 214, 215, 222, 223, 226, 229, 230, 231, 232, 234, 235, 242, 243, 244, 245, 247, 254, 258, 259, 261, 262], "context": [3, 5, 11, 18, 19, 21, 23, 24, 30, 33, 34, 38, 49, 54, 151, 161, 185, 250, 251, 258], "kedrocontext": [3, 5, 33, 34, 41, 145, 149, 151, 161, 250, 251, 264], "approach": [3, 5, 8, 14, 15, 19, 22, 23, 24, 26, 31, 43, 46, 49], "them": [0, 1, 3, 5, 7, 9, 11, 13, 14, 15, 21, 24, 28, 34, 35, 37, 40, 43, 46, 52, 54, 60, 62, 69, 78, 194, 208, 218, 256, 257, 258, 261, 262, 264, 269, 270, 273, 274, 275, 278], "aws_session_token": 3, "pleas": [3, 11, 17, 19, 34, 35, 41, 43, 46, 54, 95, 119, 120, 147, 148, 197, 237, 240, 261, 270, 273], "offici": [3, 16, 19, 21, 24, 43, 46, 56, 137], "defin": [0, 5, 8, 10, 13, 14, 17, 18, 19, 21, 22, 23, 24, 33, 34, 39, 41, 43, 44, 47, 50, 52, 54, 96, 108, 116, 121, 143, 149, 150, 151, 152, 153, 156, 157, 161, 189, 190, 194, 196, 197, 198, 199, 204, 235, 238, 252, 254, 257, 258, 260, 261, 264, 266, 268, 269, 276], "pair": [5, 40, 60, 62, 63, 259, 269, 278], "where": [5, 7, 8, 9, 10, 11, 13, 14, 18, 19, 21, 22, 23, 24, 25, 27, 34, 35, 38, 39, 40, 43, 49, 52, 65, 78, 131, 161, 174, 190, 194, 196, 197, 198, 199, 203, 218, 226, 235, 256, 258, 259, 261], "correspond": [5, 8, 9, 11, 14, 18, 19, 24, 27, 41, 50, 52, 60, 62, 63, 68, 97, 174, 193, 194, 206, 239, 250, 252, 254, 258, 259, 270, 272], "serv": [5, 9, 40, 43, 48, 262, 269, 276], "input": [5, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 27, 34, 40, 44, 47, 51, 54, 60, 62, 99, 152, 161, 190, 192, 193, 194, 196, 197, 198, 199, 200, 204, 242, 248, 252, 257, 261, 266, 273, 278], "node": [0, 5, 9, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 30, 33, 34, 41, 43, 48, 51, 52, 53, 54, 150, 152, 161, 190, 192, 196, 197, 198, 199, 200, 254, 257, 260, 261, 272, 273, 275, 277], "easier": [5, 18, 33, 37, 56, 248, 254, 257, 266, 268, 276], "chang": [5, 7, 22, 27, 31, 33, 34, 39, 40, 44, 46, 50, 62, 96, 226, 238, 251, 254, 257, 258, 264, 266, 270, 273, 276], "modifi": [5, 15, 39, 52, 53, 54, 87, 96, 133, 157, 227, 238, 248, 260, 270], "group": [5, 7, 9, 18, 19, 30, 34, 39, 41, 43, 44, 49, 50, 52, 83, 123, 133, 135, 138, 174, 190, 197, 199, 223], "determin": [5, 13, 14, 40, 47, 48, 131, 204, 259, 266, 268, 269], "hyperparamet": [5, 29, 268], "model": [5, 8, 9, 11, 13, 15, 22, 23, 24, 26, 29, 40, 44, 48, 54, 99, 174, 242, 257, 258, 272, 274, 276], "singl": [5, 11, 14, 16, 19, 21, 22, 27, 28, 40, 43, 44, 48, 49, 85, 161, 174, 197, 200, 204, 225, 257, 258, 259, 264, 266, 268, 269], "modif": [5, 105], "centralis": [5, 53], "avoid": [5, 13, 14, 23, 24, 26, 30, 37, 65, 248, 262, 265], "part": [5, 8, 9, 10, 11, 14, 15, 16, 18, 20, 27, 29, 32, 33, 40, 43, 48, 101, 102, 190, 192, 194, 207, 217, 235, 244, 245, 252, 256, 258, 259, 260, 268, 275, 278], "step_siz": 5, "learning_r": 5, "01": [5, 14, 50, 261, 264, 269], "definit": [5, 9, 11, 19, 22, 40, 193, 194, 235, 259, 261, 264, 268, 276], "increase_volum": 5, "volum": [5, 14, 38], "step": [1, 5, 8, 14, 17, 18, 22, 23, 24, 27, 28, 31, 33, 38, 40, 43, 46, 48, 53, 257, 260, 261, 269, 276], "func": [5, 10, 13, 14, 19, 40, 47, 49, 54, 190, 193, 194, 257, 258, 261, 268, 269, 278], "input_volum": 5, "output_volum": 5, "model_param": 5, "test_data_ratio": 5, "number_of_train_iter": 5, "10000": [5, 264], "train_model": [5, 13, 50, 54, 268], "lr": 5, "iter": [5, 22, 23, 26, 47, 60, 62, 63, 66, 137, 190, 192, 193, 194, 258, 264], "input_data": 5, "output_data": 5, "pass": [0, 5, 8, 9, 10, 11, 14, 19, 21, 30, 33, 34, 39, 43, 47, 48, 50, 52, 60, 62, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 134, 143, 161, 185, 188, 190, 197, 199, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 252, 254, 257, 258, 259, 261, 262, 266, 268, 270, 271], "entir": [5, 10, 15, 18, 19, 22, 23, 24, 27, 31, 33, 49, 53, 248, 253, 258, 259, 268, 272], "collect": [5, 7, 18, 21, 33, 43, 47, 50, 52, 54, 68, 111, 122, 124, 126, 127, 128, 129, 190, 192, 206, 248, 259, 266], "ad": [5, 9, 13, 14, 33, 34, 37, 39, 40, 41, 49, 51, 62, 80, 135, 149, 174, 190, 194, 220, 233, 252, 257, 260, 262, 266, 268, 271, 278], "add_feed_dict": [5, 174], "live": [5, 43, 44, 235], "what": [5, 10, 14, 21, 33, 52, 69, 208, 252, 256, 259, 266, 269], "inject": [0, 5, 34, 41, 43, 49, 52, 251], "per": [5, 7, 40, 98, 241, 256, 264, 271], "subdirectori": [5, 33, 48, 60, 62, 270], "comma": [5, 34, 39, 141, 185], "separ": [5, 9, 11, 13, 28, 30, 31, 34, 37, 43, 48, 163, 185, 257, 266, 268, 269, 270, 275], "list": [5, 6, 7, 8, 9, 10, 13, 14, 21, 22, 23, 24, 30, 39, 40, 43, 48, 50, 52, 56, 62, 66, 73, 95, 96, 123, 131, 153, 161, 174, 188, 190, 192, 193, 194, 204, 207, 212, 217, 226, 237, 238, 240, 248, 254, 256, 257, 258, 259, 261, 262, 264, 270, 272], "made": [5, 7, 23, 33, 105, 190, 192, 268, 269], "split": [5, 34, 37, 47, 48, 50, 141, 185, 258, 264, 268], "colon": [5, 185], "equal": [5, 8, 40, 54, 68, 70, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 93, 97, 174, 185, 206, 209, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 234, 239], "sign": [5, 185], "param_key1": [5, 34], "value1": [5, 14, 34, 185], "param_key2": [5, 34], "alwai": [5, 13, 14, 17, 40, 46, 105, 174, 257, 264], "treat": [5, 11, 13, 37, 43, 60, 62, 190, 257], "string": [5, 8, 9, 10, 11, 14, 44, 50, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 141, 174, 190, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 252], "convert": [1, 5, 11, 17, 19, 34, 40, 43, 44, 252, 269, 270, 278], "float": [5, 40, 50, 269], "integ": 5, "convers": [5, 6, 10, 27], "succe": 5, "extra": [5, 11, 14, 22, 49, 51, 52, 60, 62, 63, 143, 161, 174, 185, 188, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 241, 242, 243, 244, 245, 246, 247, 250, 254, 258], "space": [5, 48, 271, 272], "wrap": [5, 11, 21, 30, 63, 200, 254, 257, 268], "whole": [5, 10, 14, 15, 19, 33, 34, 190], "quot": [5, 13, 256], "key1": [5, 258], "key2": [5, 258], "cannot": [5, 14, 17, 21, 23, 24, 28, 39, 54, 161, 196, 197, 198, 199, 253, 257, 259, 273], "endpoint_url": [5, 10], "http": [5, 9, 10, 11, 19, 22, 23, 24, 30, 37, 38, 39, 40, 43, 46, 48, 49, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 119, 120, 147, 148, 157, 158, 174, 184, 185, 188, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 256, 269, 273, 276], "endpoint": [5, 22, 66, 204, 256], "com": [5, 19, 22, 24, 31, 37, 38, 39, 43, 46, 63, 80, 81, 91, 92, 158, 220, 221, 231, 232, 235], "page": [7, 9, 10, 12, 17, 18, 21, 28, 30, 33, 40, 47, 48, 50, 54, 251, 262, 264, 277, 278], "explain": [9, 11, 12, 17, 19, 21, 22, 27, 30, 31, 41, 44, 45, 46, 48, 54, 251, 252, 264, 268, 269, 270, 272], "principl": [15, 19], "public": [31, 39], "api": [9, 11, 30, 54, 56, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 258, 261, 264, 266], "signatur": [52, 152, 153], "remov": [1, 8, 17, 44, 50, 60, 62, 63, 65, 73, 161, 212, 217, 248, 254, 257, 261, 262, 264, 269, 270], "modul": [8, 22, 34, 37, 39, 43, 46, 52, 53, 57, 64, 89, 93, 104, 106, 109, 110, 112, 115, 116, 119, 120, 130, 140, 145, 146, 147, 148, 154, 157, 158, 159, 160, 163, 165, 167, 174, 187, 188, 189, 201, 229, 234, 241, 248, 256, 257, 260, 261, 268, 270], "upgrad": [23, 39, 248, 251], "without": [14, 15, 19, 21, 22, 23, 44, 89, 96, 157, 158, 174, 192, 229, 238, 250, 254, 258, 260, 261, 264, 265, 266, 273], "aim": 32, "minimis": [], "softwar": [22, 23, 27, 33, 55, 263, 266], "stabl": [46, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 90, 93, 119, 120, 147, 148, 174, 184, 185, 188, 209, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 230, 234, 241, 273], "migrat": [4, 46, 53], "bring": [], "consider": 11, "increas": [14, 54, 257, 263, 266, 268], "maintain": [18, 19, 33, 34, 37, 55, 252, 257, 266, 268], "codebas": [11, 28, 31, 40, 256, 257, 258, 268], "sens": [], "befor": [8, 9, 11, 14, 17, 18, 21, 23, 24, 30, 34, 37, 39, 41, 47, 49, 51, 52, 54, 114, 121, 150, 152, 153, 190, 252, 254, 256, 260, 270, 271], "contribut": 7, "github": [6, 7, 11, 15, 16, 17, 18, 29, 32, 37, 43, 46, 48, 55, 63, 89, 93, 158, 217, 229, 233, 234, 252, 254], "issu": [6, 23, 37, 46, 158, 188, 254, 257, 264, 272], "justifi": [], "gain": 26, "non": [13, 15, 43, 44, 52, 53, 86, 89, 93, 226, 229, 234, 261], "go": [14, 17, 18, 19, 22, 26, 27, 31, 38, 39, 40, 43, 48, 100, 243, 252, 278], "main": [11, 17, 22, 23, 24, 29, 43, 47, 51, 143, 184, 217, 250, 257, 258, 266, 268, 270], "minor": [], "deploi": [15, 17, 26, 27, 28, 29, 30, 31, 39, 252, 270], "branch": [11, 19, 40, 43, 46, 252, 261, 268], "until": [14, 18, 39], "next": [14, 18, 19, 21, 23, 24, 38, 40, 46, 47, 53, 252, 261, 264, 268, 269, 276], "got": [50, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 158, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "question": [6, 7, 19, 48, 52, 270, 272, 276], "process": [8, 11, 13, 14, 17, 18, 21, 22, 23, 24, 27, 31, 33, 37, 39, 40, 47, 53, 54, 60, 62, 63, 68, 146, 161, 196, 197, 198, 199, 206, 257, 258, 260, 261, 266, 268, 270, 272, 276], "ask": [7, 22, 24, 30, 46, 48, 252, 270, 272, 273, 276], "commun": [6, 17, 272, 273, 276], "slack": [6, 7, 17, 18, 46, 48, 272, 276], "apach": [11, 43, 85, 95, 96, 97, 225, 237, 238, 239, 240], "licens": 43, "short": [33, 48, 194], "submit": [11, 21, 22, 30, 43, 54], "code": [0, 1, 6, 7, 9, 11, 12, 15, 19, 20, 21, 22, 24, 26, 27, 31, 33, 34, 36, 40, 41, 43, 44, 47, 53, 54, 55, 86, 87, 121, 134, 226, 227, 250, 251, 252, 254, 256, 257, 258, 259, 260, 263, 264, 265, 266, 268, 269, 270, 274, 276, 277], "submiss": [], "understood": [], "permiss": [14, 24], "share": [11, 13, 15, 19, 21, 31, 40, 47, 54, 256, 257, 259, 265, 268, 270], "don": [1, 12, 14, 18, 24, 34, 35, 38, 41, 44, 46, 47, 54, 252, 257, 261, 264, 270, 274, 276], "t": [1, 9, 11, 12, 14, 17, 18, 19, 21, 24, 34, 35, 37, 38, 41, 44, 46, 47, 54, 60, 62, 69, 70, 71, 72, 77, 78, 79, 83, 84, 85, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 166, 174, 199, 208, 209, 210, 211, 216, 218, 219, 223, 224, 225, 228, 229, 230, 231, 232, 233, 242, 243, 244, 245, 247, 252, 256, 257, 258, 260, 261, 264, 269, 270, 271, 273, 274, 276, 277, 278], "see": [9, 10, 11, 13, 14, 15, 18, 19, 21, 22, 23, 24, 27, 30, 33, 34, 38, 39, 40, 41, 43, 46, 48, 52, 62, 63, 71, 73, 74, 75, 76, 86, 87, 97, 119, 143, 147, 157, 161, 174, 184, 185, 210, 212, 213, 214, 215, 226, 227, 235, 239, 240, 241, 250, 252, 254, 257, 258, 259, 261, 262, 264, 266, 268, 269, 270, 271, 272, 273, 276, 277, 278], "our": [6, 7, 11, 15, 19, 21, 23, 27, 28, 41, 43, 46, 52, 54, 204, 261, 272, 276], "guid": [4, 7, 11, 15, 18, 19, 21, 22, 23, 24, 26, 27, 28, 35, 37, 38, 40, 41, 44, 46, 48, 52, 53, 95, 235, 237, 240, 252, 258, 261, 270], "practic": [37, 54, 55, 259, 261, 263, 266], "descript": [14, 19, 33, 34, 39, 44, 48, 57, 59, 64, 65, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 119, 120, 122, 124, 126, 128, 129, 130, 132, 142, 145, 146, 147, 148, 154, 159, 160, 163, 165, 167, 170, 183, 187, 189, 190, 195, 201, 203, 217, 252, 257, 258, 264, 268], "how": [7, 9, 10, 12, 19, 23, 24, 27, 33, 35, 37, 38, 39, 40, 44, 48, 49, 50, 52, 54, 68, 164, 204, 206, 246, 251, 254, 261, 264, 265, 266, 269, 270, 271, 272, 274, 276, 277, 278], "prepar": 269, "against": [7, 11, 13, 17, 18, 28, 33, 34, 44, 60, 62, 63], "repositori": [11, 15, 16, 18, 19, 23, 29, 31, 32, 34, 37, 38, 39, 43, 46, 48, 131, 252, 256, 266], "window": [14, 24, 34, 38, 39, 46, 48, 49, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 254, 256, 262, 264, 269, 274, 276, 277, 278], "win_setup_conda": [], "win_setup_env": [], "circl": [], "ci": [7, 22, 26, 41, 252, 254], "correct": [18, 19, 22, 43, 46, 264], "virtual": [21, 33, 39, 48, 248, 269], "unfamiliar": [], "requisit": [], "ll": [18, 21, 23, 24, 39, 46, 264, 270, 277, 278], "fork": [], "click": [11, 13, 17, 18, 19, 22, 23, 24, 25, 30, 34, 38, 39, 40, 41, 46, 121, 132, 133, 257, 258, 259, 261, 262, 268, 269, 271, 277, 278], "right": [7, 18, 22, 23, 24, 38], "corner": [18, 22, 38], "choos": [18, 21, 24, 26, 38, 39, 43, 46, 48, 56, 251, 261, 264, 272], "target": [15, 19, 28, 34, 38, 82, 96, 222, 238, 252, 256, 258, 268], "account": [11, 18, 19, 21, 22, 24, 31, 39, 49, 80, 81, 220, 221, 235, 256], "further": [6, 9, 11, 12, 15, 16, 21, 23, 29, 32, 34, 47, 48, 54, 248, 254, 261, 266, 272], "consult": [11, 15, 16, 19, 20, 28, 29, 32, 49, 251, 264, 269, 270], "repo": [6, 25, 26, 37, 43, 254], "almost": [31, 264], "readi": [17, 18, 19, 21, 26, 43, 48, 55, 174, 276, 277, 278], "termin": [13, 22, 23, 24, 30, 34, 38, 39, 40, 46, 48, 258, 262, 264, 268, 269, 271, 272, 274, 276, 277, 278], "navig": [22, 23, 24, 30, 31, 37, 38, 40, 46, 48, 248, 264, 270, 274, 276, 277, 278], "instal": [10, 11, 15, 17, 19, 21, 25, 30, 38, 39, 43, 47, 48, 50, 52, 65, 188, 246, 252, 254, 256, 257, 264, 269, 270, 272, 273, 275, 276, 277, 278], "everyth": 235, "onc": [12, 15, 18, 21, 22, 23, 24, 31, 33, 34, 40, 43, 46, 48, 50, 73, 212, 268, 269, 270], "execut": [10, 15, 18, 19, 21, 22, 23, 24, 27, 30, 31, 33, 34, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 54, 86, 96, 120, 146, 148, 161, 184, 189, 190, 194, 195, 204, 226, 238, 251, 256, 258, 259, 260, 261, 262, 264, 268, 269], "successfulli": [14, 17, 18, 21, 22, 23, 24, 33, 268, 269, 273], "saniti": [], "ensur": [1, 7, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 30, 37, 39, 40, 44, 54, 163, 254, 264, 268, 269, 270, 273, 274], "fail": [18, 50, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 157, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 260], "plan": [7, 11, 18, 41, 96, 238, 256], "relat": [23, 34, 40, 47, 52, 183, 252], "suit": [22, 50], "place": [17, 18, 22, 30, 33, 34, 37, 54, 253, 256, 257, 269, 270, 276, 277, 278], "focu": [19, 21], "three": [13, 26, 31, 40, 47, 48, 207, 252, 258, 268, 269, 271, 273], "plugin": [11, 15, 18, 27, 31, 33, 34, 39, 40, 41, 42, 53, 54, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 260, 269, 270], "primari": [1, 18, 44, 84, 96, 207, 224, 238, 276], "introduc": [1, 9, 12, 13, 24, 33, 40, 41, 44, 47, 48, 248, 258, 259, 268, 269, 272, 277], "too": [18, 34, 37, 54, 185, 254, 264], "mani": [11, 13, 14, 18, 21, 24, 33, 34, 49, 54, 56, 257, 266, 268], "depend": [1, 15, 17, 18, 19, 21, 22, 23, 24, 27, 28, 30, 31, 37, 43, 46, 47, 48, 50, 53, 54, 95, 158, 190, 237, 240, 246, 249, 258, 261, 264, 269, 273, 276], "airflow": [28, 43, 252], "typic": [9, 10, 22, 27, 44, 194, 252, 253, 254, 257, 266, 268, 272], "small": [37, 52, 277, 278], "push": [18, 19, 31], "break": [18, 26, 33, 37, 38, 46, 257, 258, 264], "backward": 105, "compat": [8, 9, 22, 40, 43, 46, 86, 87, 89, 93, 105, 226, 227, 229, 234, 254], "off": 37, "intend": [13, 33, 34, 41, 268], "pr": 6, "unit": [8, 27, 34, 47, 256], "end": [14, 18, 19, 29, 34, 40, 41, 49, 50, 54, 161, 174, 190, 226, 258, 262, 264], "e2": [19, 29, 258], "linter": [23, 37], "lint": [23, 36, 47, 53], "open": [9, 10, 11, 15, 17, 21, 22, 23, 24, 25, 30, 38, 39, 40, 41, 48, 54, 55, 67, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 86, 89, 90, 91, 92, 100, 101, 102, 103, 205, 208, 209, 210, 211, 212, 213, 214, 215, 222, 223, 226, 229, 230, 231, 232, 243, 244, 245, 247, 258, 261, 264, 266, 269, 271, 276], "org": [6, 38, 39, 43, 46, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 96, 97, 99, 101, 102, 103, 174, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 237, 238, 239, 240, 241, 242, 244, 245, 247], "NOT": [11, 96, 238], "await": [], "review": [6, 7, 8, 9, 13, 19, 21, 30, 37, 46, 48, 56, 252, 268, 269, 271, 272, 273, 276, 277], "comment": [24, 251, 276], "team": [7, 17, 252, 257, 266], "address": [14, 21, 24, 34, 39, 256], "complet": [14, 18, 19, 21, 22, 23, 24, 34, 37, 40, 48, 50, 54, 96, 121, 238, 258, 260, 268, 269, 270, 272, 274, 276], "over": [7, 8, 13, 34, 40, 44, 60, 62, 63, 143, 161, 235, 250, 268], "abandon": [], "instruct": [1, 14, 17, 18, 21, 23, 27, 30, 31, 46, 207, 268, 270], "resolv": [10, 44, 47, 62, 63, 96, 190, 238, 259, 266], "give": [9, 18, 30, 33, 34, 48, 54, 190, 192, 254, 257, 258, 259, 264, 268], "cross": [], "platform": [8, 14, 15, 19, 32], "maco": [34, 38, 39, 46], "linux": [34, 38, 39, 46, 48, 269, 276], "semant": [27, 47], "7": [8, 22, 23, 24, 33, 34, 38, 46, 56, 68, 98, 206, 217, 241, 259, 264, 268, 274], "onward": [9, 276], "style": [37, 43], "cascad": [], "pep": [37, 258], "8": [8, 9, 19, 23, 24, 33, 37, 54, 68, 206, 217, 235, 259, 264, 268, 274], "googl": [9, 32, 80, 81, 220, 221], "docstr": [], "484": [], "face": 7, "count_truthi": [], "elem": [], "cleanli": [], "cd": [7, 15, 17, 22, 23, 24, 26, 33, 40, 46, 48, 252, 274], "ruff": [], "black": [34, 37, 108, 252, 274], "100": [33, 74, 75, 76, 81, 204, 213, 214, 215, 221, 254, 269, 271], "coverag": [11, 34], "pytest": [34, 43, 47, 52, 251, 252, 274], "cov": 274, "behav": [43, 261], "pyspark": [10, 14, 53, 94, 95, 96, 97, 207, 236, 237, 238, 239, 248, 252, 261], "hive": [10, 85, 96, 225, 238], "lack": [60, 62, 63], "java": [], "java_hom": [], "usr": 19, "libexec": [], "v": [23, 24, 25, 34, 39, 46, 60, 62, 63, 259, 261, 262, 274], "workaround": [], "conftest": [], "fixtur": 33, "reusabl": [252, 257, 268], "squash": [], "clariti": [], "suggest": [23, 194], "chri": [], "beam": [], "hi": [], "post": [6, 35, 44, 46, 66, 204, 252], "write": [6, 7, 8, 12, 14, 18, 23, 33, 38, 39, 44, 47, 54, 67, 78, 81, 82, 95, 101, 102, 170, 205, 207, 217, 218, 221, 222, 237, 240, 244, 245, 246, 254, 261, 264, 269], "particular": [9, 11, 18, 34, 52, 158, 161, 174, 264], "limit": [17, 174, 248, 260, 261], "length": [10, 37, 48, 246], "50": 48, "charact": [13, 48, 252, 256, 257, 261], "capitalis": [], "letter": 194, "word": 54, "omit": [37, 174], "period": [7, 31], "imper": [], "tens": [], "hook": [14, 21, 30, 33, 34, 35, 41, 53, 143, 161, 196, 197, 198, 199, 200, 207, 251, 252, 269], "automat": [8, 11, 14, 18, 23, 24, 30, 33, 37, 39, 43, 48, 63, 157, 184, 192, 197, 199, 250, 252, 254, 256, 259, 260, 262, 264, 268, 269, 270], "skip": [47, 235, 260, 268], "verifi": [11, 19, 22, 23, 24, 30, 31], "n": [17, 18, 21, 23, 24, 34, 67, 205, 259, 261, 262, 270], "dure": [9, 10, 14, 19, 21, 23, 24, 33, 35, 40, 95, 96, 152, 153, 161, 194, 204, 237, 238, 240, 257], "uninstal": 46, "compli": 19, "dco": [], "certifi": [], "contributor": [6, 7, 11], "wrote": [], "random": 54, "j": 43, "m": [9, 10, 19, 24, 31, 34, 39, 46, 50, 77, 82, 216, 222, 226, 259, 262, 270], "rememb": [22, 23, 24, 26, 264], "everi": [7, 15, 19, 23, 33, 37, 41, 52, 54, 251, 252, 253, 258, 259, 268], "alia": [43, 127, 131, 168, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 252, 256, 265], "setup": [10, 22, 26, 31, 37, 39, 40, 43, 47, 53, 54, 169, 207, 248, 252, 265], "msg": [69, 208], "block": [10, 47, 258, 259, 266], "unsign": [], "rebas": [], "retroact": [], "learn": [7, 16, 22, 24, 26, 29, 39, 40, 43, 44, 47, 48, 51, 52, 241, 257, 258, 266, 268, 272, 274], "resourc": [9, 19, 27, 33, 53, 54, 56, 80, 81, 174, 220, 221, 261], "timer": 50, "q": [], "discuss": [6, 7, 15, 19, 46, 272, 276], "searchabl": [46, 272, 276], "archiv": [46, 272, 276], "cloud": [9, 17, 19, 27, 29, 32, 34, 40, 80, 81, 220, 221, 256, 271], "scienc": [25, 34, 40, 53, 55, 260, 269, 272, 274], "improv": [19, 23, 40, 44], "experi": [11, 22, 25, 29, 43, 47, 53, 56, 101, 102, 244, 245], "effici": [23, 258, 268], "cycl": [], "individu": [14, 27, 37, 49, 272], "authent": [24, 31, 49, 235], "workspac": [23, 25, 26, 39, 207], "exist": [1, 7, 8, 10, 11, 13, 14, 21, 23, 24, 33, 34, 38, 39, 40, 43, 44, 46, 48, 52, 54, 60, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 139, 174, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 256, 257, 259, 261, 262, 264, 268, 273, 278], "cluster": [9, 17, 21, 23, 24, 25, 29, 43, 54], "gnu": [], "clone": [23, 24, 28, 31], "similar": [0, 8, 12, 22, 23, 24, 27, 34, 44, 48, 50, 95, 237, 240, 252, 257, 259, 264, 268, 269, 273], "gener": [8, 9, 11, 14, 15, 19, 22, 24, 25, 31, 33, 34, 43, 44, 46, 48, 53, 54, 68, 69, 74, 75, 76, 77, 78, 84, 85, 86, 87, 89, 91, 92, 134, 157, 200, 206, 208, 213, 214, 215, 216, 218, 224, 225, 226, 227, 229, 231, 232, 241, 246, 248, 252, 253, 256, 257, 260, 262, 266, 268, 270, 273, 274, 276, 277, 278], "manual": [22, 23, 30, 31, 33, 39, 48, 184, 248, 257, 268], "wheel": [15, 22, 31, 270], "makefil": [], "autom": [22, 26, 36, 53, 251], "save": [11, 17, 21, 23, 24, 27, 31, 34, 37, 40, 41, 47, 50, 53, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 149, 150, 161, 174, 182, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 256, 262, 264, 265, 266, 268, 269, 270, 276], "left": [18, 23, 38, 39, 40, 56], "chosen": 24, "1234": [], "567890": [], "abcd1234": [], "0987": [], "654321": [], "9876xywz": [], "databricks_cluster_id": [], "powershel": 34, "With": [22, 23, 24, 38, 254, 258, 264], "parent": [34, 40, 47, 190, 252, 272], "stream": [54, 108, 240], "written": [11, 14, 17, 27, 33, 94, 95, 236, 261, 264, 270], "behind": [8, 44, 86, 87, 226, 227, 258], "scene": [8, 86, 87, 226, 227, 258], "upload": [10, 20], "dbf": [94, 95, 236, 237, 240], "queue": 30, "restart": [264, 273], "unavail": [], "poll": 18, "statu": [18, 22], "grep": [], "select": [7, 8, 10, 22, 23, 24, 27, 37, 38, 39, 40, 41, 46, 80, 82, 86, 95, 190, 220, 222, 226, 237, 240, 264, 270], "success": [7, 18, 22, 31, 121, 264], "cluster_id": [], "library_status": [], "tmp": [71, 210], "py3": [15, 19, 256], "is_library_for_all_clust": [], "fals": [8, 9, 10, 14, 18, 21, 30, 34, 62, 68, 72, 73, 77, 78, 81, 82, 84, 85, 87, 88, 98, 99, 101, 102, 103, 134, 138, 161, 174, 196, 197, 198, 199, 200, 206, 211, 212, 216, 218, 221, 222, 224, 225, 227, 228, 233, 241, 242, 244, 245, 247, 254, 258, 262, 273], "reflect": [23, 276], "latest": [8, 9, 11, 19, 22, 24, 30, 31, 46, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 157, 174, 182, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 252], "welcom": 6, "someth": [14, 39, 52, 266, 273], "incorrect": 143, "miss": [10, 21, 33, 34, 37, 63, 158, 196, 197, 198, 199, 261, 264, 273], "tell": [17, 18, 39], "yourself": 27, "guidelin": [6, 37], "wiki": [6, 67, 103, 205, 247], "markdown": 270, "sphinx": 34, "coordin": [10, 40], "script": [17, 18, 21, 22, 27, 30, 31, 38, 39, 40, 41, 46, 183, 252], "unix": [38, 39, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "pandoc": [], "fine": [24, 157], "As": [10, 13, 14, 17, 19, 22, 24, 27, 33, 37, 54, 235, 250, 252, 256, 260, 262, 268], "long": [7, 27, 35, 37, 48, 185, 204, 252, 262], "effort": [82, 222], "render": [17, 254, 257, 268, 276], "basic": [11, 12, 24, 27, 33, 37, 47, 48, 54, 252, 270, 276], "happi": [], "final": [17, 19, 22, 31, 38, 40, 49, 190, 261, 264, 266, 270], "draft": [], "peopl": [21, 33], "who": [7, 24, 26, 266], "comfort": [26, 271], "probabl": [], "jump": [], "doc": [15, 30, 33, 34, 38, 47, 68, 69, 70, 72, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 93, 95, 96, 97, 101, 102, 174, 206, 208, 209, 211, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 234, 235, 237, 238, 239, 240, 244, 245, 252, 270], "few": [19, 33, 35, 37, 40, 41, 48, 188], "minut": [19, 22, 66, 272], "finish": [18, 19, 21, 22, 23, 24, 38, 50, 262, 271], "html": [22, 43, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 100, 101, 102, 103, 157, 174, 184, 185, 188, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 273], "collat": [], "rst": [11, 270], "tabl": [9, 44, 54, 56, 80, 81, 83, 87, 96, 97, 207, 217, 220, 221, 223, 227, 235, 238, 239, 268, 270, 277], "rest": [14, 19, 22, 23, 24, 48, 138, 204, 274], "relev": [14, 31, 34, 52, 73, 212, 258, 264, 273], "via": [7, 14, 33, 34, 40, 52, 54, 82, 97, 222, 235, 239, 252, 256, 257, 268, 270], "There": [6, 11, 22, 23, 33, 37, 39, 40, 47, 48, 56, 82, 222, 268, 270, 272, 273, 278], "shame": [], "incredibli": [], "fussi": [], "even": [10, 14, 21, 23, 37, 40, 41, 254, 256, 257, 277, 278], "wrong": [], "sometim": [14, 41, 54, 254, 257, 258, 262], "caus": [257, 273], "problem": [11, 19, 33, 46], "crop": [], "whether": [11, 14, 26, 27, 28, 30, 48, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 152, 161, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 273, 276], "re": [10, 11, 17, 18, 19, 21, 26, 27, 29, 31, 35, 39, 50, 161, 248, 257, 258, 261, 262, 264, 273, 276], "technic": 44, "experienc": [], "less": [37, 82, 222, 246, 260], "familiar": [12, 48, 272, 276], "conda": [22, 23, 24, 31, 38, 39, 248, 264], "lightweight": [21, 40, 265], "whatev": [6, 264], "manag": [6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 29, 30, 32, 40, 43, 44, 46, 47, 49, 53, 69, 80, 81, 112, 130, 161, 197, 207, 208, 220, 221, 249, 251, 266], "join": [6, 38, 39, 44, 207, 257, 269], "report": [6, 7, 29, 34, 44, 48, 50, 257, 258], "bug": [6, 7, 11, 38, 46], "request": [6, 7, 10, 11, 14, 18, 39, 43, 66, 204, 270], "pull": [6, 7, 11, 27, 30, 31], "awesom": 6, "curat": [6, 56], "propos": 6, "fix": [6, 8, 257], "incub": 7, "lf": [7, 55], "ai": [7, 28, 32, 43, 55], "term": [7, 27, 33, 257], "tsc": 7, "current": [7, 11, 14, 21, 43, 44, 46, 48, 52, 143, 161, 174, 182, 190, 192, 194, 217, 235, 250, 257, 260, 270, 277], "past": [7, 10, 14, 22, 38, 39, 268], "futur": [7, 18, 21, 30, 40, 43, 62, 248], "duti": 7, "charter": 7, "member": [7, 266], "fuel": 7, "continu": [7, 18, 50, 260], "On": [7, 18, 23, 24, 40, 46, 197, 204, 260], "Be": [7, 30], "least": [7, 13, 27, 48, 82, 97, 193, 194, 222, 239, 252, 258], "full": [7, 11, 19, 21, 33, 39, 43, 52, 252, 257, 264, 268, 270, 276], "dai": [7, 69, 208], "week": 7, "help": [7, 10, 15, 17, 18, 23, 26, 33, 35, 37, 41, 46, 53, 55, 248, 257, 262, 270, 273, 276], "attend": 7, "meet": [7, 190, 261], "roadmap": 7, "proactiv": 7, "infrastructur": [7, 19, 30, 252], "prioritis": 7, "move": [7, 18, 19, 24, 47, 48, 252], "forward": 7, "ongo": 7, "pace": 7, "close": [7, 21, 23, 24, 48, 73, 161, 212, 250, 269, 271, 276], "variou": [7, 12, 21, 37, 41, 47, 270], "channel": [7, 48, 272, 276], "just": [7, 11, 19, 22, 34, 38, 52, 190, 254, 264, 268], "marker": 7, "high": [7, 14, 26, 33, 43, 44], "qualiti": [7, 33, 37, 274], "collabor": [7, 47, 53, 266, 276], "understand": [7, 10, 19, 27, 33, 48, 54, 266, 272], "intern": [7, 11, 80, 86, 87, 97, 131, 161, 220, 226, 227, 239, 257], "backlog": 7, "toward": [7, 29, 33], "goal": 7, "evid": 7, "excit": 7, "relationship": [7, 259], "ari": 7, "valtazano": 7, "nikolao": 7, "tsaousi": 7, "quantumblack": 7, "solv": [7, 41, 257, 258], "challeng": 7, "Their": [7, 21], "turn": [0, 7, 54, 260, 266, 268], "peteri": 7, "erin": 7, "ivan": [7, 272], "danov": 7, "kaltsa": 7, "meisam": 7, "emamjom": 7, "core": [7, 11, 19, 33, 49, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 99, 100, 101, 102, 103, 170, 197, 199, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 241, 242, 243, 244, 245, 247, 248, 252, 258, 268, 273], "consist": [7, 11, 14, 19, 22, 23, 24, 37, 51, 52, 259, 268, 274], "ahdra": 7, "merali": 7, "andrew": 7, "mackai": 7, "ankita": 7, "katiyar": 7, "antoni": 7, "miln": 7, "deepyaman": [7, 43], "datta": [7, 43], "dmitri": 7, "sorokin": 7, "huong": 7, "nguyen": [7, 43], "jitendra": 7, "gundaniya": 7, "jo": 7, "stichburi": 7, "joel": 7, "schwarzmann": 7, "juan": 7, "lui": 7, "cano": 7, "laura": 7, "couto": 7, "marcin": 7, "zab\u0142ocki": 7, "merel": 7, "theisen": 7, "nero": 7, "okwa": 7, "nok": 7, "lam": 7, "chan": 7, "rashida": 7, "kanchwala": 7, "ravi": 7, "kumar": 7, "pilla": 7, "sajid": 7, "alam": 7, "stephani": 7, "kaiser": 7, "tynan": 7, "debold": 7, "vladimir": 7, "nikol": 7, "yetund": 7, "dada": 7, "former": 7, "signific": [7, 260, 261], "andrii": 7, "ivaniuk": 7, "anton": 7, "kirilenko": 7, "cvetanka": 7, "nechevska": 7, "dmitrii": 7, "deriabin": 7, "gabriel": [7, 43], "comym": 7, "gordon": 7, "wriglei": 7, "hamza": 7, "oza": 7, "ignacio": 7, "paricio": 7, "jannic": 7, "holzer": 7, "jiri": 7, "klein": 7, "kiyohito": 7, "kunii": 7, "la\u00ed": 7, "carvalho": 7, "liam": 7, "brummitt": 7, "lim": 7, "hoang": 7, "lorena": 7, "b\u0103lan": 7, "nasef": 7, "khan": 7, "richard": 7, "westenra": 7, "susanna": 7, "wong": 7, "zain": [7, 43], "patel": [7, 43], "quarter": 7, "year": [7, 10, 19, 66, 204], "shown": [7, 40, 47, 174, 254, 259, 264, 277, 278], "regular": [7, 14, 174, 258], "prior": [7, 43], "month": [7, 14], "candid": [7, 268], "decid": [7, 10, 28, 30, 252, 268], "lead": [7, 8, 13], "host": [7, 10, 30, 39, 43, 55], "affect": [7, 14, 50, 257], "amend": [7, 11], "decis": [7, 26, 30, 48], "act": [7, 19, 43, 48, 174], "onto": [7, 28, 31, 46], "shareabl": 257, "registri": [9, 12, 17, 18, 19, 27, 34, 40, 47, 53, 157, 255, 263, 264, 266, 271], "connector": [43, 65, 203, 235], "reproduc": [22, 26, 34, 43, 55, 266], "copi": [10, 15, 18, 19, 21, 22, 23, 39, 54, 60, 62, 63, 161, 174, 190, 194, 257, 258, 266, 268, 276, 277, 278], "second": [9, 10, 19, 23, 24, 33, 47, 49, 66, 82, 190, 222, 235, 256, 259, 264, 268], "sampl": [9, 37, 48, 86, 87, 98, 226, 227, 241, 258, 264, 273], "prototyp": 9, "mean": [10, 11, 14, 18, 19, 23, 25, 31, 33, 40, 43, 52, 54, 253, 258, 259, 260, 262, 266, 268, 270, 278], "detect": [9, 43, 254, 260], "usernam": [9, 10, 19, 24, 40, 204, 264, 274], "password": [9, 10, 19, 24, 38, 66, 93, 97, 204, 226, 234, 235, 239, 274], "certain": [9, 257, 266], "programmat": [14, 17, 18, 22, 27, 30, 262], "fsspec": [9, 14, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 241, 242, 243, 244, 245, 247, 271], "reli": [9, 11, 33, 43, 52], "varieti": [9, 37, 266, 271], "network": [9, 27, 271], "object": [8, 9, 14, 21, 22, 33, 48, 53, 60, 62, 63, 66, 71, 73, 80, 81, 89, 93, 94, 143, 157, 161, 163, 165, 174, 190, 192, 193, 194, 196, 197, 198, 199, 202, 210, 212, 217, 220, 221, 229, 234, 236, 240, 246, 250, 257, 260, 261, 268, 269, 271, 273, 278], "hadoop": 9, "url": [9, 10, 22, 23, 24, 38, 66, 86, 87, 93, 97, 131, 204, 226, 227, 234, 239, 256], "form": [9, 21, 44, 60, 62, 97, 197, 199, 207, 239, 252, 258, 259, 268, 269], "protocol": [9, 11, 14, 22, 23, 67, 69, 70, 71, 72, 73, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 205, 208, 209, 210, 211, 212, 216, 217, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 241, 242, 243, 244, 245, 247], "prepend": 9, "absenc": 9, "permit": 9, "rel": [9, 26], "port": [9, 10, 39, 226, 235], "resili": 9, "replic": 9, "amazon": [9, 18, 19, 28, 43], "often": [9, 21, 27, 33, 258], "ec2": [9, 18], "s3f": [9, 19], "_to": 9, "comput": [0, 9, 17, 19, 21, 27, 31, 38, 39, 40, 41, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 152, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 237, 241, 242, 243, 244, 245, 247, 259, 262, 266, 270], "gcsf": 9, "lake": [9, 53, 217], "gen2": 9, "abf": [9, 10, 84, 85, 217, 224, 225], "web": [9, 25, 40], "ftp": 9, "webhdf": 9, "purpos": [9, 11, 15, 17, 18, 23, 24, 27, 31, 33, 35, 41, 44, 257, 266, 268], "fs_arg": [9, 10, 11, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 98, 99, 100, 101, 102, 103, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 241, 242, 243, 244, 245, 246, 247], "load_arg": [0, 8, 9, 10, 13, 14, 54, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 99, 174, 204, 205, 206, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 258, 271], "open_args_load": [9, 10, 67, 69, 70, 72, 74, 75, 76, 82, 83, 86, 89, 90, 91, 92, 100, 101, 102, 103, 205, 208, 209, 211, 213, 214, 215, 222, 223, 226, 229, 230, 231, 232, 243, 244, 245, 247], "open_args_sav": [9, 10, 67, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 86, 89, 90, 91, 92, 100, 101, 102, 103, 205, 208, 209, 210, 211, 212, 213, 214, 215, 222, 223, 226, 229, 230, 231, 232, 243, 244, 245, 247], "test_dataset": [9, 10], "test_project": 9, "oper": [8, 9, 10, 13, 14, 24, 27, 54, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 121, 149, 174, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 256, 257, 261], "respect": [9, 10, 11, 18, 21, 34, 40, 50, 95, 217, 237, 240, 251, 254, 257], "mode": [9, 10, 11, 13, 54, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 86, 89, 90, 91, 92, 95, 100, 101, 102, 103, 152, 169, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 222, 223, 226, 229, 230, 231, 232, 235, 237, 240, 243, 244, 245, 247, 248, 252, 258, 261], "rb": [9, 10, 261], "third": [9, 10, 23, 24, 39, 260, 270], "parti": [9, 10, 39, 270], "bike": [8, 10], "sep": [8, 9, 10, 54, 77, 82, 95, 216, 222, 233, 237], "date_format": [9, 10, 77, 82, 216, 222], "y": [9, 10, 19, 23, 24, 46, 50, 77, 78, 82, 91, 92, 216, 218, 222, 226, 231, 232, 258, 259, 262, 268, 270, 278], "d": [9, 10, 18, 21, 34, 50, 60, 62, 63, 77, 82, 190, 194, 216, 222, 226, 256, 258, 260, 261, 262], "h": [9, 10, 19, 34, 50, 77, 92, 216, 226, 232, 278], "decim": [9, 10, 77, 216], "gzip": [10, 68, 85, 206, 225], "motorbik": [8, 9, 10, 77, 79, 216, 219, 233, 246], "your_bucket": [9, 10, 49, 54, 72, 77, 78, 79, 89, 95, 98, 211, 216, 218, 219, 229, 233, 237, 241, 246, 265], "skiprow": [8, 10], "skipfoot": [8, 10], "na_valu": [8, 10, 77, 82, 216, 222], "na": [8, 10, 77, 82, 216, 222], "airplan": [10, 82, 222], "pickledataset": [9, 10, 13, 15, 18, 19, 268, 276], "06_model": [10, 13, 15, 22, 23, 24, 99, 242, 268, 276], "pkl": [10, 13, 15, 89, 229], "backend": [10, 30, 68, 89, 93, 206, 229, 234], "rocket": [10, 78, 218], "exceldataset": [9, 10, 13, 18, 19, 248, 268, 269, 271, 274, 276, 277, 278], "xlsx": [9, 10, 13, 18, 19, 78, 218, 269, 271, 276, 277], "my_gcp_credenti": [8, 10, 72, 78, 98, 211, 218, 241], "sheet_nam": [10, 78, 218], "sheet1": [10, 78, 218], "sheet2": [10, 78, 218], "sheet3": [10, 78, 218], "results_plot": 10, "matplotlibwrit": [9, 10, 40, 278], "08_result": 10, "plot": [10, 53, 73, 92, 212, 232, 278], "output_1": 10, "jpeg": 10, "skateboard": 10, "hdfdataset": [9, 10], "column": [10, 40, 68, 79, 85, 92, 96, 206, 207, 219, 225, 232, 238, 254, 258, 268, 269, 278], "brand": [8, 10], "w": [10, 37, 67, 69, 72, 74, 75, 76, 82, 90, 91, 92, 100, 101, 102, 103, 205, 208, 211, 213, 214, 215, 222, 230, 231, 232, 243, 244, 245, 247, 258], "dropna": [10, 193, 269], "truck": [10, 85, 225], "parquetdataset": [8, 9, 10, 13, 174, 248, 268, 269, 273, 274, 276, 278], "gear": [8, 10, 85, 225], "disp": [10, 85, 225], "wt": [10, 85, 225], "categori": [10, 248, 256, 271], "file_schem": [10, 85, 225], "has_nul": [10, 85, 225], "partition_on": [10, 85, 225], "weather": [10, 49, 54, 94, 95, 97, 235, 236, 237, 239], "header": [10, 54, 66, 95, 204, 237, 240, 256, 258], "inferschema": [10, 54, 95, 237], "scooter": [8, 10], "sqltabledataset": [8, 10, 86, 226], "scooters_credenti": [8, 10], "table_nam": [8, 10, 81, 87, 96, 221, 227, 235, 238], "index_col": [10, 226], "if_exist": [10, 87, 227, 265], "scooters_queri": [8, 10], "sqlquerydataset": [8, 10], "con": [8, 10, 86, 87, 226, 227], "sqlalchemi": [8, 10, 86, 87, 226, 227], "explicitli": [10, 14, 43, 68, 163, 192, 206, 250, 253, 257, 261, 264], "us_corn_yield_data": 10, "apidataset": [9, 10], "quickstat": [10, 66, 204], "nass": [10, 66, 204], "gov": [10, 66, 204], "usda_credenti": 10, "some_token": [10, 66, 204], "commodity_desc": [10, 66, 204], "statisticcat_d": [10, 66, 204], "agg_level_desc": [10, 66, 204], "2000": [10, 66, 204], "usda_credienti": 10, "auth": [10, 66, 80, 81, 204, 220, 221], "dev_minio": 10, "token": [8, 10, 11, 22, 23, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 205, 206, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 241, 242, 243, 244, 245, 246, 247, 256], "localhost": [10, 30, 86, 87, 97, 226, 227, 239], "9000": 10, "easiest": [10, 11, 15, 63], "docker": [10, 17, 18, 20, 27, 28, 29, 31, 43, 252], "after": [8, 10, 14, 15, 17, 18, 19, 23, 24, 27, 31, 33, 40, 41, 43, 49, 50, 51, 52, 54, 60, 62, 121, 149, 150, 151, 152, 153, 161, 190, 204, 250, 252, 254, 256, 258, 260, 270, 277], "p": [10, 11, 17, 19, 30, 34, 39], "minio_access_kei": 10, "minio_secret_kei": 10, "ml_model": 10, "dev_ab": [10, 85, 225], "account_nam": 10, "account_kei": 10, "accountnam": 10, "paramiko": 10, "pip": [1, 10, 11, 15, 17, 19, 22, 23, 24, 25, 27, 31, 33, 34, 37, 39, 40, 48, 50, 65, 248, 252, 256, 269, 270, 273, 274, 275, 276, 278], "cool_dataset": 10, "sftp": 10, "remote_clust": 10, "cool_data": 10, "cluster_credenti": 10, "establish": 10, "my_usernam": 10, "host_address": 10, "22": [10, 24, 37, 268, 269, 274], "conf_root": [10, 34], "pipeline_nam": [10, 13, 17, 18, 21, 30, 34, 39, 153, 161, 256, 257, 260, 264, 269], "metadata": [17, 19, 30, 40, 43, 121, 167, 168, 169, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 264, 266, 276, 277, 278], "wish": [13, 43, 48, 217, 251, 254, 264, 270], "attempt": [8, 9, 14, 43, 161, 162, 190], "from_config": [8, 9, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "sqlite": [8, 40], "db": [8, 40, 60, 93, 234], "id_token": 8, "receiv": [9, 10, 14, 19, 121, 138, 149, 152, 258], "essenti": [], "equival": [9, 37, 43, 82, 222, 264, 270, 271], "test_bucket": 8, "syntax": [1, 10, 13, 34, 44, 62, 158, 256, 261], "factoris": 10, "spend": 10, "_csv": [10, 13], "insert": [10, 35, 60, 62, 96, 217, 238], "overrid": [9, 10, 11, 21, 43, 44, 60, 62, 254, 268], "ones": [10, 52, 194, 246], "seen": [10, 257, 269, 278], "reuseabl": 10, "csv_load_arg": 10, "normal": [10, 14, 19, 27, 66, 96, 97, 238, 239], "factory_data": 13, "process_data": 13, "_data": 13, "enclos": 13, "combin": [13, 26, 34, 40, 44, 48, 63, 258, 259, 260, 261, 264, 266, 268, 269], "plane": [13, 174], "shuttl": [9, 13, 18, 19, 78, 80, 86, 87, 218, 220, 226, 227, 268, 269, 271, 272, 273, 276, 277, 278], "dataset_nam": [13, 34, 49, 50, 150], "project_nam": [13, 19, 30, 31, 41, 48, 168, 251, 252, 264], "suffix": [13, 14], "create_model_input_t": [13, 268, 269], "preprocess_compani": [13, 40, 268, 269], "preprocess_shuttl": [13, 268, 269], "create_pipelin": [13, 54, 157, 260, 268, 269, 278], "kwarg": [13, 19, 43, 54, 66, 92, 96, 135, 136, 140, 188, 232, 238, 268, 269, 278], "preprocess_boat": 13, "preprocessed_boat": 13, "preprocess_boats_nod": 13, "preprocess_car": 13, "preprocessed_car": 13, "preprocess_cars_nod": 13, "preprocess_plan": 13, "preprocessed_plan": 13, "preprocess_planes_nod": 13, "model_input_t": [13, 18, 19, 268, 269, 273, 276], "create_model_input_table_nod": [13, 268, 269, 276], "belong": 13, "modular": [13, 43, 44, 47, 53, 55, 157, 191, 248, 255, 256, 259, 264, 269], "regressor": [13, 18, 19, 40, 268, 276], "active_modelling_pipelin": [13, 268], "candidate_modelling_pipelin": [13, 268], "modular_pipelin": [13, 257, 268], "evaluate_model": [13, 40, 268], "split_data": [13, 48, 50, 258, 264, 268], "pipeline_inst": [13, 268], "x_train": [13, 18, 19, 50, 258, 264, 268], "y_train": [13, 18, 19, 50, 258, 264, 268], "split_data_nod": [13, 268], "train_model_nod": [13, 268], "ds_pipeline_1": [13, 268], "pipe": [13, 192, 257, 268], "ds_pipeline_2": [13, 268], "regressor_": 13, "pq": [13, 269, 276], "metric": [13, 22, 25, 43, 51, 53, 102, 245, 258, 268], "bodi": 13, "situat": [10, 13, 14], "overcom": 13, "sort": [13, 14, 37, 174, 190, 198], "potenti": [13, 23, 37], "pick": [13, 43], "best": [13, 26, 27, 34, 46, 48, 54, 55, 82, 207, 222, 263, 264, 266], "rank": 8, "criteria": [13, 174], "exact": [8, 13, 24, 60, 62, 194, 226, 248], "between": [1, 8, 11, 13, 14, 17, 18, 19, 24, 43, 143, 174, 257, 264, 266, 268, 269, 275], "preprocess": [13, 40, 258], "alphabet": [13, 37], "creation": [13, 15, 22, 24, 40, 43, 48, 149, 157, 194], "default_dataset": 13, "mention": 13, "explicit": [13, 14], "implement": [9, 10, 14, 19, 22, 33, 35, 41, 43, 49, 50, 54, 65, 110, 112, 119, 130, 147, 160, 163, 165, 166, 174, 196, 197, 198, 199, 258, 261, 268], "etc": [8, 10, 11, 14, 27, 31, 34, 38, 39, 66], "my_datafram": 10, "my_func1": 10, "spark_input": 10, "my_func2": 10, "pipeline_output": 10, "datafram": [8, 9, 10, 14, 40, 43, 53, 68, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 174, 193, 194, 204, 206, 207, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 258, 268, 269, 271, 278], "simpl": [22, 47, 48, 52, 89, 93, 108, 229, 234, 258, 259, 261, 278], "perform": [22, 24, 27, 40, 41, 44, 48, 54, 96, 238, 248, 261, 268], "machin": [16, 17, 19, 21, 22, 23, 25, 27, 28, 29, 30, 38, 40, 43, 44, 46, 47, 48, 51, 197, 256, 258, 266, 269, 270, 276], "actual": [14, 21, 35, 40, 150, 152, 254, 257, 261, 278], "global": [19, 23, 24, 31, 54, 63, 118, 146, 272], "yyyi": [9, 11, 34, 182], "mm": [9, 11, 34, 182], "ddthh": [9, 11, 34, 182], "ss": [9, 11, 34, 182], "sssz": [9, 11, 34, 182], "timestamp": [9, 14, 34, 40, 161, 182, 264], "io": [8, 11, 14, 15, 17, 18, 21, 30, 50, 52, 54, 62, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 99, 100, 101, 102, 103, 119, 120, 147, 148, 157, 184, 185, 188, 190, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 237, 241, 242, 243, 244, 245, 247, 251, 258, 262, 273], "construct": [8, 19, 43, 44, 60, 62, 161, 258, 259, 260, 264, 268, 269, 272], "sever": [8, 14, 22, 23, 269, 270], "pre": [8, 22, 44, 54, 190, 251, 252, 257, 262, 266, 270], "kedro_dataset": [8, 9, 11, 14, 54, 65, 262, 273], "cars_tabl": 8, "happen": [8, 22, 54, 254, 266, 276], "abstractdataset": [8, 14, 21, 43, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 170, 174, 196, 198, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 261], "retriev": [8, 60, 62, 143, 146, 161, 250, 261], "deleg": [8, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "read_csv": [8, 77, 82, 216, 222, 233], "forget": [], "assign": [18, 53, 194, 260], "cars_cach": 8, "mpg": 8, "clean": [8, 17, 18, 22, 266, 276], "filenotfounderror": [8, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 261, 262, 273], "tutori": [9, 12, 18, 19, 22, 23, 24, 40, 43, 48, 56, 74, 75, 76, 213, 214, 215, 252, 260, 264, 271, 274, 276, 277, 278], "underli": [8, 9, 10, 11, 14, 19, 21, 50, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 161, 174, 186, 192, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 268, 271], "dataseterror": [8, 14, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "deal": [14, 26, 35, 258], "failur": [], "data_set": [21, 30, 66, 67, 68, 69, 70, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 174, 190, 204, 205, 206, 207, 208, 209, 211, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247], "empti": [14, 18, 23, 60, 62, 63, 80, 86, 87, 97, 190, 220, 226, 227, 239, 252], "cars_df": 193, "print": [11, 22, 23, 35, 38, 39, 43, 49, 188, 190, 258, 259, 262, 264], "studi": [], "interfac": [11, 19, 22, 36, 41, 43, 53, 89, 93, 229, 234, 261, 270], "subclass": [11, 14, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 254], "_load": [9, 21], "_save": [9, 21, 204, 258], "enrich": 11, "uniform": [11, 14, 57], "_describ": 21, "direct": [17, 46, 190, 273], "parts_df": [], "attribut": [11, 14, 17, 18, 33, 39, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 127, 131, 143, 161, 168, 182, 190, 194, 197, 202, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 264, 266, 271, 276, 277], "abstractversioneddataset": [9, 11], "AND": [226, 262], "posit": [14, 31, 40, 185], "glob": [11, 62, 63], "filesystem": [9, 10, 14, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 98, 99, 100, 101, 102, 103, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 241, 242, 243, 244, 245, 246, 247, 258, 271], "mid": [], "extern": [14, 17, 18, 96, 97, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 257], "interfer": [], "stai": [192, 257], "throughout": [51, 276, 277, 278], "subsequ": [14, 40, 48, 253, 254, 264], "pathlib": [11, 17, 19, 30, 40, 43, 161, 250], "pureposixpath": 11, "pd": [8, 9, 14, 40, 68, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 97, 174, 193, 206, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 234, 239, 258, 268, 269, 271, 278], "myowndataset": [], "param1": 185, "param2": 185, "_param1": [], "_param2": [], "load_path": 11, "_get_load_path": [9, 11], "df": [40, 54, 174, 226, 265, 278], "save_path": [11, 258], "_get_save_path": [9, 11, 258], "to_csv": [77, 82, 216, 222, 258], "_exist": [21, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "bool": [18, 21, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 161, 174, 190, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "_version": 11, "my_dataset": 0, "my_data": [93, 234], "Its": 43, "repres": [14, 40, 194, 252, 257, 258, 259], "generate_timestamp": [], "car_data": [], "propag": [14, 254], "deliber": 14, "runtim": [19, 22, 23, 24, 49, 190, 250, 257, 266], "pin": [40, 248], "load_vers": [18, 21, 34, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 149, 153, 161, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 264], "2019": [14, 273], "02": [11, 268], "13t14": [], "35": [], "36": 273, "518z": [], "row": [40, 98, 204, 241, 271, 277], "effect": [1, 18, 23, 24, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 257, 266], "save_vers": [52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 149, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "inconsist": [8, 37], "therefor": [11, 17, 18, 22, 23, 41, 54, 80, 143, 161, 220, 250], "some_data": [], "tri": 63, "mitig": [], "reload": [8, 34, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 97, 100, 103, 185, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 243, 247, 264, 273], "reload_kedro": [23, 24, 25, 34, 105, 185], "magic": [23, 24, 25, 34, 105, 185, 186], "initialis": [8, 15, 24, 53, 185, 190, 204, 252], "data1": 8, "col1": [8, 68, 70, 72, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 97, 101, 102, 103, 174, 204, 206, 209, 211, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 239, 244, 245, 247], "col2": [8, 68, 70, 72, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 97, 101, 102, 103, 174, 204, 206, 209, 211, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 239, 244, 245, 247], "4": [8, 10, 14, 17, 33, 34, 40, 68, 70, 72, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 96, 97, 103, 168, 174, 194, 206, 207, 209, 211, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 237, 238, 239, 247, 264, 268, 271, 274], "col3": [8, 68, 70, 72, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 97, 101, 102, 103, 174, 206, 209, 211, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 239, 244, 245, 247], "6": [8, 40, 68, 70, 72, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 97, 99, 103, 168, 174, 206, 209, 211, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 239, 242, 247, 264, 268, 271, 274, 277], "data2": 8, "9": [8, 37, 76, 215, 217, 264, 268, 274, 276], "test_data_set": 8, "assert": [8, 18, 33, 54, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 97, 98, 100, 103, 174, 205, 206, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 239, 241, 243, 247], "did": [], "becom": [8, 22, 35, 37, 54, 190, 192, 257], "slightli": [1, 8, 37, 257, 264, 274], "my_exact_vers": 8, "userwarn": [8, 14, 157], "exact_load_vers": 8, "exact_save_vers": 8, "matplotlib": [9, 40, 248], "holoview": 9, "holoviewswrit": 9, "networkx": 9, "networkxdataset": 9, "featherdataset": 9, "jsondataset": [9, 40, 92, 102, 232, 245, 262, 278], "pillow": [9, 11, 248], "imagedataset": [9, 11], "text": [9, 22, 40, 69, 71, 98, 208, 210, 241, 252, 254, 272], "textdataset": 9, "yamldataset": 9, "tensorflow": [9, 16, 20], "tensorflowmodeldataset": 9, "plai": [14, 27, 39, 40], "increasingli": [14, 33], "role": 14, "etl": [14, 22], "throughput": 14, "larger": [14, 33, 40, 197, 277, 278], "benefit": [14, 19, 27, 43, 259, 263], "encount": [14, 39, 46], "tool": [14, 15, 25, 29, 33, 34, 39, 40, 43, 51, 248, 251, 252, 256, 258, 274], "cater": 14, "feasibl": 14, "why": [14, 264], "partitioneddataset": [], "agnost": [14, 17, 29], "gc": [9, 10, 14, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 98, 100, 101, 102, 103, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 241, 243, 244, 245, 247], "callabl": [14, 30, 120, 148, 193, 194], "my_partitioned_dataset": 14, "bucket": [9, 11, 14, 17, 18, 19, 34, 40, 44, 49, 63, 95, 174, 217, 237], "my_credenti": [14, 49], "load_arg1": 14, "load_arg2": 14, "value2": [14, 34, 185], "granular": 14, "delimit": 14, "filepath_arg": 14, "filename_suffix": [11, 14], "exhaust": [14, 89, 93, 229, 234], "ye": [14, 226], "concret": [14, 52, 67, 68, 69, 70, 72, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 100, 101, 102, 103, 174, 205, 206, 208, 209, 211, 216, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 243, 244, 245, 247], "No": [14, 38, 258, 273], "filesystemcal": 14, "keyword": [9, 11, 14, 63, 95, 237, 251, 257, 258, 264, 268, 271], "initi": [11, 14, 30, 44, 143], "fulli": [11, 14, 16, 20, 26, 32, 174, 190, 253], "qualifi": [14, 174, 190], "dataset_credenti": 14, "deprec": [1, 14, 34, 65, 270], "somewhat": 14, "itself": [14, 54, 80, 220, 257], "around": [14, 40, 52], "never": [14, 44], "scenario": [14, 54, 190], "undefin": [14, 34, 39], "constructor": [9, 11, 14, 21, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 99, 100, 101, 102, 103, 134, 174, 188, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 241, 242, 243, 244, 245, 246, 247, 251, 257], "dataset_secret": 14, "stop": [14, 22, 23, 38, 39, 50, 127, 168, 182], "concat_partit": 14, "concatenated_result": 14, "partitioned_input": 14, "concaten": 14, "arg": [11, 14, 17, 19, 21, 22, 30, 39, 40, 58, 61, 71, 73, 89, 93, 95, 134, 135, 138, 144, 162, 188, 191, 204, 210, 212, 229, 234, 237, 240, 256, 258, 261, 268, 269], "partition_kei": 14, "partition_load_func": 14, "item": [14, 17, 33, 49, 50, 54, 60, 62, 63, 185, 258, 259], "partition_data": 14, "concat": [14, 258], "ignore_index": 14, "consum": [14, 33, 35, 37, 50, 190, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 257, 261], "logic": [0, 12, 14, 19, 47, 193, 194, 257, 258, 266, 268], "uniqu": [14, 18, 40, 174, 190, 194, 217], "12": [1, 12, 13, 14, 22, 24, 34, 40, 43, 86, 94, 95, 96, 207, 217, 236, 237, 238, 261, 264, 273, 278], "04": [14, 23, 273], "cach": [14, 19, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "were": [14, 18, 54, 69, 121, 194, 208, 258, 276], "done": [14, 18, 19, 23, 31, 39, 43, 274], "guarante": [14, 17, 28, 46, 194, 262], "race": 14, "condit": [14, 190, 207], "reset": 14, "new_partitioned_dataset": 14, "create_partit": 14, "foo": [14, 34], "bar": [14, 18, 22, 23, 24, 34, 91, 92, 231, 232, 278], "overwritten": 14, "lost": [14, 43], "simplest": [14, 33, 48, 254], "safeti": 14, "mechan": [14, 41, 43, 51, 52, 253, 261, 266], "chanc": [14, 54], "materialis": 14, "simpli": [14, 33, 38, 43, 46, 54, 256, 258, 264, 266, 270], "after_node_run": [14, 49, 50, 52, 152], "persist": [14, 15, 19, 163, 164, 165, 166, 250, 261, 266, 269], "similarli": [11, 14, 262, 264, 268, 269, 271], "eagerli": [14, 158], "pointer": 14, "comparison": [14, 40, 48], "ident": [14, 31, 49, 188, 261, 264, 265], "downstream": [14, 54, 192, 248, 257, 262], "process_partit": 14, "my_processed_dataset": 14, "defer": 14, "els": [14, 18, 21, 34, 39, 50, 256, 258], "confirm_partit": 14, "do_something_else_with_partit": 14, "though": [14, 24], "won": [14, 18], "deviat": 14, "sai": [14, 49, 264, 273], "undesir": 14, "elsewher": [0, 14, 31, 270], "partial": 14, "kept": 14, "unchang": [14, 204], "k1": 14, "v1": [14, 17], "along": [14, 37, 40, 86, 87, 97, 152, 153, 193, 194, 226, 227, 239, 270], "comparison_func": 14, "gt": 14, "compar": [14, 29, 33, 43, 48, 53, 261], "Such": 14, "filtrat": 14, "calendar": 14, "my_modul": 14, "custom_comparison_funct": 14, "force_checkpoint": 14, "roll": [14, 46], "back": [11, 14, 21, 46, 54, 196, 197, 198, 199, 266, 270, 271, 272], "reprocess": 14, "forc": 14, "2020": [11, 14, 19, 261], "popular": [15, 24, 33], "suitabl": [15, 98, 241, 254], "orchestr": [15, 17, 19, 29, 30, 34, 264], "author": [15, 49, 256], "k8": [15, 43], "getindata": [15, 16, 20, 29, 32, 43], "xebia": [15, 16, 20, 29, 32], "togeth": [15, 34, 35, 37, 50, 190, 217, 259, 260, 269, 272], "At": [11, 15, 23, 24, 39, 41, 170, 252], "present": [15, 25, 38, 44, 50, 60, 62, 63, 96, 127, 168, 174, 182, 193, 194, 238, 252, 256, 262], "spin": 15, "easili": [15, 17, 37, 256, 274], "iri": [15, 22, 23, 24, 25, 43, 252, 258, 265], "classif": [15, 48, 54], "astro": [15, 252], "starter": [15, 19, 22, 23, 24, 33, 37, 40, 41, 44, 48, 53, 207, 249, 258, 260, 264, 265, 268, 269, 271, 273, 274, 276, 277, 278], "boilerpl": [15, 252, 257, 266], "task": [15, 17, 19, 21, 22, 23, 24, 27, 30, 50, 248, 258, 259, 268, 269, 272], "mirror": [15, 19, 33], "quickstart": [15, 66, 270], "mkdir": [11, 15, 19, 33, 46], "dev": [15, 19, 63], "init": [15, 24, 30, 43], "root": [15, 17, 19, 21, 22, 24, 30, 31, 33, 34, 37, 38, 39, 46, 47, 60, 62, 63, 108, 143, 161, 185, 248, 250, 251, 254, 270, 271, 274, 276, 277, 278], "cp": [15, 22, 23, 24], "rm": 15, "dockerfil": [15, 19], "airflow_set": 15, "txt": [15, 19, 23, 24, 27, 31, 34, 37, 40, 48, 100, 139, 243, 248, 252, 256, 257, 273, 274, 276, 278], "pyproject": [15, 31, 33, 34, 37, 46, 47, 168, 251, 256], "toml": [15, 31, 33, 34, 37, 46, 47, 168, 251, 256], "cfg": [15, 37, 47, 252], "example_iris_data": [15, 50, 261, 264], "example_train_x": [15, 264], "05_model_input": [15, 22, 23, 24, 258], "example_train_i": 15, "example_test_x": 15, "example_test_i": 15, "example_model": [15, 50], "example_predict": [15, 54], "07_model_output": [15, 22, 23, 24, 89, 229, 258, 261, 262], "memori": [15, 18, 19, 35, 86, 174, 226, 258, 261, 269], "disk": [15, 161, 164, 250, 261, 262], "produc": [15, 22, 23, 24, 33, 35, 106, 107, 187, 190, 194, 260, 262], "new_kedro_project": 15, "dockerignor": 15, "bundl": [15, 19, 34, 270], "echo": [15, 17, 34], "quai": 15, "ap": 15, "buster": [15, 19], "onbuild": 15, "visit": [15, 19, 35, 39, 41, 43, 54, 120, 148, 190, 261], "ui": [15, 23, 24, 30], "compon": [16, 17, 29, 34, 41, 43, 52, 109, 201, 250, 251, 252, 264, 268], "toolset": 16, "classic": 16, "scikit": [16, 241, 268, 272, 274], "xgboost": 16, "deep": [16, 54], "pytorch": [16, 20], "servic": [16, 18, 19, 22, 32, 43, 68, 206], "recent": [1, 17, 18, 19, 23, 24, 28, 273, 274], "took": [17, 18], "nativ": [17, 18, 19, 20, 40, 72, 101, 102, 211, 244, 245], "parallel": [11, 17, 18, 19, 21, 40, 43, 197, 199, 261, 266, 268, 272], "job": [17, 23, 26, 27, 54], "interest": 17, "intens": [17, 27], "acycl": 17, "graph": [17, 40, 74, 75, 76, 190, 213, 214, 215, 278], "dag": [17, 27, 54], "aw": [17, 27, 28, 31, 40, 174, 217, 256, 270], "prefer": [8, 17, 18, 21, 23, 24, 26, 27, 30, 31, 38, 46, 47, 48, 52], "solut": [17, 18, 19, 27, 29, 31, 33, 40, 265], "imag": [11, 17, 18, 23, 24, 27, 31, 38, 71, 73, 90, 210, 212, 230, 246, 276, 278], "walk": [17, 18, 27, 31, 38, 44], "streamlin": [17, 18, 27, 31], "ve": [17, 18, 27, 31, 48, 251, 264, 276, 277], "transfer": [17, 18, 27, 31, 207, 263], "project_root": [17, 22, 23, 24, 25, 27, 30, 33, 37, 39, 161, 248, 264], "build_argo_spec": 17, "jinja2": [17, 44], "filesystemload": 17, "startup": [17, 19, 30, 43, 161, 250], "bootstrap_project": [17, 19, 30, 161, 250], "template_fil": 17, "argo_spec": 17, "tmpl": 17, "search_path": 17, "generate_argo_config": 17, "searchpath": 17, "template_env": 17, "trim_block": 17, "lstrip_block": 17, "get_templ": 17, "cwd": [17, 19, 30, 33, 43, 161, 250], "__default__": [17, 19, 30, 34, 43, 161, 260, 261, 264, 268, 270, 276], "get_depend": 17, "node_depend": [17, 18, 21, 27, 190], "f": [11, 17, 18, 19, 22, 23, 24, 37, 47, 49, 50, 60, 62, 63, 73, 212, 226, 256, 258, 261, 271], "write_text": 17, "deps_dict": 17, "clean_nam": 17, "dep": [17, 18], "val": 17, "parent_nod": 17, "sub": [17, 19, 60, 62, 266], "w_": [17, 19], "strip": [17, 19, 194, 254], "__name__": [17, 22, 30, 40, 49, 50, 52, 190, 254, 258, 268], "__main__": [17, 22, 30, 33, 38, 39, 252, 270], "apivers": 17, "argoproj": 17, "v1alpha1": 17, "kind": [17, 39, 258, 265], "generatenam": 17, "entrypoint": [17, 19], "label": [17, 39, 43, 98, 241, 252, 258, 268, 276], "abil": [17, 19, 43], "pod": 17, "app": [17, 19, 34, 40, 93, 234], "retrystrategi": 17, "kedro_nod": 17, "imagepullpolici": 17, "valuefrom": 17, "secretkeyref": 17, "access_key_id": 17, "secret_access_kei": 17, "endraw": 17, "endif": 17, "jinja": 17, "languag": [17, 27, 39, 56, 270], "project_imag": 17, "encod": [9, 17], "base64": 17, "opaqu": 17, "original_kei": 17, "namespac": [17, 34, 49, 50, 52, 63, 121, 149, 150, 151, 152, 153, 161, 190, 192, 193, 194, 257, 260], "kubectl": 17, "watch": [17, 23, 46], "delet": [17, 54, 66, 217, 253, 254, 257, 274], "selector": 17, "workabl": 17, "optimis": [18, 26, 54], "scale": [18, 29, 40, 257, 263], "optim": [18, 54, 264], "quantiti": 18, "assist": 18, "schedul": [18, 21, 22, 26, 29, 43, 54], "workload": 18, "demand": 18, "spot": 18, "integr": [8, 18, 20, 22, 23, 24, 26, 28, 31, 35, 40, 43, 51, 53, 122, 191, 278], "cloudwatch": 18, "massiv": 18, "parallelis": [18, 268], "isol": [18, 46, 257, 266, 268], "spaceflight": [9, 18, 19, 33, 40, 48, 53, 56, 80, 86, 220, 226, 252, 260, 264, 268, 269, 271, 272, 275, 277, 278], "sensibl": [18, 251, 252], "node_nam": [18, 19, 21, 27, 34, 153, 161, 190, 264], "aws_batch": 18, "appropri": [18, 38, 39, 49, 82, 134, 174, 191, 217, 222, 257, 260, 264], "preprocessed_compani": [13, 18, 19, 40, 50, 268, 269, 273, 276], "preprocessed_shuttl": [13, 18, 19, 268, 269, 276, 278], "x_test": [18, 19, 40, 50, 258, 264, 268], "y_test": [18, 19, 40, 50, 258, 264, 268], "ecr": [18, 19, 31], "view": [18, 22, 24, 38, 39, 44, 53, 60, 62, 63, 264, 276, 277, 278], "button": [18, 22, 24, 30, 38, 39, 40, 277, 278], "dashboard": [18, 21, 44], "abl": [18, 19, 22, 27, 38, 39, 52, 82, 195, 222, 261, 268, 270, 272], "four": [13, 18, 23, 24], "grant": 18, "polici": [18, 69, 208], "amazons3fullaccess": 18, "newli": [18, 21, 22, 23, 39, 258], "batchjobrol": 18, "kedro_run": 18, "timeout": [18, 19, 66, 204], "300": 18, "2000mb": 18, "leav": [18, 22, 23, 30, 39], "field": [18, 22, 23, 24, 38, 39, 68, 127, 131, 168, 182, 206, 207, 217], "spaceflights_env": 18, "yet": [18, 19, 24, 174, 276, 277, 278], "incur": 18, "immedi": 18, "bridg": 18, "spaceflights_queu": 18, "connect": [8, 18, 21, 24, 40, 44, 47, 68, 86, 87, 93, 97, 192, 206, 226, 227, 234, 235, 239, 257, 259, 264, 266, 275], "prioriti": [18, 34, 235], "region": [18, 19], "leverag": [11, 18, 50, 96, 238], "kedro_tutori": [18, 21, 269], "sure": [1, 18, 21, 22, 26, 27, 30, 33, 39, 40, 46, 252, 256, 261, 270], "batch_runn": 18, "awsbatchrunn": 18, "monitor": [18, 21, 30, 40, 252], "asynchron": [18, 21, 34, 196, 197, 198, 199, 200], "surfac": [18, 21, 158], "occur": [18, 21, 35, 43, 54, 144], "__all__": [18, 21], "concurr": [18, 53, 261, 266], "threadpoolexecutor": 18, "sleep": 18, "boto3": 18, "threadrunn": [11, 18, 53, 261, 268], "max_work": [18, 197, 199], "job_queu": 18, "job_definit": 18, "is_async": [18, 21, 34, 152, 196, 197, 198, 199, 200], "_job_queu": 18, "_job_definit": 18, "_client": [18, 50], "client": [18, 19, 21, 44, 49, 93, 95, 234, 237], "create_default_data_set": [18, 21, 196, 197, 198, 199, 261], "ds_name": [18, 21, 30, 196, 197, 198, 199, 261], "notimplementederror": 18, "_get_required_workers_count": 18, "_max_work": 18, "_run": [18, 21, 261], "pylint": [18, 23, 34, 37, 43], "disabl": [18, 34, 37, 43, 251], "useless": 18, "suppress": 18, "hook_manag": [18, 21, 33, 143, 146, 196, 197, 198, 199, 200, 261], "pluginmanag": [18, 21, 143, 196, 197, 198, 199, 200, 261], "session_id": [18, 21, 30, 50, 152, 153, 161, 164, 166, 196, 197, 198, 199, 200, 261], "todo_nod": 18, "node_to_job": 18, "done_nod": 18, "_logger": [18, 21, 49, 52, 261], "info": [18, 21, 22, 23, 24, 30, 34, 40, 43, 46, 49, 50, 52, 108, 158, 190, 254, 258, 261, 264, 268, 269, 271, 273], "max": [18, 37, 40, 43], "worker": [18, 21, 197, 199], "pool": [18, 30], "reach": [18, 43, 257, 269], "succeed": [18, 22], "fut": 18, "_suggest_resume_scenario": 18, "len": [11, 18, 21, 259, 261, 262], "upstream": [18, 21, 24, 192], "_submit_job": 18, "referenc": 18, "track": [18, 21, 22, 24, 29, 34, 43, 44, 51, 53, 254], "progress": [18, 22, 254, 269], "job_nam": 18, "kedro_": [18, 264], "depends_on": 18, "jobid": 18, "respons": [18, 48, 66, 159, 160, 161, 204, 257], "submit_job": 18, "jobnam": 18, "jobqueu": 18, "jobdefinit": 18, "dependson": [18, 39], "containeroverrid": 18, "job_id": 18, "_track_batch_job": 18, "bombard": 18, "throttl": 18, "describe_job": 18, "statusreason": 18, "prerequist": 18, "nearli": [18, 21], "tag": [18, 19, 21, 27, 31, 43, 49, 153, 161, 190, 192, 193, 194, 252, 261, 264], "sequentialrunn": [11, 18, 21, 34, 262, 268], "_get_values_as_tupl": [18, 21, 34], "kedrosess": [18, 19, 21, 22, 30, 34, 43, 53, 159, 162, 249, 264], "extra_param": [18, 21, 34, 143, 153, 161, 186, 250], "load_context": [18, 21, 30, 43, 161, 250], "runner_inst": [18, 21], "_instantiate_runn": [18, 21], "from_nod": [18, 21, 34, 153, 161, 190, 261, 262, 264, 266], "to_nod": [18, 21, 34, 153, 161, 190, 262, 264, 266], "from_input": [18, 21, 34, 153, 161, 190, 262, 264, 266], "to_output": [18, 21, 34, 153, 161, 190, 264], "project_context": [18, 21, 33], "runner_class": [18, 21], "load_obj": [18, 21, 34], "runner_kwarg": [18, 21], "endswith": [18, 21], "batch_kwarg": 18, "runnabl": [18, 190], "tab": [18, 22, 23, 24, 25, 40, 48, 269, 276], "soon": [1, 18], "pop": [18, 22, 60, 62, 63], "panel": [18, 23, 40, 276, 277, 278], "side": [18, 23, 24, 34, 38, 39, 40, 253, 266], "serverless": 19, "hand": [12, 19, 38, 39, 40, 47, 48, 56, 260], "provis": [19, 22], "scientist": [19, 43, 44, 266], "busi": [19, 258], "azur": [9, 19, 24, 28, 43, 49, 217], "offer": [9, 12, 19, 21, 22, 23, 26, 33, 264, 272, 277], "capabl": [19, 26, 40, 174, 254], "easi": [19, 27, 30, 37, 47, 51, 57, 266], "sequenc": [19, 22, 41, 67, 205, 246], "critic": [19, 108], "perspect": 19, "retain": [19, 47], "reliabl": [19, 266], "concern": [19, 266], "advantag": [19, 23, 24, 26, 41, 47, 49, 54, 254, 257, 263, 268], "sagemak": [8, 19, 28, 43], "kit": 19, "cdk": 19, "npm": 19, "associ": [19, 34, 174, 272], "laid": 19, "visualis": [19, 26, 40, 43, 50, 53, 56, 193, 194, 257, 259, 264, 266, 272, 274], "consol": [11, 19, 39, 108, 264, 273], "decemb": 19, "announc": 19, "gb": 19, "besid": [19, 20], "properli": [19, 194, 207, 261], "lambda_handl": 19, "unittest": 19, "mock": [19, 274], "patch": 19, "handler": [19, 106, 107, 108, 187, 188], "event": [19, 40], "configure_project": [19, 22], "spaceflights_step_funct": 19, "node_to_run": 19, "_multiprocess": 19, "semlock": 19, "impact": [19, 37], "henc": [19, 40, 98, 241], "lock": [19, 34, 248], "stackoverflow": 19, "34005930": 19, "multiprocess": [11, 19, 266, 268], "accordingli": 19, "function_dir": 19, "home": [19, 33, 39, 48], "runtime_vers": 19, "grab": 19, "fresh": 19, "gcc": 19, "cpp": 19, "apt": 19, "cmake": 19, "unzip": [11, 19], "libcurl4": 19, "openssl": 19, "awslambdar": 19, "workdir": 19, "bin": [19, 46], "cmd": [19, 22, 34, 38, 39], "adapt": [9, 11, 19, 47, 48, 54, 191, 252, 254, 266], "elast": [19, 27], "dkr": 19, "amazonaw": 19, "login": [19, 22, 66, 204], "stdin": 19, "deploy_requir": 19, "aws_cdk": 19, "aws_s3": 19, "aws_ecr": 19, "aws_lambda": 19, "stepfunct": 19, "Then": [11, 19, 24, 30, 38, 39, 49, 50, 174, 258, 261, 271, 273, 276, 277, 278], "aws_stepfunct": 19, "sfn": 19, "ifunct": 19, "aws_stepfunctions_task": 19, "lambdainvok": 19, "_clean_nam": 19, "reformat": [19, 37], "63": 19, "kedrostepfunctionsstack": 19, "stack": [19, 21, 35, 252], "erc_repository_nam": 19, "s3_data_bucket_nam": 19, "scope": [19, 25, 30, 35, 183, 194, 268], "_parse_kedro_pipelin": 19, "_set_ecr_repositori": 19, "_set_ecr_imag": 19, "_set_s3_data_bucket": 19, "_convert_kedro_pipeline_to_step_functions_state_machin": 19, "ecr_repositori": 19, "from_repository_nam": 19, "repository_nam": 19, "ecr_imag": 19, "ecrimagecod": 19, "s3_bucket": 19, "rawdatabucket": 19, "_convert_kedro_node_to_lambda_funct": 19, "_fn": 19, "from_imag": 19, "function_nam": 19, "memory_s": 19, "256": 19, "reserved_concurrent_execut": 19, "durat": [19, 96, 238], "15": [19, 262, 268, 271, 277], "60": [19, 66, 204, 268], "grant_read_writ": 19, "_convert_kedro_node_to_sfn_task": 19, "lambda_funct": 19, "payload": [19, 66], "taskinput": 19, "from_object": 19, "enumer": [19, 21], "grouped_nod": [19, 30, 190], "group_nam": 19, "sfn_state": 19, "sfn_task": 19, "statemachin": 19, "synth": 19, "python3": [19, 37, 46], "straightforward": [19, 47], "speak": 19, "dramat": 19, "worth": 19, "10gb": 19, "maximum": 19, "longer": [19, 22, 276], "switch": [19, 26, 254, 264], "batch": [19, 27, 28, 50, 54, 258, 270], "ec": 19, "deploy": [20, 21, 23, 24, 26, 29, 30, 38, 43, 53, 56, 252], "fashion": [20, 32], "mpi": 20, "compos": [21, 252], "sophist": 21, "newer": [21, 46, 251], "workstat": 21, "vari": [21, 24, 44, 251], "hardwar": 21, "complement": 21, "pydata": [21, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228], "analysi": [21, 44, 263], "basi": [9, 21, 82, 222], "pure": [21, 47, 105, 261, 266], "eas": [21, 35, 43], "simplifi": [21, 27, 43, 257], "motiv": 21, "adopt": [1, 21], "beyond": [21, 256, 257, 270], "dask_runn": 21, "daskrunn": 21, "abstractrunn": [21, 197, 198, 199, 261, 264], "inter": 21, "counter": 21, "itertool": 21, "chain": [21, 35, 190, 259], "as_complet": 21, "worker_cli": 21, "_create_hook_manag": [21, 30, 33], "_register_hook": 21, "_register_hooks_setuptool": 21, "run_nod": [21, 30, 152], "pluggi": [21, 43, 52, 119, 120, 147, 148, 261], "_daskdataset": 21, "publish": [21, 256], "_name": 21, "get_dataset": 21, "upon": [21, 157, 272], "load": [11, 12, 13, 21, 22, 23, 24, 25, 30, 31, 34, 38, 39, 41, 43, 44, 47, 50, 51, 53, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 113, 142, 144, 149, 150, 152, 161, 174, 182, 183, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 264, 265, 266, 268, 269, 270, 276], "free": [11, 21, 26, 27, 40, 46, 56, 190, 192, 257], "oppos": [21, 250, 254], "publish_dataset": 21, "list_dataset": 21, "_releas": 21, "unpublish_dataset": 21, "client_arg": 21, "thread": [21, 34, 54, 196, 197, 198, 199, 200, 261, 266], "__del__": 21, "factori": [12, 21, 53, 174, 196, 197, 198, 199, 261], "unregist": [21, 196, 197, 198, 199, 261], "_run_nod": 21, "serialis": [11, 21, 44, 54, 89, 93, 229, 234, 261], "disable_hooks_for_plugin": [21, 52, 251], "load_count": 21, "from_iter": 21, "node_futur": 21, "_is_async": 21, "with_result": 21, "decrement": 21, "count": [21, 127, 168, 182, 197, 199, 271], "particularli": [11, 21, 22, 35, 258], "run_only_miss": [21, 196, 197, 198, 199, 262], "free_output": 21, "to_build": 21, "to_rerun": 21, "only_nodes_with_output": [21, 190], "unregistered_d": [21, 30], "recreat": 21, "missing_unregistered_d": 21, "output_to_unregist": 21, "input_from_unregist": 21, "previous": [1, 8, 21, 48, 185, 259, 262, 270, 276], "think": [21, 257], "shallow_copi": [21, 174], "dask_client": 21, "localclust": 21, "background": [21, 43, 63], "127": [21, 30, 39, 40, 48, 93, 234, 269, 276], "8786": 21, "pythonpath": [21, 39], "pwd": [21, 226], "snippet": [21, 23, 24, 41, 86, 87, 226, 227, 257, 258, 268], "again": [21, 22, 23, 24, 40, 48, 60, 62, 261, 262, 273], "diagnost": 21, "ml": [8, 9, 22, 43, 54, 266, 268], "slower": 22, "unsuit": 22, "rapid": [22, 43], "loop": [22, 23], "remaind": [22, 23], "browser": [22, 23, 25, 40, 48, 264, 269, 276], "slash": [22, 23], "adb": [22, 23], "123456789123456": [22, 23], "azuredatabrick": [22, 23], "net": [22, 23, 49], "person": [22, 23, 47, 272], "enter": [22, 23, 24, 38, 39, 48, 252, 269, 270, 276, 277, 278], "prompt": [22, 23, 24, 38, 39, 252, 271, 274, 276, 277, 278], "l": [11, 22, 23, 24], "iris_databrick": [22, 23, 24], "databricks_run": 22, "argpars": 22, "argumentpars": 22, "add_argu": 22, "dest": [22, 23], "parse_arg": 22, "kb": 22, "c": [22, 31, 34, 38, 39, 46, 48, 91, 190, 194, 231, 248, 261, 269, 276], "p0": 22, "getlogg": [22, 40, 49, 50, 52, 190, 254, 258, 268], "py4j": 22, "java_gatewai": 22, "setlevel": 22, "clientserv": 22, "editor": [22, 23, 24, 39, 47, 272], "entry_point": [22, 43], "tupl": [22, 40, 50, 60, 62, 63, 66, 98, 204, 241, 251, 258, 268], "usual": [22, 33, 41, 259, 266], "binari": [9, 22, 31, 270], "somewher": [22, 256], "dbutil": 22, "conveni": [11, 22, 23, 92, 232, 257], "filestor": [22, 23, 24], "destin": [22, 23, 24, 256], "08_report": [22, 23, 24, 73, 91, 92, 212, 231, 232, 278], "dedic": [22, 116], "drop": [22, 23, 35, 258], "down": [22, 23, 26, 256, 258], "menu": [22, 23, 24, 38, 39, 264], "job_clust": 22, "kedro_deployment_demo": 22, "radio": 22, "lt": 22, "dropdown": [22, 24, 38, 264], "confirm": [22, 40, 46, 174, 190, 193, 194, 261], "overview": [22, 24, 33], "pend": 22, "wait": [22, 38, 39, 66, 204], "thing": [22, 257, 258], "roughli": [22, 54], "six": 22, "seven": 22, "link": [22, 24, 25, 34, 40, 266], "2023": [22, 23, 24, 235], "06": [22, 23, 24], "56": [22, 24, 50, 268], "14": [22, 23, 24, 261, 268], "399": [22, 24], "accuraci": [22, 23, 24, 48, 258], "972": [22, 23, 24], "403": [22, 24], "runner": [22, 23, 24, 30, 34, 54, 152, 153, 161, 258, 262, 264, 269, 273], "sequential_runn": [22, 23, 24, 50, 258, 261, 268, 269, 273], "404": [22, 24], "ran": [22, 33, 150, 152, 268], "outlin": [1, 22, 40, 54], "auto": [23, 43, 91, 231, 251], "flake8": [23, 34, 274], "catch": [23, 37], "static": [11, 23, 34, 38, 39, 43, 250, 257, 268, 278], "checker": 23, "mypi": 23, "identifi": [23, 47, 82, 83, 96, 222, 223, 238], "earli": [23, 26, 158], "11": [23, 24, 46, 217, 261, 268, 269, 274], "program": [23, 39, 56, 95, 98, 174, 204, 237, 240, 241, 266], "remot": [9, 23, 24, 27, 31, 40, 68, 131, 204, 206, 268], "uncheck": 23, "13": [13, 23, 86, 87, 261, 268], "21": [23, 50], "59": 23, "48": 23, "148": [23, 264], "databricks_usernam": [23, 24], "168": 23, "test_pipelin": [23, 257], "189": 23, "test_run": [23, 33], "928": 23, "aliv": 23, "traceabl": [23, 24], "attach": [23, 24, 34, 39, 258, 262, 264], "cell": [23, 24, 264, 274], "load_ext": [23, 24, 25, 38, 105, 184, 264], "fourth": [23, 24], "consent": [23, 24, 30], "press": [23, 24, 39], "53": 23, "221": 23, "960": 23, "222": 23, "224": 23, "80": [23, 24, 254], "20": [23, 24, 33, 78, 218, 261, 268], "classifi": [11, 23, 24, 48, 54], "70": [23, 24], "30": [23, 24, 33, 272], "edit": [23, 24, 38, 39, 40, 248, 251], "observ": [23, 235, 266], "train_fract": [23, 24, 258], "29": [23, 94, 95, 96, 207, 236, 237, 238, 269], "39": 23, "235": 23, "40": [23, 33], "820": [23, 271], "23": [23, 50, 101, 102, 244, 245], "19": [1, 23, 34, 65, 161, 268, 270, 276], "561": 23, "562": 23, "564": 23, "ephemer": [23, 24, 166], "repeat": [23, 24, 33, 40], "exclus": 23, "ideal": [24, 26, 257], "sync": [24, 26, 39], "gitlab": [24, 31], "devop": 24, "venv": [24, 46], "virtualenv": 24, "choic": [24, 26, 28, 40, 48, 274], "synchronis": 24, "email": [24, 31], "profil": [24, 37, 39, 41, 43, 257], "photo": [24, 269, 272], "grain": [24, 157], "expir": 24, "area": [24, 44], "ssh": [9, 24, 31, 39], "popup": 24, "popul": [24, 48, 156, 207, 251, 260, 270, 274], "underneath": 24, "displai": [24, 40, 43, 46, 193, 194, 254, 259, 264, 271], "fileinfo": 24, "unnecessarili": 24, "55": [24, 33, 268], "705": 24, "953": 24, "709": 24, "doubl": 24, "untrack": 24, "visibl": [24, 31, 38, 276], "viz": [25, 41, 43, 44, 48, 53, 56, 257, 264, 268, 269, 272, 274, 276], "standalon": [25, 41, 252, 265], "launch": [11, 25, 39, 252, 264], "run_viz": 25, "princip": [26, 271], "spectrum": 26, "fit": [26, 27, 54, 257, 258, 266, 268, 272], "quick": [26, 30, 33, 38], "transit": [1, 26, 190, 264], "hybrid": 26, "dbx": 26, "adjust": [26, 270], "faster": 26, "complex": [11, 26, 66, 204, 252, 257, 261, 263, 266, 268], "degre": 26, "bet": 26, "rigid": 26, "natur": 26, "flowchart": 26, "align": 26, "factor": [26, 28], "topic": [27, 31], "unlik": [27, 46, 278], "tradit": [27, 252, 265], "simultan": 27, "scalabl": [27, 57, 268], "strategi": [27, 33], "seri": [27, 40, 258, 268, 269, 270], "better": [27, 272], "date": [0, 27, 44, 46, 226], "dockerhub": 27, "translat": 27, "map": [9, 12, 27, 38, 47, 50, 60, 62, 63, 68, 96, 152, 157, 174, 188, 192, 193, 194, 206, 217, 238, 257, 258, 260, 261, 264, 266], "kubeflow": [27, 28, 32, 43], "programm": 27, "friendli": [27, 194], "fairli": 27, "That": [27, 89, 93, 207, 229, 234, 235], "sizeabl": 28, "dask": [28, 248, 268], "databrick": [8, 28, 40, 94, 95, 217, 236, 237, 240, 254, 264], "prefect": [28, 270], "vertex": [28, 32, 43], "legaci": 28, "argo": 28, "examin": 29, "kubernet": [29, 43], "tailor": [29, 41], "tune": [29, 268], "agent": 30, "dequeu": 30, "earlier": [8, 11, 30, 190, 276], "prefect_api_url": 30, "4200": 30, "opt": [30, 46, 48], "record": [30, 40, 48, 67, 82, 205, 222, 248], "telemetri": [30, 48, 52, 274], "hang": 30, "declin": 30, "organ": [30, 43], "work_pool_nam": 30, "work_queue_nam": 30, "subscrib": 30, "register_prefect_flow": 30, "union": [30, 66, 80, 81, 204, 207, 220, 221], "get_run_logg": 30, "deployment_nam": 30, "prefect_deploi": 30, "ref": 30, "build_from_flow": 30, "my_flow": 30, "infra_overrid": 30, "prefect_logging_level": 30, "logger": [30, 40, 190, 254, 258, 268], "execution_config": 30, "kedro_init": 30, "layer": [30, 44, 174, 277], "execution_lay": 30, "init_kedro_tasks_by_execution_lay": 30, "node_task": 30, "bootstrap": [30, 252], "noqa": [30, 185, 226], "sess_id": 30, "topolog": [30, 190, 198, 259], "impli": 30, "b": [30, 39, 91, 174, 190, 194, 231, 258, 261, 268, 273], "instantiate_task": 30, "append": [11, 30, 38, 67, 73, 78, 205, 207, 212, 217, 218, 240, 246, 256, 258], "kedro_task": 30, "task_dict": 30, "with_opt": 30, "hub": 31, "dockerid": 31, "websit": [31, 44, 46, 56], "procedur": 31, "containeris": 31, "compress": [31, 34, 44, 68, 85, 89, 98, 206, 225, 229, 241, 270], "recipi": 31, "viabl": 31, "bitbucket": 31, "accomplish": 31, "forg": [31, 46, 248], "bash": [31, 34], "deliv": 32, "fulfil": 33, "grow": [33, 37, 40, 44], "interdepend": [33, 269], "unexpectedli": 33, "disadvantag": 33, "impract": 33, "old": [1, 33, 266], "discov": [33, 43, 52, 56, 259], "One": [11, 33, 47, 190, 262, 265], "test_": 33, "file_being_test": 33, "dataprocess": 33, "test_nod": 33, "special": [11, 33, 78, 218, 258], "config_load": [1, 33, 49, 54, 143, 151], "testprojectcontext": 33, "test_project_path": 33, "redund": 33, "layout": [33, 37, 60, 62, 92, 232, 252, 278], "begin": [33, 169, 226, 262], "statement": [33, 35, 51, 80, 86, 190, 220, 226, 256, 258, 269], "especi": [33, 34, 35], "test_node_passes_with_valid_input": 33, "test_pass": 33, "shell": [11, 33, 34, 37, 39, 46, 264], "38": [33, 50], "ini_opt": 33, "addopt": 33, "ra": 33, "stmt": 33, "47": 33, "pipeline_registri": [33, 156, 157, 252, 260, 261, 264, 268], "16": [33, 262, 268, 269, 274], "data_process": [33, 40, 256, 260, 268, 269, 273], "25": [33, 50, 246, 254, 269], "67": [33, 50, 271], "data_sci": [33, 40, 260, 268, 273], "total": 33, "98": 33, "ex": [34, 93, 234], "bashrc": 34, "eval": 34, "_kedro_complet": 34, "z": [34, 226, 262], "zsh": 34, "zshrc": 34, "source_zsh": 34, "fish": 34, "source_fish": 34, "shortcut": [34, 264], "anywher": [34, 54, 174], "nbstripout": [34, 274], "req": 34, "micropkg": [34, 256], "OR": [34, 262], "_____": 34, "__": 34, "___": 34, "v0": [34, 37], "kedro_viz": [34, 40], "line_mag": 34, "manipul": [11, 34], "async_arg_help": 34, "config_file_help": 34, "conf_source_help": 34, "from_inputs_help": 34, "from_nodes_help": 34, "load_version_help": 34, "node_arg_help": 34, "params_arg_help": 34, "pipeline_arg_help": 34, "runner_arg_help": 34, "tag_arg_help": 34, "to_nodes_help": 34, "to_outputs_help": 34, "project_group": 34, "util": [34, 47, 71, 146, 210, 256], "context_set": 34, "_config_file_callback": 34, "_reformat_load_vers": 34, "_split_param": 34, "env_opt": [34, 41], "split_str": 34, "split_node_nam": 34, "__file__": [34, 40], "callback": [34, 43], "async": [34, 152, 261], "is_flag": 34, "lv": 34, "dir_okai": 34, "resolve_path": 34, "file_okai": 34, "unprocess": 34, "unus": [34, 43], "hash": [34, 248], "context_path": 34, "angular": 34, "bracket": [34, 37, 63], "dataset_name1": 34, "dataset_name2": 34, "node_name1": 34, "node_name2": 34, "runner_nam": 34, "env_nam": [34, 256], "tag_name1": 34, "tag_name2": 34, "config_file_nam": 34, "path_to_config_directori": 34, "path_to_compress": 34, "parametris": 34, "dot": 34, "child": 34, "predict": [34, 40, 48, 54, 99, 242, 258, 268, 269, 272, 278], "parameteris": [34, 268], "methodologi": [34, 96, 238], "sdist": 34, "pypi": [34, 46, 256], "storag": [9, 34, 47, 49, 54, 96, 238, 256, 266], "isort": [34, 37, 47, 274], "coveragerc": 34, "package_module_path": 34, "aren": [34, 54], "filter": [34, 43, 161, 174, 190, 266], "de": 34, "jupyterlab": [34, 44, 254, 274], "sensit": [34, 47, 272, 274], "clear": [34, 60, 62, 63, 266, 269], "hard": [0, 35, 257, 265], "frustrat": [35, 37], "quickli": 35, "outsid": [35, 43, 54, 161, 256, 261, 264, 268], "isn": [35, 60, 62, 256, 257, 260], "larg": [35, 86, 226, 258], "mortem": 35, "pdb": 35, "uncaught": [35, 152, 153, 161], "ipdb": 35, "manner": [35, 51, 54, 198], "vscode": [35, 39], "pycharm": [35, 36, 39, 53], "on_node_error": [35, 52, 152], "sy": [35, 38, 39, 50, 108], "traceback": [35, 187, 188, 250, 254, 273], "hook_impl": [35, 43, 49, 50, 52, 54], "pdbnodedebughook": 35, "debugg": [35, 38, 39], "whenev": [35, 260], "traceback_object": 35, "exc_info": 35, "print_tb": 35, "post_mortem": 35, "on_pipeline_error": [35, 52, 153, 161], "pdbpipelinedebughook": 35, "frame": [35, 246], "visual": [36, 43, 53, 54], "studio": [36, 53], "stylist": 37, "whitespac": 37, "doesn": [11, 37, 54, 62, 69, 70, 71, 72, 77, 78, 79, 83, 84, 85, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 166, 174, 199, 208, 209, 210, 211, 216, 218, 219, 223, 224, 225, 228, 229, 230, 231, 232, 233, 242, 243, 244, 245, 247, 252, 256, 257, 261, 276], "reus": [37, 41, 235, 252, 257, 258, 266, 268, 270], "indent": [37, 72, 101, 102, 211, 244, 245], "goe": [37, 261], "compliant": 37, "opinion": [37, 263], "formatt": [37, 108], "pyupgrad": 37, "pep8": 37, "pyflak": 37, "pycodestyl": 37, "pl": [0, 37, 233], "e501": 37, "care": 37, "screen": [37, 40, 254], "88": 37, "e203": 37, "invok": [37, 80, 114, 121, 140, 149, 150, 151, 152, 153, 186, 220], "astral": 37, "sh": 37, "rev": 37, "270": 37, "psf": 37, "language_vers": 37, "cog": 38, "picker": 38, "ok": 38, "explor": [38, 40, 45, 56, 264, 269], "mark": [38, 119, 147], "preconfigur": [38, 47], "rapidli": 38, "dirnam": [38, 39], "lib": 38, "site": [38, 43], "obtain": [9, 11, 38, 54, 63, 190, 264], "emul": 38, "rich": [38, 188], "toolbar": [38, 264], "green": [38, 39, 73, 108, 212], "triangl": [38, 39], "breakpoint": [38, 39], "jetbrain": 38, "profession": 38, "proce": [38, 40], "mount": [38, 94, 95, 236], "real": [38, 39, 257], "autocomplet": [38, 39], "githubusercont": [38, 39], "jsonschema": [11, 38, 39], "palett": 39, "shift": 39, "venvpath": 39, "anaconda": 39, "microsoft": 39, "fwlink": 39, "linkid": 39, "733558": 39, "isdefault": 39, "Will": [39, 82, 222], "environment": 39, "openconfigfil": 39, "intellisens": 39, "hover": [39, 268], "830387": 39, "integratedtermin": 39, "seper": 39, "pane": 39, "ptvsd": 39, "arrai": [11, 39, 98, 241], "pathmap": 39, "localroot": 39, "workspacefold": 39, "remoteroot": 39, "3000": 39, "ip": 39, "enable_attach": 39, "redirect_output": 39, "paus": 39, "wait_for_attach": 39, "scp": 39, "your_usernam": 39, "remote_serv": 39, "tunnel": 39, "vnl": 39, "experiment": [40, 47, 252, 263, 264], "evalu": [40, 50, 54, 63, 257, 268], "weight": 40, "demo": 40, "snapshot": 40, "captur": [40, 259], "discoveri": [40, 52], "plotli": 40, "timeseri": 40, "parellel": 40, "coord": 40, "central": [40, 235], "complementari": 40, "neptun": [40, 43], "ecosystem": [40, 43], "feel": [11, 40], "domain": [40, 44, 266], "databas": [40, 86, 87, 93, 96, 97, 207, 217, 226, 227, 234, 235, 238, 239, 261], "sqlite_stor": 40, "sqlitestor": 40, "session_store_class": [40, 251], "session_store_arg": [40, 251], "crucial": 40, "front": [40, 157], "interchang": 40, "kedro_sqlite_store_usernam": 40, "your_unique__usernam": 40, "remote_path": 40, "your_access_key_id": 40, "your_secret_access_kei": 40, "aws_region": 40, "your_aws_region": 40, "metricsdataset": 40, "numer": [12, 40, 47, 102, 245, 261, 271], "boolean": [40, 250, 269], "companies_column": 40, "coeffici": [40, 268], "r2": 40, "score": [40, 268], "me": 40, "mae": 40, "09_track": [40, 101, 102, 244, 245], "r2_score": [40, 268], "sklearn": [40, 50, 98, 241, 258, 268], "mean_absolute_error": 40, "max_error": 40, "linearregress": [40, 268], "calcul": [0, 40, 197, 199, 258, 259, 262, 268], "independ": [40, 190, 268], "price": [40, 268, 269, 271, 272], "y_pred": [40, 258, 264, 268], "3f": [40, 258, 268], "exactli": 40, "evaluate_model_nod": [40, 268], "company_r": [40, 268, 269, 271], "iata_approv": [40, 268, 269, 271], "_is_tru": [40, 269], "_parse_percentag": [40, 269], "tolist": 40, "data_typ": 40, "preprocess_companies_nod": [13, 40, 268, 269], "beauti": 40, "session_stor": 40, "expos": [40, 157, 192, 194, 260, 270], "fun": 40, "icon": 40, "4141": [40, 48, 269, 276], "toggl": 40, "seaborn": [40, 233, 278], "pyplot": [40, 73, 212, 278], "plt": [40, 73, 212, 278], "sn": [40, 278], "create_confusion_matrix": [40, 278], "y_actual": [40, 278], "y_predict": [40, 278], "confusion_matrix": [40, 278], "crosstab": [40, 278], "rownam": [40, 278], "colnam": [40, 278], "heatmap": [40, 278], "annot": [40, 44, 278], "png": [11, 40, 71, 73, 90, 210, 212, 230, 278], "chart": [40, 43, 53, 275, 276], "vertic": 40, "axi": 40, "highlight": [40, 93, 234, 257], "multitud": 40, "graphic": [40, 46, 264], "taken": [40, 256], "emploi": 41, "thought": 41, "action": [41, 54, 217, 254, 264, 268], "lifecycl": [41, 53, 121, 149, 150, 151, 152, 153, 159, 160, 161, 249, 266], "notebook_run": 41, "proprietari": [11, 271], "perhap": 11, "kaggl": 11, "pok\u00e9mon": 11, "water": 11, "fire": 11, "numpi": [11, 90, 98, 99, 193, 230, 241, 242, 246, 248, 258], "pokemon": 11, "download": [11, 46], "compris": [11, 47, 48, 262, 265], "plu": 11, "minimum": [1, 9, 11, 252], "abstract": [11, 57, 196, 248], "skeleton": [11, 269], "np": [11, 98, 99, 193, 241, 242, 246, 258], "ndarrai": 11, "img": [11, 246], "_filepath": [11, 50], "kedro_pokemon": 11, "image_dataset": 11, "mimic": 11, "conjunct": 11, "flexibli": 11, "pil": [11, 90, 230, 246], "get_filepath_str": [11, 258], "get_protocol_and_path": 11, "_protocol": [11, 258], "_f": 11, "rgba": 11, "asarrai": [11, 246], "pikachu": 11, "preview": [11, 53, 275, 278], "fromarrai": [11, 246], "wb": [11, 70, 71, 73, 83, 89, 209, 210, 212, 223, 229, 261], "721": 11, "la": 11, "wc": 11, "datetim": [0, 11, 226], "exists_funct": 11, "glob_funct": 11, "22t00": 11, "00": 11, "000z": 11, "mv": 11, "backup": 11, "inspect": [11, 252, 271, 272], "depth": 44, "parallelrunn": [11, 264, 268], "closur": 11, "decor": [11, 49, 52, 135], "functool": 11, "explan": 11, "dump": [11, 72, 89, 93, 101, 102, 103, 204, 211, 229, 234, 244, 245, 247, 261], "reduct": 11, "forkingpickl": 11, "_data_set": 11, "shouldn": 11, "sit": 11, "your_credenti": 11, "arg_1": 11, "gcsfilesystem": [9, 10, 11, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 241, 242, 243, 244, 245, 246, 247], "accompani": 11, "solid": 43, "importlib": 43, "kedrojson": 43, "pass_obj": 43, "to_json": [43, 84, 190, 224], "project_command": 43, "kedrostarterspec": 43, "test_plugin_start": 43, "template_path": [43, 131], "your_local_directori": 43, "starter_fold": 43, "checkout": [43, 252], "_get_project_metadata": 43, "proof": 43, "global_command": 43, "bit": 43, "plugin_nam": [43, 52], "myhook": 43, "after_catalog_cr": [43, 52, 149, 269], "cli_hook": 43, "cli_hook_impl": 43, "myclihook": 43, "before_command_run": [43, 52, 121], "project_metadata": [43, 121], "command_arg": [43, 121], "ship": [43, 270], "justin": 43, "malloi": 43, "waylon": 43, "walker": 43, "css": 43, "steel": 43, "toe": 43, "prevent": [43, 47, 54, 259], "wing": 43, "tam": 43, "sanh": 43, "great": [43, 50, 51], "acceler": [43, 257], "dropin": 43, "swap": [43, 254], "modin": 43, "specialis": [43, 47, 266], "gpu": 43, "yolan": 43, "honor\u00e9": 43, "roug\u00e9": 43, "takieddin": 43, "kadiri": 43, "facilit": [43, 194], "synchron": 43, "infer": [43, 192], "jakub": 43, "czakon": 43, "rafa\u0142": 43, "jankowski": 43, "nice": [43, 257], "brows": 43, "curv": [43, 56, 71, 210], "video": [43, 46], "dolt": 43, "hoffman": 43, "oscar": 43, "batori": 43, "vertexai": 43, "azureml": 43, "partit": [12, 43, 53, 85, 95, 96, 207, 217, 225, 237, 238, 240], "daiha": 43, "alv": 43, "nickola": 43, "da": 43, "rocha": 43, "machado": 43, "kernel": 44, "concept": [12, 45, 48, 53, 56, 258, 272, 276], "exit": [46, 48, 121, 134, 250, 269, 271, 273, 276], "deactiv": 46, "pipenv": 46, "ascii": 46, "art": 46, "queri": [9, 46, 60, 62, 80, 86, 220, 226], "safe": [46, 261], "notabl": 46, "kedro_init_vers": [46, 168, 251], "projectcontext": 46, "caution": [0, 46], "unreleas": 46, "glossari": [47, 53, 56, 174, 267, 272], "wrapper": [47, 92, 232, 266], "inbuilt": 47, "return_greet": 47, "hello": [47, 49, 78, 218], "return_greeting_nod": 47, "my_salut": 47, "join_stat": 47, "greet": 47, "join_statements_nod": 47, "my_messag": 47, "necessarili": [47, 193, 194, 259, 266], "assembl": 47, "greeting_pipelin": 47, "advis": [47, 254, 256], "gitignor": 47, "unnecessari": 47, "inclus": 47, "commonli": 47, "human": [48, 251, 252], "alphanumer": [48, 252], "symbol": 48, "hyphen": [48, 194], "repo_nam": [48, 252], "python_packag": [48, 252], "get_start": 48, "lowercas": 48, "output_dir": 48, "test_kedro": 48, "swiftli": 48, "regain": [48, 269, 276], "mac": [48, 269, 276], "ctrl": [48, 269, 276], "fundament": 48, "unsur": 48, "1936": 48, "british": 48, "statistician": [48, 266], "biologist": 48, "ronald": 48, "fisher": 48, "150": 48, "speci": [48, 264], "plant": 48, "setosa": [48, 264], "versicolour": 48, "virginica": [48, 264], "flower": 48, "measur": 48, "sepal": 48, "width": [48, 254], "petal": 48, "categoris": 48, "known": [10, 48, 252, 265, 272], "nearest": 48, "neighbour": 48, "algorithm": 48, "make_predict": [48, 258, 264], "report_accuraci": [48, 258, 264], "before_node_run": [49, 52, 152], "behavior": [49, 252], "furthermor": 49, "subset": [49, 52, 190, 257, 262, 266], "say_hello": 49, "projecthook": [49, 52], "retri": 49, "tenac": 49, "my_flaky_node_funct": 49, "flaki": 49, "before_dataset_load": [49, 50, 52, 150], "after_dataset_load": [49, 50, 52, 150], "before_dataset_sav": [49, 52, 54, 150], "after_dataset_sav": [49, 52, 54, 150], "logginghook": 49, "_timer": [49, 50], "2f": 49, "after_context_cr": [49, 52, 54, 151], "keyvault": 49, "s3_cred": 49, "your_data_stor": 49, "blob": [9, 49], "abs_cr": 49, "secretcli": 49, "defaultazurecredenti": 49, "azuresecretshook": 49, "keyvaultnam": 49, "0542abb": 49, "key_vault_nam": 49, "kvuri": 49, "vault": 49, "vault_url": 49, "cred": [49, 80, 81, 220, 221], "azure_cr": 49, "cred_nam": 49, "get_secret": 49, "secret_nam": 49, "my_project": [49, 256, 257], "authoris": 49, "memory_profil": 50, "memory_usag": 50, "_normalise_mem_usag": 50, "mem_usag": 50, "isinst": [50, 54], "memoryprofilinghook": 50, "_mem_usag": 50, "before_mem_usag": 50, "interv": 50, "max_usag": 50, "retval": 50, "include_children": 50, "after_mem_usag": 50, "2fmib": 50, "data_catalog": [50, 258, 261, 268, 269, 273], "343": [50, 268, 269], "99mib": 50, "48mib": 50, "327": [50, 268, 269], "382": [50, 268, 269, 273], "85": [50, 258, 268, 269], "49mib": 50, "great_expect": 50, "ge": [50, 258], "datavalidationhook": 50, "dataset_expectation_map": 50, "raw_companies_dataset_expect": 50, "preprocessed_companies_dataset_expect": 50, "_run_valid": 50, "dataset_valu": 50, "_get_dataset": [50, 261], "dataset_path": 50, "expectation_suit": 50, "expectation_context": 50, "data_context": 50, "datacontext": 50, "get_batch": 50, "datasourc": 50, "files_datasourc": 50, "run_validation_oper": 50, "action_list_oper": 50, "assets_to_valid": 50, "checkpoint": [50, 96, 238, 240], "raw_companies_dataset_checkpoint": 50, "data_connector_queri": 50, "batch_request": 50, "yaml_config": 50, "my_checkpoint_nam": 50, "config_vers": 50, "class_nam": 50, "simplecheckpoint": 50, "run_name_templ": 50, "datasource_nam": 50, "my_datasource_nam": 50, "data_connector_nam": 50, "default_runtime_data_connector_nam": 50, "data_asset_nam": 50, "my_runtime_asset_nam": 50, "expectation_suite_nam": 50, "my_expectation_suite_nam": 50, "dataset_checkpoint_map": 50, "run_checkpoint": 50, "checkpoint_nam": 50, "runtime_paramet": 50, "batch_data": 50, "batch_identifi": 50, "runtime_batch_identifier_nam": 50, "run_nam": 50, "statsd": 50, "grafana": 50, "pipelinemonitoringhook": 50, "statsclient": 50, "node_tim": 50, "short_nam": [50, 194], "gaug": 50, "_size": 50, "getsizeof": 50, "after_pipeline_run": [50, 52, 153], "incr": 50, "before_pipeline_run": [50, 52, 153], "modeltrackinghook": 50, "run_param": [50, 153], "start_run": 50, "log_param": 50, "_func_nam": 50, "split_data_ratio": 50, "example_test_data_ratio": [50, 264], "elif": 50, "log_model": 50, "end_run": 50, "my_nod": 50, "first_input": 50, "second_input": 50, "nodeinputreplacementhook": 50, "expected_input": 50, "actual_input": 50, "noun": 52, "past_participl": 52, "timelin": [52, 120, 148, 251], "on_": 52, "_error": 52, "lastli": 52, "after_command_run": [52, 121], "statist": [52, 266], "after_data_catalog_cr": 52, "hook_spec": 52, "conf_cr": [52, 149], "datacataloghook": 52, "__class__": 52, "arbitrari": [52, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247], "restrict": 52, "lifo": 52, "introduct": [12, 53, 262, 266, 270], "faq": [53, 272], "terminologi": 53, "frequent": [], "micro": [53, 124, 251, 255, 257, 268, 270], "slice": [53, 255], "sparksess": [53, 94, 95, 96, 97, 207, 236, 237, 238, 239], "delta": [53, 94, 95, 207, 217, 236, 237, 240], "intermediari": 53, "copy_mod": 53, "tip": 53, "maximis": [53, 261], "maxresults": 54, "driver": [54, 68, 70, 97, 206, 209, 226, 239], "fair": 54, "3g": 54, "sparkconf": 54, "sql": [9, 54, 80, 86, 87, 94, 95, 96, 97, 207, 220, 226, 227, 236, 237, 238, 239], "sparkhook": 54, "spark_conf": 54, "setal": 54, "spark_session_conf": 54, "builder": [54, 94, 95, 96, 97, 207, 236, 237, 238, 239], "appnam": 54, "enablehivesupport": 54, "_spark_sess": 54, "getorcr": [54, 94, 95, 96, 97, 207, 236, 237, 238, 239], "sparkcontext": [54, 95, 96, 237, 238, 240], "setloglevel": 54, "warn": [54, 58, 108, 157, 174, 188, 254, 260, 273], "master": 54, "yarn": 54, "singleton": [54, 86, 87, 118, 146, 226, 227], "deltatabledataset": 54, "sparkjdbcdataset": 54, "sparkhivedataset": 54, "spark_d": 54, "lakehous": 54, "architectur": 54, "acid": 54, "transact": 54, "unifi": 54, "adl": [54, 217], "hdf": [9, 54, 83, 95, 223, 237, 271], "transcod": [10, 54, 190], "temperatur": 54, "my_bucket": [54, 83, 223, 256], "versionasof": 54, "deltat": [54, 94, 217, 236], "process_barometer_data": 54, "update_meterological_st": 54, "first_operation_complet": 54, "estimate_weather_trend": 54, "second_operation_complet": 54, "signal": 54, "preserv": [54, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 99, 100, 101, 102, 103, 194, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 242, 243, 244, 245, 247], "shape": [54, 70, 209], "diagram": 54, "represent": [44, 54, 190], "dummi": [54, 270], "flow": [54, 252, 264], "hold": [54, 143, 168, 251, 252, 266], "lazi": [54, 258], "randomforrestclassifi": 54, "randomforestclassifi": 54, "training_data": 54, "forest": 54, "numtre": 54, "testing_data": 54, "transform": [44, 54, 258, 269], "example_classifi": 54, "fifo": 54, "intermedi": [44, 56, 190, 192, 257, 261, 262, 276], "comprehens": [9, 56, 254], "preliminari": 56, "anyon": 56, "knowledg": [56, 266], "excel": [9, 13, 56, 78, 218, 269, 271, 274], "onlin": 56, "book": 56, "robust": 57, "assembli": 57, "incompat": [58, 89, 93, 96, 194, 229, 234, 238], "with_traceback": [58, 61, 134, 144, 162, 191], "tb": [58, 61, 134, 144, 162, 191], "__traceback__": [58, 61, 134, 144, 162, 191], "base_env": [60, 62, 63], "experiment1": 60, "model_paramet": 60, "experiment2": 60, "conf_log": [60, 62], "dictconfig": [60, 62, 253], "conf_param": [60, 62], "suppli": [60, 62, 63, 96, 143, 207, 217, 238, 251, 252, 261, 269], "overriden": 60, "dedupl": [60, 63], "classmethod": [60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 161, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "fromkei": [60, 62, 63], "k": [60, 62, 63, 258], "keyerror": [60, 62, 63, 261], "popitem": [60, 62, 63], "setdefault": [60, 62, 63], "readthedoc": [62, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 100, 101, 102, 103, 119, 120, 147, 148, 157, 184, 185, 188, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 226, 229, 230, 231, 232, 234, 243, 244, 245, 247, 273], "en": [62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 93, 100, 101, 102, 103, 119, 120, 147, 148, 157, 174, 184, 185, 188, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 226, 229, 230, 231, 232, 234, 235, 243, 244, 245, 247, 273], "2_branch": 62, "load_and_merge_dir_config": 62, "processed_fil": 62, "read_environment_vari": 62, "parsererror": [1, 62], "invalid": [62, 67, 70, 96, 174, 190, 205, 207, 209, 217, 238, 259], "express": [63, 91, 92, 174, 231, 232, 278], "malform": [63, 264], "breakag": 65, "usda": [10, 66, 204], "corn": [10, 66, 204], "yield": [10, 66, 204, 246, 258], "head": [66, 271], "complic": [66, 259], "authbas": [66, 204], "httpbasicauth": 66, "cast": 66, "typevar": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "_do": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "_di": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "notadirectoryerror": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "stringio": [67, 205], "bio": [67, 205], "seqio": [67, 205], "alpha": [67, 205, 257, 261], "naccggatgta": [67, 205], "beta": [67, 205, 257], "naggctcggtta": [67, 205], "raw_data": [67, 174, 205], "fasta": [67, 205], "ls_orchid": [67, 205], "sequence_list": [67, 205], "seq": [67, 205], "default_load_arg": [67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 97, 98, 99, 205, 206, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242], "default_save_arg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 247], "posix": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 94, 95, 99, 100, 101, 102, 103, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 240, 241, 242, 243, 244, 245, 247, 256], "biopython": [67, 205], "spec": [67, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 86, 89, 90, 91, 92, 100, 101, 102, 103, 119, 147, 205, 208, 209, 210, 211, 212, 213, 214, 215, 222, 223, 226, 229, 230, 231, 232, 243, 244, 245, 247], "abstractfilesystem": [67, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 86, 89, 90, 91, 92, 100, 101, 102, 103, 205, 208, 209, 210, 211, 212, 213, 214, 215, 222, 223, 226, 229, 230, 231, 232, 243, 244, 245, 247], "invalidate_cach": [67, 70, 205, 209], "your_kei": [68, 206], "your_secret": [68, 206], "dd": [68, 206], "ddf": [68, 206], "from_panda": [68, 206], "npartit": [68, 206], "schema": [68, 87, 94, 95, 96, 153, 206, 207, 217, 227, 235, 236, 237, 238, 240, 253], "triad": [68, 206], "pyarrow": [68, 85, 206, 225], "parquet_dataset": [68, 206], "int32": [68, 206], "write_index": [68, 206], "multipart": [68, 206], "read_parquet": [68, 85, 206, 225], "to_parquet": [68, 85, 206, 225], "send": [69, 204, 208, 254], "emailmessag": [69, 208], "string_to_writ": [69, 100, 208, 243], "invis": [69, 208], "plain": [69, 208, 226], "set_cont": [69, 208], "subject": [69, 208], "sin": [69, 208], "studly17": [69, 208], "strong": [69, 208], "bad": [1, 69, 197, 199, 208], "__dict__": [69, 208], "mime": [69, 208], "flatten": [69, 208], "autogener": [69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 95, 99, 100, 101, 102, 103, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 237, 241, 242, 243, 244, 245, 247], "resolve_load_vers": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 237, 241, 242, 243, 244, 245, 247], "resolve_save_vers": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 237, 241, 242, 243, 244, 245, 247], "geojson": [70, 209], "eg": [70, 209], "gpd": [70, 209], "geometri": [70, 209], "geodatafram": [70, 209], "read_fil": [70, 209], "to_fil": [70, 209], "gcfilesystem": [70, 209], "hv": [71, 210], "holoviews_writ": [71, 210], "fmt": [71, 210], "s3filesystem": [71, 73, 210, 212], "reference_manu": [71, 210], "default_flow_styl": [72, 101, 102, 103, 211, 244, 245, 247], "output_plot": [73, 212], "fig": [73, 91, 92, 212, 231, 232, 278], "figur": [73, 91, 92, 212, 231, 232, 264, 278], "plot_writ": [73, 212], "pdf": [73, 212], "pdf_plot_writ": [73, 212], "plots_dict": [73, 212], "colour": [73, 106, 107, 187, 212], "blue": [73, 108, 212], "red": [73, 108, 212, 254], "color": [73, 108, 212], "dict_plot_writ": [73, 212], "plots_list": [73, 212], "list_plot_writ": [73, 212], "savefig": [73, 212], "_as_gen": [73, 212], "gml": [74, 213], "nx": [74, 75, 76, 213, 214, 215], "complete_graph": [74, 75, 76, 213, 214, 215], "graph_dataset": [74, 75, 76, 213, 214, 215], "is_isomorph": [74, 75, 76, 213, 214, 215], "read_gml": [74, 213], "readwrit": [74, 75, 76, 213, 214, 215], "write_gml": [74, 213], "graphml": [75, 214], "read_graphml": [75, 214], "write_graphml": [75, 214], "node_link_graph": [76, 215], "json_graph": [76, 215], "node_link_data": [76, 215], "openpyxl": [9, 13, 78, 218, 271], "multi": [78, 218], "sheet": [78, 218], "another_datafram": [78, 218], "world": [78, 218, 257, 261], "multifram": [78, 218], "read_excel": [9, 78, 218, 271], "to_excel": [9, 78, 218, 271], "excelwrit": [78, 218], "writer": [78, 218], "feather": [9, 79, 219], "use_thread": [79, 219], "read_feath": [79, 219], "to_feath": [79, 219], "bigqueri": [80, 81, 220, 221], "read_gbq": [80, 81, 220, 221], "gbq": [80, 81, 220, 221], "vehicl": [80, 81, 220, 221], "shuttle_id": [80, 86, 220, 226, 269], "reauth": [80, 81, 220, 221], "dataset_1": [80, 220], "table_a": [80, 86, 87, 97, 220, 226, 227, 239], "sql_data": [80, 86, 220, 226], "oauth2": [80, 81, 220, 221], "big_query_dataset": [81, 221], "big_query_t": [81, 221], "chunk_siz": [81, 204, 221], "progress_bar": [81, 221], "to_gbq": [81, 221], "sas7bdat": [82, 222], "read_sa": [82, 222], "to_sa": [82, 222], "flight": [82, 222, 272], "sa": [82, 222, 226], "assumpt": [82, 96, 222, 238], "buffer": [82, 222], "clipboard": [82, 222], "read_": [82, 222], "to_": [82, 222], "hdfstore": [83, 223], "hdf_dataset": [83, 223], "sensor_read": [83, 223], "h5": [83, 99, 223, 242], "aws_s3_cr": [83, 223], "pytabl": [83, 223], "www": [83, 99, 223, 242, 256], "usersguid": [83, 223], "libref": [83, 223], "top_level": [83, 223], "open_fil": [83, 223], "clickstream_dataset": [84, 224], "landing_area": [84, 224], "click_stream": [84, 224], "abfs_cr": [84, 224], "json_dataset": [84, 224], "video_gam": [84, 224], "read_json": [84, 224], "use_nullable_dtyp": [85, 225], "arrow": [85, 225], "partition_col": [85, 225], "execution_opt": [86, 226], "read_sql_queri": [86, 226], "shuttle_id_dataset": [86, 226], "db_credenti": [86, 87, 97, 226, 227, 235, 239], "stream_result": [86, 226], "chunksiz": [86, 226, 258], "1000": [86, 226], "postgresql": [86, 87, 97, 226, 227, 239], "scott": [86, 87, 97, 226, 227, 239], "tiger": [86, 87, 97, 226, 227, 239], "create_connect": [86, 87, 226, 227], "connection_str": [86, 87, 226, 227], "read_sql_tabl": [87, 227], "to_sql": [87, 227], "symmetr": [87, 227], "shuttles_table_dataset": [87, 227], "dwschema": [87, 227], "read_xml": [88, 228], "to_xml": [88, 228], "test_model": [89, 229], "final_model": [89, 229], "lz4": [89, 229], "joblib": [89, 229], "s3_credenti": [89, 229], "compress_pickl": [89, 93, 229, 234], "deserialis": [89, 93, 229, 234], "dill": [89, 93, 229, 234], "torch": [89, 93, 229, 234], "lucianopaz": [89, 93, 229, 234], "importerror": [89, 93, 229, 234], "scatter_plot": [91, 92, 231, 232], "px": [91, 92, 231, 232, 278], "from_json": [91, 92, 231, 232], "write_json": [91, 92, 231, 232], "plotly_arg": [92, 232, 278], "bar_plot": [92, 232], "orient": [92, 232, 278], "xaxis_titl": [92, 232, 278], "yaxis_titl": [92, 232, 278], "titl": [92, 232, 252, 278], "df_data": [92, 232], "x1": [92, 232], "x2": [92, 232], "scatter": [92, 232], "theme": [92, 232], "redis_arg": [93, 234], "from_url": [93, 234], "my_python_object": [93, 234], "my_object": [93, 234], "from_url_arg": [93, 234], "6379": [93, 234], "final_python_object": [93, 234], "my_final_object": [93, 234], "default_redis_url": [93, 234], "strictredi": [93, 234], "socket_timeout": [93, 234], "set_arg": [93, 234], "redis_url": [93, 234], "structfield": [94, 95, 96, 207, 236, 237, 238], "stringtyp": [94, 95, 96, 207, 236, 237, 238], "integertyp": [94, 95, 96, 207, 236, 237, 238], "structtyp": [94, 95, 96, 207, 236, 237, 238], "ag": [94, 95, 96, 207, 236, 237, 238], "alex": [94, 95, 96, 207, 236, 237, 238], "31": [94, 95, 96, 207, 236, 237, 238, 274], "bob": [94, 95, 96, 207, 236, 237, 238], "clark": [94, 95, 96, 207, 236, 237, 238], "65": [94, 95, 96, 207, 236, 237, 238], "dave": [94, 95, 96, 207, 236, 237, 238], "spark_df": [94, 95, 96, 207, 236, 237, 238], "createdatafram": [94, 95, 96, 97, 207, 236, 237, 238, 239], "test_data": [94, 95, 236, 237], "deltatable_dataset": [94, 236], "delta_t": [94, 236], "mnt": [94, 95, 236], "weather_with_schema": [95, 237], "weather_clean": [95, 237], "dataframeread": [95, 97, 237, 239, 240], "getting_start": [95, 237], "quickstart_df": [95, 237], "partitionbi": [95, 96, 237, 238, 240], "s3n": [95, 237], "insecurecli": [95, 237], "write_mod": [96, 207, 238], "errorifexist": [96, 238], "table_pk": [96, 238], "upsert": [96, 207, 238], "pk": [96, 238], "atom": [96, 238], "hive_dataset": [96, 238], "hive_databas": [96, 238], "test_databas": [96, 238], "test_tabl": [96, 238], "preexist": [96, 238], "dataframewrit": [96, 97, 235, 238, 239], "saveast": [96, 235, 238], "hiveopt": [96, 238], "setcheckpointdir": [96, 238], "jdbc": [97, 239], "weather_t": [97, 239], "connection_properti": [97, 239], "topanda": [97, 239], "subprotocol": [97, 239], "subnam": [97, 239], "libsvm": [98, 241], "dump_svmlight_fil": [98, 241], "load_svmlight_fil": [98, 241], "spars": [98, 241], "matrix": [98, 241], "zero": [98, 241], "svm_dataset": [98, 241], "svm": [98, 241], "zero_bas": [98, 241], "14159": [98, 241], "reloaded_featur": [98, 241], "reloaded_label": [98, 241], "load_model": [99, 242], "save_model": [99, 242], "tensorflow_model": [99, 242], "include_optim": [99, 242], "tf_cred": [99, 242], "tf": [99, 242], "kera": [99, 242], "loaded_model": [99, 242], "new_predict": [99, 242], "assert_allclos": [99, 242], "rtol": [99, 242], "1e": [99, 242], "atol": [99, 242], "save_format": [99, 242], "api_doc": [99, 242], "alice_book": [100, 243], "alic": [100, 243], "002": [101, 102, 244, 245], "pyyaml": [103, 247], "pyyamldocument": [103, 247], "incorpor": 108, "asctim": 108, "levelnam": 108, "ext": [108, 264, 270], "stdout": 108, "white": 108, "magenta": 108, "yellow": 108, "ansi": 108, "cyan": 108, "commandcollect": 113, "encapsul": [44, 113, 257, 268], "primit": [0, 115, 145], "kedrocli": 115, "_hook_manag": 118, "exit_cod": [121, 134], "subcommand": 121, "themselv": 121, "attr": 123, "list_command": 123, "ctx": [123, 141], "pipeline_dir": 127, "pipeline_test": 127, "pipeline_conf": 127, "source_path": 127, "tests_path": 127, "config_path": 127, "occurr": [127, 168, 182], "9223372036854775807": [127, 168, 182], "vc": [131, 252], "cookiecutt": [131, 252, 266], "resid": 131, "verbose_error": 134, "format_messag": 134, "verbos": 135, "func_": 136, "stylesheet": 137, "forward_help": 138, "reqs_path": 139, "kedroclierror": 139, "subprocess": 140, "kedrocontexterror": 143, "mismatch": 143, "feed_dict": [149, 174], "_create_catalog": 149, "earliest": 151, "thrown": [152, 153, 194], "run_result": 153, "kedro_vers": [153, 251], "utitl": 154, "logging_config": 155, "autoregist": 157, "autodiscoveri": 157, "nodes_and_pipelin": 157, "desir": [158, 254, 262], "dynaconf": 158, "silenc": 158, "mislabel": 158, "cryptic": 158, "nonetyp": 158, "rochacbruno": 158, "460": 158, "save_on_clos": [161, 250], "register_pipelin": [161, 260, 261, 264, 268], "kedrosessionerror": 161, "shelv": 164, "config_fil": 168, "project_vers": 168, "source_dir": 168, "deriv": 168, "projectmetadata": 169, "kwd": [], "_single_process": 197, "as_posix": [], "dataset_pattern": 174, "relai": 174, "feed": 174, "insensit": 174, "conform": [174, 194], "lexicograph": 174, "data_set_nam": 174, "datasetalreadyexistserror": 174, "add_al": 174, "parq": 174, "datasetnotfounderror": 174, "boats_credenti": 174, "regex_search": 174, "syntaxerror": 174, "substr": 174, "prm": 174, "feat": 174, "feat_eng_data": 174, "time_seri": 174, "shallow": 174, "namedtupl": 182, "local_n": 185, "notebooks_and_ipython": 185, "kedro_and_notebook": 185, "setproject": 185, "param_group": 185, "local_namespac": 186, "redirect": [13, 188], "pretti": 188, "repl": 188, "rich_traceback": [188, 254], "driven": 189, "among": [190, 192, 259], "circulardependencyerror": 190, "circular": 190, "outputnotuniqueerror": 190, "confirmnotuniqueerror": 190, "first_d": 190, "second_d": 190, "first_nod": 190, "second_nod": 190, "third_d": 190, "fourth_d": 190, "all_input": 190, "all_output": [190, 264], "names_onli": 190, "loggabl": 190, "invoc": 190, "func1": 190, "func2": 190, "func3": 190, "node_namespac": 190, "intersect": 190, "distinct": [1, 190, 251], "lookup": 190, "node1": [190, 259, 261], "node2": [190, 259, 261], "node3": [190, 261], "inner": [190, 194], "only_nod": [190, 262, 266], "only_nodes_with_input": 190, "only_nodes_with_namespac": 190, "only_nodes_with_tag": [190, 262, 266], "modularpipelineerror": 192, "incorrectli": 192, "clean_data": 193, "boats_df": 193, "halve_datafram": 193, "array_split": 193, "cars2017": 193, "boats2017": 193, "clean_cars2017": 193, "clean_boats2017": 193, "train_cars2017": 193, "test_cars2017": 193, "train_boats2017": 193, "test_boats2017": 193, "auxiliari": 194, "hint": 194, "violat": 194, "digit": 194, "fullstop": 194, "bind": 194, "outer": 194, "wherea": 194, "toposort": [197, 199], "_validate_catalog": 197, "spawn": [197, 199], "cpu": [197, 199, 261, 268], "61": 197, "min": 197, "_sharedmemorydataset": 197, "sequenti": [198, 261, 264, 266, 268, 272], "classs": 198, "obj_path": 202, "default_obj_path": 202, "attributeerror": 202, "example_t": 204, "val1": 204, "val2": 204, "val3": 204, "val4": 204, "url_of_remote_serv": 204, "mind": 204, "divid": 204, "chunk": [204, 258], "sent": 204, "unsupport": 204, "dataframe_typ": 207, "primary_kei": 207, "partition_column": [207, 217], "owner_group": 207, "primary_column": 207, "names_and_ag": 207, "uniti": [207, 217], "truncat": 207, "ownership": 207, "owner": [44, 207], "managedt": 207, "catalog_typ": 217, "catalog_nam": 217, "glue": 217, "alter": [217, 253, 254], "overwrite_schema": 217, "partition_filt": 217, "boats_filesystem": 217, "dev_cr": 217, "boats_databricks_unity_catalog": 217, "simple_databas": 217, "simple_t": 217, "trucks_aws_glue_catalog": 217, "db_schema": 217, "db_tabl": 217, "new_data": 217, "get_loaded_vers": 217, "accepted_write_mod": 217, "default_write_mod": 217, "az": 217, "api_refer": 217, "histori": [217, 268], "created_tim": 217, "appendonli": 217, "meant": 217, "mssql": 226, "1433": 226, "testdb": 226, "strongpassword": 226, "_make_mssql_connection_str": 226, "pyodbc": 226, "encrypt": 226, "uid": 226, "trustservercertif": 226, "odbc_connect": 226, "testtabl": 226, "mssql_dataset": 226, "mssql_credenti": 226, "datet": 226, "BY": 226, "parse_d": [226, 233], "f0": 226, "adapt_mssql_date_param": 226, "dt": 226, "has_head": 233, "null_valu": 233, "somenullstr": 233, "frame_equ": 233, "rechunk": 233, "pola": 233, "explic": 233, "compabl": 233, "write_csv": 233, "snowpark": 235, "mar": 235, "weather_data": 235, "meteorologi": 235, "column_ord": 235, "table_typ": 235, "shorter": 235, "polygon": 235, "externalbrows": 235, "snowflake_cli": 235, "geopolygon": 235, "geodata": 235, "ab12345": 235, "eu": 235, "443": 235, "warehous": 235, "datascience_wh": 235, "detailed_data": 235, "service_account_abc": 235, "supersecret": 235, "john_do": 235, "wdomain": 235, "save_as_t": 235, "sparkjbdcdataset": 239, "new_inventori": 240, "inventori": 240, "output_mod": 240, "04_checkpoint": 240, "raw_new_inventori": 240, "inventory_schema": 240, "broker": 240, "kafka": 240, "schemainfer": 240, "fourcc": 246, "mp4v": 246, "opencv": 246, "mp4": 246, "video_dataset": 246, "sequencevideo": 246, "640": 246, "480": 246, "dtype": [0, 246], "uint8": 246, "255": [246, 258], "my_video": 246, "fp": 246, "generatorvideo": 246, "gen": 246, "codec": 246, "avaiabl": 246, "strict": 248, "broken": [248, 266], "decoupl": 250, "registr": 251, "basesessionstor": 251, "context_class": 251, "data_catalog_class": 251, "metaphor": 252, "minim": [252, 265], "astronom": 252, "exploratori": [252, 263], "phase": 252, "formerli": [252, 265], "mini": [252, 265], "my_kedro_pyspark_project": 252, "creator": 252, "custom_prompt": 252, "regex_valid": 252, "__init": 252, "py__": 252, "your_start": 252, "increment": [12, 53, 253], "info_file_handl": 254, "default_log": 254, "richhandl": 254, "aid": 254, "tracebacks_show_loc": 254, "richli": 254, "circleci": 254, "narrow": 254, "120": 254, "jupyter_column": 254, "jupyter_lin": 254, "115": 254, "markup": 254, "bold": 254, "blink": 254, "micropkg_nam": 256, "clash": [256, 261], "renam": [256, 257], "new_package_nam": 256, "bulk": 256, "manifest": 256, "cleaning_util": 256, "aliased_util": 256, "uat": 256, "second_pipelin": 256, "first_pipelin": 256, "fall": 256, "unpack": 256, "embed": [256, 264], "pypi_package_nam": 256, "micropkg_pull_arg": 256, "aliased_pipelin": 256, "pipeline_pull_arg": 256, "package_path": 256, "za": 256, "z0": 256, "9_": 256, "evolv": [257, 266, 268], "modern": [9, 13, 257, 271], "ingest": 257, "unlock": 257, "mental": 257, "collaps": 257, "adher": 257, "revers": 257, "coupl": 257, "scoop": 257, "realli": 257, "lunch_pipelin": 257, "lunch": 257, "verb": 257, "defrost": 257, "eat": 257, "food": 257, "frozen": [257, 268], "thaw": 257, "cook_pipelin": 257, "frozen_veg": 257, "veg": 257, "grill": 257, "grilled_veg": 257, "prep_pipelin": 257, "meal_pipelin": 257, "imagin": 257, "meal": 257, "defrost_nod": 257, "eat_breakfast_pipelin": 257, "eat_breakfast": 257, "breakfast_food": 257, "eat_lunch_pipelin": 257, "eat_lunch": 257, "lunch_food": 257, "disjoint": 257, "cook_breakfast_pipelin": 257, "breakfast": 257, "cook_lunch_pipelin": 257, "final_pipelin": 257, "freez": 257, "remap": 257, "confus": 257, "arbitrarili": 257, "template_pipelin": [257, 268], "input1": 257, "input2": 257, "thu": [257, 262], "override_m": 257, "node_func1": 257, "intermediary_output": 257, "node_func2": 257, "alpha_pipelin": 257, "beta_pipelin": 257, "adder_nod": 258, "adding_a_and_b": 258, "bound": 258, "resolut": [258, 259], "arg1": 258, "arg2": 258, "example_report": 258, "combined_report": 258, "uk_reporting_nod": 258, "uk_input1": 258, "uk_input2": 258, "uk": 258, "ge_reporting_nod": 258, "ge_input1": 258, "ge_input2": 258, "node_tag": [258, 259], "moreov": 258, "pipeline_tag": [258, 259], "chunkwisecsvdataset": 258, "your_project_nam": [], "chunkwise_dataset": [], "deepcopi": [], "bytesio": [], "_fs_arg": [], "_credenti": [], "auto_mkdir": [], "_storage_opt": [], "_load_arg": [], "_save_arg": [], "buf": [], "path_or_buf": [], "fs_file": [], "getvalu": [], "repurpos": [], "wise": [], "full_data": [], "textfileread": [], "data_train": 258, "frac": 258, "data_test": 258, "target_column": 258, "42": [], "329": [], "varianc": [259, 261, 262], "mean_so": [259, 262], "m2": [259, 262], "variance_pipelin": 259, "mean_nod": [259, 262], "variance_nod": [259, 262], "pipeline_d": 259, "last_nod": 259, "pipeline_al": 259, "readili": 259, "co": 259, "aforement": 260, "dp": 260, "data_processing_pipelin": 260, "data_science_pipelin": 260, "remind": 260, "centric": 260, "find_pipelin": [260, 261], "travers": 260, "data_engin": 260, "inherit": 261, "scarc": 261, "ram": 261, "dry": 261, "dryrunn": 261, "neccessari": 261, "dry_runn": 261, "input_nam": 261, "missing_input": 261, "03": 261, "24": 261, "09": [261, 264, 268, 269], "482": 261, "483": 261, "my_pipelin": 261, "tackl": 261, "outsourc": 261, "ultim": 261, "666666666666667": [261, 262], "lambdadataset": 261, "pickler": 261, "ouput": [261, 262], "tag1": 261, "tag2": 261, "tag3": 261, "pipeline1": 261, "nodes_nam": 261, "env1": 261, "dash": 261, "full_pipelin": 262, "recomput": 262, "sliced_pipelin": 262, "n_json": 262, "liber": 263, "example_num_train_it": 264, "example_learning_r": 264, "sepal_length": 264, "sepal_width": 264, "petal_length": 264, "petal_width": 264, "145": 264, "146": 264, "147": 264, "149": 264, "2021": 264, "13t15": 264, "08": [264, 268, 269], "255z": 264, "posixpath": 264, "kedro_project": 264, "refresh": [264, 276], "some_act": 264, "came": 264, "my_notebook": 264, "ipynb": 264, "kernelspec": 264, "kernel_nam": 264, "unabl": 264, "saw": 264, "qt": 264, "kedro_iri": 264, "qtconsol": 264, "noth": 264, "trick": 264, "vanilla": 264, "example_dataset_1": 265, "example_dataset_2": 265, "df_2": 265, "wrangl": [44, 266], "messi": 266, "unrefin": 266, "insight": 266, "expertis": 266, "skill": 266, "mathemat": 266, "joke": 266, "someon": 266, "trace": 266, "pictur": 266, "lot": 266, "everyon": 266, "idea": 266, "portabl": [266, 268], "sole": 266, "mutabl": 266, "chonki": 266, "anim": 266, "plump": 266, "round": 266, "heavier": 266, "averag": [266, 278], "likewis": [266, 271], "bulki": 266, "linear_model": 268, "model_select": 268, "train_test_split": 268, "linear": 268, "regress": 268, "passenger_capac": [268, 278], "crew": 268, "d_check_complet": [268, 269, 271], "moon_clearance_complet": [268, 269, 271], "review_scores_r": 268, "preprocess_shuttles_nod": [13, 268, 269], "462": 268, "89": [268, 269], "occas": 268, "portion": 268, "regressor_act": 268, "regressor_candid": 268, "41": 268, "y_t": 268, "rain": 268, "candidate_modelling_pip": 268, "elin": 268, "active_model": 268, "ling_pipelin": 268, "ate_modelling_pipelin": 268, "449": 268, "multithread": 268, "scratch": 269, "astyp": 269, "_parse_monei": 269, "43": 269, "46": 269, "temporari": 269, "garbag": 269, "collector": 269, "rated_shuttl": 269, "left_on": 269, "right_on": 269, "company_id": [269, 271], "28": 269, "leisur": 269, "breath": 269, "summaris": 269, "far": 269, "malt": 269, "helmhold": 269, "unsplash": [269, 272], "proceed": 270, "_build": 270, "english": 270, "restor": 270, "myst": 270, "autodoc": 270, "autosummari": 270, "autosummary_gener": 270, "apidoc": 270, "toctre": 270, "touch": 270, "fiction": 271, "moon": [271, 272], "travel": 271, "fleet": 271, "rate": 271, "spacecraft": 271, "passeng": [271, 278], "capac": [271, 278], "five": 271, "company_loc": 271, "total_fleet_count": 271, "35029": 271, "niue": 271, "30292": 271, "anguilla": 271, "19032": 271, "russian": 271, "feder": 271, "8238": 271, "91": 271, "barbado": 271, "30342": 271, "nan": 271, "sao": 271, "tome": 271, "shuttle_loc": 271, "shuttle_typ": [271, 278], "engine_typ": 271, "63561": 271, "v5": 271, "quantum": 271, "325": 271, "36260": 271, "780": 271, "57015": 271, "715": 271, "14035": 271, "plasma": 271, "770": 271, "10036": 271, "v2": 271, "approxim": 272, "2160": 272, "tourism": 272, "industri": 272, "boom": 272, "thousand": 272, "tourist": 272, "amen": 272, "trip": 272, "diaz": 272, "hit": 272, "answer": [6, 44, 272, 273], "reader": 272, "errno": 273, "kedro_reload": 273, "kedro_project_setup": 273, "158": 273, "resum": 273, "_lib": 273, "pyx": 273, "textread": 273, "__cinit__": 273, "689": 273, "_setup_parser_sourc": 273, "exc": 273, "sharabl": 274, "jupyterlab_serv": 274, "sneak": 274, "haven": [258, 276, 277, 278], "autoreload": 276, "my_shareable_pipelin": 276, "preview_arg": 277, "nrow": 277, "plotlydataset": 278, "shuttle_passenger_capacity_plot_exp": 278, "shuttle_passenger_capacity_plot_go": 278, "graph_obj": 278, "compare_passenger_capacity_exp": 278, "groupbi": 278, "numeric_onli": 278, "reset_index": 278, "graph_object": 278, "compare_passenger_capacity_go": 278, "data_fram": 278, "dummy_confusion_matrix": 278, "THE": [], "WITH": [], "TO": [], "revis": [], "_arg": 9, "utf": 9, "minio": 9, "ON": [], "polar": 0, "date_todai": 0, "todai": 0, "custom_resolv": [0, 62], "my_list": 0, "getattr": 0, "my_polars_dataset": 0, "product_ag": 0, "float64": 0, "group_identifi": 0, "utf8": 0, "try_parse_d": 0, "3_branch": 62, "bruce": 44, "philp": 44, "guilherm": 44, "braccial": 44, "brain": 44, "blog": [6, 44], "medium": 44, "truth": 44, "un": 44, "cleans": 44, "dimens": 44, "histor": 44, "drive": 44, "blend": 44, "redefin": 44, "smooth": 1, "utilis": 1, "awar": 1, "badconfigexcept": 1, "diataxi": [], "generalis": [10, 12], "revisit": 9, "summari": 9, "parameters_": [34, 256, 257], "catalog_": [34, 256], "lazili": 258, "decisiontreeclassifi": 258, "labelencod": 258, "tree": 258, "accuracy_scor": 258, "label_encod": 258, "chunkwisedataset": [], "variant": 258, "chunkwis": 258, "_overwrit": 258, "smaller": 258, "475": 258, "331": 258, "514": 258, "105": 258, "parameters_data_sci": 268, "parameters_data_process": 269, "incrementaldataset": 14, "conclud": 12, "repetit": 12, "hdf5": 9, "preprocessed_": 13, "processed_": 13, "_pq": 13, "descend": 13, "decreas": 13, "output_fil": 13}, "objects": {"": [[57, 0, 0, "-", "kedro"], [203, 0, 0, "-", "kedro_datasets"]], "kedro": [[58, 1, 1, "", "KedroPythonVersionWarning"], [59, 0, 0, "-", "config"], [64, 0, 0, "-", "extras"], [109, 0, 0, "-", "framework"], [170, 0, 0, "-", "io"], [183, 0, 0, "-", "ipython"], [187, 0, 0, "-", "logging"], [189, 0, 0, "-", "pipeline"], [195, 0, 0, "-", "runner"], [201, 0, 0, "-", "utils"]], "kedro.KedroPythonVersionWarning": [[58, 2, 1, "", "args"], [58, 3, 1, "", "with_traceback"]], "kedro.config": [[60, 1, 1, "", "ConfigLoader"], [61, 1, 1, "", "MissingConfigException"], [62, 1, 1, "", "OmegaConfigLoader"], [63, 1, 1, "", "TemplatedConfigLoader"]], "kedro.config.ConfigLoader": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "clear"], [60, 4, 1, "", "conf_paths"], [60, 3, 1, "", "copy"], [60, 3, 1, "", "fromkeys"], [60, 3, 1, "", "get"], [60, 3, 1, "", "items"], [60, 3, 1, "", "keys"], [60, 3, 1, "", "pop"], [60, 3, 1, "", "popitem"], [60, 3, 1, "", "setdefault"], [60, 3, 1, "", "update"], [60, 3, 1, "", "values"]], "kedro.config.MissingConfigException": [[61, 2, 1, "", "args"], [61, 3, 1, "", "with_traceback"]], "kedro.config.OmegaConfigLoader": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "clear"], [62, 3, 1, "", "copy"], [62, 3, 1, "", "fromkeys"], [62, 3, 1, "", "get"], [62, 3, 1, "", "items"], [62, 3, 1, "", "keys"], [62, 3, 1, "", "load_and_merge_dir_config"], [62, 3, 1, "", "pop"], [62, 3, 1, "", "popitem"], [62, 3, 1, "", "setdefault"], [62, 3, 1, "", "update"], [62, 3, 1, "", "values"]], "kedro.config.TemplatedConfigLoader": [[63, 3, 1, "", "__init__"], [63, 3, 1, "", "clear"], [63, 4, 1, "", "conf_paths"], [63, 3, 1, "", "copy"], [63, 3, 1, "", "fromkeys"], [63, 3, 1, "", "get"], [63, 3, 1, "", "items"], [63, 3, 1, "", "keys"], [63, 3, 1, "", "pop"], [63, 3, 1, "", "popitem"], [63, 3, 1, "", "setdefault"], [63, 3, 1, "", "update"], [63, 3, 1, "", "values"]], "kedro.extras": [[65, 0, 0, "-", "datasets"], [104, 0, 0, "-", "extensions"], [106, 0, 0, "-", "logging"]], "kedro.extras.datasets.api": [[66, 1, 1, "", "APIDataSet"]], "kedro.extras.datasets.api.APIDataSet": [[66, 3, 1, "", "__init__"], [66, 3, 1, "", "exists"], [66, 3, 1, "", "from_config"], [66, 3, 1, "", "load"], [66, 3, 1, "", "release"], [66, 3, 1, "", "save"]], "kedro.extras.datasets.biosequence": [[67, 1, 1, "", "BioSequenceDataSet"]], "kedro.extras.datasets.biosequence.BioSequenceDataSet": [[67, 2, 1, "", "DEFAULT_LOAD_ARGS"], [67, 2, 1, "", "DEFAULT_SAVE_ARGS"], [67, 3, 1, "", "__init__"], [67, 3, 1, "", "exists"], [67, 3, 1, "", "from_config"], [67, 3, 1, "", "invalidate_cache"], [67, 3, 1, "", "load"], [67, 3, 1, "", "release"], [67, 3, 1, "", "save"]], "kedro.extras.datasets.dask": [[68, 1, 1, "", "ParquetDataSet"]], "kedro.extras.datasets.dask.ParquetDataSet": [[68, 2, 1, "", "DEFAULT_LOAD_ARGS"], [68, 2, 1, "", "DEFAULT_SAVE_ARGS"], [68, 3, 1, "", "__init__"], [68, 3, 1, "", "exists"], [68, 3, 1, "", "from_config"], [68, 4, 1, "", "fs_args"], [68, 3, 1, "", "load"], [68, 3, 1, "", "release"], [68, 3, 1, "", "save"]], "kedro.extras.datasets.email": [[69, 1, 1, "", "EmailMessageDataSet"]], "kedro.extras.datasets.email.EmailMessageDataSet": [[69, 2, 1, "", "DEFAULT_LOAD_ARGS"], [69, 2, 1, "", "DEFAULT_SAVE_ARGS"], [69, 3, 1, "", "__init__"], [69, 3, 1, "", "exists"], [69, 3, 1, "", "from_config"], [69, 3, 1, "", "load"], [69, 3, 1, "", "release"], [69, 3, 1, "", "resolve_load_version"], [69, 3, 1, "", "resolve_save_version"], [69, 3, 1, "", "save"]], "kedro.extras.datasets.geopandas": [[70, 1, 1, "", "GeoJSONDataSet"]], "kedro.extras.datasets.geopandas.GeoJSONDataSet": [[70, 2, 1, "", "DEFAULT_LOAD_ARGS"], [70, 2, 1, "", "DEFAULT_SAVE_ARGS"], [70, 3, 1, "", "__init__"], [70, 3, 1, "", "exists"], [70, 3, 1, "", "from_config"], [70, 3, 1, "", "invalidate_cache"], [70, 3, 1, "", "load"], [70, 3, 1, "", "release"], [70, 3, 1, "", "resolve_load_version"], [70, 3, 1, "", "resolve_save_version"], [70, 3, 1, "", "save"]], "kedro.extras.datasets.holoviews": [[71, 1, 1, "", "HoloviewsWriter"]], "kedro.extras.datasets.holoviews.HoloviewsWriter": [[71, 2, 1, "", "DEFAULT_SAVE_ARGS"], [71, 3, 1, "", "__init__"], [71, 3, 1, "", "exists"], [71, 3, 1, "", "from_config"], [71, 3, 1, "", "load"], [71, 3, 1, "", "release"], [71, 3, 1, "", "resolve_load_version"], [71, 3, 1, "", "resolve_save_version"], [71, 3, 1, "", "save"]], "kedro.extras.datasets.json": [[72, 1, 1, "", "JSONDataSet"]], "kedro.extras.datasets.json.JSONDataSet": [[72, 2, 1, "", "DEFAULT_SAVE_ARGS"], [72, 3, 1, "", "__init__"], [72, 3, 1, "", "exists"], [72, 3, 1, "", "from_config"], [72, 3, 1, "", "load"], [72, 3, 1, "", "release"], [72, 3, 1, "", "resolve_load_version"], [72, 3, 1, "", "resolve_save_version"], [72, 3, 1, "", "save"]], "kedro.extras.datasets.matplotlib": [[73, 1, 1, "", "MatplotlibWriter"]], "kedro.extras.datasets.matplotlib.MatplotlibWriter": [[73, 2, 1, "", "DEFAULT_SAVE_ARGS"], [73, 3, 1, "", "__init__"], [73, 3, 1, "", "exists"], [73, 3, 1, "", "from_config"], [73, 3, 1, "", "load"], [73, 3, 1, "", "release"], [73, 3, 1, "", "resolve_load_version"], [73, 3, 1, "", "resolve_save_version"], [73, 3, 1, "", "save"]], "kedro.extras.datasets.networkx": [[74, 1, 1, "", "GMLDataSet"], [75, 1, 1, "", "GraphMLDataSet"], [76, 1, 1, "", "JSONDataSet"]], "kedro.extras.datasets.networkx.GMLDataSet": [[74, 2, 1, "", "DEFAULT_LOAD_ARGS"], [74, 2, 1, "", "DEFAULT_SAVE_ARGS"], [74, 3, 1, "", "__init__"], [74, 3, 1, "", "exists"], [74, 3, 1, "", "from_config"], [74, 3, 1, "", "load"], [74, 3, 1, "", "release"], [74, 3, 1, "", "resolve_load_version"], [74, 3, 1, "", "resolve_save_version"], [74, 3, 1, "", "save"]], "kedro.extras.datasets.networkx.GraphMLDataSet": [[75, 2, 1, "", "DEFAULT_LOAD_ARGS"], [75, 2, 1, "", "DEFAULT_SAVE_ARGS"], [75, 3, 1, "", "__init__"], [75, 3, 1, "", "exists"], [75, 3, 1, "", "from_config"], [75, 3, 1, "", "load"], [75, 3, 1, "", "release"], [75, 3, 1, "", "resolve_load_version"], [75, 3, 1, "", "resolve_save_version"], [75, 3, 1, "", "save"]], "kedro.extras.datasets.networkx.JSONDataSet": [[76, 2, 1, "", "DEFAULT_LOAD_ARGS"], [76, 2, 1, "", "DEFAULT_SAVE_ARGS"], [76, 3, 1, "", "__init__"], [76, 3, 1, "", "exists"], [76, 3, 1, "", "from_config"], [76, 3, 1, "", "load"], [76, 3, 1, "", "release"], [76, 3, 1, "", "resolve_load_version"], [76, 3, 1, "", "resolve_save_version"], [76, 3, 1, "", "save"]], "kedro.extras.datasets.pandas": [[77, 1, 1, "", "CSVDataSet"], [78, 1, 1, "", "ExcelDataSet"], [79, 1, 1, "", "FeatherDataSet"], [80, 1, 1, "", "GBQQueryDataSet"], [81, 1, 1, "", "GBQTableDataSet"], [82, 1, 1, "", "GenericDataSet"], [83, 1, 1, "", "HDFDataSet"], [84, 1, 1, "", "JSONDataSet"], [85, 1, 1, "", "ParquetDataSet"], [86, 1, 1, "", "SQLQueryDataSet"], [87, 1, 1, "", "SQLTableDataSet"], [88, 1, 1, "", "XMLDataSet"]], "kedro.extras.datasets.pandas.CSVDataSet": [[77, 2, 1, "", "DEFAULT_LOAD_ARGS"], [77, 2, 1, "", "DEFAULT_SAVE_ARGS"], [77, 3, 1, "", "__init__"], [77, 3, 1, "", "exists"], [77, 3, 1, "", "from_config"], [77, 3, 1, "", "load"], [77, 3, 1, "", "release"], [77, 3, 1, "", "resolve_load_version"], [77, 3, 1, "", "resolve_save_version"], [77, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.ExcelDataSet": [[78, 2, 1, "", "DEFAULT_LOAD_ARGS"], [78, 2, 1, "", "DEFAULT_SAVE_ARGS"], [78, 3, 1, "", "__init__"], [78, 3, 1, "", "exists"], [78, 3, 1, "", "from_config"], [78, 3, 1, "", "load"], [78, 3, 1, "", "release"], [78, 3, 1, "", "resolve_load_version"], [78, 3, 1, "", "resolve_save_version"], [78, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.FeatherDataSet": [[79, 2, 1, "", "DEFAULT_LOAD_ARGS"], [79, 2, 1, "", "DEFAULT_SAVE_ARGS"], [79, 3, 1, "", "__init__"], [79, 3, 1, "", "exists"], [79, 3, 1, "", "from_config"], [79, 3, 1, "", "load"], [79, 3, 1, "", "release"], [79, 3, 1, "", "resolve_load_version"], [79, 3, 1, "", "resolve_save_version"], [79, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.GBQQueryDataSet": [[80, 2, 1, "", "DEFAULT_LOAD_ARGS"], [80, 3, 1, "", "__init__"], [80, 3, 1, "", "exists"], [80, 3, 1, "", "from_config"], [80, 3, 1, "", "load"], [80, 3, 1, "", "release"], [80, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.GBQTableDataSet": [[81, 2, 1, "", "DEFAULT_LOAD_ARGS"], [81, 2, 1, "", "DEFAULT_SAVE_ARGS"], [81, 3, 1, "", "__init__"], [81, 3, 1, "", "exists"], [81, 3, 1, "", "from_config"], [81, 3, 1, "", "load"], [81, 3, 1, "", "release"], [81, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.GenericDataSet": [[82, 2, 1, "", "DEFAULT_LOAD_ARGS"], [82, 2, 1, "", "DEFAULT_SAVE_ARGS"], [82, 3, 1, "", "__init__"], [82, 3, 1, "", "exists"], [82, 3, 1, "", "from_config"], [82, 3, 1, "", "load"], [82, 3, 1, "", "release"], [82, 3, 1, "", "resolve_load_version"], [82, 3, 1, "", "resolve_save_version"], [82, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.HDFDataSet": [[83, 2, 1, "", "DEFAULT_LOAD_ARGS"], [83, 2, 1, "", "DEFAULT_SAVE_ARGS"], [83, 3, 1, "", "__init__"], [83, 3, 1, "", "exists"], [83, 3, 1, "", "from_config"], [83, 3, 1, "", "load"], [83, 3, 1, "", "release"], [83, 3, 1, "", "resolve_load_version"], [83, 3, 1, "", "resolve_save_version"], [83, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.JSONDataSet": [[84, 2, 1, "", "DEFAULT_LOAD_ARGS"], [84, 2, 1, "", "DEFAULT_SAVE_ARGS"], [84, 3, 1, "", "__init__"], [84, 3, 1, "", "exists"], [84, 3, 1, "", "from_config"], [84, 3, 1, "", "load"], [84, 3, 1, "", "release"], [84, 3, 1, "", "resolve_load_version"], [84, 3, 1, "", "resolve_save_version"], [84, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.ParquetDataSet": [[85, 2, 1, "", "DEFAULT_LOAD_ARGS"], [85, 2, 1, "", "DEFAULT_SAVE_ARGS"], [85, 3, 1, "", "__init__"], [85, 3, 1, "", "exists"], [85, 3, 1, "", "from_config"], [85, 3, 1, "", "load"], [85, 3, 1, "", "release"], [85, 3, 1, "", "resolve_load_version"], [85, 3, 1, "", "resolve_save_version"], [85, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.SQLQueryDataSet": [[86, 3, 1, "", "__init__"], [86, 3, 1, "", "create_connection"], [86, 2, 1, "", "engines"], [86, 3, 1, "", "exists"], [86, 3, 1, "", "from_config"], [86, 3, 1, "", "load"], [86, 3, 1, "", "release"], [86, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.SQLTableDataSet": [[87, 2, 1, "", "DEFAULT_LOAD_ARGS"], [87, 2, 1, "", "DEFAULT_SAVE_ARGS"], [87, 3, 1, "", "__init__"], [87, 3, 1, "", "create_connection"], [87, 2, 1, "", "engines"], [87, 3, 1, "", "exists"], [87, 3, 1, "", "from_config"], [87, 3, 1, "", "load"], [87, 3, 1, "", "release"], [87, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.XMLDataSet": [[88, 2, 1, "", "DEFAULT_LOAD_ARGS"], [88, 2, 1, "", "DEFAULT_SAVE_ARGS"], [88, 3, 1, "", "__init__"], [88, 3, 1, "", "exists"], [88, 3, 1, "", "from_config"], [88, 3, 1, "", "load"], [88, 3, 1, "", "release"], [88, 3, 1, "", "resolve_load_version"], [88, 3, 1, "", "resolve_save_version"], [88, 3, 1, "", "save"]], "kedro.extras.datasets.pickle": [[89, 1, 1, "", "PickleDataSet"]], "kedro.extras.datasets.pickle.PickleDataSet": [[89, 2, 1, "", "DEFAULT_LOAD_ARGS"], [89, 2, 1, "", "DEFAULT_SAVE_ARGS"], [89, 3, 1, "", "__init__"], [89, 3, 1, "", "exists"], [89, 3, 1, "", "from_config"], [89, 3, 1, "", "load"], [89, 3, 1, "", "release"], [89, 3, 1, "", "resolve_load_version"], [89, 3, 1, "", "resolve_save_version"], [89, 3, 1, "", "save"]], "kedro.extras.datasets.pillow": [[90, 1, 1, "", "ImageDataSet"]], "kedro.extras.datasets.pillow.ImageDataSet": [[90, 2, 1, "", "DEFAULT_SAVE_ARGS"], [90, 3, 1, "", "__init__"], [90, 3, 1, "", "exists"], [90, 3, 1, "", "from_config"], [90, 3, 1, "", "load"], [90, 3, 1, "", "release"], [90, 3, 1, "", "resolve_load_version"], [90, 3, 1, "", "resolve_save_version"], [90, 3, 1, "", "save"]], "kedro.extras.datasets.plotly": [[91, 1, 1, "", "JSONDataSet"], [92, 1, 1, "", "PlotlyDataSet"]], "kedro.extras.datasets.plotly.JSONDataSet": [[91, 2, 1, "", "DEFAULT_LOAD_ARGS"], [91, 2, 1, "", "DEFAULT_SAVE_ARGS"], [91, 3, 1, "", "__init__"], [91, 3, 1, "", "exists"], [91, 3, 1, "", "from_config"], [91, 3, 1, "", "load"], [91, 3, 1, "", "release"], [91, 3, 1, "", "resolve_load_version"], [91, 3, 1, "", "resolve_save_version"], [91, 3, 1, "", "save"]], "kedro.extras.datasets.plotly.PlotlyDataSet": [[92, 2, 1, "", "DEFAULT_LOAD_ARGS"], [92, 2, 1, "", "DEFAULT_SAVE_ARGS"], [92, 3, 1, "", "__init__"], [92, 3, 1, "", "exists"], [92, 3, 1, "", "from_config"], [92, 3, 1, "", "load"], [92, 3, 1, "", "release"], [92, 3, 1, "", "resolve_load_version"], [92, 3, 1, "", "resolve_save_version"], [92, 3, 1, "", "save"]], "kedro.extras.datasets.redis": [[93, 1, 1, "", "PickleDataSet"]], "kedro.extras.datasets.redis.PickleDataSet": [[93, 2, 1, "", "DEFAULT_LOAD_ARGS"], [93, 2, 1, "", "DEFAULT_REDIS_URL"], [93, 2, 1, "", "DEFAULT_SAVE_ARGS"], [93, 3, 1, "", "__init__"], [93, 3, 1, "", "exists"], [93, 3, 1, "", "from_config"], [93, 3, 1, "", "load"], [93, 3, 1, "", "release"], [93, 3, 1, "", "save"]], "kedro.extras.datasets.spark": [[94, 1, 1, "", "DeltaTableDataSet"], [95, 1, 1, "", "SparkDataSet"], [96, 1, 1, "", "SparkHiveDataSet"], [97, 1, 1, "", "SparkJDBCDataSet"]], "kedro.extras.datasets.spark.DeltaTableDataSet": [[94, 3, 1, "", "__init__"], [94, 3, 1, "", "exists"], [94, 3, 1, "", "from_config"], [94, 3, 1, "", "load"], [94, 3, 1, "", "release"], [94, 3, 1, "", "save"]], "kedro.extras.datasets.spark.SparkDataSet": [[95, 2, 1, "", "DEFAULT_LOAD_ARGS"], [95, 2, 1, "", "DEFAULT_SAVE_ARGS"], [95, 3, 1, "", "__init__"], [95, 3, 1, "", "exists"], [95, 3, 1, "", "from_config"], [95, 3, 1, "", "load"], [95, 3, 1, "", "release"], [95, 3, 1, "", "resolve_load_version"], [95, 3, 1, "", "resolve_save_version"], [95, 3, 1, "", "save"]], "kedro.extras.datasets.spark.SparkHiveDataSet": [[96, 2, 1, "", "DEFAULT_SAVE_ARGS"], [96, 3, 1, "", "__init__"], [96, 3, 1, "", "exists"], [96, 3, 1, "", "from_config"], [96, 3, 1, "", "load"], [96, 3, 1, "", "release"], [96, 3, 1, "", "save"]], "kedro.extras.datasets.spark.SparkJDBCDataSet": [[97, 2, 1, "", "DEFAULT_LOAD_ARGS"], [97, 2, 1, "", "DEFAULT_SAVE_ARGS"], [97, 3, 1, "", "__init__"], [97, 3, 1, "", "exists"], [97, 3, 1, "", "from_config"], [97, 3, 1, "", "load"], [97, 3, 1, "", "release"], [97, 3, 1, "", "save"]], "kedro.extras.datasets.svmlight": [[98, 1, 1, "", "SVMLightDataSet"]], "kedro.extras.datasets.svmlight.SVMLightDataSet": [[98, 2, 1, "", "DEFAULT_LOAD_ARGS"], [98, 2, 1, "", "DEFAULT_SAVE_ARGS"], [98, 3, 1, "", "exists"], [98, 3, 1, "", "from_config"], [98, 3, 1, "", "load"], [98, 3, 1, "", "release"], [98, 3, 1, "", "resolve_load_version"], [98, 3, 1, "", "resolve_save_version"], [98, 3, 1, "", "save"]], "kedro.extras.datasets.tensorflow": [[99, 1, 1, "", "TensorFlowModelDataset"]], "kedro.extras.datasets.tensorflow.TensorFlowModelDataset": [[99, 2, 1, "", "DEFAULT_LOAD_ARGS"], [99, 2, 1, "", "DEFAULT_SAVE_ARGS"], [99, 3, 1, "", "__init__"], [99, 3, 1, "", "exists"], [99, 3, 1, "", "from_config"], [99, 3, 1, "", "load"], [99, 3, 1, "", "release"], [99, 3, 1, "", "resolve_load_version"], [99, 3, 1, "", "resolve_save_version"], [99, 3, 1, "", "save"]], "kedro.extras.datasets.text": [[100, 1, 1, "", "TextDataSet"]], "kedro.extras.datasets.text.TextDataSet": [[100, 3, 1, "", "__init__"], [100, 3, 1, "", "exists"], [100, 3, 1, "", "from_config"], [100, 3, 1, "", "load"], [100, 3, 1, "", "release"], [100, 3, 1, "", "resolve_load_version"], [100, 3, 1, "", "resolve_save_version"], [100, 3, 1, "", "save"]], "kedro.extras.datasets.tracking": [[101, 1, 1, "", "JSONDataSet"], [102, 1, 1, "", "MetricsDataSet"]], "kedro.extras.datasets.tracking.JSONDataSet": [[101, 2, 1, "", "DEFAULT_SAVE_ARGS"], [101, 3, 1, "", "__init__"], [101, 3, 1, "", "exists"], [101, 3, 1, "", "from_config"], [101, 3, 1, "", "load"], [101, 3, 1, "", "release"], [101, 3, 1, "", "resolve_load_version"], [101, 3, 1, "", "resolve_save_version"], [101, 3, 1, "", "save"], [101, 2, 1, "", "versioned"]], "kedro.extras.datasets.tracking.MetricsDataSet": [[102, 2, 1, "", "DEFAULT_SAVE_ARGS"], [102, 3, 1, "", "__init__"], [102, 3, 1, "", "exists"], [102, 3, 1, "", "from_config"], [102, 3, 1, "", "load"], [102, 3, 1, "", "release"], [102, 3, 1, "", "resolve_load_version"], [102, 3, 1, "", "resolve_save_version"], [102, 3, 1, "", "save"], [102, 2, 1, "", "versioned"]], "kedro.extras.datasets.yaml": [[103, 1, 1, "", "YAMLDataSet"]], "kedro.extras.datasets.yaml.YAMLDataSet": [[103, 2, 1, "", "DEFAULT_SAVE_ARGS"], [103, 3, 1, "", "__init__"], [103, 3, 1, "", "exists"], [103, 3, 1, "", "from_config"], [103, 3, 1, "", "load"], [103, 3, 1, "", "release"], [103, 3, 1, "", "resolve_load_version"], [103, 3, 1, "", "resolve_save_version"], [103, 3, 1, "", "save"]], "kedro.extras.extensions": [[105, 0, 0, "-", "ipython"]], "kedro.extras.logging": [[107, 0, 0, "-", "color_logger"]], "kedro.extras.logging.color_logger": [[108, 1, 1, "", "ColorHandler"]], "kedro.framework": [[110, 0, 0, "-", "cli"], [142, 0, 0, "-", "context"], [145, 0, 0, "-", "hooks"], [154, 0, 0, "-", "project"], [159, 0, 0, "-", "session"], [167, 0, 0, "-", "startup"]], "kedro.framework.cli": [[111, 0, 0, "-", "catalog"], [112, 0, 0, "-", "cli"], [115, 0, 0, "-", "hooks"], [122, 0, 0, "-", "jupyter"], [124, 0, 0, "-", "micropkg"], [126, 0, 0, "-", "pipeline"], [128, 0, 0, "-", "project"], [129, 0, 0, "-", "registry"], [130, 0, 0, "-", "starters"], [132, 0, 0, "-", "utils"]], "kedro.framework.cli.cli": [[113, 1, 1, "", "KedroCLI"], [114, 5, 1, "", "main"]], "kedro.framework.cli.hooks": [[116, 0, 0, "-", "manager"], [119, 0, 0, "-", "markers"], [120, 0, 0, "-", "specs"]], "kedro.framework.cli.hooks.manager": [[117, 1, 1, "", "CLIHooksManager"], [118, 5, 1, "", "get_cli_hook_manager"]], "kedro.framework.cli.hooks.specs": [[121, 1, 1, "", "CLICommandSpecs"]], "kedro.framework.cli.hooks.specs.CLICommandSpecs": [[121, 3, 1, "", "after_command_run"], [121, 3, 1, "", "before_command_run"]], "kedro.framework.cli.jupyter": [[123, 1, 1, "", "JupyterCommandGroup"]], "kedro.framework.cli.jupyter.JupyterCommandGroup": [[123, 3, 1, "", "list_commands"]], "kedro.framework.cli.micropkg": [[125, 5, 1, "", "safe_extract"]], "kedro.framework.cli.pipeline": [[127, 1, 1, "", "PipelineArtifacts"]], "kedro.framework.cli.pipeline.PipelineArtifacts": [[127, 3, 1, "", "count"], [127, 3, 1, "", "index"], [127, 2, 1, "", "pipeline_conf"], [127, 2, 1, "", "pipeline_dir"], [127, 2, 1, "", "pipeline_tests"]], "kedro.framework.cli.starters": [[131, 1, 1, "", "KedroStarterSpec"]], "kedro.framework.cli.starters.KedroStarterSpec": [[131, 2, 1, "", "alias"], [131, 2, 1, "", "directory"], [131, 2, 1, "", "origin"], [131, 2, 1, "", "template_path"]], "kedro.framework.cli.utils": [[133, 1, 1, "", "CommandCollection"], [134, 1, 1, "", "KedroCliError"], [135, 5, 1, "", "command_with_verbosity"], [136, 5, 1, "", "env_option"], [137, 5, 1, "", "find_stylesheets"], [138, 5, 1, "", "forward_command"], [139, 5, 1, "", "get_pkg_version"], [140, 5, 1, "", "python_call"], [141, 5, 1, "", "split_string"]], "kedro.framework.cli.utils.KedroCliError": [[134, 2, 1, "", "VERBOSE_ERROR"], [134, 2, 1, "", "args"], [134, 2, 1, "", "exit_code"], [134, 3, 1, "", "format_message"], [134, 3, 1, "", "show"], [134, 3, 1, "", "with_traceback"]], "kedro.framework.context": [[143, 1, 1, "", "KedroContext"], [144, 1, 1, "", "KedroContextError"]], "kedro.framework.context.KedroContext": [[143, 3, 1, "", "__init__"], [143, 4, 1, "", "catalog"], [143, 4, 1, "", "config_loader"], [143, 4, 1, "", "env"], [143, 4, 1, "", "params"], [143, 4, 1, "", "project_path"]], "kedro.framework.context.KedroContextError": [[144, 2, 1, "", "args"], [144, 3, 1, "", "with_traceback"]], "kedro.framework.hooks": [[146, 0, 0, "-", "manager"], [147, 0, 0, "-", "markers"], [148, 0, 0, "-", "specs"]], "kedro.framework.hooks.specs": [[149, 1, 1, "", "DataCatalogSpecs"], [150, 1, 1, "", "DatasetSpecs"], [151, 1, 1, "", "KedroContextSpecs"], [152, 1, 1, "", "NodeSpecs"], [153, 1, 1, "", "PipelineSpecs"]], "kedro.framework.hooks.specs.DataCatalogSpecs": [[149, 3, 1, "", "after_catalog_created"]], "kedro.framework.hooks.specs.DatasetSpecs": [[150, 3, 1, "", "after_dataset_loaded"], [150, 3, 1, "", "after_dataset_saved"], [150, 3, 1, "", "before_dataset_loaded"], [150, 3, 1, "", "before_dataset_saved"]], "kedro.framework.hooks.specs.KedroContextSpecs": [[151, 3, 1, "", "after_context_created"]], "kedro.framework.hooks.specs.NodeSpecs": [[152, 3, 1, "", "after_node_run"], [152, 3, 1, "", "before_node_run"], [152, 3, 1, "", "on_node_error"]], "kedro.framework.hooks.specs.PipelineSpecs": [[153, 3, 1, "", "after_pipeline_run"], [153, 3, 1, "", "before_pipeline_run"], [153, 3, 1, "", "on_pipeline_error"]], "kedro.framework.project": [[155, 5, 1, "", "configure_logging"], [156, 5, 1, "", "configure_project"], [157, 5, 1, "", "find_pipelines"], [158, 5, 1, "", "validate_settings"]], "kedro.framework.session": [[160, 0, 0, "-", "session"], [163, 0, 0, "-", "shelvestore"], [165, 0, 0, "-", "store"]], "kedro.framework.session.session": [[161, 1, 1, "", "KedroSession"], [162, 1, 1, "", "KedroSessionError"]], "kedro.framework.session.session.KedroSession": [[161, 3, 1, "", "close"], [161, 3, 1, "", "create"], [161, 3, 1, "", "load_context"], [161, 3, 1, "", "run"], [161, 4, 1, "", "store"]], "kedro.framework.session.session.KedroSessionError": [[162, 2, 1, "", "args"], [162, 3, 1, "", "with_traceback"]], "kedro.framework.session.shelvestore": [[164, 1, 1, "", "ShelveStore"]], "kedro.framework.session.store": [[166, 1, 1, "", "BaseSessionStore"]], "kedro.framework.startup": [[168, 1, 1, "", "ProjectMetadata"], [169, 5, 1, "", "bootstrap_project"]], "kedro.framework.startup.ProjectMetadata": [[168, 2, 1, "", "config_file"], [168, 3, 1, "", "count"], [168, 3, 1, "", "index"], [168, 2, 1, "", "kedro_init_version"], [168, 2, 1, "", "package_name"], [168, 2, 1, "", "project_name"], [168, 2, 1, "", "project_path"], [168, 2, 1, "", "project_version"], [168, 2, 1, "", "source_dir"]], "kedro.io": [[171, 2, 1, "", "AbstractDataSet"], [172, 2, 1, "", "AbstractVersionedDataSet"], [173, 2, 1, "", "CachedDataSet"], [174, 1, 1, "", "DataCatalog"], [175, 2, 1, "", "DataSetAlreadyExistsError"], [176, 2, 1, "", "DataSetError"], [177, 2, 1, "", "DataSetNotFoundError"], [178, 2, 1, "", "IncrementalDataSet"], [179, 2, 1, "", "LambdaDataSet"], [180, 2, 1, "", "MemoryDataSet"], [181, 2, 1, "", "PartitionedDataSet"], [182, 1, 1, "", "Version"]], "kedro.io.DataCatalog": [[174, 3, 1, "", "__init__"], [174, 3, 1, "", "add"], [174, 3, 1, "", "add_all"], [174, 3, 1, "", "add_feed_dict"], [174, 3, 1, "", "confirm"], [174, 3, 1, "", "exists"], [174, 3, 1, "", "from_config"], [174, 3, 1, "", "list"], [174, 3, 1, "", "load"], [174, 3, 1, "", "release"], [174, 3, 1, "", "save"], [174, 3, 1, "", "shallow_copy"]], "kedro.io.Version": [[182, 3, 1, "", "count"], [182, 3, 1, "", "index"], [182, 2, 1, "", "load"], [182, 2, 1, "", "save"]], "kedro.ipython": [[184, 5, 1, "", "load_ipython_extension"], [185, 5, 1, "", "magic_reload_kedro"], [186, 5, 1, "", "reload_kedro"]], "kedro.logging": [[188, 1, 1, "", "RichHandler"]], "kedro.pipeline": [[190, 1, 1, "", "Pipeline"], [193, 5, 1, "", "node"]], "kedro.pipeline.Pipeline": [[190, 3, 1, "", "__init__"], [190, 3, 1, "", "all_inputs"], [190, 3, 1, "", "all_outputs"], [190, 3, 1, "", "data_sets"], [190, 3, 1, "", "describe"], [190, 3, 1, "", "filter"], [190, 3, 1, "", "from_inputs"], [190, 3, 1, "", "from_nodes"], [190, 4, 1, "", "grouped_nodes"], [190, 3, 1, "", "inputs"], [190, 4, 1, "", "node_dependencies"], [190, 4, 1, "", "nodes"], [190, 3, 1, "", "only_nodes"], [190, 3, 1, "", "only_nodes_with_inputs"], [190, 3, 1, "", "only_nodes_with_namespace"], [190, 3, 1, "", "only_nodes_with_outputs"], [190, 3, 1, "", "only_nodes_with_tags"], [190, 3, 1, "", "outputs"], [190, 3, 1, "", "tag"], [190, 3, 1, "", "to_json"], [190, 3, 1, "", "to_nodes"], [190, 3, 1, "", "to_outputs"]], "kedro.pipeline.modular_pipeline": [[191, 1, 1, "", "ModularPipelineError"], [192, 5, 1, "", "pipeline"]], "kedro.pipeline.modular_pipeline.ModularPipelineError": [[191, 2, 1, "", "args"], [191, 3, 1, "", "with_traceback"]], "kedro.pipeline.node": [[194, 1, 1, "", "Node"]], "kedro.pipeline.node.Node": [[194, 3, 1, "", "__init__"], [194, 4, 1, "", "confirms"], [194, 4, 1, "", "func"], [194, 4, 1, "", "inputs"], [194, 4, 1, "", "name"], [194, 4, 1, "", "namespace"], [194, 4, 1, "", "outputs"], [194, 3, 1, "", "run"], [194, 4, 1, "", "short_name"], [194, 3, 1, "", "tag"], [194, 4, 1, "", "tags"]], "kedro.runner": [[196, 1, 1, "", "AbstractRunner"], [197, 1, 1, "", "ParallelRunner"], [198, 1, 1, "", "SequentialRunner"], [199, 1, 1, "", "ThreadRunner"], [200, 5, 1, "", "run_node"]], "kedro.runner.AbstractRunner": [[196, 3, 1, "", "__init__"], [196, 3, 1, "", "create_default_data_set"], [196, 3, 1, "", "run"], [196, 3, 1, "", "run_only_missing"]], "kedro.runner.ParallelRunner": [[197, 3, 1, "", "__init__"], [197, 3, 1, "", "create_default_data_set"], [197, 3, 1, "", "run"], [197, 3, 1, "", "run_only_missing"]], "kedro.runner.SequentialRunner": [[198, 3, 1, "", "__init__"], [198, 3, 1, "", "create_default_data_set"], [198, 3, 1, "", "run"], [198, 3, 1, "", "run_only_missing"]], "kedro.runner.ThreadRunner": [[199, 3, 1, "", "__init__"], [199, 3, 1, "", "create_default_data_set"], [199, 3, 1, "", "run"], [199, 3, 1, "", "run_only_missing"]], "kedro.utils": [[202, 5, 1, "", "load_obj"]], "kedro_datasets.api": [[204, 1, 1, "", "APIDataSet"]], "kedro_datasets.api.APIDataSet": [[204, 2, 1, "", "DEFAULT_SAVE_ARGS"], [204, 3, 1, "", "__init__"], [204, 3, 1, "", "exists"], [204, 3, 1, "", "from_config"], [204, 3, 1, "", "load"], [204, 3, 1, "", "release"], [204, 3, 1, "", "save"]], "kedro_datasets.biosequence": [[205, 1, 1, "", "BioSequenceDataSet"]], "kedro_datasets.biosequence.BioSequenceDataSet": [[205, 2, 1, "", "DEFAULT_LOAD_ARGS"], [205, 2, 1, "", "DEFAULT_SAVE_ARGS"], [205, 3, 1, "", "__init__"], [205, 3, 1, "", "exists"], [205, 3, 1, "", "from_config"], [205, 3, 1, "", "invalidate_cache"], [205, 3, 1, "", "load"], [205, 3, 1, "", "release"], [205, 3, 1, "", "save"]], "kedro_datasets.dask": [[206, 1, 1, "", "ParquetDataSet"]], "kedro_datasets.dask.ParquetDataSet": [[206, 2, 1, "", "DEFAULT_LOAD_ARGS"], [206, 2, 1, "", "DEFAULT_SAVE_ARGS"], [206, 3, 1, "", "__init__"], [206, 3, 1, "", "exists"], [206, 3, 1, "", "from_config"], [206, 4, 1, "", "fs_args"], [206, 3, 1, "", "load"], [206, 3, 1, "", "release"], [206, 3, 1, "", "save"]], "kedro_datasets.databricks": [[207, 1, 1, "", "ManagedTableDataSet"]], "kedro_datasets.databricks.ManagedTableDataSet": [[207, 3, 1, "", "__init__"], [207, 3, 1, "", "exists"], [207, 3, 1, "", "from_config"], [207, 3, 1, "", "load"], [207, 3, 1, "", "release"], [207, 3, 1, "", "resolve_load_version"], [207, 3, 1, "", "resolve_save_version"], [207, 3, 1, "", "save"]], "kedro_datasets.email": [[208, 1, 1, "", "EmailMessageDataSet"]], "kedro_datasets.email.EmailMessageDataSet": [[208, 2, 1, "", "DEFAULT_LOAD_ARGS"], [208, 2, 1, "", "DEFAULT_SAVE_ARGS"], [208, 3, 1, "", "__init__"], [208, 3, 1, "", "exists"], [208, 3, 1, "", "from_config"], [208, 3, 1, "", "load"], [208, 3, 1, "", "release"], [208, 3, 1, "", "resolve_load_version"], [208, 3, 1, "", "resolve_save_version"], [208, 3, 1, "", "save"]], "kedro_datasets.geopandas": [[209, 1, 1, "", "GeoJSONDataSet"]], "kedro_datasets.geopandas.GeoJSONDataSet": [[209, 2, 1, "", "DEFAULT_LOAD_ARGS"], [209, 2, 1, "", "DEFAULT_SAVE_ARGS"], [209, 3, 1, "", "__init__"], [209, 3, 1, "", "exists"], [209, 3, 1, "", "from_config"], [209, 3, 1, "", "invalidate_cache"], [209, 3, 1, "", "load"], [209, 3, 1, "", "release"], [209, 3, 1, "", "resolve_load_version"], [209, 3, 1, "", "resolve_save_version"], [209, 3, 1, "", "save"]], "kedro_datasets.holoviews": [[210, 1, 1, "", "HoloviewsWriter"]], "kedro_datasets.holoviews.HoloviewsWriter": [[210, 2, 1, "", "DEFAULT_SAVE_ARGS"], [210, 3, 1, "", "__init__"], [210, 3, 1, "", "exists"], [210, 3, 1, "", "from_config"], [210, 3, 1, "", "load"], [210, 3, 1, "", "release"], [210, 3, 1, "", "resolve_load_version"], [210, 3, 1, "", "resolve_save_version"], [210, 3, 1, "", "save"]], "kedro_datasets.json": [[211, 1, 1, "", "JSONDataSet"]], "kedro_datasets.json.JSONDataSet": [[211, 2, 1, "", "DEFAULT_SAVE_ARGS"], [211, 3, 1, "", "__init__"], [211, 3, 1, "", "exists"], [211, 3, 1, "", "from_config"], [211, 3, 1, "", "load"], [211, 3, 1, "", "release"], [211, 3, 1, "", "resolve_load_version"], [211, 3, 1, "", "resolve_save_version"], [211, 3, 1, "", "save"]], "kedro_datasets.matplotlib": [[212, 1, 1, "", "MatplotlibWriter"]], "kedro_datasets.matplotlib.MatplotlibWriter": [[212, 2, 1, "", "DEFAULT_SAVE_ARGS"], [212, 3, 1, "", "__init__"], [212, 3, 1, "", "exists"], [212, 3, 1, "", "from_config"], [212, 3, 1, "", "load"], [212, 3, 1, "", "release"], [212, 3, 1, "", "resolve_load_version"], [212, 3, 1, "", "resolve_save_version"], [212, 3, 1, "", "save"]], "kedro_datasets.networkx": [[213, 1, 1, "", "GMLDataSet"], [214, 1, 1, "", "GraphMLDataSet"], [215, 1, 1, "", "JSONDataSet"]], "kedro_datasets.networkx.GMLDataSet": [[213, 2, 1, "", "DEFAULT_LOAD_ARGS"], [213, 2, 1, "", "DEFAULT_SAVE_ARGS"], [213, 3, 1, "", "__init__"], [213, 3, 1, "", "exists"], [213, 3, 1, "", "from_config"], [213, 3, 1, "", "load"], [213, 3, 1, "", "release"], [213, 3, 1, "", "resolve_load_version"], [213, 3, 1, "", "resolve_save_version"], [213, 3, 1, "", "save"]], "kedro_datasets.networkx.GraphMLDataSet": [[214, 2, 1, "", "DEFAULT_LOAD_ARGS"], [214, 2, 1, "", "DEFAULT_SAVE_ARGS"], [214, 3, 1, "", "__init__"], [214, 3, 1, "", "exists"], [214, 3, 1, "", "from_config"], [214, 3, 1, "", "load"], [214, 3, 1, "", "release"], [214, 3, 1, "", "resolve_load_version"], [214, 3, 1, "", "resolve_save_version"], [214, 3, 1, "", "save"]], "kedro_datasets.networkx.JSONDataSet": [[215, 2, 1, "", "DEFAULT_LOAD_ARGS"], [215, 2, 1, "", "DEFAULT_SAVE_ARGS"], [215, 3, 1, "", "__init__"], [215, 3, 1, "", "exists"], [215, 3, 1, "", "from_config"], [215, 3, 1, "", "load"], [215, 3, 1, "", "release"], [215, 3, 1, "", "resolve_load_version"], [215, 3, 1, "", "resolve_save_version"], [215, 3, 1, "", "save"]], "kedro_datasets.pandas": [[216, 1, 1, "", "CSVDataSet"], [217, 1, 1, "", "DeltaTableDataSet"], [218, 1, 1, "", "ExcelDataSet"], [219, 1, 1, "", "FeatherDataSet"], [220, 1, 1, "", "GBQQueryDataSet"], [221, 1, 1, "", "GBQTableDataSet"], [222, 1, 1, "", "GenericDataSet"], [223, 1, 1, "", "HDFDataSet"], [224, 1, 1, "", "JSONDataSet"], [225, 1, 1, "", "ParquetDataSet"], [226, 1, 1, "", "SQLQueryDataSet"], [227, 1, 1, "", "SQLTableDataSet"], [228, 1, 1, "", "XMLDataSet"]], "kedro_datasets.pandas.CSVDataSet": [[216, 2, 1, "", "DEFAULT_LOAD_ARGS"], [216, 2, 1, "", "DEFAULT_SAVE_ARGS"], [216, 3, 1, "", "__init__"], [216, 3, 1, "", "exists"], [216, 3, 1, "", "from_config"], [216, 3, 1, "", "load"], [216, 3, 1, "", "release"], [216, 3, 1, "", "resolve_load_version"], [216, 3, 1, "", "resolve_save_version"], [216, 3, 1, "", "save"]], "kedro_datasets.pandas.DeltaTableDataSet": [[217, 2, 1, "", "ACCEPTED_WRITE_MODES"], [217, 2, 1, "", "DEFAULT_LOAD_ARGS"], [217, 2, 1, "", "DEFAULT_SAVE_ARGS"], [217, 2, 1, "", "DEFAULT_WRITE_MODE"], [217, 3, 1, "", "__init__"], [217, 3, 1, "", "exists"], [217, 3, 1, "", "from_config"], [217, 4, 1, "", "fs_args"], [217, 3, 1, "", "get_loaded_version"], [217, 4, 1, "", "history"], [217, 3, 1, "", "load"], [217, 4, 1, "", "metadata"], [217, 3, 1, "", "release"], [217, 3, 1, "", "save"], [217, 4, 1, "", "schema"]], "kedro_datasets.pandas.ExcelDataSet": [[218, 2, 1, "", "DEFAULT_LOAD_ARGS"], [218, 2, 1, "", "DEFAULT_SAVE_ARGS"], [218, 3, 1, "", "__init__"], [218, 3, 1, "", "exists"], [218, 3, 1, "", "from_config"], [218, 3, 1, "", "load"], [218, 3, 1, "", "release"], [218, 3, 1, "", "resolve_load_version"], [218, 3, 1, "", "resolve_save_version"], [218, 3, 1, "", "save"]], "kedro_datasets.pandas.FeatherDataSet": [[219, 2, 1, "", "DEFAULT_LOAD_ARGS"], [219, 2, 1, "", "DEFAULT_SAVE_ARGS"], [219, 3, 1, "", "__init__"], [219, 3, 1, "", "exists"], [219, 3, 1, "", "from_config"], [219, 3, 1, "", "load"], [219, 3, 1, "", "release"], [219, 3, 1, "", "resolve_load_version"], [219, 3, 1, "", "resolve_save_version"], [219, 3, 1, "", "save"]], "kedro_datasets.pandas.GBQQueryDataSet": [[220, 2, 1, "", "DEFAULT_LOAD_ARGS"], [220, 3, 1, "", "__init__"], [220, 3, 1, "", "exists"], [220, 3, 1, "", "from_config"], [220, 3, 1, "", "load"], [220, 3, 1, "", "release"], [220, 3, 1, "", "save"]], "kedro_datasets.pandas.GBQTableDataSet": [[221, 2, 1, "", "DEFAULT_LOAD_ARGS"], [221, 2, 1, "", "DEFAULT_SAVE_ARGS"], [221, 3, 1, "", "__init__"], [221, 3, 1, "", "exists"], [221, 3, 1, "", "from_config"], [221, 3, 1, "", "load"], [221, 3, 1, "", "release"], [221, 3, 1, "", "save"]], "kedro_datasets.pandas.GenericDataSet": [[222, 2, 1, "", "DEFAULT_LOAD_ARGS"], [222, 2, 1, "", "DEFAULT_SAVE_ARGS"], [222, 3, 1, "", "__init__"], [222, 3, 1, "", "exists"], [222, 3, 1, "", "from_config"], [222, 3, 1, "", "load"], [222, 3, 1, "", "release"], [222, 3, 1, "", "resolve_load_version"], [222, 3, 1, "", "resolve_save_version"], [222, 3, 1, "", "save"]], "kedro_datasets.pandas.HDFDataSet": [[223, 2, 1, "", "DEFAULT_LOAD_ARGS"], [223, 2, 1, "", "DEFAULT_SAVE_ARGS"], [223, 3, 1, "", "__init__"], [223, 3, 1, "", "exists"], [223, 3, 1, "", "from_config"], [223, 3, 1, "", "load"], [223, 3, 1, "", "release"], [223, 3, 1, "", "resolve_load_version"], [223, 3, 1, "", "resolve_save_version"], [223, 3, 1, "", "save"]], "kedro_datasets.pandas.JSONDataSet": [[224, 2, 1, "", "DEFAULT_LOAD_ARGS"], [224, 2, 1, "", "DEFAULT_SAVE_ARGS"], [224, 3, 1, "", "__init__"], [224, 3, 1, "", "exists"], [224, 3, 1, "", "from_config"], [224, 3, 1, "", "load"], [224, 3, 1, "", "release"], [224, 3, 1, "", "resolve_load_version"], [224, 3, 1, "", "resolve_save_version"], [224, 3, 1, "", "save"]], "kedro_datasets.pandas.ParquetDataSet": [[225, 2, 1, "", "DEFAULT_LOAD_ARGS"], [225, 2, 1, "", "DEFAULT_SAVE_ARGS"], [225, 3, 1, "", "__init__"], [225, 3, 1, "", "exists"], [225, 3, 1, "", "from_config"], [225, 3, 1, "", "load"], [225, 3, 1, "", "release"], [225, 3, 1, "", "resolve_load_version"], [225, 3, 1, "", "resolve_save_version"], [225, 3, 1, "", "save"]], "kedro_datasets.pandas.SQLQueryDataSet": [[226, 3, 1, "", "__init__"], [226, 3, 1, "", "adapt_mssql_date_params"], [226, 3, 1, "", "create_connection"], [226, 2, 1, "", "engines"], [226, 3, 1, "", "exists"], [226, 3, 1, "", "from_config"], [226, 3, 1, "", "load"], [226, 3, 1, "", "release"], [226, 3, 1, "", "save"]], "kedro_datasets.pandas.SQLTableDataSet": [[227, 2, 1, "", "DEFAULT_LOAD_ARGS"], [227, 2, 1, "", "DEFAULT_SAVE_ARGS"], [227, 3, 1, "", "__init__"], [227, 3, 1, "", "create_connection"], [227, 2, 1, "", "engines"], [227, 3, 1, "", "exists"], [227, 3, 1, "", "from_config"], [227, 3, 1, "", "load"], [227, 3, 1, "", "release"], [227, 3, 1, "", "save"]], "kedro_datasets.pandas.XMLDataSet": [[228, 2, 1, "", "DEFAULT_LOAD_ARGS"], [228, 2, 1, "", "DEFAULT_SAVE_ARGS"], [228, 3, 1, "", "__init__"], [228, 3, 1, "", "exists"], [228, 3, 1, "", "from_config"], [228, 3, 1, "", "load"], [228, 3, 1, "", "release"], [228, 3, 1, "", "resolve_load_version"], [228, 3, 1, "", "resolve_save_version"], [228, 3, 1, "", "save"]], "kedro_datasets.pickle": [[229, 1, 1, "", "PickleDataSet"]], "kedro_datasets.pickle.PickleDataSet": [[229, 2, 1, "", "DEFAULT_LOAD_ARGS"], [229, 2, 1, "", "DEFAULT_SAVE_ARGS"], [229, 3, 1, "", "__init__"], [229, 3, 1, "", "exists"], [229, 3, 1, "", "from_config"], [229, 3, 1, "", "load"], [229, 3, 1, "", "release"], [229, 3, 1, "", "resolve_load_version"], [229, 3, 1, "", "resolve_save_version"], [229, 3, 1, "", "save"]], "kedro_datasets.pillow": [[230, 1, 1, "", "ImageDataSet"]], "kedro_datasets.pillow.ImageDataSet": [[230, 2, 1, "", "DEFAULT_SAVE_ARGS"], [230, 3, 1, "", "__init__"], [230, 3, 1, "", "exists"], [230, 3, 1, "", "from_config"], [230, 3, 1, "", "load"], [230, 3, 1, "", "release"], [230, 3, 1, "", "resolve_load_version"], [230, 3, 1, "", "resolve_save_version"], [230, 3, 1, "", "save"]], "kedro_datasets.plotly": [[231, 1, 1, "", "JSONDataSet"], [232, 1, 1, "", "PlotlyDataSet"]], "kedro_datasets.plotly.JSONDataSet": [[231, 2, 1, "", "DEFAULT_LOAD_ARGS"], [231, 2, 1, "", "DEFAULT_SAVE_ARGS"], [231, 3, 1, "", "__init__"], [231, 3, 1, "", "exists"], [231, 3, 1, "", "from_config"], [231, 3, 1, "", "load"], [231, 3, 1, "", "release"], [231, 3, 1, "", "resolve_load_version"], [231, 3, 1, "", "resolve_save_version"], [231, 3, 1, "", "save"]], "kedro_datasets.plotly.PlotlyDataSet": [[232, 2, 1, "", "DEFAULT_LOAD_ARGS"], [232, 2, 1, "", "DEFAULT_SAVE_ARGS"], [232, 3, 1, "", "__init__"], [232, 3, 1, "", "exists"], [232, 3, 1, "", "from_config"], [232, 3, 1, "", "load"], [232, 3, 1, "", "release"], [232, 3, 1, "", "resolve_load_version"], [232, 3, 1, "", "resolve_save_version"], [232, 3, 1, "", "save"]], "kedro_datasets.polars": [[233, 1, 1, "", "CSVDataSet"]], "kedro_datasets.polars.CSVDataSet": [[233, 2, 1, "", "DEFAULT_LOAD_ARGS"], [233, 2, 1, "", "DEFAULT_SAVE_ARGS"], [233, 3, 1, "", "__init__"], [233, 3, 1, "", "exists"], [233, 3, 1, "", "from_config"], [233, 3, 1, "", "load"], [233, 3, 1, "", "release"], [233, 3, 1, "", "resolve_load_version"], [233, 3, 1, "", "resolve_save_version"], [233, 3, 1, "", "save"]], "kedro_datasets.redis": [[234, 1, 1, "", "PickleDataSet"]], "kedro_datasets.redis.PickleDataSet": [[234, 2, 1, "", "DEFAULT_LOAD_ARGS"], [234, 2, 1, "", "DEFAULT_REDIS_URL"], [234, 2, 1, "", "DEFAULT_SAVE_ARGS"], [234, 3, 1, "", "__init__"], [234, 3, 1, "", "exists"], [234, 3, 1, "", "from_config"], [234, 3, 1, "", "load"], [234, 3, 1, "", "release"], [234, 3, 1, "", "save"]], "kedro_datasets.snowflake": [[235, 1, 1, "", "SnowparkTableDataSet"]], "kedro_datasets.snowflake.SnowparkTableDataSet": [[235, 2, 1, "", "DEFAULT_LOAD_ARGS"], [235, 2, 1, "", "DEFAULT_SAVE_ARGS"], [235, 3, 1, "", "__init__"], [235, 3, 1, "", "exists"], [235, 3, 1, "", "from_config"], [235, 3, 1, "", "load"], [235, 3, 1, "", "release"], [235, 3, 1, "", "save"]], "kedro_datasets.spark": [[236, 1, 1, "", "DeltaTableDataSet"], [237, 1, 1, "", "SparkDataSet"], [238, 1, 1, "", "SparkHiveDataSet"], [239, 1, 1, "", "SparkJDBCDataSet"], [240, 1, 1, "", "SparkStreamingDataSet"]], "kedro_datasets.spark.DeltaTableDataSet": [[236, 3, 1, "", "__init__"], [236, 3, 1, "", "exists"], [236, 3, 1, "", "from_config"], [236, 3, 1, "", "load"], [236, 3, 1, "", "release"], [236, 3, 1, "", "save"]], "kedro_datasets.spark.SparkDataSet": [[237, 2, 1, "", "DEFAULT_LOAD_ARGS"], [237, 2, 1, "", "DEFAULT_SAVE_ARGS"], [237, 3, 1, "", "__init__"], [237, 3, 1, "", "exists"], [237, 3, 1, "", "from_config"], [237, 3, 1, "", "load"], [237, 3, 1, "", "release"], [237, 3, 1, "", "resolve_load_version"], [237, 3, 1, "", "resolve_save_version"], [237, 3, 1, "", "save"]], "kedro_datasets.spark.SparkHiveDataSet": [[238, 2, 1, "", "DEFAULT_SAVE_ARGS"], [238, 3, 1, "", "__init__"], [238, 3, 1, "", "exists"], [238, 3, 1, "", "from_config"], [238, 3, 1, "", "load"], [238, 3, 1, "", "release"], [238, 3, 1, "", "save"]], "kedro_datasets.spark.SparkJDBCDataSet": [[239, 2, 1, "", "DEFAULT_LOAD_ARGS"], [239, 2, 1, "", "DEFAULT_SAVE_ARGS"], [239, 3, 1, "", "__init__"], [239, 3, 1, "", "exists"], [239, 3, 1, "", "from_config"], [239, 3, 1, "", "load"], [239, 3, 1, "", "release"], [239, 3, 1, "", "save"]], "kedro_datasets.spark.SparkStreamingDataSet": [[240, 2, 1, "", "DEFAULT_LOAD_ARGS"], [240, 2, 1, "", "DEFAULT_SAVE_ARGS"], [240, 3, 1, "", "__init__"], [240, 3, 1, "", "exists"], [240, 3, 1, "", "from_config"], [240, 3, 1, "", "load"], [240, 3, 1, "", "release"], [240, 3, 1, "", "save"]], "kedro_datasets.svmlight": [[241, 1, 1, "", "SVMLightDataSet"]], "kedro_datasets.svmlight.SVMLightDataSet": [[241, 2, 1, "", "DEFAULT_LOAD_ARGS"], [241, 2, 1, "", "DEFAULT_SAVE_ARGS"], [241, 3, 1, "", "__init__"], [241, 3, 1, "", "exists"], [241, 3, 1, "", "from_config"], [241, 3, 1, "", "load"], [241, 3, 1, "", "release"], [241, 3, 1, "", "resolve_load_version"], [241, 3, 1, "", "resolve_save_version"], [241, 3, 1, "", "save"]], "kedro_datasets.tensorflow": [[242, 1, 1, "", "TensorFlowModelDataSet"]], "kedro_datasets.tensorflow.TensorFlowModelDataSet": [[242, 2, 1, "", "DEFAULT_LOAD_ARGS"], [242, 2, 1, "", "DEFAULT_SAVE_ARGS"], [242, 3, 1, "", "__init__"], [242, 3, 1, "", "exists"], [242, 3, 1, "", "from_config"], [242, 3, 1, "", "load"], [242, 3, 1, "", "release"], [242, 3, 1, "", "resolve_load_version"], [242, 3, 1, "", "resolve_save_version"], [242, 3, 1, "", "save"]], "kedro_datasets.text": [[243, 1, 1, "", "TextDataSet"]], "kedro_datasets.text.TextDataSet": [[243, 3, 1, "", "__init__"], [243, 3, 1, "", "exists"], [243, 3, 1, "", "from_config"], [243, 3, 1, "", "load"], [243, 3, 1, "", "release"], [243, 3, 1, "", "resolve_load_version"], [243, 3, 1, "", "resolve_save_version"], [243, 3, 1, "", "save"]], "kedro_datasets.tracking": [[244, 1, 1, "", "JSONDataSet"], [245, 1, 1, "", "MetricsDataSet"]], "kedro_datasets.tracking.JSONDataSet": [[244, 2, 1, "", "DEFAULT_SAVE_ARGS"], [244, 3, 1, "", "__init__"], [244, 3, 1, "", "exists"], [244, 3, 1, "", "from_config"], [244, 3, 1, "", "load"], [244, 3, 1, "", "release"], [244, 3, 1, "", "resolve_load_version"], [244, 3, 1, "", "resolve_save_version"], [244, 3, 1, "", "save"], [244, 2, 1, "", "versioned"]], "kedro_datasets.tracking.MetricsDataSet": [[245, 2, 1, "", "DEFAULT_SAVE_ARGS"], [245, 3, 1, "", "__init__"], [245, 3, 1, "", "exists"], [245, 3, 1, "", "from_config"], [245, 3, 1, "", "load"], [245, 3, 1, "", "release"], [245, 3, 1, "", "resolve_load_version"], [245, 3, 1, "", "resolve_save_version"], [245, 3, 1, "", "save"], [245, 2, 1, "", "versioned"]], "kedro_datasets.video": [[246, 1, 1, "", "VideoDataSet"]], "kedro_datasets.video.VideoDataSet": [[246, 3, 1, "", "__init__"], [246, 3, 1, "", "exists"], [246, 3, 1, "", "from_config"], [246, 3, 1, "", "load"], [246, 3, 1, "", "release"], [246, 3, 1, "", "save"]], "kedro_datasets.yaml": [[247, 1, 1, "", "YAMLDataSet"]], "kedro_datasets.yaml.YAMLDataSet": [[247, 2, 1, "", "DEFAULT_SAVE_ARGS"], [247, 3, 1, "", "__init__"], [247, 3, 1, "", "exists"], [247, 3, 1, "", "from_config"], [247, 3, 1, "", "load"], [247, 3, 1, "", "release"], [247, 3, 1, "", "resolve_load_version"], [247, 3, 1, "", "resolve_save_version"], [247, 3, 1, "", "save"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"advanc": [0, 8, 11, 14, 38, 39, 44, 53], "configur": [0, 1, 2, 4, 8, 9, 10, 14, 15, 18, 19, 21, 22, 33, 34, 37, 38, 39, 44, 48, 54, 252, 254, 261, 268, 274, 277, 278], "templatedconfigload": [0, 63], "provid": [0, 256, 257, 262], "templat": [0, 278], "valu": 0, "through": [0, 10], "global": [0, 34, 43], "omegaconfigload": [0, 1, 62], "kedro": [0, 2, 6, 7, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 249, 252, 257, 261, 263, 264, 265, 266, 268, 270, 271, 275, 277, 278], "how": [0, 2, 3, 5, 8, 11, 13, 14, 15, 17, 18, 21, 22, 30, 31, 41, 46, 56, 252, 257, 258, 259, 262, 268, 273], "chang": [0, 2, 23, 24], "which": 0, "file": [0, 1, 2, 10, 34, 37, 48, 252, 254, 261, 270], "ar": [0, 22, 257], "load": [0, 1, 2, 3, 5, 8, 9, 10, 14, 49, 54, 258, 261, 271, 273], "ensur": [0, 257], "non": [0, 54], "default": [0, 2, 254], "get": [0, 34, 272], "bypass": 0, "rule": 0, "us": [0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 17, 18, 21, 22, 23, 24, 29, 30, 31, 33, 39, 40, 41, 46, 49, 50, 54, 56, 252, 254, 257, 258, 264], "jinja2": 0, "syntax": [0, 258], "do": [0, 257, 268, 273], "paramet": [0, 5, 257, 268], "catalog": [0, 8, 9, 10, 12, 13, 34, 38, 39, 47, 111, 248, 264, 266, 273, 277, 278], "other": [0, 7, 264, 270], "custom": [11, 18, 21, 261, 264, 271], "resolv": [0, 13, 273], "credenti": [0, 3, 8, 9, 10, 11, 14, 18, 49], "environ": [0, 2, 15, 18, 19, 22, 23, 24, 46, 254], "variabl": [0, 252, 254, 258], "sourc": [2, 8, 41], "base": [2, 31, 47, 54, 254], "local": [2, 10, 15, 23, 40, 47], "name": [2, 10, 13, 261], "pattern": 2, "set": [2, 9, 18, 21, 22, 23, 24, 33, 37, 38, 39, 40, 46, 251, 258, 270, 271, 273, 274], "folder": 2, "runtim": [2, 5], "read": [2, 10], "from": [2, 10, 34, 48, 264, 270, 273], "compress": [2, 10], "access": [2, 8, 9, 24, 40], "code": [2, 3, 5, 8, 23, 37, 39, 48, 278], "specifi": [2, 5, 10, 262], "addit": [2, 9, 41], "overrid": [2, 34, 257], "onli": [2, 258], "one": 2, "work": [3, 43, 44, 268], "aw": [3, 18, 19], "backward": [], "compat": [10, 15, 19], "break": [], "when": [40, 273], "should": 40, "i": [40, 44, 257, 273], "make": [], "The": [9, 11, 12, 16, 29, 32, 260, 269], "releas": [], "model": [10, 50, 268, 269], "guidelin": [], "contribut": [6, 11, 43, 53], "develop": [7, 23, 24, 34, 36, 43, 44, 46, 272], "introduct": [9, 33, 35, 37, 55, 269], "befor": [], "you": [17, 18, 19, 21, 29], "start": [], "up": [18, 21, 22, 23, 24, 33, 37, 38, 39, 40, 46, 258, 270, 271, 274], "area": [], "core": [], "process": [7, 15, 19, 43, 269], "extra": [41, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "creat": [10, 11, 15, 17, 18, 19, 21, 22, 23, 24, 27, 33, 34, 46, 48, 250, 252, 257, 258, 268, 269, 274, 278], "pull": [34, 256], "request": [], "titl": [], "convent": [43, 44, 266], "hint": [], "pre": 37, "commit": 37, "usag": [53, 265], "certif": [], "origin": [], "need": [17, 18], "help": [34, 272], "test": [23, 24, 33, 34, 268, 269, 271], "databrick": [22, 23, 24, 25, 26, 207], "deploi": [18, 19, 21, 22, 34], "version": [8, 9, 11, 34, 40, 46, 182, 252], "prerequisit": [15, 17, 18, 19, 21, 22, 23, 24, 30, 46], "instal": [1, 22, 23, 24, 31, 33, 34, 37, 40, 46, 248, 274], "build": [34, 259, 270], "onto": [], "cli": [10, 13, 18, 21, 22, 23, 31, 34, 41, 43, 52, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "your": [11, 17, 18, 21, 22, 23, 24, 27, 30, 31, 33, 34, 40, 41, 46, 50, 52, 254], "document": [17, 18, 34, 53, 270], "rebuild": [], "after": [], "extend": [42, 43, 49, 268], "add": [33, 37, 40, 41, 50, 270, 278], "new": [15, 19, 22, 23, 24, 34, 46, 48, 274], "page": [22, 23, 24], "move": [], "remov": 7, "style": [], "guid": 1, "join": [], "technic": 7, "steer": 7, "committe": 7, "respons": 7, "maintain": 7, "product": 7, "commun": [7, 43], "manag": [7, 24, 116, 117, 118, 146, 250, 264], "requir": [1, 7], "becom": 7, "applic": [7, 251], "vote": 7, "issu": 7, "propos": 7, "ad": 7, "data": [8, 9, 10, 12, 22, 23, 24, 34, 40, 41, 44, 47, 50, 54, 248, 258, 265, 266, 268, 269, 271, 273, 274, 277, 278], "within": 9, "locat": [10, 271], "dataset": [8, 9, 10, 11, 13, 14, 34, 40, 49, 54, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 264, 271, 273], "_arg": [], "exampl": [10, 11, 33, 43, 48, 50, 252, 264, 269], "1": [1, 15, 19, 27, 41], "project": [11, 15, 17, 18, 22, 23, 24, 25, 31, 34, 40, 41, 43, 44, 46, 47, 48, 53, 128, 154, 155, 156, 157, 158, 248, 249, 251, 254, 258, 268, 269, 270, 271, 272, 274, 276], "underli": [], "filesystem": 11, "class": [], "gcsfilesystem": [], "interact": 54, "googl": 10, "cloud": 10, "storag": [10, 40], "gc": [], "2": [1, 15, 19, 27, 30, 41], "binari": 10, "utf": 10, "8": 10, "encod": 10, "3": [1, 15, 19, 27, 41], "save": [8, 9, 10, 14, 49, 54, 258, 261], "csv": 10, "without": [10, 46], "row": 10, "index": 10, "yaml": [10, 34, 103, 247], "api": [8, 10, 22, 50, 53, 66, 204], "system": 10, "argument": [9, 10, 256, 261], "4": [1, 15, 19, 27, 41], "specif": [10, 22, 34, 52, 248, 257], "s3": 10, "bucket": 10, "5": 1, "pickl": [10, 89, 229], "6": 1, "an": [10, 15, 19, 22, 23, 33, 270, 273], "excel": 10, "7": [], "multi": 10, "sheet": 10, "imag": [10, 15, 19], "matplotlib": [10, 73, 212, 278], "9": [], "hdf": 10, "10": [], "parquet": [8, 10], "11": [], "spark": [10, 54, 94, 95, 96, 97, 236, 237, 238, 239, 240], "tabl": [10, 53, 269], "12": [], "sql": [8, 10], "databas": [8, 10], "connect": 10, "13": [], "appli": 10, "queri": [8, 10], "14": [], "endpoint": 10, "u": [], "corn": [], "yield": [], "usda": [], "15": [], "minio": 10, "16": [], "azur": [10, 20], "blob": 10, "17": [], "store": [10, 40, 165, 166], "remot": [10, 38, 39], "ssh": [10, 38], "via": 10, "feed": [], "multipl": [10, 13, 256, 257, 259], "similar": [10, 13], "anchor": 10, "factori": [13, 34], "generalis": 13, "type": [9, 13, 34, 248], "same": [10, 13], "namespac": [13, 268], "differ": [10, 11, 13, 257], "layer": [13, 266, 276], "placehold": [], "all": [13, 34], "catch": 13, "overwrit": [], "memorydataset": [54, 180], "transcod": [], "A": 264, "typic": [], "doe": 257, "ml": 20, "behind": [], "scene": [], "view": [8, 40], "avail": 8, "memori": [8, 50], "io": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 261], "error": 273, "handl": [1, 11], "abstractdataset": [11, 171], "namedtupl": [], "support": [1, 40, 43, 271], "partit": 14, "definit": [14, 18, 258], "shorthand": 14, "notat": 14, "full": 14, "lazi": 14, "increment": 14, "incrementaldataset": 178, "confirm": [14, 34], "checkpoint": [14, 269], "special": 14, "config": [1, 14, 59, 60, 61, 62, 63, 273], "kei": [14, 257], "apach": 15, "airflow": [15, 270], "run": [15, 17, 18, 19, 22, 23, 24, 27, 30, 31, 33, 34, 37, 38, 40, 48, 258, 261, 262, 270, 273, 278], "pipelin": [15, 17, 18, 19, 20, 21, 27, 29, 30, 34, 35, 40, 44, 47, 50, 126, 127, 189, 190, 191, 192, 193, 194, 255, 257, 259, 260, 261, 262, 264, 266, 268, 269, 273, 276, 278], "kubernet": [15, 17], "cluster": [15, 22], "astronom": 15, "strategi": [15, 19], "tutori": [11, 15, 53, 272, 273], "setup": [11, 15, 30, 34, 249], "deploy": [15, 19, 22, 27, 28, 31, 270], "step": [15, 19, 45, 272], "prepar": [15, 19], "datacatalog": [15, 19, 174], "packag": [15, 19, 22, 31, 34, 256, 270], "compliant": [15, 19], "docker": [15, 19, 38, 270], "convert": [15, 27, 30, 264], "dag": 15, "launch": 15, "amazon": 16, "sagemak": 16, "plugin": [16, 17, 20, 29, 32, 43, 52], "argo": 17, "workflow": [17, 31, 248, 266, 272], "outdat": [17, 18], "review": [17, 18], "why": [17, 18, 19, 21, 29], "would": [17, 18, 19, 21, 29], "containeris": [17, 18, 27], "spec": [17, 120, 121, 148, 149, 150, 151, 152, 153], "submit": [17, 18], "batch": 18, "provis": 18, "resourc": [18, 22, 267], "iam": 18, "role": 18, "job": [18, 22], "comput": 18, "queue": 18, "runner": [18, 21, 195, 196, 197, 198, 199, 200, 261, 266, 268], "relat": [18, 21, 248], "updat": [18, 21, 40, 276, 278], "implement": [11, 18, 21, 52], "function": [19, 258, 264, 269], "lambda": 19, "write": 19, "script": [19, 37], "limit": 19, "azureml": 20, "dask": [21, 68, 206], "distribut": [21, 27], "what": [22, 23, 24, 44, 257], "advantag": 22, "thi": [22, 23, 24], "cover": [22, 23, 24], "note": [22, 23], "usernam": [22, 23], "host": [22, 23], "virtual": [22, 23, 24, 46], "authent": [22, 23], "entri": 22, "point": 22, "upload": [22, 23], "dbf": [22, 23, 24], "workspac": [22, 24], "ui": 22, "automat": [22, 276], "summari": [22, 23, 24, 46, 47, 48], "id": 23, "dbx": 23, "repo": [23, 24], "sync": 23, "conf": [23, 47, 54], "directori": [23, 33, 47, 272], "notebook": [23, 24, 25, 34, 263, 264], "modifi": [23, 24, 34, 40, 41, 50], "train": [23, 24], "split": [23, 24], "ratio": [23, 24], "re": [23, 24], "github": [24, 31], "repositori": 24, "person": 24, "token": 24, "push": 24, "copi": [24, 31, 34], "dbutil": 24, "visualis": [25, 44, 48, 269, 275, 276, 278], "target": [27, 270], "platform": 27, "primit": 27, "parameteris": 27, "option": [27, 34, 268, 274], "starter": [27, 43, 130, 131, 252, 266], "kubeflow": 29, "prefect": 30, "0": 30, "flow": 30, "singl": 31, "machin": 31, "contain": [31, 48], "registri": [31, 129, 260, 265], "vertexai": 32, "autom": [33, 37], "pytest": 33, "structur": [33, 47], "coverag": 33, "report": [33, 278], "cov": 33, "": [7, 34, 41, 49, 53, 54], "command": [13, 34, 41, 43], "line": [34, 264], "interfac": 34, "autocomplet": 34, "invok": 34, "python": [34, 37, 38], "inform": [34, 48, 259, 271], "open": 34, "browser": 34, "customis": [34, 41, 49, 254], "depend": [34, 40, 248, 257, 259, 266, 272, 274, 278], "tree": 34, "micro": [34, 256], "qualiti": 34, "lint": [34, 37], "modular": [34, 257, 266, 268], "delet": 34, "regist": [34, 52], "describ": 34, "list": [34, 252], "per": 34, "rank": [13, 34], "tag": [34, 258, 259, 262, 266], "cell": 34, "strip": 34, "output": [34, 258, 259, 261, 262], "debug": [35, 38, 39], "node": [35, 40, 44, 47, 49, 50, 193, 194, 255, 258, 259, 262, 264, 266, 268, 269, 278], "format": [1, 37], "tool": 37, "ruff": 37, "flake8": 37, "hook": [37, 43, 49, 50, 51, 52, 54, 115, 116, 117, 118, 119, 120, 121, 145, 146, 147, 148, 149, 150, 151, 152, 153], "git": 37, "pycharm": 38, "interpret": [38, 39], "consol": [38, 254], "valid": [38, 39, 50], "schema": [38, 39], "visual": 39, "studio": 39, "For": 39, "those": 39, "venv": 39, "virtualenv": 39, "task": 39, "experi": 40, "track": [40, 50, 101, 102, 244, 245], "viz": [40, 266, 275, 277, 278], "session": [40, 159, 160, 161, 162, 163, 164, 165, 166, 250, 264], "collabor": 40, "log": [40, 106, 107, 108, 187, 188, 253, 254, 274], "metric": [40, 50], "gener": [40, 258], "compar": 40, "plot": 40, "common": [41, 49, 273], "case": [41, 49], "behaviour": [41, 49], "execut": [41, 266], "timelin": 41, "integr": [11, 41, 54], "initi": 41, "boilerpl": 41, "scenario": 11, "anatomi": 11, "_load": 11, "method": [11, 49], "fsspec": [11, 256], "_save": 11, "_describ": 11, "complet": 11, "partitioneddataset": [11, 14, 181], "thread": 11, "safeti": 11, "overview": [43, 250], "simpl": 43, "alias": [43, 252], "click": 43, "context": [43, 142, 143, 144, 264], "initialis": [43, 54], "suggest": 43, "frequent": [], "ask": [], "question": [], "jupyt": [44, 122, 123, 254, 264], "topic": 44, "first": 45, "conda": 46, "pip": 46, "verifi": 46, "upgrad": 46, "concept": [47, 52, 257], "src": 47, "empti": 48, "where": 48, "next": [48, 272], "more": [48, 264], "about": [48, 53, 259], "panda": [48, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "iri": [48, 264], "background": 48, "extern": 49, "consumpt": 50, "v2": 50, "v3": 50, "observ": 50, "input": [50, 258, 259, 262, 268, 269], "before_node_run": 50, "disabl": [52, 254], "auto": 52, "under": 52, "hood": 52, "welcom": 53, "learn": [53, 56], "basic": [9, 53], "indic": 53, "pyspark": 54, "centralis": 54, "yml": [9, 54], "sparksess": 54, "built": 54, "raw": 54, "delta": 54, "lake": 54, "intermediari": 54, "datafram": 54, "copy_mod": 54, "assign": 54, "object": 54, "tip": 54, "maximis": 54, "concurr": 54, "threadrunn": [54, 199], "assumpt": 56, "kedropythonversionwarn": 58, "configload": [1, 60], "missingconfigexcept": 61, "apidataset": [66, 204], "biosequ": [67, 205], "biosequencedataset": [67, 205], "parquetdataset": [68, 85, 206, 225], "email": [69, 208], "emailmessagedataset": [69, 208], "geopanda": [70, 209], "geojsondataset": [70, 209], "holoview": [71, 210], "holoviewswrit": [71, 210], "json": [72, 211], "jsondataset": [72, 76, 84, 91, 101, 211, 215, 224, 231, 244], "matplotlibwrit": [73, 212], "networkx": [74, 75, 76, 213, 214, 215], "gmldataset": [74, 213], "graphmldataset": [75, 214], "csvdataset": [77, 216, 233], "exceldataset": [78, 218], "featherdataset": [79, 219], "gbqquerydataset": [80, 220], "gbqtabledataset": [81, 221], "genericdataset": [82, 222], "hdfdataset": [83, 223], "sqlquerydataset": [86, 226], "sqltabledataset": [87, 227], "xmldataset": [88, 228], "pickledataset": [89, 93, 229, 234], "pillow": [90, 230], "imagedataset": [90, 230], "plotli": [91, 92, 231, 232, 278], "plotlydataset": [92, 232], "redi": [93, 234], "deltatabledataset": [94, 217, 236], "sparkdataset": [95, 237], "sparkhivedataset": [96, 238], "sparkjdbcdataset": [97, 239], "svmlight": [98, 241], "svmlightdataset": [98, 241], "tensorflow": [99, 242], "tensorflowmodeldataset": [99, 242], "text": [100, 243], "textdataset": [100, 243], "metricsdataset": [102, 245], "yamldataset": [103, 247], "extens": [104, 105], "ipython": [105, 183, 184, 185, 186, 264], "color_logg": [107, 108], "colorhandl": 108, "framework": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 254], "kedrocli": 113, "main": 114, "clihooksmanag": 117, "get_cli_hook_manag": 118, "marker": [119, 147], "clicommandspec": 121, "jupytercommandgroup": 123, "micropkg": [124, 125], "safe_extract": 125, "pipelineartifact": 127, "kedrostarterspec": 131, "util": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 201, 202], "commandcollect": 133, "kedroclierror": 134, "command_with_verbos": 135, "env_opt": 136, "find_stylesheet": 137, "forward_command": 138, "get_pkg_vers": 139, "python_cal": 140, "split_str": 141, "kedrocontext": [143, 266], "kedrocontexterror": 144, "datacatalogspec": 149, "datasetspec": 150, "kedrocontextspec": 151, "nodespec": 152, "pipelinespec": 153, "configure_log": 155, "configure_project": 156, "find_pipelin": 157, "validate_set": 158, "kedrosess": [161, 250, 266], "kedrosessionerror": 162, "shelvestor": [163, 164], "basesessionstor": 166, "startup": [167, 168, 169], "projectmetadata": 168, "bootstrap_project": 169, "abstractversioneddataset": 172, "cacheddataset": 173, "datasetalreadyexistserror": 175, "dataseterror": [176, 273], "datasetnotfounderror": [177, 273], "lambdadataset": 179, "load_ipython_extens": 184, "magic_reload_kedro": 185, "reload_kedro": [186, 264], "richhandl": 188, "modular_pipelin": [191, 192], "modularpipelineerror": 191, "abstractrunn": 196, "parallelrunn": [197, 261], "sequentialrunn": [198, 261], "run_nod": 200, "load_obj": 202, "kedro_dataset": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "managedtabledataset": 207, "polar": 233, "snowflak": 235, "snowparktabledataset": 235, "sparkstreamingdataset": 240, "video": 246, "videodataset": 246, "group": 248, "level": 248, "lifecycl": 250, "metadata": 251, "offici": 252, "side": 254, "kedro_logging_config": 254, "rich": 254, "handler": 254, "plain": 254, "dumb": 254, "termin": 254, "perform": 254, "portabl": 257, "wrapper": [257, 268], "combin": 257, "disconnect": 257, "time": 257, "kwarg": 258, "merg": 259, "bad": 259, "circular": 259, "autodiscoveri": 260, "multiprocess": 261, "multithread": 261, "asynchron": 261, "slice": [262, 266, 268], "final": 262, "recreat": 262, "miss": 262, "user": 263, "kernel": 264, "magic": 264, "run_viz": 264, "know": 264, "servic": 264, "jupyterlab": 264, "client": 264, "find": 264, "out": 264, "glossari": 266, "engin": [44, 266], "v": 266, "scienc": [266, 268], "order": 266, "registr": [268, 269, 271], "affect": 268, "preprocess": 269, "again": 269, "entir": 270, "sphinx": 270, "html": 270, "docstr": 270, "can": 271, "further": 271, "terminologi": 272, "root": 272, "standard": 272, "spaceflight": [273, 274, 276], "faq": [44, 267, 273], "fail": 273, "while": 273, "found": 273, "except": [1, 273], "occur": 273, "pars": 273, "best": 274, "practic": 274, "avoid": 274, "leak": 274, "confidenti": 274, "share": 276, "preview": 277, "chart": 278, "anoth": 278, "two": 10, "migrat": 1, "loader": 1, "librari": 1, "import": 1, "statement": 1, "introduc": [], "filepath": 9, "programmat": 8, "content": 10}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"kedro.framework.cli.hooks.specs.CLICommandSpecs": [[121, "kedro-framework-cli-hooks-specs-clicommandspecs"]], "kedro.framework.cli.micropkg.safe_extract": [[125, "kedro-framework-cli-micropkg-safe-extract"]], "kedro.framework.cli.micropkg": [[124, "kedro-framework-cli-micropkg"]], "kedro.framework.cli.cli.KedroCLI": [[113, "kedro-framework-cli-cli-kedrocli"]], "kedro.framework.cli.jupyter": [[122, "kedro-framework-cli-jupyter"]], "kedro.framework.cli.hooks": [[115, "kedro-framework-cli-hooks"]], "kedro.framework.cli.hooks.manager.CLIHooksManager": [[117, "kedro-framework-cli-hooks-manager-clihooksmanager"]], "kedro.framework.cli.jupyter.JupyterCommandGroup": [[123, "kedro-framework-cli-jupyter-jupytercommandgroup"]], "kedro.framework.cli.cli": [[112, "kedro-framework-cli-cli"]], "kedro.framework.cli.hooks.specs": [[120, "kedro-framework-cli-hooks-specs"]], "kedro.framework.cli.pipeline": [[126, "kedro-framework-cli-pipeline"]], "kedro.framework.cli.hooks.markers": [[119, "kedro-framework-cli-hooks-markers"]], "kedro.framework.cli.cli.main": [[114, "kedro-framework-cli-cli-main"]], "kedro.framework.cli.hooks.manager.get_cli_hook_manager": [[118, "kedro-framework-cli-hooks-manager-get-cli-hook-manager"]], "kedro.framework.cli.hooks.manager": [[116, "kedro-framework-cli-hooks-manager"]], "kedro.framework.cli.pipeline.PipelineArtifacts": [[127, "kedro-framework-cli-pipeline-pipelineartifacts"]], "kedro.framework.cli.starters.KedroStarterSpec": [[131, "kedro-framework-cli-starters-kedrostarterspec"]], "kedro.framework.cli.utils.forward_command": [[138, "kedro-framework-cli-utils-forward-command"]], "kedro.framework.cli.utils.command_with_verbosity": [[135, "kedro-framework-cli-utils-command-with-verbosity"]], "kedro.framework.cli.utils.CommandCollection": [[133, "kedro-framework-cli-utils-commandcollection"]], "kedro.framework.cli.registry": [[129, "kedro-framework-cli-registry"]], "kedro.framework.context.KedroContext": [[143, "kedro-framework-context-kedrocontext"]], "kedro.framework.cli.starters": [[130, "kedro-framework-cli-starters"]], "kedro.framework.cli.utils.KedroCliError": [[134, "kedro-framework-cli-utils-kedroclierror"]], "kedro.framework.cli.project": [[128, "kedro-framework-cli-project"]], "kedro.framework.cli.utils": [[132, "kedro-framework-cli-utils"]], "kedro.framework.cli.utils.python_call": [[140, "kedro-framework-cli-utils-python-call"]], "kedro.framework.cli.utils.find_stylesheets": [[137, "kedro-framework-cli-utils-find-stylesheets"]], "kedro.framework.cli.utils.get_pkg_version": [[139, "kedro-framework-cli-utils-get-pkg-version"]], "kedro.framework.cli.utils.env_option": [[136, "kedro-framework-cli-utils-env-option"]], "kedro.framework.cli.utils.split_string": [[141, "kedro-framework-cli-utils-split-string"]], "kedro.framework.context": [[142, "kedro-framework-context"]], "kedro.framework.hooks.specs.NodeSpecs": [[152, "kedro-framework-hooks-specs-nodespecs"]], "kedro.framework.context.KedroContextError": [[144, "kedro-framework-context-kedrocontexterror"]], "kedro.framework.hooks.specs.DatasetSpecs": [[150, "kedro-framework-hooks-specs-datasetspecs"]], "kedro.framework.project.find_pipelines": [[157, "kedro-framework-project-find-pipelines"]], "kedro.framework.hooks.manager": [[146, "kedro-framework-hooks-manager"]], "kedro.framework.hooks.specs.PipelineSpecs": [[153, "kedro-framework-hooks-specs-pipelinespecs"]], "kedro.framework.session": [[159, "kedro-framework-session"]], "kedro.framework.hooks": [[145, "kedro-framework-hooks"]], "kedro.framework.project.configure_logging": [[155, "kedro-framework-project-configure-logging"]], "kedro.framework.hooks.specs.DataCatalogSpecs": [[149, "kedro-framework-hooks-specs-datacatalogspecs"]], "kedro.framework.hooks.specs.KedroContextSpecs": [[151, "kedro-framework-hooks-specs-kedrocontextspecs"]], "kedro.framework.project.validate_settings": [[158, "kedro-framework-project-validate-settings"]], "kedro.framework.hooks.specs": [[148, "kedro-framework-hooks-specs"]], "kedro.framework.hooks.markers": [[147, "kedro-framework-hooks-markers"]], "kedro.framework.project": [[154, "kedro-framework-project"]], "kedro.framework.project.configure_project": [[156, "kedro-framework-project-configure-project"]], "Amazon SageMaker": [[16, "amazon-sagemaker"]], "The kedro-sagemaker plugin": [[16, "the-kedro-sagemaker-plugin"]], "Single-machine deployment": [[31, "single-machine-deployment"]], "Container-based": [[31, "container-based"]], "How to use container registry": [[31, "how-to-use-container-registry"]], "Package-based": [[31, "package-based"]], "CLI-based": [[31, "cli-based"]], "Use GitHub workflow to copy your project": [[31, "use-github-workflow-to-copy-your-project"]], "Install and run the Kedro project": [[31, "install-and-run-the-kedro-project"]], "Argo Workflows (outdated documentation that needs review)": [[17, "argo-workflows-outdated-documentation-that-needs-review"]], "Why would you use Argo Workflows?": [[17, "why-would-you-use-argo-workflows"]], "Prerequisites": [[17, "prerequisites"], [18, "prerequisites"], [23, "prerequisites"], [24, "prerequisites"], [21, "prerequisites"], [30, "prerequisites"], [22, "prerequisites"], [19, "prerequisites"], [15, "prerequisites"]], "How to run your Kedro pipeline using Argo Workflows": [[17, "how-to-run-your-kedro-pipeline-using-argo-workflows"]], "Containerise your Kedro project": [[17, "containerise-your-kedro-project"], [18, "containerise-your-kedro-project"]], "Create Argo Workflows spec": [[17, "create-argo-workflows-spec"]], "Submit Argo Workflows spec to Kubernetes": [[17, "submit-argo-workflows-spec-to-kubernetes"]], "Kedro-Argo plugin": [[17, "kedro-argo-plugin"]], "Distributed deployment": [[27, "distributed-deployment"]], "1. Containerise the pipeline": [[27, "containerise-the-pipeline"]], "2. Convert your Kedro pipeline into targeted platform primitives": [[27, "convert-your-kedro-pipeline-into-targeted-platform-primitives"]], "3. Parameterise the runs": [[27, "parameterise-the-runs"]], "4. (Optional) Create starters": [[27, "optional-create-starters"]], "Azure ML pipelines": [[20, "azure-ml-pipelines"]], "kedro-azureml plugin": [[20, "kedro-azureml-plugin"]], "Kubeflow Pipelines": [[29, "kubeflow-pipelines"]], "Why would you use Kubeflow Pipelines?": [[29, "why-would-you-use-kubeflow-pipelines"]], "The kedro-kubeflow plugin": [[29, "the-kedro-kubeflow-plugin"]], "AWS Batch (outdated documentation that needs review)": [[18, "aws-batch-outdated-documentation-that-needs-review"]], "Why would you use AWS Batch?": [[18, "why-would-you-use-aws-batch"]], "How to run a Kedro pipeline using AWS Batch": [[18, "how-to-run-a-kedro-pipeline-using-aws-batch"]], "Provision resources": [[18, "provision-resources"]], "Create IAM Role": [[18, "create-iam-role"]], "Create AWS Batch job definition": [[18, "create-aws-batch-job-definition"]], "Create AWS Batch compute environment": [[18, "create-aws-batch-compute-environment"]], "Create AWS Batch job queue": [[18, "create-aws-batch-job-queue"]], "Configure the credentials": [[18, "configure-the-credentials"]], "Submit AWS Batch jobs": [[18, "submit-aws-batch-jobs"]], "Create a custom runner": [[18, "create-a-custom-runner"], [21, "create-a-custom-runner"]], "Set up Batch-related configuration": [[18, "set-up-batch-related-configuration"]], "Update CLI implementation": [[18, "update-cli-implementation"], [21, "update-cli-implementation"]], "Deploy": [[18, "deploy"], [21, "deploy"]], "Use an IDE, dbx and Databricks Repos to develop a Kedro project": [[23, "use-an-ide-dbx-and-databricks-repos-to-develop-a-kedro-project"]], "What this page covers": [[23, "what-this-page-covers"], [24, "what-this-page-covers"], [22, "what-this-page-covers"]], "Set up your project": [[23, "set-up-your-project"], [24, "set-up-your-project"]], "Note your Databricks username and host": [[23, "note-your-databricks-username-and-host"], [22, "note-your-databricks-username-and-host"]], "Install Kedro and dbx in a new virtual environment": [[23, "install-kedro-and-dbx-in-a-new-virtual-environment"]], "Authenticate the Databricks CLI": [[23, "authenticate-the-databricks-cli"], [22, "authenticate-the-databricks-cli"]], "Create a new Kedro project": [[23, "create-a-new-kedro-project"], [24, "create-a-new-kedro-project"], [22, "create-a-new-kedro-project"], [34, "create-a-new-kedro-project"], [48, "create-a-new-kedro-project"]], "Create a Repo on Databricks": [[23, "create-a-repo-on-databricks"]], "Sync code with your Databricks Repo using dbx": [[23, "sync-code-with-your-databricks-repo-using-dbx"]], "Create a conf/local directory in your Databricks Repo": [[23, "create-a-conf-local-directory-in-your-databricks-repo"]], "Upload project data to DBFS": [[23, "upload-project-data-to-dbfs"]], "Create a new Databricks notebook": [[23, "create-a-new-databricks-notebook"], [24, "create-a-new-databricks-notebook"]], "Run your project": [[23, "run-your-project"], [24, "run-your-project"]], "Modify your project and test the changes": [[23, "modify-your-project-and-test-the-changes"], [24, "modify-your-project-and-test-the-changes"]], "Modify the training / test split ratio": [[23, "modify-the-training-test-split-ratio"], [24, "modify-the-training-test-split-ratio"]], "Re-run your project": [[23, "re-run-your-project"], [24, "re-run-your-project"]], "Summary": [[23, "summary"], [24, "summary"], [22, "summary"], [46, "summary"], [47, "summary"], [48, "summary"]], "Use a Databricks workspace to develop a Kedro project": [[24, "use-a-databricks-workspace-to-develop-a-kedro-project"]], "Install Kedro in a new virtual environment": [[24, "install-kedro-in-a-new-virtual-environment"]], "Create a GitHub repository": [[24, "create-a-github-repository"]], "Create a GitHub personal access token": [[24, "create-a-github-personal-access-token"]], "Push your Kedro project to the GitHub repository": [[24, "push-your-kedro-project-to-the-github-repository"]], "Create a repo on Databricks": [[24, "create-a-repo-on-databricks"]], "Copy project data to DBFS using dbutils": [[24, "copy-project-data-to-dbfs-using-dbutils"]], "Managing your Databricks Repo": [[24, "managing-your-databricks-repo"]], "Deployment": [[28, "deployment"]], "Dask": [[21, "dask"]], "Why would you use Dask?": [[21, "why-would-you-use-dask"]], "How to distribute your Kedro pipeline using Dask": [[21, "how-to-distribute-your-kedro-pipeline-using-dask"]], "Set up Dask and related configuration": [[21, "set-up-dask-and-related-configuration"]], "Visualise a Kedro project in Databricks notebooks": [[25, "visualise-a-kedro-project-in-databricks-notebooks"]], "Prefect": [[30, "prefect"]], "Setup": [[30, "setup"]], "How to run your Kedro pipeline using Prefect 2.0": [[30, "how-to-run-your-kedro-pipeline-using-prefect-2-0"]], "Convert your Kedro pipeline to Prefect 2.0 flow": [[30, "convert-your-kedro-pipeline-to-prefect-2-0-flow"]], "Run Prefect flow": [[30, "run-prefect-flow"]], "Use a Databricks job to deploy a Kedro project": [[22, "use-a-databricks-job-to-deploy-a-kedro-project"]], "What are the advantages of packaging a Kedro project to run on Databricks?": [[22, "what-are-the-advantages-of-packaging-a-kedro-project-to-run-on-databricks"]], "Set up your project for deployment to Databricks": [[22, "set-up-your-project-for-deployment-to-databricks"]], "Install Kedro and the databricks CLI in a new virtual environment": [[22, "install-kedro-and-the-databricks-cli-in-a-new-virtual-environment"]], "Create an entry point for Databricks": [[22, "create-an-entry-point-for-databricks"]], "Package your project": [[22, "package-your-project"]], "Upload project data and configuration to DBFS": [[22, "upload-project-data-and-configuration-to-dbfs"]], "Deploy and run your Kedro project using the workspace UI": [[22, "deploy-and-run-your-kedro-project-using-the-workspace-ui"]], "Create a new job": [[22, "create-a-new-job"]], "Create a new job cluster specific to your job": [[22, "create-a-new-job-cluster-specific-to-your-job"]], "Configure the job": [[22, "configure-the-job"]], "Run the job": [[22, "run-the-job"]], "Resources for automatically deploying to Databricks": [[22, "resources-for-automatically-deploying-to-databricks"]], "How to use the Databricks API to automatically deploy a Kedro project": [[22, "how-to-use-the-databricks-api-to-automatically-deploy-a-kedro-project"]], "How to use the Databricks CLI to automatically deploy a Kedro project": [[22, "how-to-use-the-databricks-cli-to-automatically-deploy-a-kedro-project"]], "Databricks": [[26, "databricks"]], "AWS Step Functions": [[19, "aws-step-functions"]], "Why would you run a Kedro pipeline with AWS Step Functions?": [[19, "why-would-you-run-a-kedro-pipeline-with-aws-step-functions"]], "Strategy": [[19, "strategy"], [15, "strategy"]], "Deployment process": [[19, "deployment-process"], [15, "deployment-process"]], "Step 1. Create new configuration environment to prepare a compatible DataCatalog": [[19, "step-1-create-new-configuration-environment-to-prepare-a-compatible-datacatalog"], [15, "step-1-create-new-configuration-environment-to-prepare-a-compatible-datacatalog"]], "Step 2. Package the Kedro pipeline as an AWS Lambda-compliant Docker image": [[19, "step-2-package-the-kedro-pipeline-as-an-aws-lambda-compliant-docker-image"]], "Step 3. Write the deployment script": [[19, "step-3-write-the-deployment-script"]], "Step 4. Deploy the pipeline": [[19, "step-4-deploy-the-pipeline"]], "Limitations": [[19, "limitations"]], "The Kedro Data Catalog": [[12, "the-kedro-data-catalog"]], "Parameters": [[5, "parameters"], [0, "parameters"]], "How to use parameters": [[5, "how-to-use-parameters"]], "How to load parameters in code": [[5, "how-to-load-parameters-in-code"]], "How to specify parameters at runtime": [[5, "how-to-specify-parameters-at-runtime"]], "Advanced: Tutorial to create a custom dataset": [[11, "advanced-tutorial-to-create-a-custom-dataset"]], "AbstractDataSet": [[11, "abstractdataset"]], "Scenario": [[11, "scenario"]], "Project setup": [[11, "project-setup"], [34, "project-setup"]], "The anatomy of a dataset": [[11, "the-anatomy-of-a-dataset"]], "Implement the _load method with fsspec": [[11, "implement-the-load-method-with-fsspec"]], "Implement the _save method with fsspec": [[11, "implement-the-save-method-with-fsspec"]], "Implement the _describe method": [[11, "implement-the-describe-method"]], "The complete example": [[11, "the-complete-example"]], "Integration with PartitionedDataSet": [[11, "integration-with-partitioneddataset"]], "Versioning": [[11, "versioning"]], "How to implement versioning in your dataset": [[11, "how-to-implement-versioning-in-your-dataset"]], "Thread-safety": [[11, "thread-safety"]], "How to handle credentials and different filesystems": [[11, "how-to-handle-credentials-and-different-filesystems"]], "How to contribute a custom dataset implementation": [[11, "how-to-contribute-a-custom-dataset-implementation"]], "Advanced: Partitioned and incremental datasets": [[14, "advanced-partitioned-and-incremental-datasets"]], "Partitioned datasets": [[14, "partitioned-datasets"]], "How to use PartitionedDataSet": [[14, "how-to-use-partitioneddataset"]], "Dataset definition": [[14, "dataset-definition"]], "Shorthand notation": [[14, "shorthand-notation"]], "Full notation": [[14, "full-notation"]], "Partitioned dataset credentials": [[14, "partitioned-dataset-credentials"]], "Partitioned dataset load": [[14, "partitioned-dataset-load"]], "Partitioned dataset save": [[14, "partitioned-dataset-save"]], "Partitioned dataset lazy saving": [[14, "partitioned-dataset-lazy-saving"]], "Incremental datasets": [[14, "incremental-datasets"]], "Incremental dataset loads": [[14, "incremental-dataset-loads"]], "Incremental dataset save": [[14, "incremental-dataset-save"]], "Incremental dataset confirm": [[14, "incremental-dataset-confirm"]], "Checkpoint configuration": [[14, "checkpoint-configuration"]], "Special checkpoint config keys": [[14, "special-checkpoint-config-keys"]], "Configuration": [[2, "configuration"], [4, "configuration"], [44, "configuration"]], "Configuration source": [[2, "configuration-source"]], "Configuration environments": [[2, "configuration-environments"]], "Base": [[2, "base"]], "Local": [[2, "local"]], "Configuration loading": [[2, "configuration-loading"]], "Configuration file names": [[2, "configuration-file-names"]], "Configuration patterns": [[2, "configuration-patterns"]], "How to use Kedro configuration": [[2, "how-to-use-kedro-configuration"]], "How to change the setting for a configuration source folder": [[2, "how-to-change-the-setting-for-a-configuration-source-folder"]], "How to change the configuration source folder at runtime": [[2, "how-to-change-the-configuration-source-folder-at-runtime"]], "How to read configuration from a compressed file": [[2, "how-to-read-configuration-from-a-compressed-file"]], "How to access configuration in code": [[2, "how-to-access-configuration-in-code"]], "How to specify additional configuration environments": [[2, "how-to-specify-additional-configuration-environments"]], "How to change the default overriding environment": [[2, "how-to-change-the-default-overriding-environment"]], "How to use only one configuration environment": [[2, "how-to-use-only-one-configuration-environment"]], "Data Catalog YAML examples": [[10, "data-catalog-yaml-examples"]], "Table of Contents": [[10, "table-of-contents"]], "Load data from a local binary file using utf-8 encoding": [[10, "load-data-from-a-local-binary-file-using-utf-8-encoding"]], "Save data to a CSV file without row names (index) using utf-8 encoding": [[10, "save-data-to-a-csv-file-without-row-names-index-using-utf-8-encoding"]], "Load/save a CSV file from/to a local file system": [[10, "load-save-a-csv-file-from-to-a-local-file-system"]], "Load/save a CSV on a local file system, using specified load/save arguments": [[10, "load-save-a-csv-on-a-local-file-system-using-specified-load-save-arguments"]], "Load/save a compressed CSV on a local file system": [[10, "load-save-a-compressed-csv-on-a-local-file-system"]], "Load a CSV file from a specific S3 bucket, using credentials and load arguments": [[10, "load-a-csv-file-from-a-specific-s3-bucket-using-credentials-and-load-arguments"]], "Load/save a pickle file from/to a local file system": [[10, "load-save-a-pickle-file-from-to-a-local-file-system"]], "Load an Excel file from Google Cloud Storage": [[10, "load-an-excel-file-from-google-cloud-storage"]], "Load a multi-sheet Excel file from a local file system": [[10, "load-a-multi-sheet-excel-file-from-a-local-file-system"]], "Save an image created with Matplotlib on Google Cloud Storage": [[10, "save-an-image-created-with-matplotlib-on-google-cloud-storage"]], "Load/save an HDF file on local file system storage, using specified load/save arguments": [[10, "load-save-an-hdf-file-on-local-file-system-storage-using-specified-load-save-arguments"]], "Load/save a parquet file on local file system storage, using specified load/save arguments": [[10, "load-save-a-parquet-file-on-local-file-system-storage-using-specified-load-save-arguments"]], "Load/save a Spark table on S3, using specified load/save arguments": [[10, "load-save-a-spark-table-on-s3-using-specified-load-save-arguments"]], "Load/save a SQL table using credentials, a database connection, and specified load/save arguments": [[10, "load-save-a-sql-table-using-credentials-a-database-connection-and-specified-load-save-arguments"]], "Load a SQL table with credentials and a database connection, and apply a SQL query to the table": [[10, "load-a-sql-table-with-credentials-and-a-database-connection-and-apply-a-sql-query-to-the-table"]], "Load data from an API endpoint": [[10, "load-data-from-an-api-endpoint"]], "Load data from Minio (S3 API Compatible Storage)": [[10, "load-data-from-minio-s3-api-compatible-storage"]], "Load a model saved as a pickle from Azure Blob Storage": [[10, "load-a-model-saved-as-a-pickle-from-azure-blob-storage"]], "Load a CSV file stored in a remote location through SSH": [[10, "load-a-csv-file-stored-in-a-remote-location-through-ssh"]], "Load multiple datasets with similar configuration using YAML anchors": [[10, "load-multiple-datasets-with-similar-configuration-using-yaml-anchors"]], "Read the same file using two different datasets": [[10, "read-the-same-file-using-two-different-datasets"]], "Create a Data Catalog YAML configuration file via the CLI": [[10, "create-a-data-catalog-yaml-configuration-file-via-the-cli"]], "Apache Airflow": [[15, "apache-airflow"]], "How to run a Kedro pipeline on Apache Airflow using a Kubernetes cluster": [[15, "how-to-run-a-kedro-pipeline-on-apache-airflow-using-a-kubernetes-cluster"]], "How to run a Kedro pipeline on Apache Airflow with Astronomer": [[15, "how-to-run-a-kedro-pipeline-on-apache-airflow-with-astronomer"]], "Tutorial project setup": [[15, "tutorial-project-setup"]], "Step 2. Package the Kedro pipeline as an Astronomer-compliant Docker image": [[15, "step-2-package-the-kedro-pipeline-as-an-astronomer-compliant-docker-image"]], "Step 3. Convert the Kedro pipeline into an Airflow DAG with kedro airflow": [[15, "step-3-convert-the-kedro-pipeline-into-an-airflow-dag-with-kedro-airflow"]], "Step 4. Launch the local Airflow cluster with Astronomer": [[15, "step-4-launch-the-local-airflow-cluster-with-astronomer"]], "Credentials": [[3, "credentials"]], "How to load credentials in code": [[3, "how-to-load-credentials-in-code"]], "How to work with AWS credentials": [[3, "how-to-work-with-aws-credentials"]], "Kedro\u2019s Technical Steering Committee": [[7, "kedro-s-technical-steering-committee"]], "Responsibilities of a maintainer": [[7, "responsibilities-of-a-maintainer"]], "Product development": [[7, "product-development"]], "Community management": [[7, "community-management"]], "Requirements to become a maintainer": [[7, "requirements-to-become-a-maintainer"]], "Kedro maintainers": [[7, "kedro-maintainers"]], "Application process": [[7, "application-process"]], "Voting process": [[7, "voting-process"]], "Other issues or proposals": [[7, "other-issues-or-proposals"]], "Adding or removing maintainers": [[7, "adding-or-removing-maintainers"]], "Advanced: Access the Data Catalog in code": [[8, "advanced-access-the-data-catalog-in-code"]], "How to configure the Data Catalog": [[8, "how-to-configure-the-data-catalog"]], "How to view the available data sources": [[8, "how-to-view-the-available-data-sources"]], "How to load datasets programmatically": [[8, "how-to-load-datasets-programmatically"]], "How to save data programmatically": [[8, "how-to-save-data-programmatically"]], "How to save data to memory": [[8, "how-to-save-data-to-memory"]], "How to save data to a SQL database for querying": [[8, "how-to-save-data-to-a-sql-database-for-querying"]], "How to save data in Parquet": [[8, "how-to-save-data-in-parquet"]], "How to access a dataset with credentials": [[8, "how-to-access-a-dataset-with-credentials"]], "How to version a dataset using the Code API": [[8, "how-to-version-a-dataset-using-the-code-api"]], "Introduction to the Data Catalog": [[9, "introduction-to-the-data-catalog"]], "The basics of catalog.yml": [[9, "the-basics-of-catalog-yml"]], "Dataset type": [[9, "dataset-type"]], "Dataset filepath": [[9, "dataset-filepath"]], "Additional settings in catalog.yml": [[9, "additional-settings-in-catalog-yml"]], "Load and save arguments": [[9, "load-and-save-arguments"]], "Dataset access credentials": [[9, "dataset-access-credentials"]], "Dataset versioning": [[9, "dataset-versioning"]], "Use the Data Catalog within Kedro configuration": [[9, "use-the-data-catalog-within-kedro-configuration"]], "Advanced configuration": [[0, "advanced-configuration"]], "TemplatedConfigLoader": [[0, "templatedconfigloader"]], "Provide template values through globals": [[0, "provide-template-values-through-globals"]], "OmegaConfigLoader": [[0, "omegaconfigloader"]], "Advanced Kedro configuration": [[0, "advanced-kedro-configuration"]], "How to change which configuration files are loaded": [[0, "how-to-change-which-configuration-files-are-loaded"]], "How to ensure non default configuration files get loaded": [[0, "how-to-ensure-non-default-configuration-files-get-loaded"]], "How to bypass the configuration loading rules": [[0, "how-to-bypass-the-configuration-loading-rules"]], "How to use Jinja2 syntax in configuration": [[0, "how-to-use-jinja2-syntax-in-configuration"]], "How to do templating with the OmegaConfigLoader": [[0, "how-to-do-templating-with-the-omegaconfigloader"]], "Catalog": [[0, "catalog"]], "Other configuration files": [[0, "other-configuration-files"]], "How to use resolvers in the OmegaConfigLoader": [[0, "how-to-use-resolvers-in-the-omegaconfigloader"]], "How to load credentials through environment variables": [[0, "how-to-load-credentials-through-environment-variables"]], "Kedro dataset factories": [[13, "kedro-dataset-factories"]], "How to generalise datasets with similar names and types": [[13, "how-to-generalise-datasets-with-similar-names-and-types"]], "How to generalise datasets of the same type": [[13, "how-to-generalise-datasets-of-the-same-type"]], "How to generalise datasets using namespaces": [[13, "how-to-generalise-datasets-using-namespaces"]], "How to generalise datasets of the same type in different layers": [[13, "how-to-generalise-datasets-of-the-same-type-in-different-layers"]], "How to generalise datasets using multiple dataset factories": [[13, "how-to-generalise-datasets-using-multiple-dataset-factories"]], "How to generalise all datasets with a catch-all dataset factory": [[13, "how-to-generalise-all-datasets-with-a-catch-all-dataset-factory"]], "CLI commands for dataset factories": [[13, "cli-commands-for-dataset-factories"]], "How to use kedro catalog rank": [[13, "how-to-use-kedro-catalog-rank"]], "How to use kedro catalog resolve": [[13, "how-to-use-kedro-catalog-resolve"]], "Migration guide for config loaders": [[1, "migration-guide-for-config-loaders"]], "ConfigLoader to OmegaConfigLoader": [[1, "configloader-to-omegaconfigloader"]], "1. Install the Required Library": [[1, "install-the-required-library"]], "2. Use the OmegaConfigLoader": [[1, "use-the-omegaconfigloader"]], "3. Import Statements": [[1, "import-statements"]], "4. File Format Support": [[1, "file-format-support"]], "5. Load Configuration": [[1, "load-configuration"]], "6. Exception Handling": [[1, "exception-handling"]], "Contribute to Kedro": [[6, "contribute-to-kedro"], [53, null]], "Set up PyCharm": [[38, "set-up-pycharm"]], "Set up Run configurations": [[38, "set-up-run-configurations"]], "Debugging": [[38, "debugging"], [39, "debugging"], [35, "debugging"]], "Advanced: Remote SSH interpreter": [[38, "advanced-remote-ssh-interpreter"]], "Advanced: Docker interpreter": [[38, "advanced-docker-interpreter"]], "Configure Python Console": [[38, "configure-python-console"]], "Configuring the Kedro catalog validation schema": [[38, "configuring-the-kedro-catalog-validation-schema"], [39, "configuring-the-kedro-catalog-validation-schema"]], "Set up Visual Studio Code": [[39, "set-up-visual-studio-code"]], "Advanced: For those using venv / virtualenv": [[39, "advanced-for-those-using-venv-virtualenv"]], "Setting up tasks": [[39, "setting-up-tasks"]], "Advanced: Remote Interpreter / Debugging": [[39, "advanced-remote-interpreter-debugging"]], "Extend Kedro": [[42, "extend-kedro"]], "First steps": [[45, "first-steps"]], "Common use cases": [[41, "common-use-cases"], [49, "common-use-cases"]], "Use Case 1: How to add extra behaviour to Kedro\u2019s execution timeline": [[41, "use-case-1-how-to-add-extra-behaviour-to-kedro-s-execution-timeline"]], "Use Case 2: How to integrate Kedro with additional data sources": [[41, "use-case-2-how-to-integrate-kedro-with-additional-data-sources"]], "Use Case 3: How to add or modify CLI commands": [[41, "use-case-3-how-to-add-or-modify-cli-commands"]], "Use Case 4: How to customise the initial boilerplate of your project": [[41, "use-case-4-how-to-customise-the-initial-boilerplate-of-your-project"]], "Experiment tracking in Kedro-Viz": [[40, "experiment-tracking-in-kedro-viz"]], "Kedro versions supporting experiment tracking": [[40, "kedro-versions-supporting-experiment-tracking"]], "When should I use experiment tracking in Kedro?": [[40, "when-should-i-use-experiment-tracking-in-kedro"]], "Set up a project": [[40, "set-up-a-project"]], "Install Kedro and Kedro-Viz": [[40, "install-kedro-and-kedro-viz"]], "Install the dependencies for the project": [[40, "install-the-dependencies-for-the-project"]], "Set up the session store": [[40, "set-up-the-session-store"]], "Local storage": [[40, "local-storage"]], "Collaborative experiment tracking": [[40, "collaborative-experiment-tracking"]], "Set up experiment tracking datasets": [[40, "set-up-experiment-tracking-datasets"]], "Modify your nodes and pipelines to log metrics": [[40, "modify-your-nodes-and-pipelines-to-log-metrics"]], "Generate the run data": [[40, "generate-the-run-data"]], "Access run data and compare runs": [[40, "access-run-data-and-compare-runs"]], "View and compare plots": [[40, "view-and-compare-plots"]], "Update the dependencies": [[40, "update-the-dependencies"], [278, "update-the-dependencies"], [278, "id1"]], "Add a plotting node": [[40, "add-a-plotting-node"]], "View and compare metrics data": [[40, "view-and-compare-metrics-data"]], "VertexAI": [[32, "vertexai"]], "The kedro-vertexai plugin": [[32, "the-kedro-vertexai-plugin"]], "Kedro plugins": [[43, "kedro-plugins"]], "Overview": [[43, "overview"], [250, "overview"]], "Example of a simple plugin": [[43, "example-of-a-simple-plugin"]], "Extend starter aliases": [[43, "extend-starter-aliases"]], "Working with click": [[43, "working-with-click"]], "Project context": [[43, "project-context"]], "Initialisation": [[43, "initialisation"]], "global and project commands": [[43, "global-and-project-commands"]], "Suggested command convention": [[43, "suggested-command-convention"]], "Hooks": [[43, "hooks"], [51, "hooks"], [52, "hooks"]], "CLI Hooks": [[43, "cli-hooks"]], "Contributing process": [[43, "contributing-process"]], "Supported Kedro plugins": [[43, "supported-kedro-plugins"]], "Community-developed plugins": [[43, "community-developed-plugins"]], "Set up Kedro": [[46, "set-up-kedro"]], "Installation prerequisites": [[46, "installation-prerequisites"]], "Create a virtual environment for your Kedro project": [[46, "create-a-virtual-environment-for-your-kedro-project"]], "How to create a new virtual environment using conda": [[46, "how-to-create-a-new-virtual-environment-using-conda"]], "How to create a new virtual environment without using conda": [[46, "how-to-create-a-new-virtual-environment-without-using-conda"]], "How to install Kedro using pip": [[46, "how-to-install-kedro-using-pip"]], "How to verify your Kedro installation": [[46, "how-to-verify-your-kedro-installation"]], "How to upgrade Kedro": [[46, "how-to-upgrade-kedro"]], "How to install a development version of Kedro": [[46, "how-to-install-a-development-version-of-kedro"]], "Development": [[36, "development"]], "Kedro\u2019s command line interface": [[34, "kedro-s-command-line-interface"]], "Autocompletion (optional)": [[34, "autocompletion-optional"]], "Invoke Kedro CLI from Python (optional)": [[34, "invoke-kedro-cli-from-python-optional"]], "Kedro commands": [[34, "kedro-commands"]], "Global Kedro commands": [[34, "global-kedro-commands"]], "Get help on Kedro commands": [[34, "get-help-on-kedro-commands"]], "Confirm the Kedro version": [[34, "confirm-the-kedro-version"]], "Confirm Kedro information": [[34, "confirm-kedro-information"]], "Open the Kedro documentation in your browser": [[34, "open-the-kedro-documentation-in-your-browser"]], "Customise or Override Project-specific Kedro commands": [[34, "customise-or-override-project-specific-kedro-commands"]], "Build the project\u2019s dependency tree": [[34, "build-the-project-s-dependency-tree"]], "Install all package dependencies": [[34, "install-all-package-dependencies"]], "Run the project": [[34, "run-the-project"], [48, "run-the-project"]], "Modifying a kedro run": [[34, "modifying-a-kedro-run"]], "Deploy the project": [[34, "deploy-the-project"]], "Pull a micro-package": [[34, "pull-a-micro-package"], [256, "pull-a-micro-package"]], "Project quality": [[34, "project-quality"]], "Build the project documentation": [[34, "build-the-project-documentation"]], "Lint your project": [[34, "lint-your-project"]], "Test your project": [[34, "test-your-project"]], "Project development": [[34, "project-development"]], "Modular pipelines": [[34, "modular-pipelines"], [268, "modular-pipelines"], [257, "modular-pipelines"]], "Create a new modular pipeline in your project": [[34, "create-a-new-modular-pipeline-in-your-project"]], "Package a micro-package": [[34, "package-a-micro-package"], [256, "package-a-micro-package"]], "Pull a micro-package in your project": [[34, "pull-a-micro-package-in-your-project"]], "Delete a modular pipeline": [[34, "delete-a-modular-pipeline"]], "Registered pipelines": [[34, "registered-pipelines"]], "Describe a registered pipeline": [[34, "describe-a-registered-pipeline"]], "List all registered pipelines in your project": [[34, "list-all-registered-pipelines-in-your-project"]], "Datasets": [[34, "datasets"]], "List datasets per pipeline per type": [[34, "list-datasets-per-pipeline-per-type"]], "Rank dataset factories in the catalog": [[34, "rank-dataset-factories-in-the-catalog"]], "Data Catalog": [[34, "data-catalog"], [47, "data-catalog"], [266, "data-catalog"]], "Create a Data Catalog YAML configuration file": [[34, "create-a-data-catalog-yaml-configuration-file"]], "Notebooks": [[34, "notebooks"]], "Copy tagged cells": [[34, "copy-tagged-cells"]], "Strip output cells": [[34, "strip-output-cells"]], "Introduction": [[35, "introduction"], [37, "introduction"], [33, "introduction"], [269, "introduction"]], "Debugging Node": [[35, "debugging-node"]], "Debugging Pipeline": [[35, "debugging-pipeline"]], "Code formatting and linting": [[37, "code-formatting-and-linting"]], "Set up Python tools": [[37, "set-up-python-tools"]], "Install the tools": [[37, "install-the-tools"]], "Configure ruff": [[37, "configure-ruff"]], "Configure flake8": [[37, "configure-flake8"]], "Run the tools": [[37, "run-the-tools"]], "Automated formatting and linting with pre-commit hooks": [[37, "automated-formatting-and-linting-with-pre-commit-hooks"]], "Install pre-commit": [[37, "install-pre-commit"]], "Add pre-commit configuration file": [[37, "add-pre-commit-configuration-file"]], "Install git hook scripts": [[37, "install-git-hook-scripts"]], "Automated Testing": [[33, "automated-testing"]], "Set up automated testing with pytest": [[33, "set-up-automated-testing-with-pytest"]], "Install pytest": [[33, "install-pytest"]], "Create a /tests directory": [[33, "create-a-tests-directory"]], "Test directory structure": [[33, "test-directory-structure"]], "Create an example test": [[33, "create-an-example-test"]], "Run your tests": [[33, "run-your-tests"]], "Add test coverage reports with pytest-cov": [[33, "add-test-coverage-reports-with-pytest-cov"]], "Install pytest-cov": [[33, "install-pytest-cov"]], "Configure pytest to use pytest-cov": [[33, "configure-pytest-to-use-pytest-cov"]], "Run pytest with pytest-cov": [[33, "run-pytest-with-pytest-cov"]], "Kedro concepts": [[47, "kedro-concepts"]], "Node": [[47, "node"], [266, "node"]], "Pipeline": [[47, "pipeline"], [266, "pipeline"]], "Kedro project directory structure": [[47, "kedro-project-directory-structure"]], "conf": [[47, "conf"]], "conf/base": [[47, "conf-base"]], "conf/local": [[47, "conf-local"]], "data": [[47, "data"]], "src": [[47, "src"]], "FAQs": [[44, "faqs"]], "Visualisation": [[44, "visualisation"]], "Working with Jupyter": [[44, "working-with-jupyter"]], "Kedro project development": [[44, "kedro-project-development"]], "Advanced topics": [[44, "advanced-topics"]], "Nodes and pipelines": [[44, "nodes-and-pipelines"], [255, "nodes-and-pipelines"]], "What is data engineering convention?": [[44, "what-is-data-engineering-convention"]], "Spaceflights tutorial FAQs": [[273, "spaceflights-tutorial-faqs"]], "How do I resolve these common errors?": [[273, "how-do-i-resolve-these-common-errors"]], "DataSet errors": [[273, "dataset-errors"]], "DataSetError: Failed while loading data from data set": [[273, "dataseterror-failed-while-loading-data-from-data-set"]], "DataSetNotFoundError: DataSet not found in the catalog": [[273, "datasetnotfounderror-dataset-not-found-in-the-catalog"]], "DataSetError: An exception occurred when parsing config for DataSet": [[273, "dataseterror-an-exception-occurred-when-parsing-config-for-dataset"]], "Pipeline run": [[273, "pipeline-run"]], "Set up the spaceflights project": [[274, "set-up-the-spaceflights-project"]], "Create a new project": [[274, "create-a-new-project"]], "Install project dependencies": [[274, "install-project-dependencies"]], "Install the dependencies": [[274, "install-the-dependencies"]], "Optional: logging and configuration": [[274, "optional-logging-and-configuration"]], "Configuration best practice to avoid leaking confidential data": [[274, "configuration-best-practice-to-avoid-leaking-confidential-data"]], "Preview data in Kedro-Viz": [[277, "preview-data-in-kedro-viz"]], "Configure the Data Catalog": [[277, "configure-the-data-catalog"], [278, "configure-the-data-catalog"], [278, "id2"]], "Previewing Data on Kedro-viz": [[277, "previewing-data-on-kedro-viz"]], "Visualise the spaceflights project": [[276, "visualise-the-spaceflights-project"]], "Automatic visualisation updates": [[276, "automatic-visualisation-updates"]], "Visualise layers": [[276, "visualise-layers"]], "Share a pipeline visualisation": [[276, "share-a-pipeline-visualisation"]], "Visualisation with Kedro-Viz": [[275, "visualisation-with-kedro-viz"]], "Next steps: Tutorial": [[272, "next-steps-tutorial"]], "Get help": [[272, "get-help"]], "Terminology": [[272, "terminology"]], "Project root directory": [[272, "project-root-directory"]], "Dependencies": [[272, "dependencies"], [248, "dependencies"]], "Standard development workflow": [[272, "standard-development-workflow"]], "Visualise charts in Kedro-Viz": [[278, "visualise-charts-in-kedro-viz"]], "Visualisation with Plotly": [[278, "visualisation-with-plotly"]], "Create the template reporting pipeline": [[278, "create-the-template-reporting-pipeline"]], "Add the Plotly reporting nodes": [[278, "add-the-plotly-reporting-nodes"]], "Update the reporting pipeline code": [[278, "update-the-reporting-pipeline-code"]], "Run the pipeline": [[278, "run-the-pipeline"], [278, "id3"]], "Visualisation with Matplotlib": [[278, "visualisation-with-matplotlib"]], "Add another node": [[278, "add-another-node"]], "Update the pipeline": [[278, "update-the-pipeline"]], "kedro.config.OmegaConfigLoader": [[62, "kedro-config-omegaconfigloader"]], "Learn how to use Kedro": [[56, "learn-how-to-use-kedro"]], "Assumptions": [[56, "assumptions"]], "Introduction to Kedro": [[55, "introduction-to-kedro"]], "kedro.KedroPythonVersionWarning": [[58, "kedro-kedropythonversionwarning"]], "kedro.config.TemplatedConfigLoader": [[63, "kedro-config-templatedconfigloader"]], "Use Hooks to extend a node\u2019s behaviour": [[49, "use-hooks-to-extend-a-node-s-behaviour"]], "Use Hooks to customise the dataset load and save methods": [[49, "use-hooks-to-customise-the-dataset-load-and-save-methods"]], "Use Hooks to load external credentials": [[49, "use-hooks-to-load-external-credentials"]], "Concepts": [[52, "concepts"]], "Hook specification": [[52, "hook-specification"]], "CLI hooks": [[52, "cli-hooks"]], "Hook implementation": [[52, "hook-implementation"]], "Registering your Hook implementations with Kedro": [[52, "registering-your-hook-implementations-with-kedro"]], "Disable auto-registered plugins\u2019 Hooks": [[52, "disable-auto-registered-plugins-hooks"]], "Under the hood": [[52, "under-the-hood"]], "kedro.config.ConfigLoader": [[60, "kedro-config-configloader"]], "kedro.config": [[59, "kedro-config"]], "PySpark integration": [[54, "pyspark-integration"]], "Centralise Spark configuration in conf/base/spark.yml": [[54, "centralise-spark-configuration-in-conf-base-spark-yml"]], "Initialise a SparkSession using a hook": [[54, "initialise-a-sparksession-using-a-hook"]], "Use Kedro\u2019s built-in Spark datasets to load and save raw data": [[54, "use-kedro-s-built-in-spark-datasets-to-load-and-save-raw-data"]], "Spark and Delta Lake interaction": [[54, "spark-and-delta-lake-interaction"]], "Use MemoryDataSet for intermediary DataFrame": [[54, "use-memorydataset-for-intermediary-dataframe"]], "Use MemoryDataSet with copy_mode=\"assign\" for non-DataFrame Spark objects": [[54, "use-memorydataset-with-copy-mode-assign-for-non-dataframe-spark-objects"]], "Tips for maximising concurrency using ThreadRunner": [[54, "tips-for-maximising-concurrency-using-threadrunner"]], "kedro": [[57, "kedro"]], "kedro.config.MissingConfigException": [[61, "kedro-config-missingconfigexception"]], "Welcome to Kedro\u2019s documentation!": [[53, "welcome-to-kedro-s-documentation"]], "Learn about Kedro": [[53, null]], "Tutorial and basic Kedro usage": [[53, null]], "Kedro projects": [[53, null]], "Advanced usage": [[53, null]], "API documentation": [[53, "api-documentation"]], "Indices and tables": [[53, "indices-and-tables"]], "Create a new empty project": [[48, "create-a-new-empty-project"]], "Create a new project from a configuration file": [[48, "create-a-new-project-from-a-configuration-file"]], "Create a new project containing example code": [[48, "create-a-new-project-containing-example-code"]], "Visualise a Kedro project": [[48, "visualise-a-kedro-project"]], "Where next?": [[48, "where-next"]], "More information about the pandas-iris example project": [[48, "more-information-about-the-pandas-iris-example-project"]], "Background information": [[48, "background-information"]], "Iris example: visualisation": [[48, "iris-example-visualisation"]], "Hooks examples": [[50, "hooks-examples"]], "Add memory consumption tracking": [[50, "add-memory-consumption-tracking"]], "Add data validation": [[50, "add-data-validation"]], "V2 API": [[50, "v2-api"]], "V3 API": [[50, "v3-api"]], "Add observability to your pipeline": [[50, "add-observability-to-your-pipeline"]], "Add metrics tracking to your model": [[50, "add-metrics-tracking-to-your-model"]], "Modify node inputs using before_node_run hook": [[50, "modify-node-inputs-using-before-node-run-hook"]], "kedro.extras.datasets.yaml.YAMLDataSet": [[103, "kedro-extras-datasets-yaml-yamldataset"]], "kedro.extras.datasets.tracking.MetricsDataSet": [[102, "kedro-extras-datasets-tracking-metricsdataset"]], "kedro.extras.datasets.spark.SparkJDBCDataSet": [[97, "kedro-extras-datasets-spark-sparkjdbcdataset"]], "kedro.framework": [[109, "kedro-framework"]], "kedro.extras.extensions": [[104, "kedro-extras-extensions"]], "kedro.framework.cli": [[110, "kedro-framework-cli"]], "kedro.extras.datasets.tensorflow.TensorFlowModelDataset": [[99, "kedro-extras-datasets-tensorflow-tensorflowmodeldataset"]], "kedro.extras.datasets.tracking.JSONDataSet": [[101, "kedro-extras-datasets-tracking-jsondataset"]], "kedro.framework.cli.catalog": [[111, "kedro-framework-cli-catalog"]], "kedro.extras.datasets.spark.SparkHiveDataSet": [[96, "kedro-extras-datasets-spark-sparkhivedataset"]], "kedro.extras.extensions.ipython": [[105, "kedro-extras-extensions-ipython"]], "kedro.extras.logging.color_logger.ColorHandler": [[108, "kedro-extras-logging-color-logger-colorhandler"]], "kedro.extras.logging": [[106, "kedro-extras-logging"]], "kedro.extras.datasets.text.TextDataSet": [[100, "kedro-extras-datasets-text-textdataset"]], "kedro.extras.datasets.svmlight.SVMLightDataSet": [[98, "kedro-extras-datasets-svmlight-svmlightdataset"]], "kedro.extras.logging.color_logger": [[107, "kedro-extras-logging-color-logger"]], "Pipelines": [[259, "pipelines"]], "How to build a pipeline": [[259, "how-to-build-a-pipeline"]], "How to tag a pipeline": [[259, "how-to-tag-a-pipeline"]], "How to merge multiple pipelines": [[259, "how-to-merge-multiple-pipelines"]], "Information about the nodes in a pipeline": [[259, "information-about-the-nodes-in-a-pipeline"]], "Information about pipeline inputs and outputs": [[259, "information-about-pipeline-inputs-and-outputs"]], "Bad pipelines": [[259, "bad-pipelines"]], "Pipeline with bad nodes": [[259, "pipeline-with-bad-nodes"]], "Pipeline with circular dependencies": [[259, "pipeline-with-circular-dependencies"]], "Run a pipeline": [[261, "run-a-pipeline"]], "Runners": [[261, "runners"]], "SequentialRunner": [[261, "sequentialrunner"]], "ParallelRunner": [[261, "parallelrunner"]], "Multiprocessing": [[261, "multiprocessing"]], "Multithreading": [[261, "multithreading"]], "Custom runners": [[261, "custom-runners"]], "Load and save asynchronously": [[261, "load-and-save-asynchronously"]], "Run a pipeline by name": [[261, "run-a-pipeline-by-name"]], "Run pipelines with IO": [[261, "run-pipelines-with-io"]], "Output to a file": [[261, "output-to-a-file"]], "Configure kedro run arguments": [[261, "configure-kedro-run-arguments"]], "Set up the data": [[271, "set-up-the-data"]], "Project datasets": [[271, "project-datasets"]], "Dataset registration": [[271, "dataset-registration"]], "Test that Kedro can load the data": [[271, "test-that-kedro-can-load-the-data"]], "Further information": [[271, "further-information"]], "Custom data": [[271, "custom-data"]], "Supported data locations": [[271, "supported-data-locations"]], "Create a data science pipeline": [[268, "create-a-data-science-pipeline"]], "Data science nodes": [[268, "data-science-nodes"]], "Input parameter configuration": [[268, "input-parameter-configuration"]], "Model registration": [[268, "model-registration"]], "Data science pipeline": [[268, "data-science-pipeline"]], "Test the pipelines": [[268, "test-the-pipelines"]], "Slice a pipeline": [[268, "slice-a-pipeline"], [262, "slice-a-pipeline"]], "Optional: Extend the project with namespacing and a modular pipeline": [[268, "optional-extend-the-project-with-namespacing-and-a-modular-pipeline"]], "How it works: the modular pipeline() wrapper": [[268, "how-it-works-the-modular-pipeline-wrapper"]], "How do namespaces affect parameters?": [[268, "how-do-namespaces-affect-parameters"]], "Optional: Kedro runners": [[268, "optional-kedro-runners"]], "Package an entire Kedro project": [[270, "package-an-entire-kedro-project"]], "Add documentation to a Kedro project": [[270, "add-documentation-to-a-kedro-project"]], "Set up the Sphinx project files": [[270, "set-up-the-sphinx-project-files"]], "Build HTML documentation": [[270, "build-html-documentation"]], "Documentation from docstrings": [[270, "documentation-from-docstrings"]], "Package a Kedro project": [[270, "package-a-kedro-project"]], "Run a packaged project": [[270, "run-a-packaged-project"]], "Docker, Airflow and other deployment targets": [[270, "docker-airflow-and-other-deployment-targets"]], "Kedro as a data registry": [[265, "kedro-as-a-data-registry"]], "Usage": [[265, "usage"]], "Kedro and Jupyter Notebooks": [[264, "kedro-and-jupyter-notebooks"]], "A custom Kedro kernel": [[264, "a-custom-kedro-kernel"]], "Iris dataset example": [[264, "iris-dataset-example"]], "catalog": [[264, "catalog"]], "context": [[264, "context"]], "pipelines": [[264, "pipelines"]], "session": [[264, "session"]], "%reload_kedro line magic": [[264, "reload-kedro-line-magic"]], "%run_viz line magic": [[264, "run-viz-line-magic"]], "Convert functions from Jupyter Notebooks into Kedro nodes": [[264, "convert-functions-from-jupyter-notebooks-into-kedro-nodes"]], "Useful to know\u2026": [[264, "useful-to-know"]], "Managed services": [[264, "managed-services"]], "IPython, JupyterLab and other Jupyter clients": [[264, "ipython-jupyterlab-and-other-jupyter-clients"]], "Find out more": [[264, "find-out-more"]], "FAQs and resources": [[267, "faqs-and-resources"]], "Kedro for notebook users": [[263, "kedro-for-notebook-users"]], "Nodes": [[258, "nodes"]], "How to create a node": [[258, "how-to-create-a-node"]], "Node definition syntax": [[258, "node-definition-syntax"]], "Syntax for input variables": [[258, "syntax-for-input-variables"]], "Syntax for output variables": [[258, "syntax-for-output-variables"]], "**kwargs-only node functions": [[258, "kwargs-only-node-functions"]], "How to tag a node": [[258, "how-to-tag-a-node"]], "How to run a node": [[258, "how-to-run-a-node"]], "How to use generator functions in a node": [[258, "how-to-use-generator-functions-in-a-node"]], "Set up the project": [[258, "set-up-the-project"]], "Loading data with Generators": [[258, "loading-data-with-generators"]], "Saving data with Generators": [[258, "saving-data-with-generators"]], "Slice a pipeline by providing inputs": [[262, "slice-a-pipeline-by-providing-inputs"]], "Slice a pipeline by specifying nodes": [[262, "slice-a-pipeline-by-specifying-nodes"]], "Slice a pipeline by specifying final nodes": [[262, "slice-a-pipeline-by-specifying-final-nodes"]], "Slice a pipeline with tagged nodes": [[262, "slice-a-pipeline-with-tagged-nodes"]], "Slice a pipeline by running specified nodes": [[262, "slice-a-pipeline-by-running-specified-nodes"]], "How to recreate missing outputs": [[262, "how-to-recreate-missing-outputs"]], "What are modular pipelines?": [[257, "what-are-modular-pipelines"]], "Key concepts": [[257, "key-concepts"]], "How do I create a modular pipeline?": [[257, "how-do-i-create-a-modular-pipeline"]], "What does kedro pipeline create do?": [[257, "what-does-kedro-pipeline-create-do"]], "Ensuring portability": [[257, "ensuring-portability"]], "Providing modular pipeline specific dependencies": [[257, "providing-modular-pipeline-specific-dependencies"]], "Using the modular pipeline() wrapper to provide overrides": [[257, "using-the-modular-pipeline-wrapper-to-provide-overrides"]], "Combining disconnected pipelines": [[257, "combining-disconnected-pipelines"]], "Using a modular pipeline multiple times": [[257, "using-a-modular-pipeline-multiple-times"]], "How to use a modular pipeline with different parameters": [[257, "how-to-use-a-modular-pipeline-with-different-parameters"]], "Micro-packaging": [[256, "micro-packaging"]], "Package multiple micro-packages": [[256, "package-multiple-micro-packages"]], "Providing fsspec arguments": [[256, "providing-fsspec-arguments"]], "Pull multiple micro-packages": [[256, "pull-multiple-micro-packages"]], "Kedro glossary": [[266, "kedro-glossary"]], "Data engineering vs Data science": [[266, "data-engineering-vs-data-science"]], "Kedro": [[266, "kedro"]], "KedroContext": [[266, "kedrocontext"]], "KedroSession": [[266, "kedrosession"]], "Kedro-Viz": [[266, "kedro-viz"]], "Layers (data engineering convention)": [[266, "layers-data-engineering-convention"]], "Modular pipeline": [[266, "modular-pipeline"]], "Node execution order": [[266, "node-execution-order"]], "Pipeline slicing": [[266, "pipeline-slicing"]], "Runner": [[266, "runner"]], "Starters": [[266, "starters"]], "Tags": [[266, "tags"]], "Workflow dependencies": [[266, "workflow-dependencies"], [248, "workflow-dependencies"]], "Create a data processing pipeline": [[269, "create-a-data-processing-pipeline"]], "Data preprocessing node functions": [[269, "data-preprocessing-node-functions"]], "The data processing pipeline": [[269, "the-data-processing-pipeline"]], "Test the example": [[269, "test-the-example"]], "Preprocessed data registration": [[269, "preprocessed-data-registration"]], "Create a table for model input": [[269, "create-a-table-for-model-input"]], "Model input table registration": [[269, "model-input-table-registration"]], "Test the example again": [[269, "test-the-example-again"]], "Visualise the project": [[269, "visualise-the-project"]], "Checkpoint": [[269, "checkpoint"]], "The pipeline registry": [[260, "the-pipeline-registry"]], "Pipeline autodiscovery": [[260, "pipeline-autodiscovery"]], "kedro.ipython.reload_kedro": [[186, "kedro-ipython-reload-kedro"]], "kedro.io.Version": [[182, "kedro-io-version"]], "kedro.logging": [[187, "kedro-logging"]], "kedro.logging.RichHandler": [[188, "kedro-logging-richhandler"]], "kedro.ipython": [[183, "kedro-ipython"]], "kedro.io.PartitionedDataSet": [[181, "kedro-io-partitioneddataset"]], "kedro.pipeline.modular_pipeline.ModularPipelineError": [[191, "kedro-pipeline-modular-pipeline-modularpipelineerror"]], "kedro.ipython.load_ipython_extension": [[184, "kedro-ipython-load-ipython-extension"]], "kedro.io.MemoryDataSet": [[180, "kedro-io-memorydataset"]], "kedro.io.DataSetNotFoundError": [[177, "kedro-io-datasetnotfounderror"]], "kedro.pipeline": [[189, "kedro-pipeline"]], "kedro.io.LambdaDataSet": [[179, "kedro-io-lambdadataset"]], "kedro.pipeline.Pipeline": [[190, "kedro-pipeline-pipeline"]], "kedro.io.DataSetError": [[176, "kedro-io-dataseterror"]], "kedro.io.IncrementalDataSet": [[178, "kedro-io-incrementaldataset"]], "kedro.ipython.magic_reload_kedro": [[185, "kedro-ipython-magic-reload-kedro"]], "kedro.framework.session.shelvestore": [[163, "kedro-framework-session-shelvestore"]], "kedro.framework.startup": [[167, "kedro-framework-startup"]], "kedro.framework.session.session": [[160, "kedro-framework-session-session"]], "kedro.framework.session.shelvestore.ShelveStore": [[164, "kedro-framework-session-shelvestore-shelvestore"]], "kedro.framework.session.store.BaseSessionStore": [[166, "kedro-framework-session-store-basesessionstore"]], "kedro.io.DataCatalog": [[174, "kedro-io-datacatalog"]], "kedro.framework.session.session.KedroSessionError": [[162, "kedro-framework-session-session-kedrosessionerror"]], "kedro.io.DataSetAlreadyExistsError": [[175, "kedro-io-datasetalreadyexistserror"]], "kedro.framework.session.session.KedroSession": [[161, "kedro-framework-session-session-kedrosession"]], "kedro.io.CachedDataSet": [[173, "kedro-io-cacheddataset"]], "kedro.io.AbstractDataSet": [[171, "kedro-io-abstractdataset"]], "kedro.framework.startup.ProjectMetadata": [[168, "kedro-framework-startup-projectmetadata"]], "kedro.framework.startup.bootstrap_project": [[169, "kedro-framework-startup-bootstrap-project"]], "kedro.io.AbstractVersionedDataSet": [[172, "kedro-io-abstractversioneddataset"]], "kedro.framework.session.store": [[165, "kedro-framework-session-store"]], "kedro.io": [[170, "kedro-io"]], "Project-specific dependencies": [[248, "project-specific-dependencies"]], "Install project-specific dependencies": [[248, "install-project-specific-dependencies"]], "Install dependencies related to the Data Catalog": [[248, "install-dependencies-related-to-the-data-catalog"]], "Install dependencies at a group-level": [[248, "install-dependencies-at-a-group-level"]], "Install dependencies at a type-level": [[248, "install-dependencies-at-a-type-level"]], "Lifecycle management with KedroSession": [[250, "lifecycle-management-with-kedrosession"]], "Create a session": [[250, "create-a-session"]], "kedro_datasets.text.TextDataSet": [[243, "kedro-datasets-text-textdataset"]], "kedro_datasets.tracking.MetricsDataSet": [[245, "kedro-datasets-tracking-metricsdataset"]], "Logging": [[253, "logging"]], "Kedro project setup": [[249, "kedro-project-setup"]], "Project settings": [[251, "project-settings"]], "Application settings": [[251, "application-settings"]], "Project metadata": [[251, "project-metadata"]], "kedro_datasets.tensorflow.TensorFlowModelDataSet": [[242, "kedro-datasets-tensorflow-tensorflowmodeldataset"]], "kedro_datasets.yaml.YAMLDataSet": [[247, "kedro-datasets-yaml-yamldataset"]], "kedro_datasets.svmlight.SVMLightDataSet": [[241, "kedro-datasets-svmlight-svmlightdataset"]], "kedro_datasets.video.VideoDataSet": [[246, "kedro-datasets-video-videodataset"]], "kedro_datasets.spark.SparkStreamingDataSet": [[240, "kedro-datasets-spark-sparkstreamingdataset"]], "Kedro starters": [[252, "kedro-starters"]], "How to use Kedro starters": [[252, "how-to-use-kedro-starters"]], "Starter aliases": [[252, "starter-aliases"]], "List of official starters": [[252, "list-of-official-starters"]], "Starter versioning": [[252, "starter-versioning"]], "Use a starter with a configuration file": [[252, "use-a-starter-with-a-configuration-file"]], "How to create a Kedro starter": [[252, "how-to-create-a-kedro-starter"]], "Configuration variables": [[252, "configuration-variables"]], "Example Kedro starter": [[252, "example-kedro-starter"]], "kedro_datasets.tracking.JSONDataSet": [[244, "kedro-datasets-tracking-jsondataset"]], "Default framework-side logging configuration": [[254, "default-framework-side-logging-configuration"]], "Project-side logging configuration": [[254, "project-side-logging-configuration"]], "Using KEDRO_LOGGING_CONFIG environment variable": [[254, "using-kedro-logging-config-environment-variable"]], "Disable file-based logging": [[254, "disable-file-based-logging"]], "Customise the rich Handler": [[254, "customise-the-rich-handler"]], "Use plain console logging": [[254, "use-plain-console-logging"]], "Rich logging in a dumb terminal": [[254, "rich-logging-in-a-dumb-terminal"]], "Rich logging in Jupyter": [[254, "rich-logging-in-jupyter"]], "Perform logging in your project": [[254, "perform-logging-in-your-project"]], "kedro.runner.SequentialRunner": [[198, "kedro-runner-sequentialrunner"]], "kedro_datasets": [[203, "kedro-datasets"]], "kedro.runner.AbstractRunner": [[196, "kedro-runner-abstractrunner"]], "kedro.runner": [[195, "kedro-runner"]], "kedro.utils.load_obj": [[202, "kedro-utils-load-obj"]], "kedro_datasets.biosequence.BioSequenceDataSet": [[205, "kedro-datasets-biosequence-biosequencedataset"]], "kedro.pipeline.node.Node": [[194, "kedro-pipeline-node-node"]], "kedro_datasets.dask.ParquetDataSet": [[206, "kedro-datasets-dask-parquetdataset"]], "kedro.pipeline.node": [[193, "kedro-pipeline-node"]], "kedro.runner.ParallelRunner": [[197, "kedro-runner-parallelrunner"]], "kedro.runner.run_node": [[200, "kedro-runner-run-node"]], "kedro_datasets.api.APIDataSet": [[204, "kedro-datasets-api-apidataset"]], "kedro.utils": [[201, "kedro-utils"]], "kedro_datasets.databricks.ManagedTableDataSet": [[207, "kedro-datasets-databricks-managedtabledataset"]], "kedro.runner.ThreadRunner": [[199, "kedro-runner-threadrunner"]], "kedro.pipeline.modular_pipeline.pipeline": [[192, "kedro-pipeline-modular-pipeline-pipeline"]], "kedro.extras.datasets.plotly.PlotlyDataSet": [[92, "kedro-extras-datasets-plotly-plotlydataset"]], "kedro.extras.datasets.pandas.XMLDataSet": [[88, "kedro-extras-datasets-pandas-xmldataset"]], "kedro.extras.datasets.spark.DeltaTableDataSet": [[94, "kedro-extras-datasets-spark-deltatabledataset"]], "kedro.extras.datasets.pandas.ParquetDataSet": [[85, "kedro-extras-datasets-pandas-parquetdataset"]], "kedro.extras.datasets.pandas.SQLTableDataSet": [[87, "kedro-extras-datasets-pandas-sqltabledataset"]], "kedro.extras.datasets.pandas.HDFDataSet": [[83, "kedro-extras-datasets-pandas-hdfdataset"]], "kedro.extras.datasets.pandas.GBQTableDataSet": [[81, "kedro-extras-datasets-pandas-gbqtabledataset"]], "kedro.extras.datasets.pickle.PickleDataSet": [[89, "kedro-extras-datasets-pickle-pickledataset"]], "kedro.extras.datasets.spark.SparkDataSet": [[95, "kedro-extras-datasets-spark-sparkdataset"]], "kedro.extras.datasets.redis.PickleDataSet": [[93, "kedro-extras-datasets-redis-pickledataset"]], "kedro.extras.datasets.pandas.GenericDataSet": [[82, "kedro-extras-datasets-pandas-genericdataset"]], "kedro.extras.datasets.pillow.ImageDataSet": [[90, "kedro-extras-datasets-pillow-imagedataset"]], "kedro.extras.datasets.pandas.JSONDataSet": [[84, "kedro-extras-datasets-pandas-jsondataset"]], "kedro.extras.datasets.plotly.JSONDataSet": [[91, "kedro-extras-datasets-plotly-jsondataset"]], "kedro.extras.datasets.pandas.SQLQueryDataSet": [[86, "kedro-extras-datasets-pandas-sqlquerydataset"]], "kedro.extras.datasets.pandas.GBQQueryDataSet": [[80, "kedro-extras-datasets-pandas-gbqquerydataset"]], "kedro.extras.datasets.networkx.GMLDataSet": [[74, "kedro-extras-datasets-networkx-gmldataset"]], "kedro.extras.datasets.pandas.CSVDataSet": [[77, "kedro-extras-datasets-pandas-csvdataset"]], "kedro.extras.datasets.pandas.FeatherDataSet": [[79, "kedro-extras-datasets-pandas-featherdataset"]], "kedro.extras.datasets.dask.ParquetDataSet": [[68, "kedro-extras-datasets-dask-parquetdataset"]], "kedro.extras.datasets.biosequence.BioSequenceDataSet": [[67, "kedro-extras-datasets-biosequence-biosequencedataset"]], "kedro.extras.datasets.holoviews.HoloviewsWriter": [[71, "kedro-extras-datasets-holoviews-holoviewswriter"]], "kedro.extras.datasets.api.APIDataSet": [[66, "kedro-extras-datasets-api-apidataset"]], "kedro.extras.datasets.geopandas.GeoJSONDataSet": [[70, "kedro-extras-datasets-geopandas-geojsondataset"]], "kedro.extras.datasets.networkx.JSONDataSet": [[76, "kedro-extras-datasets-networkx-jsondataset"]], "kedro.extras.datasets.pandas.ExcelDataSet": [[78, "kedro-extras-datasets-pandas-exceldataset"]], "kedro.extras.datasets": [[65, "kedro-extras-datasets"]], "kedro.extras.datasets.matplotlib.MatplotlibWriter": [[73, "kedro-extras-datasets-matplotlib-matplotlibwriter"]], "kedro.extras.datasets.email.EmailMessageDataSet": [[69, "kedro-extras-datasets-email-emailmessagedataset"]], "kedro.extras.datasets.json.JSONDataSet": [[72, "kedro-extras-datasets-json-jsondataset"]], "kedro.extras": [[64, "kedro-extras"]], "kedro.extras.datasets.networkx.GraphMLDataSet": [[75, "kedro-extras-datasets-networkx-graphmldataset"]], "kedro_datasets.pandas.JSONDataSet": [[224, "kedro-datasets-pandas-jsondataset"]], "kedro_datasets.pillow.ImageDataSet": [[230, "kedro-datasets-pillow-imagedataset"]], "kedro_datasets.pickle.PickleDataSet": [[229, "kedro-datasets-pickle-pickledataset"]], "kedro_datasets.spark.SparkDataSet": [[237, "kedro-datasets-spark-sparkdataset"]], "kedro_datasets.plotly.JSONDataSet": [[231, "kedro-datasets-plotly-jsondataset"]], "kedro_datasets.polars.CSVDataSet": [[233, "kedro-datasets-polars-csvdataset"]], "kedro_datasets.snowflake.SnowparkTableDataSet": [[235, "kedro-datasets-snowflake-snowparktabledataset"]], "kedro_datasets.spark.SparkJDBCDataSet": [[239, "kedro-datasets-spark-sparkjdbcdataset"]], "kedro_datasets.pandas.SQLTableDataSet": [[227, "kedro-datasets-pandas-sqltabledataset"]], "kedro_datasets.pandas.XMLDataSet": [[228, "kedro-datasets-pandas-xmldataset"]], "kedro_datasets.spark.DeltaTableDataSet": [[236, "kedro-datasets-spark-deltatabledataset"]], "kedro_datasets.plotly.PlotlyDataSet": [[232, "kedro-datasets-plotly-plotlydataset"]], "kedro_datasets.redis.PickleDataSet": [[234, "kedro-datasets-redis-pickledataset"]], "kedro_datasets.pandas.ParquetDataSet": [[225, "kedro-datasets-pandas-parquetdataset"]], "kedro_datasets.pandas.SQLQueryDataSet": [[226, "kedro-datasets-pandas-sqlquerydataset"]], "kedro_datasets.spark.SparkHiveDataSet": [[238, "kedro-datasets-spark-sparkhivedataset"]], "kedro_datasets.pandas.FeatherDataSet": [[219, "kedro-datasets-pandas-featherdataset"]], "kedro_datasets.networkx.GMLDataSet": [[213, "kedro-datasets-networkx-gmldataset"]], "kedro_datasets.pandas.ExcelDataSet": [[218, "kedro-datasets-pandas-exceldataset"]], "kedro_datasets.matplotlib.MatplotlibWriter": [[212, "kedro-datasets-matplotlib-matplotlibwriter"]], "kedro_datasets.pandas.GenericDataSet": [[222, "kedro-datasets-pandas-genericdataset"]], "kedro_datasets.pandas.DeltaTableDataSet": [[217, "kedro-datasets-pandas-deltatabledataset"]], "kedro_datasets.pandas.HDFDataSet": [[223, "kedro-datasets-pandas-hdfdataset"]], "kedro_datasets.geopandas.GeoJSONDataSet": [[209, "kedro-datasets-geopandas-geojsondataset"]], "kedro_datasets.email.EmailMessageDataSet": [[208, "kedro-datasets-email-emailmessagedataset"]], "kedro_datasets.json.JSONDataSet": [[211, "kedro-datasets-json-jsondataset"]], "kedro_datasets.networkx.JSONDataSet": [[215, "kedro-datasets-networkx-jsondataset"]], "kedro_datasets.pandas.GBQTableDataSet": [[221, "kedro-datasets-pandas-gbqtabledataset"]], "kedro_datasets.pandas.GBQQueryDataSet": [[220, "kedro-datasets-pandas-gbqquerydataset"]], "kedro_datasets.networkx.GraphMLDataSet": [[214, "kedro-datasets-networkx-graphmldataset"]], "kedro_datasets.pandas.CSVDataSet": [[216, "kedro-datasets-pandas-csvdataset"]], "kedro_datasets.holoviews.HoloviewsWriter": [[210, "kedro-datasets-holoviews-holoviewswriter"]]}, "indexentries": {"kedro": [[57, "module-kedro"]], "module": [[57, "module-kedro"], [59, "module-kedro.config"], [64, "module-kedro.extras"], [65, "module-kedro.extras.datasets"], [104, "module-kedro.extras.extensions"], [105, "module-kedro.extras.extensions.ipython"], [106, "module-kedro.extras.logging"], [107, "module-kedro.extras.logging.color_logger"], [109, "module-kedro.framework"], [110, "module-kedro.framework.cli"], [111, "module-kedro.framework.cli.catalog"], [112, "module-kedro.framework.cli.cli"], [115, "module-kedro.framework.cli.hooks"], [116, "module-kedro.framework.cli.hooks.manager"], [119, "module-kedro.framework.cli.hooks.markers"], [120, "module-kedro.framework.cli.hooks.specs"], [122, "module-kedro.framework.cli.jupyter"], [124, "module-kedro.framework.cli.micropkg"], [126, "module-kedro.framework.cli.pipeline"], [128, "module-kedro.framework.cli.project"], [129, "module-kedro.framework.cli.registry"], [130, "module-kedro.framework.cli.starters"], [132, "module-kedro.framework.cli.utils"], [142, "module-kedro.framework.context"], [145, "module-kedro.framework.hooks"], [146, "module-kedro.framework.hooks.manager"], [147, "module-kedro.framework.hooks.markers"], [148, "module-kedro.framework.hooks.specs"], [154, "module-kedro.framework.project"], [159, "module-kedro.framework.session"], [160, "module-kedro.framework.session.session"], [163, "module-kedro.framework.session.shelvestore"], [165, "module-kedro.framework.session.store"], [167, "module-kedro.framework.startup"], [170, "module-kedro.io"], [183, "module-kedro.ipython"], [187, "module-kedro.logging"], [189, "module-kedro.pipeline"], [195, "module-kedro.runner"], [201, "module-kedro.utils"], [203, "module-kedro_datasets"]], "kedropythonversionwarning (class in kedro)": [[58, "kedro.KedroPythonVersionWarning"]], "args (kedro.kedropythonversionwarning attribute)": [[58, "kedro.KedroPythonVersionWarning.args"]], "with_traceback() (kedro.kedropythonversionwarning method)": [[58, "kedro.KedroPythonVersionWarning.with_traceback"]], "kedro.config": [[59, "module-kedro.config"]], "configloader (class in kedro.config)": [[60, "kedro.config.ConfigLoader"]], "__init__() (kedro.config.configloader method)": [[60, "kedro.config.ConfigLoader.__init__"]], "clear() (kedro.config.configloader method)": [[60, "kedro.config.ConfigLoader.clear"]], "conf_paths (kedro.config.configloader property)": [[60, "kedro.config.ConfigLoader.conf_paths"]], "copy() (kedro.config.configloader method)": [[60, "kedro.config.ConfigLoader.copy"]], "fromkeys() (kedro.config.configloader class method)": [[60, "kedro.config.ConfigLoader.fromkeys"]], "get() (kedro.config.configloader method)": [[60, "kedro.config.ConfigLoader.get"]], "items() (kedro.config.configloader method)": [[60, "kedro.config.ConfigLoader.items"]], "keys() (kedro.config.configloader method)": [[60, "kedro.config.ConfigLoader.keys"]], "pop() (kedro.config.configloader method)": [[60, "kedro.config.ConfigLoader.pop"]], "popitem() (kedro.config.configloader method)": [[60, "kedro.config.ConfigLoader.popitem"]], "setdefault() (kedro.config.configloader method)": [[60, "kedro.config.ConfigLoader.setdefault"]], "update() (kedro.config.configloader method)": [[60, "kedro.config.ConfigLoader.update"]], "values() (kedro.config.configloader method)": [[60, "kedro.config.ConfigLoader.values"]], "missingconfigexception (class in kedro.config)": [[61, "kedro.config.MissingConfigException"]], "args (kedro.config.missingconfigexception attribute)": [[61, "kedro.config.MissingConfigException.args"]], "with_traceback() (kedro.config.missingconfigexception method)": [[61, "kedro.config.MissingConfigException.with_traceback"]], "omegaconfigloader (class in kedro.config)": [[62, "kedro.config.OmegaConfigLoader"]], "__init__() (kedro.config.omegaconfigloader method)": [[62, "kedro.config.OmegaConfigLoader.__init__"]], "clear() (kedro.config.omegaconfigloader method)": [[62, "kedro.config.OmegaConfigLoader.clear"]], "copy() (kedro.config.omegaconfigloader method)": [[62, "kedro.config.OmegaConfigLoader.copy"]], "fromkeys() (kedro.config.omegaconfigloader class method)": [[62, "kedro.config.OmegaConfigLoader.fromkeys"]], "get() (kedro.config.omegaconfigloader method)": [[62, "kedro.config.OmegaConfigLoader.get"]], "items() (kedro.config.omegaconfigloader method)": [[62, "kedro.config.OmegaConfigLoader.items"]], "keys() (kedro.config.omegaconfigloader method)": [[62, "kedro.config.OmegaConfigLoader.keys"]], "load_and_merge_dir_config() (kedro.config.omegaconfigloader method)": [[62, "kedro.config.OmegaConfigLoader.load_and_merge_dir_config"]], "pop() (kedro.config.omegaconfigloader method)": [[62, "kedro.config.OmegaConfigLoader.pop"]], "popitem() (kedro.config.omegaconfigloader method)": [[62, "kedro.config.OmegaConfigLoader.popitem"]], "setdefault() (kedro.config.omegaconfigloader method)": [[62, "kedro.config.OmegaConfigLoader.setdefault"]], "update() (kedro.config.omegaconfigloader method)": [[62, "kedro.config.OmegaConfigLoader.update"]], "values() (kedro.config.omegaconfigloader method)": [[62, "kedro.config.OmegaConfigLoader.values"]], "templatedconfigloader (class in kedro.config)": [[63, "kedro.config.TemplatedConfigLoader"]], "__init__() (kedro.config.templatedconfigloader method)": [[63, "kedro.config.TemplatedConfigLoader.__init__"]], "clear() (kedro.config.templatedconfigloader method)": [[63, "kedro.config.TemplatedConfigLoader.clear"]], "conf_paths (kedro.config.templatedconfigloader property)": [[63, "kedro.config.TemplatedConfigLoader.conf_paths"]], "copy() (kedro.config.templatedconfigloader method)": [[63, "kedro.config.TemplatedConfigLoader.copy"]], "fromkeys() (kedro.config.templatedconfigloader class method)": [[63, "kedro.config.TemplatedConfigLoader.fromkeys"]], "get() (kedro.config.templatedconfigloader method)": [[63, "kedro.config.TemplatedConfigLoader.get"]], "items() (kedro.config.templatedconfigloader method)": [[63, "kedro.config.TemplatedConfigLoader.items"]], "keys() (kedro.config.templatedconfigloader method)": [[63, "kedro.config.TemplatedConfigLoader.keys"]], "pop() (kedro.config.templatedconfigloader method)": [[63, "kedro.config.TemplatedConfigLoader.pop"]], "popitem() (kedro.config.templatedconfigloader method)": [[63, "kedro.config.TemplatedConfigLoader.popitem"]], "setdefault() (kedro.config.templatedconfigloader method)": [[63, "kedro.config.TemplatedConfigLoader.setdefault"]], "update() (kedro.config.templatedconfigloader method)": [[63, "kedro.config.TemplatedConfigLoader.update"]], "values() (kedro.config.templatedconfigloader method)": [[63, "kedro.config.TemplatedConfigLoader.values"]], "kedro.extras": [[64, "module-kedro.extras"]], "kedro.extras.datasets": [[65, "module-kedro.extras.datasets"]], "apidataset (class in kedro.extras.datasets.api)": [[66, "kedro.extras.datasets.api.APIDataSet"]], "__init__() (kedro.extras.datasets.api.apidataset method)": [[66, "kedro.extras.datasets.api.APIDataSet.__init__"]], "exists() (kedro.extras.datasets.api.apidataset method)": [[66, "kedro.extras.datasets.api.APIDataSet.exists"]], "from_config() (kedro.extras.datasets.api.apidataset class method)": [[66, "kedro.extras.datasets.api.APIDataSet.from_config"]], "load() (kedro.extras.datasets.api.apidataset method)": [[66, "kedro.extras.datasets.api.APIDataSet.load"]], "release() (kedro.extras.datasets.api.apidataset method)": [[66, "kedro.extras.datasets.api.APIDataSet.release"]], "save() (kedro.extras.datasets.api.apidataset method)": [[66, "kedro.extras.datasets.api.APIDataSet.save"]], "biosequencedataset (class in kedro.extras.datasets.biosequence)": [[67, "kedro.extras.datasets.biosequence.BioSequenceDataSet"]], "default_load_args (kedro.extras.datasets.biosequence.biosequencedataset attribute)": [[67, "kedro.extras.datasets.biosequence.BioSequenceDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.biosequence.biosequencedataset attribute)": [[67, "kedro.extras.datasets.biosequence.BioSequenceDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[67, "kedro.extras.datasets.biosequence.BioSequenceDataSet.__init__"]], "exists() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[67, "kedro.extras.datasets.biosequence.BioSequenceDataSet.exists"]], "from_config() (kedro.extras.datasets.biosequence.biosequencedataset class method)": [[67, "kedro.extras.datasets.biosequence.BioSequenceDataSet.from_config"]], "invalidate_cache() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[67, "kedro.extras.datasets.biosequence.BioSequenceDataSet.invalidate_cache"]], "load() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[67, "kedro.extras.datasets.biosequence.BioSequenceDataSet.load"]], "release() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[67, "kedro.extras.datasets.biosequence.BioSequenceDataSet.release"]], "save() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[67, "kedro.extras.datasets.biosequence.BioSequenceDataSet.save"]], "default_load_args (kedro.extras.datasets.dask.parquetdataset attribute)": [[68, "kedro.extras.datasets.dask.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.dask.parquetdataset attribute)": [[68, "kedro.extras.datasets.dask.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro.extras.datasets.dask)": [[68, "kedro.extras.datasets.dask.ParquetDataSet"]], "__init__() (kedro.extras.datasets.dask.parquetdataset method)": [[68, "kedro.extras.datasets.dask.ParquetDataSet.__init__"]], "exists() (kedro.extras.datasets.dask.parquetdataset method)": [[68, "kedro.extras.datasets.dask.ParquetDataSet.exists"]], "from_config() (kedro.extras.datasets.dask.parquetdataset class method)": [[68, "kedro.extras.datasets.dask.ParquetDataSet.from_config"]], "fs_args (kedro.extras.datasets.dask.parquetdataset property)": [[68, "kedro.extras.datasets.dask.ParquetDataSet.fs_args"]], "load() (kedro.extras.datasets.dask.parquetdataset method)": [[68, "kedro.extras.datasets.dask.ParquetDataSet.load"]], "release() (kedro.extras.datasets.dask.parquetdataset method)": [[68, "kedro.extras.datasets.dask.ParquetDataSet.release"]], "save() (kedro.extras.datasets.dask.parquetdataset method)": [[68, "kedro.extras.datasets.dask.ParquetDataSet.save"]], "default_load_args (kedro.extras.datasets.email.emailmessagedataset attribute)": [[69, "kedro.extras.datasets.email.EmailMessageDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.email.emailmessagedataset attribute)": [[69, "kedro.extras.datasets.email.EmailMessageDataSet.DEFAULT_SAVE_ARGS"]], "emailmessagedataset (class in kedro.extras.datasets.email)": [[69, "kedro.extras.datasets.email.EmailMessageDataSet"]], "__init__() (kedro.extras.datasets.email.emailmessagedataset method)": [[69, "kedro.extras.datasets.email.EmailMessageDataSet.__init__"]], "exists() (kedro.extras.datasets.email.emailmessagedataset method)": [[69, "kedro.extras.datasets.email.EmailMessageDataSet.exists"]], "from_config() (kedro.extras.datasets.email.emailmessagedataset class method)": [[69, "kedro.extras.datasets.email.EmailMessageDataSet.from_config"]], "load() (kedro.extras.datasets.email.emailmessagedataset method)": [[69, "kedro.extras.datasets.email.EmailMessageDataSet.load"]], "release() (kedro.extras.datasets.email.emailmessagedataset method)": [[69, "kedro.extras.datasets.email.EmailMessageDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.email.emailmessagedataset method)": [[69, "kedro.extras.datasets.email.EmailMessageDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.email.emailmessagedataset method)": [[69, "kedro.extras.datasets.email.EmailMessageDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.email.emailmessagedataset method)": [[69, "kedro.extras.datasets.email.EmailMessageDataSet.save"]], "default_load_args (kedro.extras.datasets.geopandas.geojsondataset attribute)": [[70, "kedro.extras.datasets.geopandas.GeoJSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.geopandas.geojsondataset attribute)": [[70, "kedro.extras.datasets.geopandas.GeoJSONDataSet.DEFAULT_SAVE_ARGS"]], "geojsondataset (class in kedro.extras.datasets.geopandas)": [[70, "kedro.extras.datasets.geopandas.GeoJSONDataSet"]], "__init__() (kedro.extras.datasets.geopandas.geojsondataset method)": [[70, "kedro.extras.datasets.geopandas.GeoJSONDataSet.__init__"]], "exists() (kedro.extras.datasets.geopandas.geojsondataset method)": [[70, "kedro.extras.datasets.geopandas.GeoJSONDataSet.exists"]], "from_config() (kedro.extras.datasets.geopandas.geojsondataset class method)": [[70, "kedro.extras.datasets.geopandas.GeoJSONDataSet.from_config"]], "invalidate_cache() (kedro.extras.datasets.geopandas.geojsondataset method)": [[70, "kedro.extras.datasets.geopandas.GeoJSONDataSet.invalidate_cache"]], "load() (kedro.extras.datasets.geopandas.geojsondataset method)": [[70, "kedro.extras.datasets.geopandas.GeoJSONDataSet.load"]], "release() (kedro.extras.datasets.geopandas.geojsondataset method)": [[70, "kedro.extras.datasets.geopandas.GeoJSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.geopandas.geojsondataset method)": [[70, "kedro.extras.datasets.geopandas.GeoJSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.geopandas.geojsondataset method)": [[70, "kedro.extras.datasets.geopandas.GeoJSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.geopandas.geojsondataset method)": [[70, "kedro.extras.datasets.geopandas.GeoJSONDataSet.save"]], "default_save_args (kedro.extras.datasets.holoviews.holoviewswriter attribute)": [[71, "kedro.extras.datasets.holoviews.HoloviewsWriter.DEFAULT_SAVE_ARGS"]], "holoviewswriter (class in kedro.extras.datasets.holoviews)": [[71, "kedro.extras.datasets.holoviews.HoloviewsWriter"]], "__init__() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[71, "kedro.extras.datasets.holoviews.HoloviewsWriter.__init__"]], "exists() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[71, "kedro.extras.datasets.holoviews.HoloviewsWriter.exists"]], "from_config() (kedro.extras.datasets.holoviews.holoviewswriter class method)": [[71, "kedro.extras.datasets.holoviews.HoloviewsWriter.from_config"]], "load() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[71, "kedro.extras.datasets.holoviews.HoloviewsWriter.load"]], "release() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[71, "kedro.extras.datasets.holoviews.HoloviewsWriter.release"]], "resolve_load_version() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[71, "kedro.extras.datasets.holoviews.HoloviewsWriter.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[71, "kedro.extras.datasets.holoviews.HoloviewsWriter.resolve_save_version"]], "save() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[71, "kedro.extras.datasets.holoviews.HoloviewsWriter.save"]], "default_save_args (kedro.extras.datasets.json.jsondataset attribute)": [[72, "kedro.extras.datasets.json.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.json)": [[72, "kedro.extras.datasets.json.JSONDataSet"]], "__init__() (kedro.extras.datasets.json.jsondataset method)": [[72, "kedro.extras.datasets.json.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.json.jsondataset method)": [[72, "kedro.extras.datasets.json.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.json.jsondataset class method)": [[72, "kedro.extras.datasets.json.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.json.jsondataset method)": [[72, "kedro.extras.datasets.json.JSONDataSet.load"]], "release() (kedro.extras.datasets.json.jsondataset method)": [[72, "kedro.extras.datasets.json.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.json.jsondataset method)": [[72, "kedro.extras.datasets.json.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.json.jsondataset method)": [[72, "kedro.extras.datasets.json.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.json.jsondataset method)": [[72, "kedro.extras.datasets.json.JSONDataSet.save"]], "default_save_args (kedro.extras.datasets.matplotlib.matplotlibwriter attribute)": [[73, "kedro.extras.datasets.matplotlib.MatplotlibWriter.DEFAULT_SAVE_ARGS"]], "matplotlibwriter (class in kedro.extras.datasets.matplotlib)": [[73, "kedro.extras.datasets.matplotlib.MatplotlibWriter"]], "__init__() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[73, "kedro.extras.datasets.matplotlib.MatplotlibWriter.__init__"]], "exists() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[73, "kedro.extras.datasets.matplotlib.MatplotlibWriter.exists"]], "from_config() (kedro.extras.datasets.matplotlib.matplotlibwriter class method)": [[73, "kedro.extras.datasets.matplotlib.MatplotlibWriter.from_config"]], "load() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[73, "kedro.extras.datasets.matplotlib.MatplotlibWriter.load"]], "release() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[73, "kedro.extras.datasets.matplotlib.MatplotlibWriter.release"]], "resolve_load_version() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[73, "kedro.extras.datasets.matplotlib.MatplotlibWriter.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[73, "kedro.extras.datasets.matplotlib.MatplotlibWriter.resolve_save_version"]], "save() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[73, "kedro.extras.datasets.matplotlib.MatplotlibWriter.save"]], "default_load_args (kedro.extras.datasets.networkx.gmldataset attribute)": [[74, "kedro.extras.datasets.networkx.GMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.networkx.gmldataset attribute)": [[74, "kedro.extras.datasets.networkx.GMLDataSet.DEFAULT_SAVE_ARGS"]], "gmldataset (class in kedro.extras.datasets.networkx)": [[74, "kedro.extras.datasets.networkx.GMLDataSet"]], "__init__() (kedro.extras.datasets.networkx.gmldataset method)": [[74, "kedro.extras.datasets.networkx.GMLDataSet.__init__"]], "exists() (kedro.extras.datasets.networkx.gmldataset method)": [[74, "kedro.extras.datasets.networkx.GMLDataSet.exists"]], "from_config() (kedro.extras.datasets.networkx.gmldataset class method)": [[74, "kedro.extras.datasets.networkx.GMLDataSet.from_config"]], "load() (kedro.extras.datasets.networkx.gmldataset method)": [[74, "kedro.extras.datasets.networkx.GMLDataSet.load"]], "release() (kedro.extras.datasets.networkx.gmldataset method)": [[74, "kedro.extras.datasets.networkx.GMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.networkx.gmldataset method)": [[74, "kedro.extras.datasets.networkx.GMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.networkx.gmldataset method)": [[74, "kedro.extras.datasets.networkx.GMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.networkx.gmldataset method)": [[74, "kedro.extras.datasets.networkx.GMLDataSet.save"]], "default_load_args (kedro.extras.datasets.networkx.graphmldataset attribute)": [[75, "kedro.extras.datasets.networkx.GraphMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.networkx.graphmldataset attribute)": [[75, "kedro.extras.datasets.networkx.GraphMLDataSet.DEFAULT_SAVE_ARGS"]], "graphmldataset (class in kedro.extras.datasets.networkx)": [[75, "kedro.extras.datasets.networkx.GraphMLDataSet"]], "__init__() (kedro.extras.datasets.networkx.graphmldataset method)": [[75, "kedro.extras.datasets.networkx.GraphMLDataSet.__init__"]], "exists() (kedro.extras.datasets.networkx.graphmldataset method)": [[75, "kedro.extras.datasets.networkx.GraphMLDataSet.exists"]], "from_config() (kedro.extras.datasets.networkx.graphmldataset class method)": [[75, "kedro.extras.datasets.networkx.GraphMLDataSet.from_config"]], "load() (kedro.extras.datasets.networkx.graphmldataset method)": [[75, "kedro.extras.datasets.networkx.GraphMLDataSet.load"]], "release() (kedro.extras.datasets.networkx.graphmldataset method)": [[75, "kedro.extras.datasets.networkx.GraphMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.networkx.graphmldataset method)": [[75, "kedro.extras.datasets.networkx.GraphMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.networkx.graphmldataset method)": [[75, "kedro.extras.datasets.networkx.GraphMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.networkx.graphmldataset method)": [[75, "kedro.extras.datasets.networkx.GraphMLDataSet.save"]], "default_load_args (kedro.extras.datasets.networkx.jsondataset attribute)": [[76, "kedro.extras.datasets.networkx.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.networkx.jsondataset attribute)": [[76, "kedro.extras.datasets.networkx.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.networkx)": [[76, "kedro.extras.datasets.networkx.JSONDataSet"]], "__init__() (kedro.extras.datasets.networkx.jsondataset method)": [[76, "kedro.extras.datasets.networkx.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.networkx.jsondataset method)": [[76, "kedro.extras.datasets.networkx.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.networkx.jsondataset class method)": [[76, "kedro.extras.datasets.networkx.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.networkx.jsondataset method)": [[76, "kedro.extras.datasets.networkx.JSONDataSet.load"]], "release() (kedro.extras.datasets.networkx.jsondataset method)": [[76, "kedro.extras.datasets.networkx.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.networkx.jsondataset method)": [[76, "kedro.extras.datasets.networkx.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.networkx.jsondataset method)": [[76, "kedro.extras.datasets.networkx.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.networkx.jsondataset method)": [[76, "kedro.extras.datasets.networkx.JSONDataSet.save"]], "csvdataset (class in kedro.extras.datasets.pandas)": [[77, "kedro.extras.datasets.pandas.CSVDataSet"]], "default_load_args (kedro.extras.datasets.pandas.csvdataset attribute)": [[77, "kedro.extras.datasets.pandas.CSVDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.csvdataset attribute)": [[77, "kedro.extras.datasets.pandas.CSVDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro.extras.datasets.pandas.csvdataset method)": [[77, "kedro.extras.datasets.pandas.CSVDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.csvdataset method)": [[77, "kedro.extras.datasets.pandas.CSVDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.csvdataset class method)": [[77, "kedro.extras.datasets.pandas.CSVDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.csvdataset method)": [[77, "kedro.extras.datasets.pandas.CSVDataSet.load"]], "release() (kedro.extras.datasets.pandas.csvdataset method)": [[77, "kedro.extras.datasets.pandas.CSVDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.csvdataset method)": [[77, "kedro.extras.datasets.pandas.CSVDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.csvdataset method)": [[77, "kedro.extras.datasets.pandas.CSVDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.csvdataset method)": [[77, "kedro.extras.datasets.pandas.CSVDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.exceldataset attribute)": [[78, "kedro.extras.datasets.pandas.ExcelDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.exceldataset attribute)": [[78, "kedro.extras.datasets.pandas.ExcelDataSet.DEFAULT_SAVE_ARGS"]], "exceldataset (class in kedro.extras.datasets.pandas)": [[78, "kedro.extras.datasets.pandas.ExcelDataSet"]], "__init__() (kedro.extras.datasets.pandas.exceldataset method)": [[78, "kedro.extras.datasets.pandas.ExcelDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.exceldataset method)": [[78, "kedro.extras.datasets.pandas.ExcelDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.exceldataset class method)": [[78, "kedro.extras.datasets.pandas.ExcelDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.exceldataset method)": [[78, "kedro.extras.datasets.pandas.ExcelDataSet.load"]], "release() (kedro.extras.datasets.pandas.exceldataset method)": [[78, "kedro.extras.datasets.pandas.ExcelDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.exceldataset method)": [[78, "kedro.extras.datasets.pandas.ExcelDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.exceldataset method)": [[78, "kedro.extras.datasets.pandas.ExcelDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.exceldataset method)": [[78, "kedro.extras.datasets.pandas.ExcelDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.featherdataset attribute)": [[79, "kedro.extras.datasets.pandas.FeatherDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.featherdataset attribute)": [[79, "kedro.extras.datasets.pandas.FeatherDataSet.DEFAULT_SAVE_ARGS"]], "featherdataset (class in kedro.extras.datasets.pandas)": [[79, "kedro.extras.datasets.pandas.FeatherDataSet"]], "__init__() (kedro.extras.datasets.pandas.featherdataset method)": [[79, "kedro.extras.datasets.pandas.FeatherDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.featherdataset method)": [[79, "kedro.extras.datasets.pandas.FeatherDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.featherdataset class method)": [[79, "kedro.extras.datasets.pandas.FeatherDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.featherdataset method)": [[79, "kedro.extras.datasets.pandas.FeatherDataSet.load"]], "release() (kedro.extras.datasets.pandas.featherdataset method)": [[79, "kedro.extras.datasets.pandas.FeatherDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.featherdataset method)": [[79, "kedro.extras.datasets.pandas.FeatherDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.featherdataset method)": [[79, "kedro.extras.datasets.pandas.FeatherDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.featherdataset method)": [[79, "kedro.extras.datasets.pandas.FeatherDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.gbqquerydataset attribute)": [[80, "kedro.extras.datasets.pandas.GBQQueryDataSet.DEFAULT_LOAD_ARGS"]], "gbqquerydataset (class in kedro.extras.datasets.pandas)": [[80, "kedro.extras.datasets.pandas.GBQQueryDataSet"]], "__init__() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[80, "kedro.extras.datasets.pandas.GBQQueryDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[80, "kedro.extras.datasets.pandas.GBQQueryDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.gbqquerydataset class method)": [[80, "kedro.extras.datasets.pandas.GBQQueryDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[80, "kedro.extras.datasets.pandas.GBQQueryDataSet.load"]], "release() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[80, "kedro.extras.datasets.pandas.GBQQueryDataSet.release"]], "save() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[80, "kedro.extras.datasets.pandas.GBQQueryDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.gbqtabledataset attribute)": [[81, "kedro.extras.datasets.pandas.GBQTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.gbqtabledataset attribute)": [[81, "kedro.extras.datasets.pandas.GBQTableDataSet.DEFAULT_SAVE_ARGS"]], "gbqtabledataset (class in kedro.extras.datasets.pandas)": [[81, "kedro.extras.datasets.pandas.GBQTableDataSet"]], "__init__() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[81, "kedro.extras.datasets.pandas.GBQTableDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[81, "kedro.extras.datasets.pandas.GBQTableDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.gbqtabledataset class method)": [[81, "kedro.extras.datasets.pandas.GBQTableDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[81, "kedro.extras.datasets.pandas.GBQTableDataSet.load"]], "release() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[81, "kedro.extras.datasets.pandas.GBQTableDataSet.release"]], "save() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[81, "kedro.extras.datasets.pandas.GBQTableDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.genericdataset attribute)": [[82, "kedro.extras.datasets.pandas.GenericDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.genericdataset attribute)": [[82, "kedro.extras.datasets.pandas.GenericDataSet.DEFAULT_SAVE_ARGS"]], "genericdataset (class in kedro.extras.datasets.pandas)": [[82, "kedro.extras.datasets.pandas.GenericDataSet"]], "__init__() (kedro.extras.datasets.pandas.genericdataset method)": [[82, "kedro.extras.datasets.pandas.GenericDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.genericdataset method)": [[82, "kedro.extras.datasets.pandas.GenericDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.genericdataset class method)": [[82, "kedro.extras.datasets.pandas.GenericDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.genericdataset method)": [[82, "kedro.extras.datasets.pandas.GenericDataSet.load"]], "release() (kedro.extras.datasets.pandas.genericdataset method)": [[82, "kedro.extras.datasets.pandas.GenericDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.genericdataset method)": [[82, "kedro.extras.datasets.pandas.GenericDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.genericdataset method)": [[82, "kedro.extras.datasets.pandas.GenericDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.genericdataset method)": [[82, "kedro.extras.datasets.pandas.GenericDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.hdfdataset attribute)": [[83, "kedro.extras.datasets.pandas.HDFDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.hdfdataset attribute)": [[83, "kedro.extras.datasets.pandas.HDFDataSet.DEFAULT_SAVE_ARGS"]], "hdfdataset (class in kedro.extras.datasets.pandas)": [[83, "kedro.extras.datasets.pandas.HDFDataSet"]], "__init__() (kedro.extras.datasets.pandas.hdfdataset method)": [[83, "kedro.extras.datasets.pandas.HDFDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.hdfdataset method)": [[83, "kedro.extras.datasets.pandas.HDFDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.hdfdataset class method)": [[83, "kedro.extras.datasets.pandas.HDFDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.hdfdataset method)": [[83, "kedro.extras.datasets.pandas.HDFDataSet.load"]], "release() (kedro.extras.datasets.pandas.hdfdataset method)": [[83, "kedro.extras.datasets.pandas.HDFDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.hdfdataset method)": [[83, "kedro.extras.datasets.pandas.HDFDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.hdfdataset method)": [[83, "kedro.extras.datasets.pandas.HDFDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.hdfdataset method)": [[83, "kedro.extras.datasets.pandas.HDFDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.jsondataset attribute)": [[84, "kedro.extras.datasets.pandas.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.jsondataset attribute)": [[84, "kedro.extras.datasets.pandas.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.pandas)": [[84, "kedro.extras.datasets.pandas.JSONDataSet"]], "__init__() (kedro.extras.datasets.pandas.jsondataset method)": [[84, "kedro.extras.datasets.pandas.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.jsondataset method)": [[84, "kedro.extras.datasets.pandas.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.jsondataset class method)": [[84, "kedro.extras.datasets.pandas.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.jsondataset method)": [[84, "kedro.extras.datasets.pandas.JSONDataSet.load"]], "release() (kedro.extras.datasets.pandas.jsondataset method)": [[84, "kedro.extras.datasets.pandas.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.jsondataset method)": [[84, "kedro.extras.datasets.pandas.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.jsondataset method)": [[84, "kedro.extras.datasets.pandas.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.jsondataset method)": [[84, "kedro.extras.datasets.pandas.JSONDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.parquetdataset attribute)": [[85, "kedro.extras.datasets.pandas.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.parquetdataset attribute)": [[85, "kedro.extras.datasets.pandas.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro.extras.datasets.pandas)": [[85, "kedro.extras.datasets.pandas.ParquetDataSet"]], "__init__() (kedro.extras.datasets.pandas.parquetdataset method)": [[85, "kedro.extras.datasets.pandas.ParquetDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.parquetdataset method)": [[85, "kedro.extras.datasets.pandas.ParquetDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.parquetdataset class method)": [[85, "kedro.extras.datasets.pandas.ParquetDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.parquetdataset method)": [[85, "kedro.extras.datasets.pandas.ParquetDataSet.load"]], "release() (kedro.extras.datasets.pandas.parquetdataset method)": [[85, "kedro.extras.datasets.pandas.ParquetDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.parquetdataset method)": [[85, "kedro.extras.datasets.pandas.ParquetDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.parquetdataset method)": [[85, "kedro.extras.datasets.pandas.ParquetDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.parquetdataset method)": [[85, "kedro.extras.datasets.pandas.ParquetDataSet.save"]], "sqlquerydataset (class in kedro.extras.datasets.pandas)": [[86, "kedro.extras.datasets.pandas.SQLQueryDataSet"]], "__init__() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[86, "kedro.extras.datasets.pandas.SQLQueryDataSet.__init__"]], "create_connection() (kedro.extras.datasets.pandas.sqlquerydataset class method)": [[86, "kedro.extras.datasets.pandas.SQLQueryDataSet.create_connection"]], "engines (kedro.extras.datasets.pandas.sqlquerydataset attribute)": [[86, "kedro.extras.datasets.pandas.SQLQueryDataSet.engines"]], "exists() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[86, "kedro.extras.datasets.pandas.SQLQueryDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.sqlquerydataset class method)": [[86, "kedro.extras.datasets.pandas.SQLQueryDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[86, "kedro.extras.datasets.pandas.SQLQueryDataSet.load"]], "release() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[86, "kedro.extras.datasets.pandas.SQLQueryDataSet.release"]], "save() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[86, "kedro.extras.datasets.pandas.SQLQueryDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.sqltabledataset attribute)": [[87, "kedro.extras.datasets.pandas.SQLTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.sqltabledataset attribute)": [[87, "kedro.extras.datasets.pandas.SQLTableDataSet.DEFAULT_SAVE_ARGS"]], "sqltabledataset (class in kedro.extras.datasets.pandas)": [[87, "kedro.extras.datasets.pandas.SQLTableDataSet"]], "__init__() (kedro.extras.datasets.pandas.sqltabledataset method)": [[87, "kedro.extras.datasets.pandas.SQLTableDataSet.__init__"]], "create_connection() (kedro.extras.datasets.pandas.sqltabledataset class method)": [[87, "kedro.extras.datasets.pandas.SQLTableDataSet.create_connection"]], "engines (kedro.extras.datasets.pandas.sqltabledataset attribute)": [[87, "kedro.extras.datasets.pandas.SQLTableDataSet.engines"]], "exists() (kedro.extras.datasets.pandas.sqltabledataset method)": [[87, "kedro.extras.datasets.pandas.SQLTableDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.sqltabledataset class method)": [[87, "kedro.extras.datasets.pandas.SQLTableDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.sqltabledataset method)": [[87, "kedro.extras.datasets.pandas.SQLTableDataSet.load"]], "release() (kedro.extras.datasets.pandas.sqltabledataset method)": [[87, "kedro.extras.datasets.pandas.SQLTableDataSet.release"]], "save() (kedro.extras.datasets.pandas.sqltabledataset method)": [[87, "kedro.extras.datasets.pandas.SQLTableDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.xmldataset attribute)": [[88, "kedro.extras.datasets.pandas.XMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.xmldataset attribute)": [[88, "kedro.extras.datasets.pandas.XMLDataSet.DEFAULT_SAVE_ARGS"]], "xmldataset (class in kedro.extras.datasets.pandas)": [[88, "kedro.extras.datasets.pandas.XMLDataSet"]], "__init__() (kedro.extras.datasets.pandas.xmldataset method)": [[88, "kedro.extras.datasets.pandas.XMLDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.xmldataset method)": [[88, "kedro.extras.datasets.pandas.XMLDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.xmldataset class method)": [[88, "kedro.extras.datasets.pandas.XMLDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.xmldataset method)": [[88, "kedro.extras.datasets.pandas.XMLDataSet.load"]], "release() (kedro.extras.datasets.pandas.xmldataset method)": [[88, "kedro.extras.datasets.pandas.XMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.xmldataset method)": [[88, "kedro.extras.datasets.pandas.XMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.xmldataset method)": [[88, "kedro.extras.datasets.pandas.XMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.xmldataset method)": [[88, "kedro.extras.datasets.pandas.XMLDataSet.save"]], "default_load_args (kedro.extras.datasets.pickle.pickledataset attribute)": [[89, "kedro.extras.datasets.pickle.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pickle.pickledataset attribute)": [[89, "kedro.extras.datasets.pickle.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro.extras.datasets.pickle)": [[89, "kedro.extras.datasets.pickle.PickleDataSet"]], "__init__() (kedro.extras.datasets.pickle.pickledataset method)": [[89, "kedro.extras.datasets.pickle.PickleDataSet.__init__"]], "exists() (kedro.extras.datasets.pickle.pickledataset method)": [[89, "kedro.extras.datasets.pickle.PickleDataSet.exists"]], "from_config() (kedro.extras.datasets.pickle.pickledataset class method)": [[89, "kedro.extras.datasets.pickle.PickleDataSet.from_config"]], "load() (kedro.extras.datasets.pickle.pickledataset method)": [[89, "kedro.extras.datasets.pickle.PickleDataSet.load"]], "release() (kedro.extras.datasets.pickle.pickledataset method)": [[89, "kedro.extras.datasets.pickle.PickleDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pickle.pickledataset method)": [[89, "kedro.extras.datasets.pickle.PickleDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pickle.pickledataset method)": [[89, "kedro.extras.datasets.pickle.PickleDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pickle.pickledataset method)": [[89, "kedro.extras.datasets.pickle.PickleDataSet.save"]], "default_save_args (kedro.extras.datasets.pillow.imagedataset attribute)": [[90, "kedro.extras.datasets.pillow.ImageDataSet.DEFAULT_SAVE_ARGS"]], "imagedataset (class in kedro.extras.datasets.pillow)": [[90, "kedro.extras.datasets.pillow.ImageDataSet"]], "__init__() (kedro.extras.datasets.pillow.imagedataset method)": [[90, "kedro.extras.datasets.pillow.ImageDataSet.__init__"]], "exists() (kedro.extras.datasets.pillow.imagedataset method)": [[90, "kedro.extras.datasets.pillow.ImageDataSet.exists"]], "from_config() (kedro.extras.datasets.pillow.imagedataset class method)": [[90, "kedro.extras.datasets.pillow.ImageDataSet.from_config"]], "load() (kedro.extras.datasets.pillow.imagedataset method)": [[90, "kedro.extras.datasets.pillow.ImageDataSet.load"]], "release() (kedro.extras.datasets.pillow.imagedataset method)": [[90, "kedro.extras.datasets.pillow.ImageDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pillow.imagedataset method)": [[90, "kedro.extras.datasets.pillow.ImageDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pillow.imagedataset method)": [[90, "kedro.extras.datasets.pillow.ImageDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pillow.imagedataset method)": [[90, "kedro.extras.datasets.pillow.ImageDataSet.save"]], "default_load_args (kedro.extras.datasets.plotly.jsondataset attribute)": [[91, "kedro.extras.datasets.plotly.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.plotly.jsondataset attribute)": [[91, "kedro.extras.datasets.plotly.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.plotly)": [[91, "kedro.extras.datasets.plotly.JSONDataSet"]], "__init__() (kedro.extras.datasets.plotly.jsondataset method)": [[91, "kedro.extras.datasets.plotly.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.plotly.jsondataset method)": [[91, "kedro.extras.datasets.plotly.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.plotly.jsondataset class method)": [[91, "kedro.extras.datasets.plotly.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.plotly.jsondataset method)": [[91, "kedro.extras.datasets.plotly.JSONDataSet.load"]], "release() (kedro.extras.datasets.plotly.jsondataset method)": [[91, "kedro.extras.datasets.plotly.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.plotly.jsondataset method)": [[91, "kedro.extras.datasets.plotly.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.plotly.jsondataset method)": [[91, "kedro.extras.datasets.plotly.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.plotly.jsondataset method)": [[91, "kedro.extras.datasets.plotly.JSONDataSet.save"]], "default_load_args (kedro.extras.datasets.plotly.plotlydataset attribute)": [[92, "kedro.extras.datasets.plotly.PlotlyDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.plotly.plotlydataset attribute)": [[92, "kedro.extras.datasets.plotly.PlotlyDataSet.DEFAULT_SAVE_ARGS"]], "plotlydataset (class in kedro.extras.datasets.plotly)": [[92, "kedro.extras.datasets.plotly.PlotlyDataSet"]], "__init__() (kedro.extras.datasets.plotly.plotlydataset method)": [[92, "kedro.extras.datasets.plotly.PlotlyDataSet.__init__"]], "exists() (kedro.extras.datasets.plotly.plotlydataset method)": [[92, "kedro.extras.datasets.plotly.PlotlyDataSet.exists"]], "from_config() (kedro.extras.datasets.plotly.plotlydataset class method)": [[92, "kedro.extras.datasets.plotly.PlotlyDataSet.from_config"]], "load() (kedro.extras.datasets.plotly.plotlydataset method)": [[92, "kedro.extras.datasets.plotly.PlotlyDataSet.load"]], "release() (kedro.extras.datasets.plotly.plotlydataset method)": [[92, "kedro.extras.datasets.plotly.PlotlyDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.plotly.plotlydataset method)": [[92, "kedro.extras.datasets.plotly.PlotlyDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.plotly.plotlydataset method)": [[92, "kedro.extras.datasets.plotly.PlotlyDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.plotly.plotlydataset method)": [[92, "kedro.extras.datasets.plotly.PlotlyDataSet.save"]], "default_load_args (kedro.extras.datasets.redis.pickledataset attribute)": [[93, "kedro.extras.datasets.redis.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_redis_url (kedro.extras.datasets.redis.pickledataset attribute)": [[93, "kedro.extras.datasets.redis.PickleDataSet.DEFAULT_REDIS_URL"]], "default_save_args (kedro.extras.datasets.redis.pickledataset attribute)": [[93, "kedro.extras.datasets.redis.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro.extras.datasets.redis)": [[93, "kedro.extras.datasets.redis.PickleDataSet"]], "__init__() (kedro.extras.datasets.redis.pickledataset method)": [[93, "kedro.extras.datasets.redis.PickleDataSet.__init__"]], "exists() (kedro.extras.datasets.redis.pickledataset method)": [[93, "kedro.extras.datasets.redis.PickleDataSet.exists"]], "from_config() (kedro.extras.datasets.redis.pickledataset class method)": [[93, "kedro.extras.datasets.redis.PickleDataSet.from_config"]], "load() (kedro.extras.datasets.redis.pickledataset method)": [[93, "kedro.extras.datasets.redis.PickleDataSet.load"]], "release() (kedro.extras.datasets.redis.pickledataset method)": [[93, "kedro.extras.datasets.redis.PickleDataSet.release"]], "save() (kedro.extras.datasets.redis.pickledataset method)": [[93, "kedro.extras.datasets.redis.PickleDataSet.save"]], "deltatabledataset (class in kedro.extras.datasets.spark)": [[94, "kedro.extras.datasets.spark.DeltaTableDataSet"]], "__init__() (kedro.extras.datasets.spark.deltatabledataset method)": [[94, "kedro.extras.datasets.spark.DeltaTableDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.deltatabledataset method)": [[94, "kedro.extras.datasets.spark.DeltaTableDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.deltatabledataset class method)": [[94, "kedro.extras.datasets.spark.DeltaTableDataSet.from_config"]], "load() (kedro.extras.datasets.spark.deltatabledataset method)": [[94, "kedro.extras.datasets.spark.DeltaTableDataSet.load"]], "release() (kedro.extras.datasets.spark.deltatabledataset method)": [[94, "kedro.extras.datasets.spark.DeltaTableDataSet.release"]], "save() (kedro.extras.datasets.spark.deltatabledataset method)": [[94, "kedro.extras.datasets.spark.DeltaTableDataSet.save"]], "default_load_args (kedro.extras.datasets.spark.sparkdataset attribute)": [[95, "kedro.extras.datasets.spark.SparkDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.spark.sparkdataset attribute)": [[95, "kedro.extras.datasets.spark.SparkDataSet.DEFAULT_SAVE_ARGS"]], "sparkdataset (class in kedro.extras.datasets.spark)": [[95, "kedro.extras.datasets.spark.SparkDataSet"]], "__init__() (kedro.extras.datasets.spark.sparkdataset method)": [[95, "kedro.extras.datasets.spark.SparkDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.sparkdataset method)": [[95, "kedro.extras.datasets.spark.SparkDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.sparkdataset class method)": [[95, "kedro.extras.datasets.spark.SparkDataSet.from_config"]], "load() (kedro.extras.datasets.spark.sparkdataset method)": [[95, "kedro.extras.datasets.spark.SparkDataSet.load"]], "release() (kedro.extras.datasets.spark.sparkdataset method)": [[95, "kedro.extras.datasets.spark.SparkDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.spark.sparkdataset method)": [[95, "kedro.extras.datasets.spark.SparkDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.spark.sparkdataset method)": [[95, "kedro.extras.datasets.spark.SparkDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.spark.sparkdataset method)": [[95, "kedro.extras.datasets.spark.SparkDataSet.save"]], "default_save_args (kedro.extras.datasets.spark.sparkhivedataset attribute)": [[96, "kedro.extras.datasets.spark.SparkHiveDataSet.DEFAULT_SAVE_ARGS"]], "sparkhivedataset (class in kedro.extras.datasets.spark)": [[96, "kedro.extras.datasets.spark.SparkHiveDataSet"]], "__init__() (kedro.extras.datasets.spark.sparkhivedataset method)": [[96, "kedro.extras.datasets.spark.SparkHiveDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.sparkhivedataset method)": [[96, "kedro.extras.datasets.spark.SparkHiveDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.sparkhivedataset class method)": [[96, "kedro.extras.datasets.spark.SparkHiveDataSet.from_config"]], "load() (kedro.extras.datasets.spark.sparkhivedataset method)": [[96, "kedro.extras.datasets.spark.SparkHiveDataSet.load"]], "release() (kedro.extras.datasets.spark.sparkhivedataset method)": [[96, "kedro.extras.datasets.spark.SparkHiveDataSet.release"]], "save() (kedro.extras.datasets.spark.sparkhivedataset method)": [[96, "kedro.extras.datasets.spark.SparkHiveDataSet.save"]], "default_load_args (kedro.extras.datasets.spark.sparkjdbcdataset attribute)": [[97, "kedro.extras.datasets.spark.SparkJDBCDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.spark.sparkjdbcdataset attribute)": [[97, "kedro.extras.datasets.spark.SparkJDBCDataSet.DEFAULT_SAVE_ARGS"]], "sparkjdbcdataset (class in kedro.extras.datasets.spark)": [[97, "kedro.extras.datasets.spark.SparkJDBCDataSet"]], "__init__() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[97, "kedro.extras.datasets.spark.SparkJDBCDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[97, "kedro.extras.datasets.spark.SparkJDBCDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.sparkjdbcdataset class method)": [[97, "kedro.extras.datasets.spark.SparkJDBCDataSet.from_config"]], "load() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[97, "kedro.extras.datasets.spark.SparkJDBCDataSet.load"]], "release() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[97, "kedro.extras.datasets.spark.SparkJDBCDataSet.release"]], "save() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[97, "kedro.extras.datasets.spark.SparkJDBCDataSet.save"]], "default_load_args (kedro.extras.datasets.svmlight.svmlightdataset attribute)": [[98, "kedro.extras.datasets.svmlight.SVMLightDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.svmlight.svmlightdataset attribute)": [[98, "kedro.extras.datasets.svmlight.SVMLightDataSet.DEFAULT_SAVE_ARGS"]], "svmlightdataset (class in kedro.extras.datasets.svmlight)": [[98, "kedro.extras.datasets.svmlight.SVMLightDataSet"]], "exists() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[98, "kedro.extras.datasets.svmlight.SVMLightDataSet.exists"]], "from_config() (kedro.extras.datasets.svmlight.svmlightdataset class method)": [[98, "kedro.extras.datasets.svmlight.SVMLightDataSet.from_config"]], "load() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[98, "kedro.extras.datasets.svmlight.SVMLightDataSet.load"]], "release() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[98, "kedro.extras.datasets.svmlight.SVMLightDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[98, "kedro.extras.datasets.svmlight.SVMLightDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[98, "kedro.extras.datasets.svmlight.SVMLightDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[98, "kedro.extras.datasets.svmlight.SVMLightDataSet.save"]], "default_load_args (kedro.extras.datasets.tensorflow.tensorflowmodeldataset attribute)": [[99, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.tensorflow.tensorflowmodeldataset attribute)": [[99, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.DEFAULT_SAVE_ARGS"]], "tensorflowmodeldataset (class in kedro.extras.datasets.tensorflow)": [[99, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset"]], "__init__() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[99, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.__init__"]], "exists() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[99, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.exists"]], "from_config() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset class method)": [[99, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.from_config"]], "load() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[99, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.load"]], "release() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[99, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.release"]], "resolve_load_version() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[99, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[99, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.resolve_save_version"]], "save() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[99, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.save"]], "textdataset (class in kedro.extras.datasets.text)": [[100, "kedro.extras.datasets.text.TextDataSet"]], "__init__() (kedro.extras.datasets.text.textdataset method)": [[100, "kedro.extras.datasets.text.TextDataSet.__init__"]], "exists() (kedro.extras.datasets.text.textdataset method)": [[100, "kedro.extras.datasets.text.TextDataSet.exists"]], "from_config() (kedro.extras.datasets.text.textdataset class method)": [[100, "kedro.extras.datasets.text.TextDataSet.from_config"]], "load() (kedro.extras.datasets.text.textdataset method)": [[100, "kedro.extras.datasets.text.TextDataSet.load"]], "release() (kedro.extras.datasets.text.textdataset method)": [[100, "kedro.extras.datasets.text.TextDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.text.textdataset method)": [[100, "kedro.extras.datasets.text.TextDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.text.textdataset method)": [[100, "kedro.extras.datasets.text.TextDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.text.textdataset method)": [[100, "kedro.extras.datasets.text.TextDataSet.save"]], "default_save_args (kedro.extras.datasets.tracking.jsondataset attribute)": [[101, "kedro.extras.datasets.tracking.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.tracking)": [[101, "kedro.extras.datasets.tracking.JSONDataSet"]], "__init__() (kedro.extras.datasets.tracking.jsondataset method)": [[101, "kedro.extras.datasets.tracking.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.tracking.jsondataset method)": [[101, "kedro.extras.datasets.tracking.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.tracking.jsondataset class method)": [[101, "kedro.extras.datasets.tracking.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.tracking.jsondataset method)": [[101, "kedro.extras.datasets.tracking.JSONDataSet.load"]], "release() (kedro.extras.datasets.tracking.jsondataset method)": [[101, "kedro.extras.datasets.tracking.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.tracking.jsondataset method)": [[101, "kedro.extras.datasets.tracking.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.tracking.jsondataset method)": [[101, "kedro.extras.datasets.tracking.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.tracking.jsondataset method)": [[101, "kedro.extras.datasets.tracking.JSONDataSet.save"]], "versioned (kedro.extras.datasets.tracking.jsondataset attribute)": [[101, "kedro.extras.datasets.tracking.JSONDataSet.versioned"]], "default_save_args (kedro.extras.datasets.tracking.metricsdataset attribute)": [[102, "kedro.extras.datasets.tracking.MetricsDataSet.DEFAULT_SAVE_ARGS"]], "metricsdataset (class in kedro.extras.datasets.tracking)": [[102, "kedro.extras.datasets.tracking.MetricsDataSet"]], "__init__() (kedro.extras.datasets.tracking.metricsdataset method)": [[102, "kedro.extras.datasets.tracking.MetricsDataSet.__init__"]], "exists() (kedro.extras.datasets.tracking.metricsdataset method)": [[102, "kedro.extras.datasets.tracking.MetricsDataSet.exists"]], "from_config() (kedro.extras.datasets.tracking.metricsdataset class method)": [[102, "kedro.extras.datasets.tracking.MetricsDataSet.from_config"]], "load() (kedro.extras.datasets.tracking.metricsdataset method)": [[102, "kedro.extras.datasets.tracking.MetricsDataSet.load"]], "release() (kedro.extras.datasets.tracking.metricsdataset method)": [[102, "kedro.extras.datasets.tracking.MetricsDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.tracking.metricsdataset method)": [[102, "kedro.extras.datasets.tracking.MetricsDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.tracking.metricsdataset method)": [[102, "kedro.extras.datasets.tracking.MetricsDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.tracking.metricsdataset method)": [[102, "kedro.extras.datasets.tracking.MetricsDataSet.save"]], "versioned (kedro.extras.datasets.tracking.metricsdataset attribute)": [[102, "kedro.extras.datasets.tracking.MetricsDataSet.versioned"]], "default_save_args (kedro.extras.datasets.yaml.yamldataset attribute)": [[103, "kedro.extras.datasets.yaml.YAMLDataSet.DEFAULT_SAVE_ARGS"]], "yamldataset (class in kedro.extras.datasets.yaml)": [[103, "kedro.extras.datasets.yaml.YAMLDataSet"]], "__init__() (kedro.extras.datasets.yaml.yamldataset method)": [[103, "kedro.extras.datasets.yaml.YAMLDataSet.__init__"]], "exists() (kedro.extras.datasets.yaml.yamldataset method)": [[103, "kedro.extras.datasets.yaml.YAMLDataSet.exists"]], "from_config() (kedro.extras.datasets.yaml.yamldataset class method)": [[103, "kedro.extras.datasets.yaml.YAMLDataSet.from_config"]], "load() (kedro.extras.datasets.yaml.yamldataset method)": [[103, "kedro.extras.datasets.yaml.YAMLDataSet.load"]], "release() (kedro.extras.datasets.yaml.yamldataset method)": [[103, "kedro.extras.datasets.yaml.YAMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.yaml.yamldataset method)": [[103, "kedro.extras.datasets.yaml.YAMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.yaml.yamldataset method)": [[103, "kedro.extras.datasets.yaml.YAMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.yaml.yamldataset method)": [[103, "kedro.extras.datasets.yaml.YAMLDataSet.save"]], "kedro.extras.extensions": [[104, "module-kedro.extras.extensions"]], "kedro.extras.extensions.ipython": [[105, "module-kedro.extras.extensions.ipython"]], "kedro.extras.logging": [[106, "module-kedro.extras.logging"]], "kedro.extras.logging.color_logger": [[107, "module-kedro.extras.logging.color_logger"]], "colorhandler (class in kedro.extras.logging.color_logger)": [[108, "kedro.extras.logging.color_logger.ColorHandler"]], "kedro.framework": [[109, "module-kedro.framework"]], "kedro.framework.cli": [[110, "module-kedro.framework.cli"]], "kedro.framework.cli.catalog": [[111, "module-kedro.framework.cli.catalog"]], "kedro.framework.cli.cli": [[112, "module-kedro.framework.cli.cli"]], "kedrocli (class in kedro.framework.cli.cli)": [[113, "kedro.framework.cli.cli.KedroCLI"]], "main() (in module kedro.framework.cli.cli)": [[114, "kedro.framework.cli.cli.main"]], "kedro.framework.cli.hooks": [[115, "module-kedro.framework.cli.hooks"]], "kedro.framework.cli.hooks.manager": [[116, "module-kedro.framework.cli.hooks.manager"]], "clihooksmanager (class in kedro.framework.cli.hooks.manager)": [[117, "kedro.framework.cli.hooks.manager.CLIHooksManager"]], "get_cli_hook_manager() (in module kedro.framework.cli.hooks.manager)": [[118, "kedro.framework.cli.hooks.manager.get_cli_hook_manager"]], "kedro.framework.cli.hooks.markers": [[119, "module-kedro.framework.cli.hooks.markers"]], "kedro.framework.cli.hooks.specs": [[120, "module-kedro.framework.cli.hooks.specs"]], "clicommandspecs (class in kedro.framework.cli.hooks.specs)": [[121, "kedro.framework.cli.hooks.specs.CLICommandSpecs"]], "after_command_run() (kedro.framework.cli.hooks.specs.clicommandspecs method)": [[121, "kedro.framework.cli.hooks.specs.CLICommandSpecs.after_command_run"]], "before_command_run() (kedro.framework.cli.hooks.specs.clicommandspecs method)": [[121, "kedro.framework.cli.hooks.specs.CLICommandSpecs.before_command_run"]], "kedro.framework.cli.jupyter": [[122, "module-kedro.framework.cli.jupyter"]], "jupytercommandgroup (class in kedro.framework.cli.jupyter)": [[123, "kedro.framework.cli.jupyter.JupyterCommandGroup"]], "list_commands() (kedro.framework.cli.jupyter.jupytercommandgroup method)": [[123, "kedro.framework.cli.jupyter.JupyterCommandGroup.list_commands"]], "kedro.framework.cli.micropkg": [[124, "module-kedro.framework.cli.micropkg"]], "safe_extract() (in module kedro.framework.cli.micropkg)": [[125, "kedro.framework.cli.micropkg.safe_extract"]], "kedro.framework.cli.pipeline": [[126, "module-kedro.framework.cli.pipeline"]], "pipelineartifacts (class in kedro.framework.cli.pipeline)": [[127, "kedro.framework.cli.pipeline.PipelineArtifacts"]], "count() (kedro.framework.cli.pipeline.pipelineartifacts method)": [[127, "kedro.framework.cli.pipeline.PipelineArtifacts.count"]], "index() (kedro.framework.cli.pipeline.pipelineartifacts method)": [[127, "kedro.framework.cli.pipeline.PipelineArtifacts.index"]], "pipeline_conf (kedro.framework.cli.pipeline.pipelineartifacts attribute)": [[127, "kedro.framework.cli.pipeline.PipelineArtifacts.pipeline_conf"]], "pipeline_dir (kedro.framework.cli.pipeline.pipelineartifacts attribute)": [[127, "kedro.framework.cli.pipeline.PipelineArtifacts.pipeline_dir"]], "pipeline_tests (kedro.framework.cli.pipeline.pipelineartifacts attribute)": [[127, "kedro.framework.cli.pipeline.PipelineArtifacts.pipeline_tests"]], "kedro.framework.cli.project": [[128, "module-kedro.framework.cli.project"]], "kedro.framework.cli.registry": [[129, "module-kedro.framework.cli.registry"]], "kedro.framework.cli.starters": [[130, "module-kedro.framework.cli.starters"]], "kedrostarterspec (class in kedro.framework.cli.starters)": [[131, "kedro.framework.cli.starters.KedroStarterSpec"]], "alias (kedro.framework.cli.starters.kedrostarterspec attribute)": [[131, "kedro.framework.cli.starters.KedroStarterSpec.alias"]], "directory (kedro.framework.cli.starters.kedrostarterspec attribute)": [[131, "kedro.framework.cli.starters.KedroStarterSpec.directory"]], "origin (kedro.framework.cli.starters.kedrostarterspec attribute)": [[131, "kedro.framework.cli.starters.KedroStarterSpec.origin"]], "template_path (kedro.framework.cli.starters.kedrostarterspec attribute)": [[131, "kedro.framework.cli.starters.KedroStarterSpec.template_path"]], "kedro.framework.cli.utils": [[132, "module-kedro.framework.cli.utils"]], "commandcollection (class in kedro.framework.cli.utils)": [[133, "kedro.framework.cli.utils.CommandCollection"]], "kedroclierror (class in kedro.framework.cli.utils)": [[134, "kedro.framework.cli.utils.KedroCliError"]], "verbose_error (kedro.framework.cli.utils.kedroclierror attribute)": [[134, "kedro.framework.cli.utils.KedroCliError.VERBOSE_ERROR"]], "args (kedro.framework.cli.utils.kedroclierror attribute)": [[134, "kedro.framework.cli.utils.KedroCliError.args"]], "exit_code (kedro.framework.cli.utils.kedroclierror attribute)": [[134, "kedro.framework.cli.utils.KedroCliError.exit_code"]], "format_message() (kedro.framework.cli.utils.kedroclierror method)": [[134, "kedro.framework.cli.utils.KedroCliError.format_message"]], "show() (kedro.framework.cli.utils.kedroclierror method)": [[134, "kedro.framework.cli.utils.KedroCliError.show"]], "with_traceback() (kedro.framework.cli.utils.kedroclierror method)": [[134, "kedro.framework.cli.utils.KedroCliError.with_traceback"]], "command_with_verbosity() (in module kedro.framework.cli.utils)": [[135, "kedro.framework.cli.utils.command_with_verbosity"]], "env_option() (in module kedro.framework.cli.utils)": [[136, "kedro.framework.cli.utils.env_option"]], "find_stylesheets() (in module kedro.framework.cli.utils)": [[137, "kedro.framework.cli.utils.find_stylesheets"]], "forward_command() (in module kedro.framework.cli.utils)": [[138, "kedro.framework.cli.utils.forward_command"]], "get_pkg_version() (in module kedro.framework.cli.utils)": [[139, "kedro.framework.cli.utils.get_pkg_version"]], "python_call() (in module kedro.framework.cli.utils)": [[140, "kedro.framework.cli.utils.python_call"]], "split_string() (in module kedro.framework.cli.utils)": [[141, "kedro.framework.cli.utils.split_string"]], "kedro.framework.context": [[142, "module-kedro.framework.context"]], "kedrocontext (class in kedro.framework.context)": [[143, "kedro.framework.context.KedroContext"]], "__init__() (kedro.framework.context.kedrocontext method)": [[143, "kedro.framework.context.KedroContext.__init__"]], "catalog (kedro.framework.context.kedrocontext property)": [[143, "kedro.framework.context.KedroContext.catalog"]], "config_loader (kedro.framework.context.kedrocontext property)": [[143, "kedro.framework.context.KedroContext.config_loader"]], "env (kedro.framework.context.kedrocontext property)": [[143, "kedro.framework.context.KedroContext.env"]], "params (kedro.framework.context.kedrocontext property)": [[143, "kedro.framework.context.KedroContext.params"]], "project_path (kedro.framework.context.kedrocontext property)": [[143, "kedro.framework.context.KedroContext.project_path"]], "kedrocontexterror (class in kedro.framework.context)": [[144, "kedro.framework.context.KedroContextError"]], "args (kedro.framework.context.kedrocontexterror attribute)": [[144, "kedro.framework.context.KedroContextError.args"]], "with_traceback() (kedro.framework.context.kedrocontexterror method)": [[144, "kedro.framework.context.KedroContextError.with_traceback"]], "kedro.framework.hooks": [[145, "module-kedro.framework.hooks"]], "kedro.framework.hooks.manager": [[146, "module-kedro.framework.hooks.manager"]], "kedro.framework.hooks.markers": [[147, "module-kedro.framework.hooks.markers"]], "kedro.framework.hooks.specs": [[148, "module-kedro.framework.hooks.specs"]], "datacatalogspecs (class in kedro.framework.hooks.specs)": [[149, "kedro.framework.hooks.specs.DataCatalogSpecs"]], "after_catalog_created() (kedro.framework.hooks.specs.datacatalogspecs method)": [[149, "kedro.framework.hooks.specs.DataCatalogSpecs.after_catalog_created"]], "datasetspecs (class in kedro.framework.hooks.specs)": [[150, "kedro.framework.hooks.specs.DatasetSpecs"]], "after_dataset_loaded() (kedro.framework.hooks.specs.datasetspecs method)": [[150, "kedro.framework.hooks.specs.DatasetSpecs.after_dataset_loaded"]], "after_dataset_saved() (kedro.framework.hooks.specs.datasetspecs method)": [[150, "kedro.framework.hooks.specs.DatasetSpecs.after_dataset_saved"]], "before_dataset_loaded() (kedro.framework.hooks.specs.datasetspecs method)": [[150, "kedro.framework.hooks.specs.DatasetSpecs.before_dataset_loaded"]], "before_dataset_saved() (kedro.framework.hooks.specs.datasetspecs method)": [[150, "kedro.framework.hooks.specs.DatasetSpecs.before_dataset_saved"]], "kedrocontextspecs (class in kedro.framework.hooks.specs)": [[151, "kedro.framework.hooks.specs.KedroContextSpecs"]], "after_context_created() (kedro.framework.hooks.specs.kedrocontextspecs method)": [[151, "kedro.framework.hooks.specs.KedroContextSpecs.after_context_created"]], "nodespecs (class in kedro.framework.hooks.specs)": [[152, "kedro.framework.hooks.specs.NodeSpecs"]], "after_node_run() (kedro.framework.hooks.specs.nodespecs method)": [[152, "kedro.framework.hooks.specs.NodeSpecs.after_node_run"]], "before_node_run() (kedro.framework.hooks.specs.nodespecs method)": [[152, "kedro.framework.hooks.specs.NodeSpecs.before_node_run"]], "on_node_error() (kedro.framework.hooks.specs.nodespecs method)": [[152, "kedro.framework.hooks.specs.NodeSpecs.on_node_error"]], "pipelinespecs (class in kedro.framework.hooks.specs)": [[153, "kedro.framework.hooks.specs.PipelineSpecs"]], "after_pipeline_run() (kedro.framework.hooks.specs.pipelinespecs method)": [[153, "kedro.framework.hooks.specs.PipelineSpecs.after_pipeline_run"]], "before_pipeline_run() (kedro.framework.hooks.specs.pipelinespecs method)": [[153, "kedro.framework.hooks.specs.PipelineSpecs.before_pipeline_run"]], "on_pipeline_error() (kedro.framework.hooks.specs.pipelinespecs method)": [[153, "kedro.framework.hooks.specs.PipelineSpecs.on_pipeline_error"]], "kedro.framework.project": [[154, "module-kedro.framework.project"]], "configure_logging() (in module kedro.framework.project)": [[155, "kedro.framework.project.configure_logging"]], "configure_project() (in module kedro.framework.project)": [[156, "kedro.framework.project.configure_project"]], "find_pipelines() (in module kedro.framework.project)": [[157, "kedro.framework.project.find_pipelines"]], "validate_settings() (in module kedro.framework.project)": [[158, "kedro.framework.project.validate_settings"]], "kedro.framework.session": [[159, "module-kedro.framework.session"]], "kedro.framework.session.session": [[160, "module-kedro.framework.session.session"]], "kedrosession (class in kedro.framework.session.session)": [[161, "kedro.framework.session.session.KedroSession"]], "close() (kedro.framework.session.session.kedrosession method)": [[161, "kedro.framework.session.session.KedroSession.close"]], "create() (kedro.framework.session.session.kedrosession class method)": [[161, "kedro.framework.session.session.KedroSession.create"]], "load_context() (kedro.framework.session.session.kedrosession method)": [[161, "kedro.framework.session.session.KedroSession.load_context"]], "run() (kedro.framework.session.session.kedrosession method)": [[161, "kedro.framework.session.session.KedroSession.run"]], "store (kedro.framework.session.session.kedrosession property)": [[161, "kedro.framework.session.session.KedroSession.store"]], "kedrosessionerror (class in kedro.framework.session.session)": [[162, "kedro.framework.session.session.KedroSessionError"]], "args (kedro.framework.session.session.kedrosessionerror attribute)": [[162, "kedro.framework.session.session.KedroSessionError.args"]], "with_traceback() (kedro.framework.session.session.kedrosessionerror method)": [[162, "kedro.framework.session.session.KedroSessionError.with_traceback"]], "kedro.framework.session.shelvestore": [[163, "module-kedro.framework.session.shelvestore"]], "shelvestore (class in kedro.framework.session.shelvestore)": [[164, "kedro.framework.session.shelvestore.ShelveStore"]], "kedro.framework.session.store": [[165, "module-kedro.framework.session.store"]], "basesessionstore (class in kedro.framework.session.store)": [[166, "kedro.framework.session.store.BaseSessionStore"]], "kedro.framework.startup": [[167, "module-kedro.framework.startup"]], "projectmetadata (class in kedro.framework.startup)": [[168, "kedro.framework.startup.ProjectMetadata"]], "config_file (kedro.framework.startup.projectmetadata attribute)": [[168, "kedro.framework.startup.ProjectMetadata.config_file"]], "count() (kedro.framework.startup.projectmetadata method)": [[168, "kedro.framework.startup.ProjectMetadata.count"]], "index() (kedro.framework.startup.projectmetadata method)": [[168, "kedro.framework.startup.ProjectMetadata.index"]], "kedro_init_version (kedro.framework.startup.projectmetadata attribute)": [[168, "kedro.framework.startup.ProjectMetadata.kedro_init_version"]], "package_name (kedro.framework.startup.projectmetadata attribute)": [[168, "kedro.framework.startup.ProjectMetadata.package_name"]], "project_name (kedro.framework.startup.projectmetadata attribute)": [[168, "kedro.framework.startup.ProjectMetadata.project_name"]], "project_path (kedro.framework.startup.projectmetadata attribute)": [[168, "kedro.framework.startup.ProjectMetadata.project_path"]], "project_version (kedro.framework.startup.projectmetadata attribute)": [[168, "kedro.framework.startup.ProjectMetadata.project_version"]], "source_dir (kedro.framework.startup.projectmetadata attribute)": [[168, "kedro.framework.startup.ProjectMetadata.source_dir"]], "bootstrap_project() (in module kedro.framework.startup)": [[169, "kedro.framework.startup.bootstrap_project"]], "kedro.io": [[170, "module-kedro.io"]], "abstractdataset (in module kedro.io)": [[171, "kedro.io.AbstractDataSet"]], "abstractversioneddataset (in module kedro.io)": [[172, "kedro.io.AbstractVersionedDataSet"]], "cacheddataset (in module kedro.io)": [[173, "kedro.io.CachedDataSet"]], "datacatalog (class in kedro.io)": [[174, "kedro.io.DataCatalog"]], "__init__() (kedro.io.datacatalog method)": [[174, "kedro.io.DataCatalog.__init__"]], "add() (kedro.io.datacatalog method)": [[174, "kedro.io.DataCatalog.add"]], "add_all() (kedro.io.datacatalog method)": [[174, "kedro.io.DataCatalog.add_all"]], "add_feed_dict() (kedro.io.datacatalog method)": [[174, "kedro.io.DataCatalog.add_feed_dict"]], "confirm() (kedro.io.datacatalog method)": [[174, "kedro.io.DataCatalog.confirm"]], "exists() (kedro.io.datacatalog method)": [[174, "kedro.io.DataCatalog.exists"]], "from_config() (kedro.io.datacatalog class method)": [[174, "kedro.io.DataCatalog.from_config"]], "list() (kedro.io.datacatalog method)": [[174, "kedro.io.DataCatalog.list"]], "load() (kedro.io.datacatalog method)": [[174, "kedro.io.DataCatalog.load"]], "release() (kedro.io.datacatalog method)": [[174, "kedro.io.DataCatalog.release"]], "save() (kedro.io.datacatalog method)": [[174, "kedro.io.DataCatalog.save"]], "shallow_copy() (kedro.io.datacatalog method)": [[174, "kedro.io.DataCatalog.shallow_copy"]], "datasetalreadyexistserror (in module kedro.io)": [[175, "kedro.io.DataSetAlreadyExistsError"]], "dataseterror (in module kedro.io)": [[176, "kedro.io.DataSetError"]], "datasetnotfounderror (in module kedro.io)": [[177, "kedro.io.DataSetNotFoundError"]], "incrementaldataset (in module kedro.io)": [[178, "kedro.io.IncrementalDataSet"]], "lambdadataset (in module kedro.io)": [[179, "kedro.io.LambdaDataSet"]], "memorydataset (in module kedro.io)": [[180, "kedro.io.MemoryDataSet"]], "partitioneddataset (in module kedro.io)": [[181, "kedro.io.PartitionedDataSet"]], "version (class in kedro.io)": [[182, "kedro.io.Version"]], "count() (kedro.io.version method)": [[182, "kedro.io.Version.count"]], "index() (kedro.io.version method)": [[182, "kedro.io.Version.index"]], "load (kedro.io.version attribute)": [[182, "kedro.io.Version.load"]], "save (kedro.io.version attribute)": [[182, "kedro.io.Version.save"]], "kedro.ipython": [[183, "module-kedro.ipython"]], "load_ipython_extension() (in module kedro.ipython)": [[184, "kedro.ipython.load_ipython_extension"]], "magic_reload_kedro() (in module kedro.ipython)": [[185, "kedro.ipython.magic_reload_kedro"]], "reload_kedro() (in module kedro.ipython)": [[186, "kedro.ipython.reload_kedro"]], "kedro.logging": [[187, "module-kedro.logging"]], "richhandler (class in kedro.logging)": [[188, "kedro.logging.RichHandler"]], "kedro.pipeline": [[189, "module-kedro.pipeline"]], "pipeline (class in kedro.pipeline)": [[190, "kedro.pipeline.Pipeline"]], "__init__() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.__init__"]], "all_inputs() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.all_inputs"]], "all_outputs() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.all_outputs"]], "data_sets() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.data_sets"]], "describe() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.describe"]], "filter() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.filter"]], "from_inputs() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.from_inputs"]], "from_nodes() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.from_nodes"]], "grouped_nodes (kedro.pipeline.pipeline property)": [[190, "kedro.pipeline.Pipeline.grouped_nodes"]], "inputs() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.inputs"]], "node_dependencies (kedro.pipeline.pipeline property)": [[190, "kedro.pipeline.Pipeline.node_dependencies"]], "nodes (kedro.pipeline.pipeline property)": [[190, "kedro.pipeline.Pipeline.nodes"]], "only_nodes() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.only_nodes"]], "only_nodes_with_inputs() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.only_nodes_with_inputs"]], "only_nodes_with_namespace() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.only_nodes_with_namespace"]], "only_nodes_with_outputs() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.only_nodes_with_outputs"]], "only_nodes_with_tags() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.only_nodes_with_tags"]], "outputs() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.outputs"]], "tag() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.tag"]], "to_json() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.to_json"]], "to_nodes() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.to_nodes"]], "to_outputs() (kedro.pipeline.pipeline method)": [[190, "kedro.pipeline.Pipeline.to_outputs"]], "modularpipelineerror (class in kedro.pipeline.modular_pipeline)": [[191, "kedro.pipeline.modular_pipeline.ModularPipelineError"]], "args (kedro.pipeline.modular_pipeline.modularpipelineerror attribute)": [[191, "kedro.pipeline.modular_pipeline.ModularPipelineError.args"]], "with_traceback() (kedro.pipeline.modular_pipeline.modularpipelineerror method)": [[191, "kedro.pipeline.modular_pipeline.ModularPipelineError.with_traceback"]], "pipeline() (in module kedro.pipeline.modular_pipeline)": [[192, "kedro.pipeline.modular_pipeline.pipeline"]], "node() (in module kedro.pipeline)": [[193, "kedro.pipeline.node"]], "node (class in kedro.pipeline.node)": [[194, "kedro.pipeline.node.Node"]], "__init__() (kedro.pipeline.node.node method)": [[194, "kedro.pipeline.node.Node.__init__"]], "confirms (kedro.pipeline.node.node property)": [[194, "kedro.pipeline.node.Node.confirms"]], "func (kedro.pipeline.node.node property)": [[194, "kedro.pipeline.node.Node.func"]], "inputs (kedro.pipeline.node.node property)": [[194, "kedro.pipeline.node.Node.inputs"]], "name (kedro.pipeline.node.node property)": [[194, "kedro.pipeline.node.Node.name"]], "namespace (kedro.pipeline.node.node property)": [[194, "kedro.pipeline.node.Node.namespace"]], "outputs (kedro.pipeline.node.node property)": [[194, "kedro.pipeline.node.Node.outputs"]], "run() (kedro.pipeline.node.node method)": [[194, "kedro.pipeline.node.Node.run"]], "short_name (kedro.pipeline.node.node property)": [[194, "kedro.pipeline.node.Node.short_name"]], "tag() (kedro.pipeline.node.node method)": [[194, "kedro.pipeline.node.Node.tag"]], "tags (kedro.pipeline.node.node property)": [[194, "kedro.pipeline.node.Node.tags"]], "kedro.runner": [[195, "module-kedro.runner"]], "abstractrunner (class in kedro.runner)": [[196, "kedro.runner.AbstractRunner"]], "__init__() (kedro.runner.abstractrunner method)": [[196, "kedro.runner.AbstractRunner.__init__"]], "create_default_data_set() (kedro.runner.abstractrunner method)": [[196, "kedro.runner.AbstractRunner.create_default_data_set"]], "run() (kedro.runner.abstractrunner method)": [[196, "kedro.runner.AbstractRunner.run"]], "run_only_missing() (kedro.runner.abstractrunner method)": [[196, "kedro.runner.AbstractRunner.run_only_missing"]], "parallelrunner (class in kedro.runner)": [[197, "kedro.runner.ParallelRunner"]], "__init__() (kedro.runner.parallelrunner method)": [[197, "kedro.runner.ParallelRunner.__init__"]], "create_default_data_set() (kedro.runner.parallelrunner method)": [[197, "kedro.runner.ParallelRunner.create_default_data_set"]], "run() (kedro.runner.parallelrunner method)": [[197, "kedro.runner.ParallelRunner.run"]], "run_only_missing() (kedro.runner.parallelrunner method)": [[197, "kedro.runner.ParallelRunner.run_only_missing"]], "sequentialrunner (class in kedro.runner)": [[198, "kedro.runner.SequentialRunner"]], "__init__() (kedro.runner.sequentialrunner method)": [[198, "kedro.runner.SequentialRunner.__init__"]], "create_default_data_set() (kedro.runner.sequentialrunner method)": [[198, "kedro.runner.SequentialRunner.create_default_data_set"]], "run() (kedro.runner.sequentialrunner method)": [[198, "kedro.runner.SequentialRunner.run"]], "run_only_missing() (kedro.runner.sequentialrunner method)": [[198, "kedro.runner.SequentialRunner.run_only_missing"]], "threadrunner (class in kedro.runner)": [[199, "kedro.runner.ThreadRunner"]], "__init__() (kedro.runner.threadrunner method)": [[199, "kedro.runner.ThreadRunner.__init__"]], "create_default_data_set() (kedro.runner.threadrunner method)": [[199, "kedro.runner.ThreadRunner.create_default_data_set"]], "run() (kedro.runner.threadrunner method)": [[199, "kedro.runner.ThreadRunner.run"]], "run_only_missing() (kedro.runner.threadrunner method)": [[199, "kedro.runner.ThreadRunner.run_only_missing"]], "run_node() (in module kedro.runner)": [[200, "kedro.runner.run_node"]], "kedro.utils": [[201, "module-kedro.utils"]], "load_obj() (in module kedro.utils)": [[202, "kedro.utils.load_obj"]], "kedro_datasets": [[203, "module-kedro_datasets"]], "apidataset (class in kedro_datasets.api)": [[204, "kedro_datasets.api.APIDataSet"]], "default_save_args (kedro_datasets.api.apidataset attribute)": [[204, "kedro_datasets.api.APIDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.api.apidataset method)": [[204, "kedro_datasets.api.APIDataSet.__init__"]], "exists() (kedro_datasets.api.apidataset method)": [[204, "kedro_datasets.api.APIDataSet.exists"]], "from_config() (kedro_datasets.api.apidataset class method)": [[204, "kedro_datasets.api.APIDataSet.from_config"]], "load() (kedro_datasets.api.apidataset method)": [[204, "kedro_datasets.api.APIDataSet.load"]], "release() (kedro_datasets.api.apidataset method)": [[204, "kedro_datasets.api.APIDataSet.release"]], "save() (kedro_datasets.api.apidataset method)": [[204, "kedro_datasets.api.APIDataSet.save"]], "biosequencedataset (class in kedro_datasets.biosequence)": [[205, "kedro_datasets.biosequence.BioSequenceDataSet"]], "default_load_args (kedro_datasets.biosequence.biosequencedataset attribute)": [[205, "kedro_datasets.biosequence.BioSequenceDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.biosequence.biosequencedataset attribute)": [[205, "kedro_datasets.biosequence.BioSequenceDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.biosequence.biosequencedataset method)": [[205, "kedro_datasets.biosequence.BioSequenceDataSet.__init__"]], "exists() (kedro_datasets.biosequence.biosequencedataset method)": [[205, "kedro_datasets.biosequence.BioSequenceDataSet.exists"]], "from_config() (kedro_datasets.biosequence.biosequencedataset class method)": [[205, "kedro_datasets.biosequence.BioSequenceDataSet.from_config"]], "invalidate_cache() (kedro_datasets.biosequence.biosequencedataset method)": [[205, "kedro_datasets.biosequence.BioSequenceDataSet.invalidate_cache"]], "load() (kedro_datasets.biosequence.biosequencedataset method)": [[205, "kedro_datasets.biosequence.BioSequenceDataSet.load"]], "release() (kedro_datasets.biosequence.biosequencedataset method)": [[205, "kedro_datasets.biosequence.BioSequenceDataSet.release"]], "save() (kedro_datasets.biosequence.biosequencedataset method)": [[205, "kedro_datasets.biosequence.BioSequenceDataSet.save"]], "default_load_args (kedro_datasets.dask.parquetdataset attribute)": [[206, "kedro_datasets.dask.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.dask.parquetdataset attribute)": [[206, "kedro_datasets.dask.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro_datasets.dask)": [[206, "kedro_datasets.dask.ParquetDataSet"]], "__init__() (kedro_datasets.dask.parquetdataset method)": [[206, "kedro_datasets.dask.ParquetDataSet.__init__"]], "exists() (kedro_datasets.dask.parquetdataset method)": [[206, "kedro_datasets.dask.ParquetDataSet.exists"]], "from_config() (kedro_datasets.dask.parquetdataset class method)": [[206, "kedro_datasets.dask.ParquetDataSet.from_config"]], "fs_args (kedro_datasets.dask.parquetdataset property)": [[206, "kedro_datasets.dask.ParquetDataSet.fs_args"]], "load() (kedro_datasets.dask.parquetdataset method)": [[206, "kedro_datasets.dask.ParquetDataSet.load"]], "release() (kedro_datasets.dask.parquetdataset method)": [[206, "kedro_datasets.dask.ParquetDataSet.release"]], "save() (kedro_datasets.dask.parquetdataset method)": [[206, "kedro_datasets.dask.ParquetDataSet.save"]], "managedtabledataset (class in kedro_datasets.databricks)": [[207, "kedro_datasets.databricks.ManagedTableDataSet"]], "__init__() (kedro_datasets.databricks.managedtabledataset method)": [[207, "kedro_datasets.databricks.ManagedTableDataSet.__init__"]], "exists() (kedro_datasets.databricks.managedtabledataset method)": [[207, "kedro_datasets.databricks.ManagedTableDataSet.exists"]], "from_config() (kedro_datasets.databricks.managedtabledataset class method)": [[207, "kedro_datasets.databricks.ManagedTableDataSet.from_config"]], "load() (kedro_datasets.databricks.managedtabledataset method)": [[207, "kedro_datasets.databricks.ManagedTableDataSet.load"]], "release() (kedro_datasets.databricks.managedtabledataset method)": [[207, "kedro_datasets.databricks.ManagedTableDataSet.release"]], "resolve_load_version() (kedro_datasets.databricks.managedtabledataset method)": [[207, "kedro_datasets.databricks.ManagedTableDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.databricks.managedtabledataset method)": [[207, "kedro_datasets.databricks.ManagedTableDataSet.resolve_save_version"]], "save() (kedro_datasets.databricks.managedtabledataset method)": [[207, "kedro_datasets.databricks.ManagedTableDataSet.save"]], "default_load_args (kedro_datasets.email.emailmessagedataset attribute)": [[208, "kedro_datasets.email.EmailMessageDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.email.emailmessagedataset attribute)": [[208, "kedro_datasets.email.EmailMessageDataSet.DEFAULT_SAVE_ARGS"]], "emailmessagedataset (class in kedro_datasets.email)": [[208, "kedro_datasets.email.EmailMessageDataSet"]], "__init__() (kedro_datasets.email.emailmessagedataset method)": [[208, "kedro_datasets.email.EmailMessageDataSet.__init__"]], "exists() (kedro_datasets.email.emailmessagedataset method)": [[208, "kedro_datasets.email.EmailMessageDataSet.exists"]], "from_config() (kedro_datasets.email.emailmessagedataset class method)": [[208, "kedro_datasets.email.EmailMessageDataSet.from_config"]], "load() (kedro_datasets.email.emailmessagedataset method)": [[208, "kedro_datasets.email.EmailMessageDataSet.load"]], "release() (kedro_datasets.email.emailmessagedataset method)": [[208, "kedro_datasets.email.EmailMessageDataSet.release"]], "resolve_load_version() (kedro_datasets.email.emailmessagedataset method)": [[208, "kedro_datasets.email.EmailMessageDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.email.emailmessagedataset method)": [[208, "kedro_datasets.email.EmailMessageDataSet.resolve_save_version"]], "save() (kedro_datasets.email.emailmessagedataset method)": [[208, "kedro_datasets.email.EmailMessageDataSet.save"]], "default_load_args (kedro_datasets.geopandas.geojsondataset attribute)": [[209, "kedro_datasets.geopandas.GeoJSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.geopandas.geojsondataset attribute)": [[209, "kedro_datasets.geopandas.GeoJSONDataSet.DEFAULT_SAVE_ARGS"]], "geojsondataset (class in kedro_datasets.geopandas)": [[209, "kedro_datasets.geopandas.GeoJSONDataSet"]], "__init__() (kedro_datasets.geopandas.geojsondataset method)": [[209, "kedro_datasets.geopandas.GeoJSONDataSet.__init__"]], "exists() (kedro_datasets.geopandas.geojsondataset method)": [[209, "kedro_datasets.geopandas.GeoJSONDataSet.exists"]], "from_config() (kedro_datasets.geopandas.geojsondataset class method)": [[209, "kedro_datasets.geopandas.GeoJSONDataSet.from_config"]], "invalidate_cache() (kedro_datasets.geopandas.geojsondataset method)": [[209, "kedro_datasets.geopandas.GeoJSONDataSet.invalidate_cache"]], "load() (kedro_datasets.geopandas.geojsondataset method)": [[209, "kedro_datasets.geopandas.GeoJSONDataSet.load"]], "release() (kedro_datasets.geopandas.geojsondataset method)": [[209, "kedro_datasets.geopandas.GeoJSONDataSet.release"]], "resolve_load_version() (kedro_datasets.geopandas.geojsondataset method)": [[209, "kedro_datasets.geopandas.GeoJSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.geopandas.geojsondataset method)": [[209, "kedro_datasets.geopandas.GeoJSONDataSet.resolve_save_version"]], "save() (kedro_datasets.geopandas.geojsondataset method)": [[209, "kedro_datasets.geopandas.GeoJSONDataSet.save"]], "default_save_args (kedro_datasets.holoviews.holoviewswriter attribute)": [[210, "kedro_datasets.holoviews.HoloviewsWriter.DEFAULT_SAVE_ARGS"]], "holoviewswriter (class in kedro_datasets.holoviews)": [[210, "kedro_datasets.holoviews.HoloviewsWriter"]], "__init__() (kedro_datasets.holoviews.holoviewswriter method)": [[210, "kedro_datasets.holoviews.HoloviewsWriter.__init__"]], "exists() (kedro_datasets.holoviews.holoviewswriter method)": [[210, "kedro_datasets.holoviews.HoloviewsWriter.exists"]], "from_config() (kedro_datasets.holoviews.holoviewswriter class method)": [[210, "kedro_datasets.holoviews.HoloviewsWriter.from_config"]], "load() (kedro_datasets.holoviews.holoviewswriter method)": [[210, "kedro_datasets.holoviews.HoloviewsWriter.load"]], "release() (kedro_datasets.holoviews.holoviewswriter method)": [[210, "kedro_datasets.holoviews.HoloviewsWriter.release"]], "resolve_load_version() (kedro_datasets.holoviews.holoviewswriter method)": [[210, "kedro_datasets.holoviews.HoloviewsWriter.resolve_load_version"]], "resolve_save_version() (kedro_datasets.holoviews.holoviewswriter method)": [[210, "kedro_datasets.holoviews.HoloviewsWriter.resolve_save_version"]], "save() (kedro_datasets.holoviews.holoviewswriter method)": [[210, "kedro_datasets.holoviews.HoloviewsWriter.save"]], "default_save_args (kedro_datasets.json.jsondataset attribute)": [[211, "kedro_datasets.json.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.json)": [[211, "kedro_datasets.json.JSONDataSet"]], "__init__() (kedro_datasets.json.jsondataset method)": [[211, "kedro_datasets.json.JSONDataSet.__init__"]], "exists() (kedro_datasets.json.jsondataset method)": [[211, "kedro_datasets.json.JSONDataSet.exists"]], "from_config() (kedro_datasets.json.jsondataset class method)": [[211, "kedro_datasets.json.JSONDataSet.from_config"]], "load() (kedro_datasets.json.jsondataset method)": [[211, "kedro_datasets.json.JSONDataSet.load"]], "release() (kedro_datasets.json.jsondataset method)": [[211, "kedro_datasets.json.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.json.jsondataset method)": [[211, "kedro_datasets.json.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.json.jsondataset method)": [[211, "kedro_datasets.json.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.json.jsondataset method)": [[211, "kedro_datasets.json.JSONDataSet.save"]], "default_save_args (kedro_datasets.matplotlib.matplotlibwriter attribute)": [[212, "kedro_datasets.matplotlib.MatplotlibWriter.DEFAULT_SAVE_ARGS"]], "matplotlibwriter (class in kedro_datasets.matplotlib)": [[212, "kedro_datasets.matplotlib.MatplotlibWriter"]], "__init__() (kedro_datasets.matplotlib.matplotlibwriter method)": [[212, "kedro_datasets.matplotlib.MatplotlibWriter.__init__"]], "exists() (kedro_datasets.matplotlib.matplotlibwriter method)": [[212, "kedro_datasets.matplotlib.MatplotlibWriter.exists"]], "from_config() (kedro_datasets.matplotlib.matplotlibwriter class method)": [[212, "kedro_datasets.matplotlib.MatplotlibWriter.from_config"]], "load() (kedro_datasets.matplotlib.matplotlibwriter method)": [[212, "kedro_datasets.matplotlib.MatplotlibWriter.load"]], "release() (kedro_datasets.matplotlib.matplotlibwriter method)": [[212, "kedro_datasets.matplotlib.MatplotlibWriter.release"]], "resolve_load_version() (kedro_datasets.matplotlib.matplotlibwriter method)": [[212, "kedro_datasets.matplotlib.MatplotlibWriter.resolve_load_version"]], "resolve_save_version() (kedro_datasets.matplotlib.matplotlibwriter method)": [[212, "kedro_datasets.matplotlib.MatplotlibWriter.resolve_save_version"]], "save() (kedro_datasets.matplotlib.matplotlibwriter method)": [[212, "kedro_datasets.matplotlib.MatplotlibWriter.save"]], "default_load_args (kedro_datasets.networkx.gmldataset attribute)": [[213, "kedro_datasets.networkx.GMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.networkx.gmldataset attribute)": [[213, "kedro_datasets.networkx.GMLDataSet.DEFAULT_SAVE_ARGS"]], "gmldataset (class in kedro_datasets.networkx)": [[213, "kedro_datasets.networkx.GMLDataSet"]], "__init__() (kedro_datasets.networkx.gmldataset method)": [[213, "kedro_datasets.networkx.GMLDataSet.__init__"]], "exists() (kedro_datasets.networkx.gmldataset method)": [[213, "kedro_datasets.networkx.GMLDataSet.exists"]], "from_config() (kedro_datasets.networkx.gmldataset class method)": [[213, "kedro_datasets.networkx.GMLDataSet.from_config"]], "load() (kedro_datasets.networkx.gmldataset method)": [[213, "kedro_datasets.networkx.GMLDataSet.load"]], "release() (kedro_datasets.networkx.gmldataset method)": [[213, "kedro_datasets.networkx.GMLDataSet.release"]], "resolve_load_version() (kedro_datasets.networkx.gmldataset method)": [[213, "kedro_datasets.networkx.GMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.networkx.gmldataset method)": [[213, "kedro_datasets.networkx.GMLDataSet.resolve_save_version"]], "save() (kedro_datasets.networkx.gmldataset method)": [[213, "kedro_datasets.networkx.GMLDataSet.save"]], "default_load_args (kedro_datasets.networkx.graphmldataset attribute)": [[214, "kedro_datasets.networkx.GraphMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.networkx.graphmldataset attribute)": [[214, "kedro_datasets.networkx.GraphMLDataSet.DEFAULT_SAVE_ARGS"]], "graphmldataset (class in kedro_datasets.networkx)": [[214, "kedro_datasets.networkx.GraphMLDataSet"]], "__init__() (kedro_datasets.networkx.graphmldataset method)": [[214, "kedro_datasets.networkx.GraphMLDataSet.__init__"]], "exists() (kedro_datasets.networkx.graphmldataset method)": [[214, "kedro_datasets.networkx.GraphMLDataSet.exists"]], "from_config() (kedro_datasets.networkx.graphmldataset class method)": [[214, "kedro_datasets.networkx.GraphMLDataSet.from_config"]], "load() (kedro_datasets.networkx.graphmldataset method)": [[214, "kedro_datasets.networkx.GraphMLDataSet.load"]], "release() (kedro_datasets.networkx.graphmldataset method)": [[214, "kedro_datasets.networkx.GraphMLDataSet.release"]], "resolve_load_version() (kedro_datasets.networkx.graphmldataset method)": [[214, "kedro_datasets.networkx.GraphMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.networkx.graphmldataset method)": [[214, "kedro_datasets.networkx.GraphMLDataSet.resolve_save_version"]], "save() (kedro_datasets.networkx.graphmldataset method)": [[214, "kedro_datasets.networkx.GraphMLDataSet.save"]], "default_load_args (kedro_datasets.networkx.jsondataset attribute)": [[215, "kedro_datasets.networkx.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.networkx.jsondataset attribute)": [[215, "kedro_datasets.networkx.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.networkx)": [[215, "kedro_datasets.networkx.JSONDataSet"]], "__init__() (kedro_datasets.networkx.jsondataset method)": [[215, "kedro_datasets.networkx.JSONDataSet.__init__"]], "exists() (kedro_datasets.networkx.jsondataset method)": [[215, "kedro_datasets.networkx.JSONDataSet.exists"]], "from_config() (kedro_datasets.networkx.jsondataset class method)": [[215, "kedro_datasets.networkx.JSONDataSet.from_config"]], "load() (kedro_datasets.networkx.jsondataset method)": [[215, "kedro_datasets.networkx.JSONDataSet.load"]], "release() (kedro_datasets.networkx.jsondataset method)": [[215, "kedro_datasets.networkx.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.networkx.jsondataset method)": [[215, "kedro_datasets.networkx.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.networkx.jsondataset method)": [[215, "kedro_datasets.networkx.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.networkx.jsondataset method)": [[215, "kedro_datasets.networkx.JSONDataSet.save"]], "csvdataset (class in kedro_datasets.pandas)": [[216, "kedro_datasets.pandas.CSVDataSet"]], "default_load_args (kedro_datasets.pandas.csvdataset attribute)": [[216, "kedro_datasets.pandas.CSVDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.csvdataset attribute)": [[216, "kedro_datasets.pandas.CSVDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.pandas.csvdataset method)": [[216, "kedro_datasets.pandas.CSVDataSet.__init__"]], "exists() (kedro_datasets.pandas.csvdataset method)": [[216, "kedro_datasets.pandas.CSVDataSet.exists"]], "from_config() (kedro_datasets.pandas.csvdataset class method)": [[216, "kedro_datasets.pandas.CSVDataSet.from_config"]], "load() (kedro_datasets.pandas.csvdataset method)": [[216, "kedro_datasets.pandas.CSVDataSet.load"]], "release() (kedro_datasets.pandas.csvdataset method)": [[216, "kedro_datasets.pandas.CSVDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.csvdataset method)": [[216, "kedro_datasets.pandas.CSVDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.csvdataset method)": [[216, "kedro_datasets.pandas.CSVDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.csvdataset method)": [[216, "kedro_datasets.pandas.CSVDataSet.save"]], "accepted_write_modes (kedro_datasets.pandas.deltatabledataset attribute)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.ACCEPTED_WRITE_MODES"]], "default_load_args (kedro_datasets.pandas.deltatabledataset attribute)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.deltatabledataset attribute)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.DEFAULT_SAVE_ARGS"]], "default_write_mode (kedro_datasets.pandas.deltatabledataset attribute)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.DEFAULT_WRITE_MODE"]], "deltatabledataset (class in kedro_datasets.pandas)": [[217, "kedro_datasets.pandas.DeltaTableDataSet"]], "__init__() (kedro_datasets.pandas.deltatabledataset method)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.__init__"]], "exists() (kedro_datasets.pandas.deltatabledataset method)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.exists"]], "from_config() (kedro_datasets.pandas.deltatabledataset class method)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.from_config"]], "fs_args (kedro_datasets.pandas.deltatabledataset property)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.fs_args"]], "get_loaded_version() (kedro_datasets.pandas.deltatabledataset method)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.get_loaded_version"]], "history (kedro_datasets.pandas.deltatabledataset property)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.history"]], "load() (kedro_datasets.pandas.deltatabledataset method)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.load"]], "metadata (kedro_datasets.pandas.deltatabledataset property)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.metadata"]], "release() (kedro_datasets.pandas.deltatabledataset method)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.release"]], "save() (kedro_datasets.pandas.deltatabledataset method)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.save"]], "schema (kedro_datasets.pandas.deltatabledataset property)": [[217, "kedro_datasets.pandas.DeltaTableDataSet.schema"]], "default_load_args (kedro_datasets.pandas.exceldataset attribute)": [[218, "kedro_datasets.pandas.ExcelDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.exceldataset attribute)": [[218, "kedro_datasets.pandas.ExcelDataSet.DEFAULT_SAVE_ARGS"]], "exceldataset (class in kedro_datasets.pandas)": [[218, "kedro_datasets.pandas.ExcelDataSet"]], "__init__() (kedro_datasets.pandas.exceldataset method)": [[218, "kedro_datasets.pandas.ExcelDataSet.__init__"]], "exists() (kedro_datasets.pandas.exceldataset method)": [[218, "kedro_datasets.pandas.ExcelDataSet.exists"]], "from_config() (kedro_datasets.pandas.exceldataset class method)": [[218, "kedro_datasets.pandas.ExcelDataSet.from_config"]], "load() (kedro_datasets.pandas.exceldataset method)": [[218, "kedro_datasets.pandas.ExcelDataSet.load"]], "release() (kedro_datasets.pandas.exceldataset method)": [[218, "kedro_datasets.pandas.ExcelDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.exceldataset method)": [[218, "kedro_datasets.pandas.ExcelDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.exceldataset method)": [[218, "kedro_datasets.pandas.ExcelDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.exceldataset method)": [[218, "kedro_datasets.pandas.ExcelDataSet.save"]], "default_load_args (kedro_datasets.pandas.featherdataset attribute)": [[219, "kedro_datasets.pandas.FeatherDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.featherdataset attribute)": [[219, "kedro_datasets.pandas.FeatherDataSet.DEFAULT_SAVE_ARGS"]], "featherdataset (class in kedro_datasets.pandas)": [[219, "kedro_datasets.pandas.FeatherDataSet"]], "__init__() (kedro_datasets.pandas.featherdataset method)": [[219, "kedro_datasets.pandas.FeatherDataSet.__init__"]], "exists() (kedro_datasets.pandas.featherdataset method)": [[219, "kedro_datasets.pandas.FeatherDataSet.exists"]], "from_config() (kedro_datasets.pandas.featherdataset class method)": [[219, "kedro_datasets.pandas.FeatherDataSet.from_config"]], "load() (kedro_datasets.pandas.featherdataset method)": [[219, "kedro_datasets.pandas.FeatherDataSet.load"]], "release() (kedro_datasets.pandas.featherdataset method)": [[219, "kedro_datasets.pandas.FeatherDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.featherdataset method)": [[219, "kedro_datasets.pandas.FeatherDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.featherdataset method)": [[219, "kedro_datasets.pandas.FeatherDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.featherdataset method)": [[219, "kedro_datasets.pandas.FeatherDataSet.save"]], "default_load_args (kedro_datasets.pandas.gbqquerydataset attribute)": [[220, "kedro_datasets.pandas.GBQQueryDataSet.DEFAULT_LOAD_ARGS"]], "gbqquerydataset (class in kedro_datasets.pandas)": [[220, "kedro_datasets.pandas.GBQQueryDataSet"]], "__init__() (kedro_datasets.pandas.gbqquerydataset method)": [[220, "kedro_datasets.pandas.GBQQueryDataSet.__init__"]], "exists() (kedro_datasets.pandas.gbqquerydataset method)": [[220, "kedro_datasets.pandas.GBQQueryDataSet.exists"]], "from_config() (kedro_datasets.pandas.gbqquerydataset class method)": [[220, "kedro_datasets.pandas.GBQQueryDataSet.from_config"]], "load() (kedro_datasets.pandas.gbqquerydataset method)": [[220, "kedro_datasets.pandas.GBQQueryDataSet.load"]], "release() (kedro_datasets.pandas.gbqquerydataset method)": [[220, "kedro_datasets.pandas.GBQQueryDataSet.release"]], "save() (kedro_datasets.pandas.gbqquerydataset method)": [[220, "kedro_datasets.pandas.GBQQueryDataSet.save"]], "default_load_args (kedro_datasets.pandas.gbqtabledataset attribute)": [[221, "kedro_datasets.pandas.GBQTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.gbqtabledataset attribute)": [[221, "kedro_datasets.pandas.GBQTableDataSet.DEFAULT_SAVE_ARGS"]], "gbqtabledataset (class in kedro_datasets.pandas)": [[221, "kedro_datasets.pandas.GBQTableDataSet"]], "__init__() (kedro_datasets.pandas.gbqtabledataset method)": [[221, "kedro_datasets.pandas.GBQTableDataSet.__init__"]], "exists() (kedro_datasets.pandas.gbqtabledataset method)": [[221, "kedro_datasets.pandas.GBQTableDataSet.exists"]], "from_config() (kedro_datasets.pandas.gbqtabledataset class method)": [[221, "kedro_datasets.pandas.GBQTableDataSet.from_config"]], "load() (kedro_datasets.pandas.gbqtabledataset method)": [[221, "kedro_datasets.pandas.GBQTableDataSet.load"]], "release() (kedro_datasets.pandas.gbqtabledataset method)": [[221, "kedro_datasets.pandas.GBQTableDataSet.release"]], "save() (kedro_datasets.pandas.gbqtabledataset method)": [[221, "kedro_datasets.pandas.GBQTableDataSet.save"]], "default_load_args (kedro_datasets.pandas.genericdataset attribute)": [[222, "kedro_datasets.pandas.GenericDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.genericdataset attribute)": [[222, "kedro_datasets.pandas.GenericDataSet.DEFAULT_SAVE_ARGS"]], "genericdataset (class in kedro_datasets.pandas)": [[222, "kedro_datasets.pandas.GenericDataSet"]], "__init__() (kedro_datasets.pandas.genericdataset method)": [[222, "kedro_datasets.pandas.GenericDataSet.__init__"]], "exists() (kedro_datasets.pandas.genericdataset method)": [[222, "kedro_datasets.pandas.GenericDataSet.exists"]], "from_config() (kedro_datasets.pandas.genericdataset class method)": [[222, "kedro_datasets.pandas.GenericDataSet.from_config"]], "load() (kedro_datasets.pandas.genericdataset method)": [[222, "kedro_datasets.pandas.GenericDataSet.load"]], "release() (kedro_datasets.pandas.genericdataset method)": [[222, "kedro_datasets.pandas.GenericDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.genericdataset method)": [[222, "kedro_datasets.pandas.GenericDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.genericdataset method)": [[222, "kedro_datasets.pandas.GenericDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.genericdataset method)": [[222, "kedro_datasets.pandas.GenericDataSet.save"]], "default_load_args (kedro_datasets.pandas.hdfdataset attribute)": [[223, "kedro_datasets.pandas.HDFDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.hdfdataset attribute)": [[223, "kedro_datasets.pandas.HDFDataSet.DEFAULT_SAVE_ARGS"]], "hdfdataset (class in kedro_datasets.pandas)": [[223, "kedro_datasets.pandas.HDFDataSet"]], "__init__() (kedro_datasets.pandas.hdfdataset method)": [[223, "kedro_datasets.pandas.HDFDataSet.__init__"]], "exists() (kedro_datasets.pandas.hdfdataset method)": [[223, "kedro_datasets.pandas.HDFDataSet.exists"]], "from_config() (kedro_datasets.pandas.hdfdataset class method)": [[223, "kedro_datasets.pandas.HDFDataSet.from_config"]], "load() (kedro_datasets.pandas.hdfdataset method)": [[223, "kedro_datasets.pandas.HDFDataSet.load"]], "release() (kedro_datasets.pandas.hdfdataset method)": [[223, "kedro_datasets.pandas.HDFDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.hdfdataset method)": [[223, "kedro_datasets.pandas.HDFDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.hdfdataset method)": [[223, "kedro_datasets.pandas.HDFDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.hdfdataset method)": [[223, "kedro_datasets.pandas.HDFDataSet.save"]], "default_load_args (kedro_datasets.pandas.jsondataset attribute)": [[224, "kedro_datasets.pandas.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.jsondataset attribute)": [[224, "kedro_datasets.pandas.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.pandas)": [[224, "kedro_datasets.pandas.JSONDataSet"]], "__init__() (kedro_datasets.pandas.jsondataset method)": [[224, "kedro_datasets.pandas.JSONDataSet.__init__"]], "exists() (kedro_datasets.pandas.jsondataset method)": [[224, "kedro_datasets.pandas.JSONDataSet.exists"]], "from_config() (kedro_datasets.pandas.jsondataset class method)": [[224, "kedro_datasets.pandas.JSONDataSet.from_config"]], "load() (kedro_datasets.pandas.jsondataset method)": [[224, "kedro_datasets.pandas.JSONDataSet.load"]], "release() (kedro_datasets.pandas.jsondataset method)": [[224, "kedro_datasets.pandas.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.jsondataset method)": [[224, "kedro_datasets.pandas.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.jsondataset method)": [[224, "kedro_datasets.pandas.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.jsondataset method)": [[224, "kedro_datasets.pandas.JSONDataSet.save"]], "default_load_args (kedro_datasets.pandas.parquetdataset attribute)": [[225, "kedro_datasets.pandas.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.parquetdataset attribute)": [[225, "kedro_datasets.pandas.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro_datasets.pandas)": [[225, "kedro_datasets.pandas.ParquetDataSet"]], "__init__() (kedro_datasets.pandas.parquetdataset method)": [[225, "kedro_datasets.pandas.ParquetDataSet.__init__"]], "exists() (kedro_datasets.pandas.parquetdataset method)": [[225, "kedro_datasets.pandas.ParquetDataSet.exists"]], "from_config() (kedro_datasets.pandas.parquetdataset class method)": [[225, "kedro_datasets.pandas.ParquetDataSet.from_config"]], "load() (kedro_datasets.pandas.parquetdataset method)": [[225, "kedro_datasets.pandas.ParquetDataSet.load"]], "release() (kedro_datasets.pandas.parquetdataset method)": [[225, "kedro_datasets.pandas.ParquetDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.parquetdataset method)": [[225, "kedro_datasets.pandas.ParquetDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.parquetdataset method)": [[225, "kedro_datasets.pandas.ParquetDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.parquetdataset method)": [[225, "kedro_datasets.pandas.ParquetDataSet.save"]], "sqlquerydataset (class in kedro_datasets.pandas)": [[226, "kedro_datasets.pandas.SQLQueryDataSet"]], "__init__() (kedro_datasets.pandas.sqlquerydataset method)": [[226, "kedro_datasets.pandas.SQLQueryDataSet.__init__"]], "adapt_mssql_date_params() (kedro_datasets.pandas.sqlquerydataset method)": [[226, "kedro_datasets.pandas.SQLQueryDataSet.adapt_mssql_date_params"]], "create_connection() (kedro_datasets.pandas.sqlquerydataset class method)": [[226, "kedro_datasets.pandas.SQLQueryDataSet.create_connection"]], "engines (kedro_datasets.pandas.sqlquerydataset attribute)": [[226, "kedro_datasets.pandas.SQLQueryDataSet.engines"]], "exists() (kedro_datasets.pandas.sqlquerydataset method)": [[226, "kedro_datasets.pandas.SQLQueryDataSet.exists"]], "from_config() (kedro_datasets.pandas.sqlquerydataset class method)": [[226, "kedro_datasets.pandas.SQLQueryDataSet.from_config"]], "load() (kedro_datasets.pandas.sqlquerydataset method)": [[226, "kedro_datasets.pandas.SQLQueryDataSet.load"]], "release() (kedro_datasets.pandas.sqlquerydataset method)": [[226, "kedro_datasets.pandas.SQLQueryDataSet.release"]], "save() (kedro_datasets.pandas.sqlquerydataset method)": [[226, "kedro_datasets.pandas.SQLQueryDataSet.save"]], "default_load_args (kedro_datasets.pandas.sqltabledataset attribute)": [[227, "kedro_datasets.pandas.SQLTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.sqltabledataset attribute)": [[227, "kedro_datasets.pandas.SQLTableDataSet.DEFAULT_SAVE_ARGS"]], "sqltabledataset (class in kedro_datasets.pandas)": [[227, "kedro_datasets.pandas.SQLTableDataSet"]], "__init__() (kedro_datasets.pandas.sqltabledataset method)": [[227, "kedro_datasets.pandas.SQLTableDataSet.__init__"]], "create_connection() (kedro_datasets.pandas.sqltabledataset class method)": [[227, "kedro_datasets.pandas.SQLTableDataSet.create_connection"]], "engines (kedro_datasets.pandas.sqltabledataset attribute)": [[227, "kedro_datasets.pandas.SQLTableDataSet.engines"]], "exists() (kedro_datasets.pandas.sqltabledataset method)": [[227, "kedro_datasets.pandas.SQLTableDataSet.exists"]], "from_config() (kedro_datasets.pandas.sqltabledataset class method)": [[227, "kedro_datasets.pandas.SQLTableDataSet.from_config"]], "load() (kedro_datasets.pandas.sqltabledataset method)": [[227, "kedro_datasets.pandas.SQLTableDataSet.load"]], "release() (kedro_datasets.pandas.sqltabledataset method)": [[227, "kedro_datasets.pandas.SQLTableDataSet.release"]], "save() (kedro_datasets.pandas.sqltabledataset method)": [[227, "kedro_datasets.pandas.SQLTableDataSet.save"]], "default_load_args (kedro_datasets.pandas.xmldataset attribute)": [[228, "kedro_datasets.pandas.XMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.xmldataset attribute)": [[228, "kedro_datasets.pandas.XMLDataSet.DEFAULT_SAVE_ARGS"]], "xmldataset (class in kedro_datasets.pandas)": [[228, "kedro_datasets.pandas.XMLDataSet"]], "__init__() (kedro_datasets.pandas.xmldataset method)": [[228, "kedro_datasets.pandas.XMLDataSet.__init__"]], "exists() (kedro_datasets.pandas.xmldataset method)": [[228, "kedro_datasets.pandas.XMLDataSet.exists"]], "from_config() (kedro_datasets.pandas.xmldataset class method)": [[228, "kedro_datasets.pandas.XMLDataSet.from_config"]], "load() (kedro_datasets.pandas.xmldataset method)": [[228, "kedro_datasets.pandas.XMLDataSet.load"]], "release() (kedro_datasets.pandas.xmldataset method)": [[228, "kedro_datasets.pandas.XMLDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.xmldataset method)": [[228, "kedro_datasets.pandas.XMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.xmldataset method)": [[228, "kedro_datasets.pandas.XMLDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.xmldataset method)": [[228, "kedro_datasets.pandas.XMLDataSet.save"]], "default_load_args (kedro_datasets.pickle.pickledataset attribute)": [[229, "kedro_datasets.pickle.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pickle.pickledataset attribute)": [[229, "kedro_datasets.pickle.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro_datasets.pickle)": [[229, "kedro_datasets.pickle.PickleDataSet"]], "__init__() (kedro_datasets.pickle.pickledataset method)": [[229, "kedro_datasets.pickle.PickleDataSet.__init__"]], "exists() (kedro_datasets.pickle.pickledataset method)": [[229, "kedro_datasets.pickle.PickleDataSet.exists"]], "from_config() (kedro_datasets.pickle.pickledataset class method)": [[229, "kedro_datasets.pickle.PickleDataSet.from_config"]], "load() (kedro_datasets.pickle.pickledataset method)": [[229, "kedro_datasets.pickle.PickleDataSet.load"]], "release() (kedro_datasets.pickle.pickledataset method)": [[229, "kedro_datasets.pickle.PickleDataSet.release"]], "resolve_load_version() (kedro_datasets.pickle.pickledataset method)": [[229, "kedro_datasets.pickle.PickleDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pickle.pickledataset method)": [[229, "kedro_datasets.pickle.PickleDataSet.resolve_save_version"]], "save() (kedro_datasets.pickle.pickledataset method)": [[229, "kedro_datasets.pickle.PickleDataSet.save"]], "default_save_args (kedro_datasets.pillow.imagedataset attribute)": [[230, "kedro_datasets.pillow.ImageDataSet.DEFAULT_SAVE_ARGS"]], "imagedataset (class in kedro_datasets.pillow)": [[230, "kedro_datasets.pillow.ImageDataSet"]], "__init__() (kedro_datasets.pillow.imagedataset method)": [[230, "kedro_datasets.pillow.ImageDataSet.__init__"]], "exists() (kedro_datasets.pillow.imagedataset method)": [[230, "kedro_datasets.pillow.ImageDataSet.exists"]], "from_config() (kedro_datasets.pillow.imagedataset class method)": [[230, "kedro_datasets.pillow.ImageDataSet.from_config"]], "load() (kedro_datasets.pillow.imagedataset method)": [[230, "kedro_datasets.pillow.ImageDataSet.load"]], "release() (kedro_datasets.pillow.imagedataset method)": [[230, "kedro_datasets.pillow.ImageDataSet.release"]], "resolve_load_version() (kedro_datasets.pillow.imagedataset method)": [[230, "kedro_datasets.pillow.ImageDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pillow.imagedataset method)": [[230, "kedro_datasets.pillow.ImageDataSet.resolve_save_version"]], "save() (kedro_datasets.pillow.imagedataset method)": [[230, "kedro_datasets.pillow.ImageDataSet.save"]], "default_load_args (kedro_datasets.plotly.jsondataset attribute)": [[231, "kedro_datasets.plotly.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.plotly.jsondataset attribute)": [[231, "kedro_datasets.plotly.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.plotly)": [[231, "kedro_datasets.plotly.JSONDataSet"]], "__init__() (kedro_datasets.plotly.jsondataset method)": [[231, "kedro_datasets.plotly.JSONDataSet.__init__"]], "exists() (kedro_datasets.plotly.jsondataset method)": [[231, "kedro_datasets.plotly.JSONDataSet.exists"]], "from_config() (kedro_datasets.plotly.jsondataset class method)": [[231, "kedro_datasets.plotly.JSONDataSet.from_config"]], "load() (kedro_datasets.plotly.jsondataset method)": [[231, "kedro_datasets.plotly.JSONDataSet.load"]], "release() (kedro_datasets.plotly.jsondataset method)": [[231, "kedro_datasets.plotly.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.plotly.jsondataset method)": [[231, "kedro_datasets.plotly.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.plotly.jsondataset method)": [[231, "kedro_datasets.plotly.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.plotly.jsondataset method)": [[231, "kedro_datasets.plotly.JSONDataSet.save"]], "default_load_args (kedro_datasets.plotly.plotlydataset attribute)": [[232, "kedro_datasets.plotly.PlotlyDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.plotly.plotlydataset attribute)": [[232, "kedro_datasets.plotly.PlotlyDataSet.DEFAULT_SAVE_ARGS"]], "plotlydataset (class in kedro_datasets.plotly)": [[232, "kedro_datasets.plotly.PlotlyDataSet"]], "__init__() (kedro_datasets.plotly.plotlydataset method)": [[232, "kedro_datasets.plotly.PlotlyDataSet.__init__"]], "exists() (kedro_datasets.plotly.plotlydataset method)": [[232, "kedro_datasets.plotly.PlotlyDataSet.exists"]], "from_config() (kedro_datasets.plotly.plotlydataset class method)": [[232, "kedro_datasets.plotly.PlotlyDataSet.from_config"]], "load() (kedro_datasets.plotly.plotlydataset method)": [[232, "kedro_datasets.plotly.PlotlyDataSet.load"]], "release() (kedro_datasets.plotly.plotlydataset method)": [[232, "kedro_datasets.plotly.PlotlyDataSet.release"]], "resolve_load_version() (kedro_datasets.plotly.plotlydataset method)": [[232, "kedro_datasets.plotly.PlotlyDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.plotly.plotlydataset method)": [[232, "kedro_datasets.plotly.PlotlyDataSet.resolve_save_version"]], "save() (kedro_datasets.plotly.plotlydataset method)": [[232, "kedro_datasets.plotly.PlotlyDataSet.save"]], "csvdataset (class in kedro_datasets.polars)": [[233, "kedro_datasets.polars.CSVDataSet"]], "default_load_args (kedro_datasets.polars.csvdataset attribute)": [[233, "kedro_datasets.polars.CSVDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.polars.csvdataset attribute)": [[233, "kedro_datasets.polars.CSVDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.polars.csvdataset method)": [[233, "kedro_datasets.polars.CSVDataSet.__init__"]], "exists() (kedro_datasets.polars.csvdataset method)": [[233, "kedro_datasets.polars.CSVDataSet.exists"]], "from_config() (kedro_datasets.polars.csvdataset class method)": [[233, "kedro_datasets.polars.CSVDataSet.from_config"]], "load() (kedro_datasets.polars.csvdataset method)": [[233, "kedro_datasets.polars.CSVDataSet.load"]], "release() (kedro_datasets.polars.csvdataset method)": [[233, "kedro_datasets.polars.CSVDataSet.release"]], "resolve_load_version() (kedro_datasets.polars.csvdataset method)": [[233, "kedro_datasets.polars.CSVDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.polars.csvdataset method)": [[233, "kedro_datasets.polars.CSVDataSet.resolve_save_version"]], "save() (kedro_datasets.polars.csvdataset method)": [[233, "kedro_datasets.polars.CSVDataSet.save"]], "default_load_args (kedro_datasets.redis.pickledataset attribute)": [[234, "kedro_datasets.redis.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_redis_url (kedro_datasets.redis.pickledataset attribute)": [[234, "kedro_datasets.redis.PickleDataSet.DEFAULT_REDIS_URL"]], "default_save_args (kedro_datasets.redis.pickledataset attribute)": [[234, "kedro_datasets.redis.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro_datasets.redis)": [[234, "kedro_datasets.redis.PickleDataSet"]], "__init__() (kedro_datasets.redis.pickledataset method)": [[234, "kedro_datasets.redis.PickleDataSet.__init__"]], "exists() (kedro_datasets.redis.pickledataset method)": [[234, "kedro_datasets.redis.PickleDataSet.exists"]], "from_config() (kedro_datasets.redis.pickledataset class method)": [[234, "kedro_datasets.redis.PickleDataSet.from_config"]], "load() (kedro_datasets.redis.pickledataset method)": [[234, "kedro_datasets.redis.PickleDataSet.load"]], "release() (kedro_datasets.redis.pickledataset method)": [[234, "kedro_datasets.redis.PickleDataSet.release"]], "save() (kedro_datasets.redis.pickledataset method)": [[234, "kedro_datasets.redis.PickleDataSet.save"]], "default_load_args (kedro_datasets.snowflake.snowparktabledataset attribute)": [[235, "kedro_datasets.snowflake.SnowparkTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.snowflake.snowparktabledataset attribute)": [[235, "kedro_datasets.snowflake.SnowparkTableDataSet.DEFAULT_SAVE_ARGS"]], "snowparktabledataset (class in kedro_datasets.snowflake)": [[235, "kedro_datasets.snowflake.SnowparkTableDataSet"]], "__init__() (kedro_datasets.snowflake.snowparktabledataset method)": [[235, "kedro_datasets.snowflake.SnowparkTableDataSet.__init__"]], "exists() (kedro_datasets.snowflake.snowparktabledataset method)": [[235, "kedro_datasets.snowflake.SnowparkTableDataSet.exists"]], "from_config() (kedro_datasets.snowflake.snowparktabledataset class method)": [[235, "kedro_datasets.snowflake.SnowparkTableDataSet.from_config"]], "load() (kedro_datasets.snowflake.snowparktabledataset method)": [[235, "kedro_datasets.snowflake.SnowparkTableDataSet.load"]], "release() (kedro_datasets.snowflake.snowparktabledataset method)": [[235, "kedro_datasets.snowflake.SnowparkTableDataSet.release"]], "save() (kedro_datasets.snowflake.snowparktabledataset method)": [[235, "kedro_datasets.snowflake.SnowparkTableDataSet.save"]], "deltatabledataset (class in kedro_datasets.spark)": [[236, "kedro_datasets.spark.DeltaTableDataSet"]], "__init__() (kedro_datasets.spark.deltatabledataset method)": [[236, "kedro_datasets.spark.DeltaTableDataSet.__init__"]], "exists() (kedro_datasets.spark.deltatabledataset method)": [[236, "kedro_datasets.spark.DeltaTableDataSet.exists"]], "from_config() (kedro_datasets.spark.deltatabledataset class method)": [[236, "kedro_datasets.spark.DeltaTableDataSet.from_config"]], "load() (kedro_datasets.spark.deltatabledataset method)": [[236, "kedro_datasets.spark.DeltaTableDataSet.load"]], "release() (kedro_datasets.spark.deltatabledataset method)": [[236, "kedro_datasets.spark.DeltaTableDataSet.release"]], "save() (kedro_datasets.spark.deltatabledataset method)": [[236, "kedro_datasets.spark.DeltaTableDataSet.save"]], "default_load_args (kedro_datasets.spark.sparkdataset attribute)": [[237, "kedro_datasets.spark.SparkDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.spark.sparkdataset attribute)": [[237, "kedro_datasets.spark.SparkDataSet.DEFAULT_SAVE_ARGS"]], "sparkdataset (class in kedro_datasets.spark)": [[237, "kedro_datasets.spark.SparkDataSet"]], "__init__() (kedro_datasets.spark.sparkdataset method)": [[237, "kedro_datasets.spark.SparkDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkdataset method)": [[237, "kedro_datasets.spark.SparkDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkdataset class method)": [[237, "kedro_datasets.spark.SparkDataSet.from_config"]], "load() (kedro_datasets.spark.sparkdataset method)": [[237, "kedro_datasets.spark.SparkDataSet.load"]], "release() (kedro_datasets.spark.sparkdataset method)": [[237, "kedro_datasets.spark.SparkDataSet.release"]], "resolve_load_version() (kedro_datasets.spark.sparkdataset method)": [[237, "kedro_datasets.spark.SparkDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.spark.sparkdataset method)": [[237, "kedro_datasets.spark.SparkDataSet.resolve_save_version"]], "save() (kedro_datasets.spark.sparkdataset method)": [[237, "kedro_datasets.spark.SparkDataSet.save"]], "default_save_args (kedro_datasets.spark.sparkhivedataset attribute)": [[238, "kedro_datasets.spark.SparkHiveDataSet.DEFAULT_SAVE_ARGS"]], "sparkhivedataset (class in kedro_datasets.spark)": [[238, "kedro_datasets.spark.SparkHiveDataSet"]], "__init__() (kedro_datasets.spark.sparkhivedataset method)": [[238, "kedro_datasets.spark.SparkHiveDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkhivedataset method)": [[238, "kedro_datasets.spark.SparkHiveDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkhivedataset class method)": [[238, "kedro_datasets.spark.SparkHiveDataSet.from_config"]], "load() (kedro_datasets.spark.sparkhivedataset method)": [[238, "kedro_datasets.spark.SparkHiveDataSet.load"]], "release() (kedro_datasets.spark.sparkhivedataset method)": [[238, "kedro_datasets.spark.SparkHiveDataSet.release"]], "save() (kedro_datasets.spark.sparkhivedataset method)": [[238, "kedro_datasets.spark.SparkHiveDataSet.save"]], "default_load_args (kedro_datasets.spark.sparkjdbcdataset attribute)": [[239, "kedro_datasets.spark.SparkJDBCDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.spark.sparkjdbcdataset attribute)": [[239, "kedro_datasets.spark.SparkJDBCDataSet.DEFAULT_SAVE_ARGS"]], "sparkjdbcdataset (class in kedro_datasets.spark)": [[239, "kedro_datasets.spark.SparkJDBCDataSet"]], "__init__() (kedro_datasets.spark.sparkjdbcdataset method)": [[239, "kedro_datasets.spark.SparkJDBCDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkjdbcdataset method)": [[239, "kedro_datasets.spark.SparkJDBCDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkjdbcdataset class method)": [[239, "kedro_datasets.spark.SparkJDBCDataSet.from_config"]], "load() (kedro_datasets.spark.sparkjdbcdataset method)": [[239, "kedro_datasets.spark.SparkJDBCDataSet.load"]], "release() (kedro_datasets.spark.sparkjdbcdataset method)": [[239, "kedro_datasets.spark.SparkJDBCDataSet.release"]], "save() (kedro_datasets.spark.sparkjdbcdataset method)": [[239, "kedro_datasets.spark.SparkJDBCDataSet.save"]], "default_load_args (kedro_datasets.spark.sparkstreamingdataset attribute)": [[240, "kedro_datasets.spark.SparkStreamingDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.spark.sparkstreamingdataset attribute)": [[240, "kedro_datasets.spark.SparkStreamingDataSet.DEFAULT_SAVE_ARGS"]], "sparkstreamingdataset (class in kedro_datasets.spark)": [[240, "kedro_datasets.spark.SparkStreamingDataSet"]], "__init__() (kedro_datasets.spark.sparkstreamingdataset method)": [[240, "kedro_datasets.spark.SparkStreamingDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkstreamingdataset method)": [[240, "kedro_datasets.spark.SparkStreamingDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkstreamingdataset class method)": [[240, "kedro_datasets.spark.SparkStreamingDataSet.from_config"]], "load() (kedro_datasets.spark.sparkstreamingdataset method)": [[240, "kedro_datasets.spark.SparkStreamingDataSet.load"]], "release() (kedro_datasets.spark.sparkstreamingdataset method)": [[240, "kedro_datasets.spark.SparkStreamingDataSet.release"]], "save() (kedro_datasets.spark.sparkstreamingdataset method)": [[240, "kedro_datasets.spark.SparkStreamingDataSet.save"]], "default_load_args (kedro_datasets.svmlight.svmlightdataset attribute)": [[241, "kedro_datasets.svmlight.SVMLightDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.svmlight.svmlightdataset attribute)": [[241, "kedro_datasets.svmlight.SVMLightDataSet.DEFAULT_SAVE_ARGS"]], "svmlightdataset (class in kedro_datasets.svmlight)": [[241, "kedro_datasets.svmlight.SVMLightDataSet"]], "__init__() (kedro_datasets.svmlight.svmlightdataset method)": [[241, "kedro_datasets.svmlight.SVMLightDataSet.__init__"]], "exists() (kedro_datasets.svmlight.svmlightdataset method)": [[241, "kedro_datasets.svmlight.SVMLightDataSet.exists"]], "from_config() (kedro_datasets.svmlight.svmlightdataset class method)": [[241, "kedro_datasets.svmlight.SVMLightDataSet.from_config"]], "load() (kedro_datasets.svmlight.svmlightdataset method)": [[241, "kedro_datasets.svmlight.SVMLightDataSet.load"]], "release() (kedro_datasets.svmlight.svmlightdataset method)": [[241, "kedro_datasets.svmlight.SVMLightDataSet.release"]], "resolve_load_version() (kedro_datasets.svmlight.svmlightdataset method)": [[241, "kedro_datasets.svmlight.SVMLightDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.svmlight.svmlightdataset method)": [[241, "kedro_datasets.svmlight.SVMLightDataSet.resolve_save_version"]], "save() (kedro_datasets.svmlight.svmlightdataset method)": [[241, "kedro_datasets.svmlight.SVMLightDataSet.save"]], "default_load_args (kedro_datasets.tensorflow.tensorflowmodeldataset attribute)": [[242, "kedro_datasets.tensorflow.TensorFlowModelDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.tensorflow.tensorflowmodeldataset attribute)": [[242, "kedro_datasets.tensorflow.TensorFlowModelDataSet.DEFAULT_SAVE_ARGS"]], "tensorflowmodeldataset (class in kedro_datasets.tensorflow)": [[242, "kedro_datasets.tensorflow.TensorFlowModelDataSet"]], "__init__() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[242, "kedro_datasets.tensorflow.TensorFlowModelDataSet.__init__"]], "exists() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[242, "kedro_datasets.tensorflow.TensorFlowModelDataSet.exists"]], "from_config() (kedro_datasets.tensorflow.tensorflowmodeldataset class method)": [[242, "kedro_datasets.tensorflow.TensorFlowModelDataSet.from_config"]], "load() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[242, "kedro_datasets.tensorflow.TensorFlowModelDataSet.load"]], "release() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[242, "kedro_datasets.tensorflow.TensorFlowModelDataSet.release"]], "resolve_load_version() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[242, "kedro_datasets.tensorflow.TensorFlowModelDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[242, "kedro_datasets.tensorflow.TensorFlowModelDataSet.resolve_save_version"]], "save() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[242, "kedro_datasets.tensorflow.TensorFlowModelDataSet.save"]], "textdataset (class in kedro_datasets.text)": [[243, "kedro_datasets.text.TextDataSet"]], "__init__() (kedro_datasets.text.textdataset method)": [[243, "kedro_datasets.text.TextDataSet.__init__"]], "exists() (kedro_datasets.text.textdataset method)": [[243, "kedro_datasets.text.TextDataSet.exists"]], "from_config() (kedro_datasets.text.textdataset class method)": [[243, "kedro_datasets.text.TextDataSet.from_config"]], "load() (kedro_datasets.text.textdataset method)": [[243, "kedro_datasets.text.TextDataSet.load"]], "release() (kedro_datasets.text.textdataset method)": [[243, "kedro_datasets.text.TextDataSet.release"]], "resolve_load_version() (kedro_datasets.text.textdataset method)": [[243, "kedro_datasets.text.TextDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.text.textdataset method)": [[243, "kedro_datasets.text.TextDataSet.resolve_save_version"]], "save() (kedro_datasets.text.textdataset method)": [[243, "kedro_datasets.text.TextDataSet.save"]], "default_save_args (kedro_datasets.tracking.jsondataset attribute)": [[244, "kedro_datasets.tracking.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.tracking)": [[244, "kedro_datasets.tracking.JSONDataSet"]], "__init__() (kedro_datasets.tracking.jsondataset method)": [[244, "kedro_datasets.tracking.JSONDataSet.__init__"]], "exists() (kedro_datasets.tracking.jsondataset method)": [[244, "kedro_datasets.tracking.JSONDataSet.exists"]], "from_config() (kedro_datasets.tracking.jsondataset class method)": [[244, "kedro_datasets.tracking.JSONDataSet.from_config"]], "load() (kedro_datasets.tracking.jsondataset method)": [[244, "kedro_datasets.tracking.JSONDataSet.load"]], "release() (kedro_datasets.tracking.jsondataset method)": [[244, "kedro_datasets.tracking.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.tracking.jsondataset method)": [[244, "kedro_datasets.tracking.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.tracking.jsondataset method)": [[244, "kedro_datasets.tracking.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.tracking.jsondataset method)": [[244, "kedro_datasets.tracking.JSONDataSet.save"]], "versioned (kedro_datasets.tracking.jsondataset attribute)": [[244, "kedro_datasets.tracking.JSONDataSet.versioned"]], "default_save_args (kedro_datasets.tracking.metricsdataset attribute)": [[245, "kedro_datasets.tracking.MetricsDataSet.DEFAULT_SAVE_ARGS"]], "metricsdataset (class in kedro_datasets.tracking)": [[245, "kedro_datasets.tracking.MetricsDataSet"]], "__init__() (kedro_datasets.tracking.metricsdataset method)": [[245, "kedro_datasets.tracking.MetricsDataSet.__init__"]], "exists() (kedro_datasets.tracking.metricsdataset method)": [[245, "kedro_datasets.tracking.MetricsDataSet.exists"]], "from_config() (kedro_datasets.tracking.metricsdataset class method)": [[245, "kedro_datasets.tracking.MetricsDataSet.from_config"]], "load() (kedro_datasets.tracking.metricsdataset method)": [[245, "kedro_datasets.tracking.MetricsDataSet.load"]], "release() (kedro_datasets.tracking.metricsdataset method)": [[245, "kedro_datasets.tracking.MetricsDataSet.release"]], "resolve_load_version() (kedro_datasets.tracking.metricsdataset method)": [[245, "kedro_datasets.tracking.MetricsDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.tracking.metricsdataset method)": [[245, "kedro_datasets.tracking.MetricsDataSet.resolve_save_version"]], "save() (kedro_datasets.tracking.metricsdataset method)": [[245, "kedro_datasets.tracking.MetricsDataSet.save"]], "versioned (kedro_datasets.tracking.metricsdataset attribute)": [[245, "kedro_datasets.tracking.MetricsDataSet.versioned"]], "videodataset (class in kedro_datasets.video)": [[246, "kedro_datasets.video.VideoDataSet"]], "__init__() (kedro_datasets.video.videodataset method)": [[246, "kedro_datasets.video.VideoDataSet.__init__"]], "exists() (kedro_datasets.video.videodataset method)": [[246, "kedro_datasets.video.VideoDataSet.exists"]], "from_config() (kedro_datasets.video.videodataset class method)": [[246, "kedro_datasets.video.VideoDataSet.from_config"]], "load() (kedro_datasets.video.videodataset method)": [[246, "kedro_datasets.video.VideoDataSet.load"]], "release() (kedro_datasets.video.videodataset method)": [[246, "kedro_datasets.video.VideoDataSet.release"]], "save() (kedro_datasets.video.videodataset method)": [[246, "kedro_datasets.video.VideoDataSet.save"]], "default_save_args (kedro_datasets.yaml.yamldataset attribute)": [[247, "kedro_datasets.yaml.YAMLDataSet.DEFAULT_SAVE_ARGS"]], "yamldataset (class in kedro_datasets.yaml)": [[247, "kedro_datasets.yaml.YAMLDataSet"]], "__init__() (kedro_datasets.yaml.yamldataset method)": [[247, "kedro_datasets.yaml.YAMLDataSet.__init__"]], "exists() (kedro_datasets.yaml.yamldataset method)": [[247, "kedro_datasets.yaml.YAMLDataSet.exists"]], "from_config() (kedro_datasets.yaml.yamldataset class method)": [[247, "kedro_datasets.yaml.YAMLDataSet.from_config"]], "load() (kedro_datasets.yaml.yamldataset method)": [[247, "kedro_datasets.yaml.YAMLDataSet.load"]], "release() (kedro_datasets.yaml.yamldataset method)": [[247, "kedro_datasets.yaml.YAMLDataSet.release"]], "resolve_load_version() (kedro_datasets.yaml.yamldataset method)": [[247, "kedro_datasets.yaml.YAMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.yaml.yamldataset method)": [[247, "kedro_datasets.yaml.YAMLDataSet.resolve_save_version"]], "save() (kedro_datasets.yaml.yamldataset method)": [[247, "kedro_datasets.yaml.YAMLDataSet.save"]]}})