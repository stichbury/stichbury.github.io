Search.setIndex({"docnames": ["configuration/advanced_configuration", "configuration/config_loader_migration", "configuration/configuration_basics", "configuration/credentials", "configuration/index", "configuration/parameters", "contribution/backwards_compatibility", "contribution/developer_contributor_guidelines", "contribution/development_for_databricks", "contribution/documentation_contributor_guidelines", "contribution/index", "contribution/technical_steering_committee", "data/advanced_data_catalog_usage", "data/data_catalog", "data/data_catalog_yaml_examples", "data/how_to_create_a_custom_dataset", "data/index", "data/kedro_dataset_factories", "data/partitioned_and_incremental_datasets", "deployment/airflow_astronomer", "deployment/amazon_sagemaker", "deployment/argo", "deployment/aws_batch", "deployment/aws_step_functions", "deployment/azure", "deployment/dask", "deployment/databricks/databricks_deployment_workflow", "deployment/databricks/databricks_ide_development_workflow", "deployment/databricks/databricks_notebooks_development_workflow", "deployment/databricks/databricks_visualisation", "deployment/databricks/index", "deployment/distributed", "deployment/index", "deployment/kubeflow", "deployment/prefect", "deployment/single_machine", "deployment/vertexai", "development/automated_testing", "development/commands_reference", "development/debugging", "development/index", "development/linting", "development/set_up_pycharm", "development/set_up_vscode", "experiment_tracking/index", "extend_kedro/common_use_cases", "extend_kedro/index", "extend_kedro/plugins", "faq/faq", "get_started/index", "get_started/install", "get_started/kedro_concepts", "get_started/new_project", "hooks/common_use_cases", "hooks/examples", "hooks/index", "hooks/introduction", "index", "integrations/pyspark_integration", "introduction/index", "introduction/introduction", "kedro", "kedro.KedroPythonVersionWarning", "kedro.config", "kedro.config.ConfigLoader", "kedro.config.MissingConfigException", "kedro.config.OmegaConfigLoader", "kedro.config.TemplatedConfigLoader", "kedro.extras", "kedro.extras.datasets", "kedro.extras.datasets.api.APIDataSet", "kedro.extras.datasets.biosequence.BioSequenceDataSet", "kedro.extras.datasets.dask.ParquetDataSet", "kedro.extras.datasets.email.EmailMessageDataSet", "kedro.extras.datasets.geopandas.GeoJSONDataSet", "kedro.extras.datasets.holoviews.HoloviewsWriter", "kedro.extras.datasets.json.JSONDataSet", "kedro.extras.datasets.matplotlib.MatplotlibWriter", "kedro.extras.datasets.networkx.GMLDataSet", "kedro.extras.datasets.networkx.GraphMLDataSet", "kedro.extras.datasets.networkx.JSONDataSet", "kedro.extras.datasets.pandas.CSVDataSet", "kedro.extras.datasets.pandas.ExcelDataSet", "kedro.extras.datasets.pandas.FeatherDataSet", "kedro.extras.datasets.pandas.GBQQueryDataSet", "kedro.extras.datasets.pandas.GBQTableDataSet", "kedro.extras.datasets.pandas.GenericDataSet", "kedro.extras.datasets.pandas.HDFDataSet", "kedro.extras.datasets.pandas.JSONDataSet", "kedro.extras.datasets.pandas.ParquetDataSet", "kedro.extras.datasets.pandas.SQLQueryDataSet", "kedro.extras.datasets.pandas.SQLTableDataSet", "kedro.extras.datasets.pandas.XMLDataSet", "kedro.extras.datasets.pickle.PickleDataSet", "kedro.extras.datasets.pillow.ImageDataSet", "kedro.extras.datasets.plotly.JSONDataSet", "kedro.extras.datasets.plotly.PlotlyDataSet", "kedro.extras.datasets.redis.PickleDataSet", "kedro.extras.datasets.spark.DeltaTableDataSet", "kedro.extras.datasets.spark.SparkDataSet", "kedro.extras.datasets.spark.SparkHiveDataSet", "kedro.extras.datasets.spark.SparkJDBCDataSet", "kedro.extras.datasets.svmlight.SVMLightDataSet", "kedro.extras.datasets.tensorflow.TensorFlowModelDataset", "kedro.extras.datasets.text.TextDataSet", "kedro.extras.datasets.tracking.JSONDataSet", "kedro.extras.datasets.tracking.MetricsDataSet", "kedro.extras.datasets.yaml.YAMLDataSet", "kedro.extras.extensions", "kedro.extras.extensions.ipython", "kedro.extras.logging", "kedro.extras.logging.color_logger", "kedro.extras.logging.color_logger.ColorHandler", "kedro.framework", "kedro.framework.cli", "kedro.framework.cli.catalog", "kedro.framework.cli.cli", "kedro.framework.cli.cli.KedroCLI", "kedro.framework.cli.cli.main", "kedro.framework.cli.hooks", "kedro.framework.cli.hooks.manager", "kedro.framework.cli.hooks.manager.CLIHooksManager", "kedro.framework.cli.hooks.manager.get_cli_hook_manager", "kedro.framework.cli.hooks.markers", "kedro.framework.cli.hooks.specs", "kedro.framework.cli.hooks.specs.CLICommandSpecs", "kedro.framework.cli.jupyter", "kedro.framework.cli.jupyter.JupyterCommandGroup", "kedro.framework.cli.micropkg", "kedro.framework.cli.micropkg.safe_extract", "kedro.framework.cli.pipeline", "kedro.framework.cli.pipeline.PipelineArtifacts", "kedro.framework.cli.project", "kedro.framework.cli.registry", "kedro.framework.cli.starters", "kedro.framework.cli.starters.KedroStarterSpec", "kedro.framework.cli.utils", "kedro.framework.cli.utils.CommandCollection", "kedro.framework.cli.utils.KedroCliError", "kedro.framework.cli.utils.command_with_verbosity", "kedro.framework.cli.utils.env_option", "kedro.framework.cli.utils.find_stylesheets", "kedro.framework.cli.utils.forward_command", "kedro.framework.cli.utils.get_pkg_version", "kedro.framework.cli.utils.python_call", "kedro.framework.cli.utils.split_string", "kedro.framework.context", "kedro.framework.context.KedroContext", "kedro.framework.context.KedroContextError", "kedro.framework.hooks", "kedro.framework.hooks.manager", "kedro.framework.hooks.markers", "kedro.framework.hooks.specs", "kedro.framework.hooks.specs.DataCatalogSpecs", "kedro.framework.hooks.specs.DatasetSpecs", "kedro.framework.hooks.specs.KedroContextSpecs", "kedro.framework.hooks.specs.NodeSpecs", "kedro.framework.hooks.specs.PipelineSpecs", "kedro.framework.project", "kedro.framework.project.configure_logging", "kedro.framework.project.configure_project", "kedro.framework.project.find_pipelines", "kedro.framework.project.validate_settings", "kedro.framework.session", "kedro.framework.session.session", "kedro.framework.session.session.KedroSession", "kedro.framework.session.session.KedroSessionError", "kedro.framework.session.shelvestore", "kedro.framework.session.shelvestore.ShelveStore", "kedro.framework.session.store", "kedro.framework.session.store.BaseSessionStore", "kedro.framework.startup", "kedro.framework.startup.ProjectMetadata", "kedro.framework.startup.bootstrap_project", "kedro.io", "kedro.io.AbstractDataSet", "kedro.io.AbstractVersionedDataSet", "kedro.io.CachedDataSet", "kedro.io.DataCatalog", "kedro.io.DataSetAlreadyExistsError", "kedro.io.DataSetError", "kedro.io.DataSetNotFoundError", "kedro.io.IncrementalDataSet", "kedro.io.LambdaDataSet", "kedro.io.MemoryDataSet", "kedro.io.PartitionedDataSet", "kedro.io.Version", "kedro.ipython", "kedro.ipython.load_ipython_extension", "kedro.ipython.magic_reload_kedro", "kedro.ipython.reload_kedro", "kedro.logging", "kedro.logging.RichHandler", "kedro.pipeline", "kedro.pipeline.Pipeline", "kedro.pipeline.modular_pipeline.ModularPipelineError", "kedro.pipeline.modular_pipeline.pipeline", "kedro.pipeline.node", "kedro.pipeline.node.Node", "kedro.runner", "kedro.runner.AbstractRunner", "kedro.runner.ParallelRunner", "kedro.runner.SequentialRunner", "kedro.runner.ThreadRunner", "kedro.runner.run_node", "kedro.utils", "kedro.utils.load_obj", "kedro_datasets", "kedro_datasets.api.APIDataSet", "kedro_datasets.biosequence.BioSequenceDataSet", "kedro_datasets.dask.ParquetDataSet", "kedro_datasets.databricks.ManagedTableDataSet", "kedro_datasets.email.EmailMessageDataSet", "kedro_datasets.geopandas.GeoJSONDataSet", "kedro_datasets.holoviews.HoloviewsWriter", "kedro_datasets.json.JSONDataSet", "kedro_datasets.matplotlib.MatplotlibWriter", "kedro_datasets.networkx.GMLDataSet", "kedro_datasets.networkx.GraphMLDataSet", "kedro_datasets.networkx.JSONDataSet", "kedro_datasets.pandas.CSVDataSet", "kedro_datasets.pandas.DeltaTableDataSet", "kedro_datasets.pandas.ExcelDataSet", "kedro_datasets.pandas.FeatherDataSet", "kedro_datasets.pandas.GBQQueryDataSet", "kedro_datasets.pandas.GBQTableDataSet", "kedro_datasets.pandas.GenericDataSet", "kedro_datasets.pandas.HDFDataSet", "kedro_datasets.pandas.JSONDataSet", "kedro_datasets.pandas.ParquetDataSet", "kedro_datasets.pandas.SQLQueryDataSet", "kedro_datasets.pandas.SQLTableDataSet", "kedro_datasets.pandas.XMLDataSet", "kedro_datasets.pickle.PickleDataSet", "kedro_datasets.pillow.ImageDataSet", "kedro_datasets.plotly.JSONDataSet", "kedro_datasets.plotly.PlotlyDataSet", "kedro_datasets.polars.CSVDataSet", "kedro_datasets.redis.PickleDataSet", "kedro_datasets.snowflake.SnowparkTableDataSet", "kedro_datasets.spark.DeltaTableDataSet", "kedro_datasets.spark.SparkDataSet", "kedro_datasets.spark.SparkHiveDataSet", "kedro_datasets.spark.SparkJDBCDataSet", "kedro_datasets.spark.SparkStreamingDataSet", "kedro_datasets.svmlight.SVMLightDataSet", "kedro_datasets.tensorflow.TensorFlowModelDataSet", "kedro_datasets.text.TextDataSet", "kedro_datasets.tracking.JSONDataSet", "kedro_datasets.tracking.MetricsDataSet", "kedro_datasets.video.VideoDataSet", "kedro_datasets.yaml.YAMLDataSet", "kedro_project_setup/dependencies", "kedro_project_setup/index", "kedro_project_setup/session", "kedro_project_setup/settings", "kedro_project_setup/starters", "logging/index", "logging/logging", "nodes_and_pipelines/index", "nodes_and_pipelines/micro_packaging", "nodes_and_pipelines/modular_pipelines", "nodes_and_pipelines/nodes", "nodes_and_pipelines/pipeline_introduction", "nodes_and_pipelines/pipeline_registry", "nodes_and_pipelines/run_a_pipeline", "nodes_and_pipelines/slice_a_pipeline", "notebooks_and_ipython/index", "notebooks_and_ipython/kedro_and_notebooks", "notebooks_and_ipython/kedro_as_a_data_registry", "resources/glossary", "resources/index", "tutorial/add_another_pipeline", "tutorial/create_a_pipeline", "tutorial/package_a_project", "tutorial/set_up_data", "tutorial/spaceflights_tutorial", "tutorial/spaceflights_tutorial_faqs", "tutorial/tutorial_template", "visualisation/index", "visualisation/kedro-viz_visualisation", "visualisation/preview_datasets", "visualisation/visualise_charts_with_plotly"], "filenames": ["configuration/advanced_configuration.md", "configuration/config_loader_migration.md", "configuration/configuration_basics.md", "configuration/credentials.md", "configuration/index.md", "configuration/parameters.md", "contribution/backwards_compatibility.md", "contribution/developer_contributor_guidelines.md", "contribution/development_for_databricks.md", "contribution/documentation_contributor_guidelines.md", "contribution/index.md", "contribution/technical_steering_committee.md", "data/advanced_data_catalog_usage.md", "data/data_catalog.md", "data/data_catalog_yaml_examples.md", "data/how_to_create_a_custom_dataset.md", "data/index.md", "data/kedro_dataset_factories.md", "data/partitioned_and_incremental_datasets.md", "deployment/airflow_astronomer.md", "deployment/amazon_sagemaker.md", "deployment/argo.md", "deployment/aws_batch.md", "deployment/aws_step_functions.md", "deployment/azure.md", "deployment/dask.md", "deployment/databricks/databricks_deployment_workflow.md", "deployment/databricks/databricks_ide_development_workflow.md", "deployment/databricks/databricks_notebooks_development_workflow.md", "deployment/databricks/databricks_visualisation.md", "deployment/databricks/index.md", "deployment/distributed.md", "deployment/index.md", "deployment/kubeflow.md", "deployment/prefect.md", "deployment/single_machine.md", "deployment/vertexai.md", "development/automated_testing.md", "development/commands_reference.md", "development/debugging.md", "development/index.md", "development/linting.md", "development/set_up_pycharm.md", "development/set_up_vscode.md", "experiment_tracking/index.md", "extend_kedro/common_use_cases.md", "extend_kedro/index.md", "extend_kedro/plugins.md", "faq/faq.md", "get_started/index.md", "get_started/install.md", "get_started/kedro_concepts.md", "get_started/new_project.md", "hooks/common_use_cases.md", "hooks/examples.md", "hooks/index.md", "hooks/introduction.md", "index.rst", "integrations/pyspark_integration.md", "introduction/index.md", "introduction/introduction.md", "kedro.rst", "kedro.KedroPythonVersionWarning.rst", "kedro.config.rst", "kedro.config.ConfigLoader.rst", "kedro.config.MissingConfigException.rst", "kedro.config.OmegaConfigLoader.rst", "kedro.config.TemplatedConfigLoader.rst", "kedro.extras.rst", "kedro.extras.datasets.rst", "kedro.extras.datasets.api.APIDataSet.rst", "kedro.extras.datasets.biosequence.BioSequenceDataSet.rst", "kedro.extras.datasets.dask.ParquetDataSet.rst", "kedro.extras.datasets.email.EmailMessageDataSet.rst", "kedro.extras.datasets.geopandas.GeoJSONDataSet.rst", "kedro.extras.datasets.holoviews.HoloviewsWriter.rst", "kedro.extras.datasets.json.JSONDataSet.rst", "kedro.extras.datasets.matplotlib.MatplotlibWriter.rst", "kedro.extras.datasets.networkx.GMLDataSet.rst", "kedro.extras.datasets.networkx.GraphMLDataSet.rst", "kedro.extras.datasets.networkx.JSONDataSet.rst", "kedro.extras.datasets.pandas.CSVDataSet.rst", "kedro.extras.datasets.pandas.ExcelDataSet.rst", "kedro.extras.datasets.pandas.FeatherDataSet.rst", "kedro.extras.datasets.pandas.GBQQueryDataSet.rst", "kedro.extras.datasets.pandas.GBQTableDataSet.rst", "kedro.extras.datasets.pandas.GenericDataSet.rst", "kedro.extras.datasets.pandas.HDFDataSet.rst", "kedro.extras.datasets.pandas.JSONDataSet.rst", "kedro.extras.datasets.pandas.ParquetDataSet.rst", "kedro.extras.datasets.pandas.SQLQueryDataSet.rst", "kedro.extras.datasets.pandas.SQLTableDataSet.rst", "kedro.extras.datasets.pandas.XMLDataSet.rst", "kedro.extras.datasets.pickle.PickleDataSet.rst", "kedro.extras.datasets.pillow.ImageDataSet.rst", "kedro.extras.datasets.plotly.JSONDataSet.rst", "kedro.extras.datasets.plotly.PlotlyDataSet.rst", "kedro.extras.datasets.redis.PickleDataSet.rst", "kedro.extras.datasets.spark.DeltaTableDataSet.rst", "kedro.extras.datasets.spark.SparkDataSet.rst", "kedro.extras.datasets.spark.SparkHiveDataSet.rst", "kedro.extras.datasets.spark.SparkJDBCDataSet.rst", "kedro.extras.datasets.svmlight.SVMLightDataSet.rst", "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.rst", "kedro.extras.datasets.text.TextDataSet.rst", "kedro.extras.datasets.tracking.JSONDataSet.rst", "kedro.extras.datasets.tracking.MetricsDataSet.rst", "kedro.extras.datasets.yaml.YAMLDataSet.rst", "kedro.extras.extensions.rst", "kedro.extras.extensions.ipython.rst", "kedro.extras.logging.rst", "kedro.extras.logging.color_logger.rst", "kedro.extras.logging.color_logger.ColorHandler.rst", "kedro.framework.rst", "kedro.framework.cli.rst", "kedro.framework.cli.catalog.rst", "kedro.framework.cli.cli.rst", "kedro.framework.cli.cli.KedroCLI.rst", "kedro.framework.cli.cli.main.rst", "kedro.framework.cli.hooks.rst", "kedro.framework.cli.hooks.manager.rst", "kedro.framework.cli.hooks.manager.CLIHooksManager.rst", "kedro.framework.cli.hooks.manager.get_cli_hook_manager.rst", "kedro.framework.cli.hooks.markers.rst", "kedro.framework.cli.hooks.specs.rst", "kedro.framework.cli.hooks.specs.CLICommandSpecs.rst", "kedro.framework.cli.jupyter.rst", "kedro.framework.cli.jupyter.JupyterCommandGroup.rst", "kedro.framework.cli.micropkg.rst", "kedro.framework.cli.micropkg.safe_extract.rst", "kedro.framework.cli.pipeline.rst", "kedro.framework.cli.pipeline.PipelineArtifacts.rst", "kedro.framework.cli.project.rst", "kedro.framework.cli.registry.rst", "kedro.framework.cli.starters.rst", "kedro.framework.cli.starters.KedroStarterSpec.rst", "kedro.framework.cli.utils.rst", "kedro.framework.cli.utils.CommandCollection.rst", "kedro.framework.cli.utils.KedroCliError.rst", "kedro.framework.cli.utils.command_with_verbosity.rst", "kedro.framework.cli.utils.env_option.rst", "kedro.framework.cli.utils.find_stylesheets.rst", "kedro.framework.cli.utils.forward_command.rst", "kedro.framework.cli.utils.get_pkg_version.rst", "kedro.framework.cli.utils.python_call.rst", "kedro.framework.cli.utils.split_string.rst", "kedro.framework.context.rst", "kedro.framework.context.KedroContext.rst", "kedro.framework.context.KedroContextError.rst", "kedro.framework.hooks.rst", "kedro.framework.hooks.manager.rst", "kedro.framework.hooks.markers.rst", "kedro.framework.hooks.specs.rst", "kedro.framework.hooks.specs.DataCatalogSpecs.rst", "kedro.framework.hooks.specs.DatasetSpecs.rst", "kedro.framework.hooks.specs.KedroContextSpecs.rst", "kedro.framework.hooks.specs.NodeSpecs.rst", "kedro.framework.hooks.specs.PipelineSpecs.rst", "kedro.framework.project.rst", "kedro.framework.project.configure_logging.rst", "kedro.framework.project.configure_project.rst", "kedro.framework.project.find_pipelines.rst", "kedro.framework.project.validate_settings.rst", "kedro.framework.session.rst", "kedro.framework.session.session.rst", "kedro.framework.session.session.KedroSession.rst", "kedro.framework.session.session.KedroSessionError.rst", "kedro.framework.session.shelvestore.rst", "kedro.framework.session.shelvestore.ShelveStore.rst", "kedro.framework.session.store.rst", "kedro.framework.session.store.BaseSessionStore.rst", "kedro.framework.startup.rst", "kedro.framework.startup.ProjectMetadata.rst", "kedro.framework.startup.bootstrap_project.rst", "kedro.io.rst", "kedro.io.AbstractDataSet.rst", "kedro.io.AbstractVersionedDataSet.rst", "kedro.io.CachedDataSet.rst", "kedro.io.DataCatalog.rst", "kedro.io.DataSetAlreadyExistsError.rst", "kedro.io.DataSetError.rst", "kedro.io.DataSetNotFoundError.rst", "kedro.io.IncrementalDataSet.rst", "kedro.io.LambdaDataSet.rst", "kedro.io.MemoryDataSet.rst", "kedro.io.PartitionedDataSet.rst", "kedro.io.Version.rst", "kedro.ipython.rst", "kedro.ipython.load_ipython_extension.rst", "kedro.ipython.magic_reload_kedro.rst", "kedro.ipython.reload_kedro.rst", "kedro.logging.rst", "kedro.logging.RichHandler.rst", "kedro.pipeline.rst", "kedro.pipeline.Pipeline.rst", "kedro.pipeline.modular_pipeline.ModularPipelineError.rst", "kedro.pipeline.modular_pipeline.pipeline.rst", "kedro.pipeline.node.rst", "kedro.pipeline.node.Node.rst", "kedro.runner.rst", "kedro.runner.AbstractRunner.rst", "kedro.runner.ParallelRunner.rst", "kedro.runner.SequentialRunner.rst", "kedro.runner.ThreadRunner.rst", "kedro.runner.run_node.rst", "kedro.utils.rst", "kedro.utils.load_obj.rst", "kedro_datasets.rst", "kedro_datasets.api.APIDataSet.rst", "kedro_datasets.biosequence.BioSequenceDataSet.rst", "kedro_datasets.dask.ParquetDataSet.rst", "kedro_datasets.databricks.ManagedTableDataSet.rst", "kedro_datasets.email.EmailMessageDataSet.rst", "kedro_datasets.geopandas.GeoJSONDataSet.rst", "kedro_datasets.holoviews.HoloviewsWriter.rst", "kedro_datasets.json.JSONDataSet.rst", "kedro_datasets.matplotlib.MatplotlibWriter.rst", "kedro_datasets.networkx.GMLDataSet.rst", "kedro_datasets.networkx.GraphMLDataSet.rst", "kedro_datasets.networkx.JSONDataSet.rst", "kedro_datasets.pandas.CSVDataSet.rst", "kedro_datasets.pandas.DeltaTableDataSet.rst", "kedro_datasets.pandas.ExcelDataSet.rst", "kedro_datasets.pandas.FeatherDataSet.rst", "kedro_datasets.pandas.GBQQueryDataSet.rst", "kedro_datasets.pandas.GBQTableDataSet.rst", "kedro_datasets.pandas.GenericDataSet.rst", "kedro_datasets.pandas.HDFDataSet.rst", "kedro_datasets.pandas.JSONDataSet.rst", "kedro_datasets.pandas.ParquetDataSet.rst", "kedro_datasets.pandas.SQLQueryDataSet.rst", "kedro_datasets.pandas.SQLTableDataSet.rst", "kedro_datasets.pandas.XMLDataSet.rst", "kedro_datasets.pickle.PickleDataSet.rst", "kedro_datasets.pillow.ImageDataSet.rst", "kedro_datasets.plotly.JSONDataSet.rst", "kedro_datasets.plotly.PlotlyDataSet.rst", "kedro_datasets.polars.CSVDataSet.rst", "kedro_datasets.redis.PickleDataSet.rst", "kedro_datasets.snowflake.SnowparkTableDataSet.rst", "kedro_datasets.spark.DeltaTableDataSet.rst", "kedro_datasets.spark.SparkDataSet.rst", "kedro_datasets.spark.SparkHiveDataSet.rst", "kedro_datasets.spark.SparkJDBCDataSet.rst", "kedro_datasets.spark.SparkStreamingDataSet.rst", "kedro_datasets.svmlight.SVMLightDataSet.rst", "kedro_datasets.tensorflow.TensorFlowModelDataSet.rst", "kedro_datasets.text.TextDataSet.rst", "kedro_datasets.tracking.JSONDataSet.rst", "kedro_datasets.tracking.MetricsDataSet.rst", "kedro_datasets.video.VideoDataSet.rst", "kedro_datasets.yaml.YAMLDataSet.rst", "kedro_project_setup/dependencies.md", "kedro_project_setup/index.md", "kedro_project_setup/session.md", "kedro_project_setup/settings.md", "kedro_project_setup/starters.md", "logging/index.md", "logging/logging.md", "nodes_and_pipelines/index.md", "nodes_and_pipelines/micro_packaging.md", "nodes_and_pipelines/modular_pipelines.md", "nodes_and_pipelines/nodes.md", "nodes_and_pipelines/pipeline_introduction.md", "nodes_and_pipelines/pipeline_registry.md", "nodes_and_pipelines/run_a_pipeline.md", "nodes_and_pipelines/slice_a_pipeline.md", "notebooks_and_ipython/index.md", "notebooks_and_ipython/kedro_and_notebooks.md", "notebooks_and_ipython/kedro_as_a_data_registry.md", "resources/glossary.md", "resources/index.md", "tutorial/add_another_pipeline.md", "tutorial/create_a_pipeline.md", "tutorial/package_a_project.md", "tutorial/set_up_data.md", "tutorial/spaceflights_tutorial.md", "tutorial/spaceflights_tutorial_faqs.md", "tutorial/tutorial_template.md", "visualisation/index.md", "visualisation/kedro-viz_visualisation.md", "visualisation/preview_datasets.md", "visualisation/visualise_charts_with_plotly.md"], "titles": ["Advanced configuration", "Migration guide for config loaders", "Configuration", "Credentials", "Configuration", "Parameters", "Backwards compatibility &amp; breaking changes", "Guidelines for contributing developers", "Contribute changes to Kedro that are tested on Databricks", "Contribute to the Kedro documentation", "Contribute to Kedro", "Join the Technical Steering Committee", "Advanced Data Catalog usage", "Introduction to the Data Catalog", "Data Catalog YAML examples", "Advanced: Tutorial to create a custom dataset", "The Kedro Data Catalog", "Kedro dataset factories", "Advanced: Partitioned and incremental datasets", "Apache Airflow", "Amazon SageMaker", "Argo Workflows (outdated documentation that needs review)", "AWS Batch (outdated documentation that needs review)", "AWS Step Functions", "Azure ML pipelines", "Dask", "Use a Databricks job to deploy a Kedro project", "Use an IDE, dbx and Databricks Repos to develop a Kedro project", "Use a Databricks workspace to develop a Kedro project", "Visualise a Kedro project in Databricks notebooks", "Databricks", "Distributed deployment", "Deployment", "Kubeflow Pipelines", "Prefect", "Single-machine deployment", "VertexAI", "Automated Testing", "Kedro\u2019s command line interface", "Debugging", "Development", "Code formatting and linting", "Set up PyCharm", "Set up Visual Studio Code", "Experiment tracking in Kedro-Viz", "Common use cases", "Extend Kedro", "Kedro plugins", "FAQs", "First steps", "Set up Kedro", "Kedro concepts", "Create a new Kedro project", "Common use cases", "Hooks examples", "Hooks", "Hooks", "Welcome to Kedro\u2019s documentation!", "PySpark integration", "Introduction to Kedro", "Learn how to use Kedro", "kedro", "kedro.KedroPythonVersionWarning", "kedro.config", "kedro.config.ConfigLoader", "kedro.config.MissingConfigException", "kedro.config.OmegaConfigLoader", "kedro.config.TemplatedConfigLoader", "kedro.extras", "kedro.extras.datasets", "kedro.extras.datasets.api.APIDataSet", "kedro.extras.datasets.biosequence.BioSequenceDataSet", "kedro.extras.datasets.dask.ParquetDataSet", "kedro.extras.datasets.email.EmailMessageDataSet", "kedro.extras.datasets.geopandas.GeoJSONDataSet", "kedro.extras.datasets.holoviews.HoloviewsWriter", "kedro.extras.datasets.json.JSONDataSet", "kedro.extras.datasets.matplotlib.MatplotlibWriter", "kedro.extras.datasets.networkx.GMLDataSet", "kedro.extras.datasets.networkx.GraphMLDataSet", "kedro.extras.datasets.networkx.JSONDataSet", "kedro.extras.datasets.pandas.CSVDataSet", "kedro.extras.datasets.pandas.ExcelDataSet", "kedro.extras.datasets.pandas.FeatherDataSet", "kedro.extras.datasets.pandas.GBQQueryDataSet", "kedro.extras.datasets.pandas.GBQTableDataSet", "kedro.extras.datasets.pandas.GenericDataSet", "kedro.extras.datasets.pandas.HDFDataSet", "kedro.extras.datasets.pandas.JSONDataSet", "kedro.extras.datasets.pandas.ParquetDataSet", "kedro.extras.datasets.pandas.SQLQueryDataSet", "kedro.extras.datasets.pandas.SQLTableDataSet", "kedro.extras.datasets.pandas.XMLDataSet", "kedro.extras.datasets.pickle.PickleDataSet", "kedro.extras.datasets.pillow.ImageDataSet", "kedro.extras.datasets.plotly.JSONDataSet", "kedro.extras.datasets.plotly.PlotlyDataSet", "kedro.extras.datasets.redis.PickleDataSet", "kedro.extras.datasets.spark.DeltaTableDataSet", "kedro.extras.datasets.spark.SparkDataSet", "kedro.extras.datasets.spark.SparkHiveDataSet", "kedro.extras.datasets.spark.SparkJDBCDataSet", "kedro.extras.datasets.svmlight.SVMLightDataSet", "kedro.extras.datasets.tensorflow.TensorFlowModelDataset", "kedro.extras.datasets.text.TextDataSet", "kedro.extras.datasets.tracking.JSONDataSet", "kedro.extras.datasets.tracking.MetricsDataSet", "kedro.extras.datasets.yaml.YAMLDataSet", "kedro.extras.extensions", "kedro.extras.extensions.ipython", "kedro.extras.logging", "kedro.extras.logging.color_logger", "kedro.extras.logging.color_logger.ColorHandler", "kedro.framework", "kedro.framework.cli", "kedro.framework.cli.catalog", "kedro.framework.cli.cli", "kedro.framework.cli.cli.KedroCLI", "kedro.framework.cli.cli.main", "kedro.framework.cli.hooks", "kedro.framework.cli.hooks.manager", "kedro.framework.cli.hooks.manager.CLIHooksManager", "kedro.framework.cli.hooks.manager.get_cli_hook_manager", "kedro.framework.cli.hooks.markers", "kedro.framework.cli.hooks.specs", "kedro.framework.cli.hooks.specs.CLICommandSpecs", "kedro.framework.cli.jupyter", "kedro.framework.cli.jupyter.JupyterCommandGroup", "kedro.framework.cli.micropkg", "kedro.framework.cli.micropkg.safe_extract", "kedro.framework.cli.pipeline", "kedro.framework.cli.pipeline.PipelineArtifacts", "kedro.framework.cli.project", "kedro.framework.cli.registry", "kedro.framework.cli.starters", "kedro.framework.cli.starters.KedroStarterSpec", "kedro.framework.cli.utils", "kedro.framework.cli.utils.CommandCollection", "kedro.framework.cli.utils.KedroCliError", "kedro.framework.cli.utils.command_with_verbosity", "kedro.framework.cli.utils.env_option", "kedro.framework.cli.utils.find_stylesheets", "kedro.framework.cli.utils.forward_command", "kedro.framework.cli.utils.get_pkg_version", "kedro.framework.cli.utils.python_call", "kedro.framework.cli.utils.split_string", "kedro.framework.context", "kedro.framework.context.KedroContext", "kedro.framework.context.KedroContextError", "kedro.framework.hooks", "kedro.framework.hooks.manager", "kedro.framework.hooks.markers", "kedro.framework.hooks.specs", "kedro.framework.hooks.specs.DataCatalogSpecs", "kedro.framework.hooks.specs.DatasetSpecs", "kedro.framework.hooks.specs.KedroContextSpecs", "kedro.framework.hooks.specs.NodeSpecs", "kedro.framework.hooks.specs.PipelineSpecs", "kedro.framework.project", "kedro.framework.project.configure_logging", "kedro.framework.project.configure_project", "kedro.framework.project.find_pipelines", "kedro.framework.project.validate_settings", "kedro.framework.session", "kedro.framework.session.session", "kedro.framework.session.session.KedroSession", "kedro.framework.session.session.KedroSessionError", "kedro.framework.session.shelvestore", "kedro.framework.session.shelvestore.ShelveStore", "kedro.framework.session.store", "kedro.framework.session.store.BaseSessionStore", "kedro.framework.startup", "kedro.framework.startup.ProjectMetadata", "kedro.framework.startup.bootstrap_project", "kedro.io", "kedro.io.AbstractDataSet", "kedro.io.AbstractVersionedDataSet", "kedro.io.CachedDataSet", "kedro.io.DataCatalog", "kedro.io.DataSetAlreadyExistsError", "kedro.io.DataSetError", "kedro.io.DataSetNotFoundError", "kedro.io.IncrementalDataSet", "kedro.io.LambdaDataSet", "kedro.io.MemoryDataSet", "kedro.io.PartitionedDataSet", "kedro.io.Version", "kedro.ipython", "kedro.ipython.load_ipython_extension", "kedro.ipython.magic_reload_kedro", "kedro.ipython.reload_kedro", "kedro.logging", "kedro.logging.RichHandler", "kedro.pipeline", "kedro.pipeline.Pipeline", "kedro.pipeline.modular_pipeline.ModularPipelineError", "kedro.pipeline.modular_pipeline.pipeline", "kedro.pipeline.node", "kedro.pipeline.node.Node", "kedro.runner", "kedro.runner.AbstractRunner", "kedro.runner.ParallelRunner", "kedro.runner.SequentialRunner", "kedro.runner.ThreadRunner", "kedro.runner.run_node", "kedro.utils", "kedro.utils.load_obj", "kedro_datasets", "kedro_datasets.api.APIDataSet", "kedro_datasets.biosequence.BioSequenceDataSet", "kedro_datasets.dask.ParquetDataSet", "kedro_datasets.databricks.ManagedTableDataSet", "kedro_datasets.email.EmailMessageDataSet", "kedro_datasets.geopandas.GeoJSONDataSet", "kedro_datasets.holoviews.HoloviewsWriter", "kedro_datasets.json.JSONDataSet", "kedro_datasets.matplotlib.MatplotlibWriter", "kedro_datasets.networkx.GMLDataSet", "kedro_datasets.networkx.GraphMLDataSet", "kedro_datasets.networkx.JSONDataSet", "kedro_datasets.pandas.CSVDataSet", "kedro_datasets.pandas.DeltaTableDataSet", "kedro_datasets.pandas.ExcelDataSet", "kedro_datasets.pandas.FeatherDataSet", "kedro_datasets.pandas.GBQQueryDataSet", "kedro_datasets.pandas.GBQTableDataSet", "kedro_datasets.pandas.GenericDataSet", "kedro_datasets.pandas.HDFDataSet", "kedro_datasets.pandas.JSONDataSet", "kedro_datasets.pandas.ParquetDataSet", "kedro_datasets.pandas.SQLQueryDataSet", "kedro_datasets.pandas.SQLTableDataSet", "kedro_datasets.pandas.XMLDataSet", "kedro_datasets.pickle.PickleDataSet", "kedro_datasets.pillow.ImageDataSet", "kedro_datasets.plotly.JSONDataSet", "kedro_datasets.plotly.PlotlyDataSet", "kedro_datasets.polars.CSVDataSet", "kedro_datasets.redis.PickleDataSet", "kedro_datasets.snowflake.SnowparkTableDataSet", "kedro_datasets.spark.DeltaTableDataSet", "kedro_datasets.spark.SparkDataSet", "kedro_datasets.spark.SparkHiveDataSet", "kedro_datasets.spark.SparkJDBCDataSet", "kedro_datasets.spark.SparkStreamingDataSet", "kedro_datasets.svmlight.SVMLightDataSet", "kedro_datasets.tensorflow.TensorFlowModelDataSet", "kedro_datasets.text.TextDataSet", "kedro_datasets.tracking.JSONDataSet", "kedro_datasets.tracking.MetricsDataSet", "kedro_datasets.video.VideoDataSet", "kedro_datasets.yaml.YAMLDataSet", "Dependencies", "Kedro project setup", "Lifecycle management with <code class=\"docutils literal notranslate\"><span class=\"pre\">KedroSession</span></code>", "Project settings", "Kedro starters", "Logging", "Default framework-side logging configuration", "Nodes and pipelines", "Micro-packaging", "Modular pipelines", "Nodes", "Pipelines", "The pipeline registry", "Run a pipeline", "Slice a pipeline", "Kedro for notebook users", "Kedro and Jupyter Notebooks", "Kedro as a data registry", "Kedro glossary", "FAQs and resources", "Create a data science pipeline", "Create a data processing pipeline", "Package an entire Kedro project", "Set up the data", "Next steps: Tutorial", "Spaceflights tutorial FAQs", "Set up the spaceflights project", "Visualisation with Kedro-Viz", "Visualise the spaceflights project", "Preview data in Kedro-Viz", "Visualise charts in Kedro-Viz"], "terms": {"The": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 37, 38, 39, 41, 43, 44, 45, 47, 48, 50, 51, 52, 54, 56, 57, 58, 60, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 105, 106, 107, 109, 112, 125, 138, 147, 153, 154, 155, 156, 157, 165, 178, 189, 192, 194, 196, 197, 198, 200, 201, 202, 203, 204, 208, 209, 210, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282], "document": [0, 2, 3, 7, 8, 10, 12, 13, 14, 15, 19, 20, 24, 25, 26, 27, 30, 32, 33, 34, 36, 37, 41, 43, 45, 47, 51, 52, 53, 54, 56, 58, 60, 69, 73, 78, 79, 80, 99, 123, 124, 141, 151, 152, 212, 217, 218, 219, 241, 244, 252, 255, 256, 258, 261, 262, 265, 266, 268, 270, 272, 273, 275, 276, 277, 278, 280, 281, 282], "describ": [0, 2, 3, 6, 7, 11, 15, 16, 19, 26, 35, 42, 43, 44, 47, 54, 56, 194, 256, 262, 263, 265, 266, 270, 272, 274, 280, 281, 282], "satisfi": [0, 18, 25, 66, 93, 97, 200, 201, 202, 203, 233, 238], "most": [0, 1, 2, 7, 37, 45, 48, 50, 51, 256, 258, 265, 277, 278], "common": [0, 2, 11, 12, 46, 48, 55, 57, 256, 258, 270], "requir": [0, 2, 3, 7, 12, 13, 14, 15, 18, 19, 21, 23, 25, 26, 27, 28, 30, 31, 34, 35, 37, 38, 41, 42, 44, 45, 48, 51, 52, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 100, 103, 104, 105, 106, 107, 143, 161, 173, 175, 176, 194, 198, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 258, 260, 261, 265, 266, 270, 272, 273, 277, 278, 280, 282], "standard": [0, 2, 7, 11, 18, 34, 41, 45, 50, 52, 73, 90, 212, 230, 255, 257, 258, 262, 273, 279], "project": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 23, 25, 30, 31, 32, 34, 37, 39, 41, 42, 43, 49, 56, 58, 60, 61, 64, 66, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 107, 112, 116, 125, 134, 146, 147, 148, 163, 164, 165, 171, 172, 173, 189, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 249, 250, 251, 254, 256, 257, 260, 261, 264, 265, 267, 268, 269, 270, 277, 279, 281, 282], "By": [0, 2, 5, 13, 26, 27, 44, 51, 58, 161, 255, 256, 258, 260, 265, 272, 280], "i": [0, 1, 2, 3, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 116, 131, 134, 135, 147, 153, 154, 155, 162, 165, 167, 168, 170, 172, 174, 175, 176, 178, 186, 188, 189, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 268, 269, 270, 272, 273, 274, 275, 276, 279, 280, 281, 282], "set": [0, 1, 3, 5, 14, 15, 18, 19, 21, 23, 30, 34, 35, 38, 39, 40, 45, 48, 49, 51, 52, 53, 54, 56, 57, 58, 60, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 138, 148, 158, 160, 162, 166, 174, 175, 176, 178, 186, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 258, 261, 263, 265, 266, 268, 269, 272, 273, 276, 280, 281, 282], "up": [0, 3, 12, 15, 19, 21, 23, 30, 31, 34, 35, 38, 39, 40, 47, 49, 51, 52, 56, 57, 58, 60, 135, 161, 194, 256, 261, 268, 269, 270, 272, 273, 276, 280, 281, 282], "configload": [0, 2, 3, 5, 37, 67, 147, 162, 255], "class": [0, 1, 2, 3, 5, 7, 13, 14, 15, 16, 18, 22, 23, 25, 37, 39, 47, 51, 52, 53, 54, 56, 58, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 116, 117, 120, 121, 124, 125, 126, 127, 130, 131, 134, 135, 136, 137, 138, 146, 147, 148, 152, 153, 154, 155, 156, 157, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 186, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 261, 262, 265, 270, 273], "also": [0, 1, 5, 7, 9, 12, 13, 14, 15, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 35, 38, 41, 42, 43, 44, 47, 50, 52, 53, 56, 58, 60, 64, 66, 67, 72, 89, 97, 100, 208, 210, 211, 221, 229, 230, 238, 242, 252, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 268, 270, 272, 274, 275, 276, 278, 282], "two": [0, 2, 13, 15, 17, 18, 21, 26, 28, 38, 44, 47, 48, 51, 52, 66, 208, 221, 256, 257, 258, 261, 262, 263, 268, 272, 273, 274, 275, 281, 282], "addit": [0, 7, 11, 15, 25, 26, 37, 47, 48, 56, 72, 89, 147, 161, 178, 208, 210, 221, 229, 230, 252, 255, 258, 260, 274, 275, 276, 278], "loader": [0, 2, 3, 4, 5, 12, 13, 21, 53, 57, 58], "more": [0, 2, 3, 5, 7, 8, 9, 12, 13, 15, 16, 18, 21, 22, 23, 25, 37, 38, 41, 42, 43, 47, 50, 51, 53, 56, 58, 60, 66, 67, 70, 77, 123, 124, 151, 152, 161, 162, 165, 178, 189, 194, 198, 208, 216, 250, 252, 256, 258, 261, 263, 265, 270, 272, 273, 274], "function": [0, 5, 6, 7, 12, 15, 18, 22, 25, 32, 34, 36, 37, 38, 44, 45, 47, 48, 50, 51, 53, 58, 63, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 116, 120, 126, 128, 136, 137, 140, 146, 147, 150, 158, 161, 171, 174, 175, 176, 178, 187, 188, 190, 193, 194, 197, 198, 199, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 260, 261, 263, 264, 265, 269, 270, 272, 282], "each": [0, 5, 7, 12, 13, 14, 18, 21, 22, 23, 25, 26, 30, 31, 33, 34, 35, 37, 38, 41, 44, 48, 50, 51, 52, 53, 58, 99, 153, 189, 194, 208, 241, 244, 252, 256, 263, 264, 268, 272, 273, 276, 281, 282], "altern": [0, 2, 5, 7, 12, 14, 15, 18, 21, 22, 35, 41, 161, 256, 258, 262, 265, 274], "have": [0, 1, 2, 5, 7, 8, 9, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 54, 56, 58, 60, 157, 161, 175, 178, 194, 197, 198, 206, 211, 221, 255, 256, 258, 261, 262, 263, 265, 266, 268, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282], "differ": [0, 1, 2, 8, 13, 14, 16, 19, 26, 27, 28, 31, 32, 34, 35, 38, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 58, 63, 64, 66, 85, 178, 198, 205, 225, 239, 252, 257, 258, 260, 262, 265, 270, 272, 273, 274, 275, 278, 280, 281], "featur": [0, 7, 10, 11, 18, 20, 23, 27, 28, 37, 42, 44, 47, 48, 58, 96, 102, 236, 245, 261, 262, 268, 269, 272, 274], "follow": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 31, 32, 34, 35, 37, 38, 41, 42, 43, 44, 47, 48, 50, 51, 52, 53, 54, 56, 58, 60, 64, 66, 67, 109, 157, 194, 198, 211, 221, 252, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282], "section": [0, 2, 7, 9, 11, 13, 15, 16, 18, 22, 26, 27, 28, 32, 37, 41, 42, 43, 44, 49, 50, 51, 52, 58, 60, 255, 258, 260, 261, 262, 270, 272, 273, 274, 275, 278, 280, 281], "specif": [0, 2, 9, 12, 13, 15, 16, 17, 18, 23, 25, 27, 34, 39, 41, 44, 45, 47, 48, 50, 51, 54, 66, 72, 73, 74, 76, 81, 82, 86, 87, 88, 89, 92, 93, 94, 95, 96, 104, 105, 106, 107, 124, 125, 135, 152, 153, 154, 155, 156, 157, 175, 176, 188, 210, 212, 213, 215, 220, 221, 222, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 247, 248, 249, 251, 256, 260, 264, 266, 268, 270, 274, 275, 276, 277, 278], "detail": [0, 2, 3, 7, 13, 17, 18, 19, 20, 21, 23, 28, 33, 36, 37, 42, 52, 78, 79, 80, 178, 217, 218, 219, 245, 254, 268, 273], "an": [0, 2, 5, 7, 8, 9, 11, 12, 13, 15, 16, 18, 21, 22, 25, 28, 30, 31, 33, 34, 35, 38, 39, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 131, 138, 150, 156, 157, 162, 165, 168, 170, 175, 176, 178, 187, 194, 198, 200, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 258, 260, 261, 262, 264, 265, 268, 269, 270, 272, 273, 276, 280], "extens": [0, 2, 27, 28, 29, 38, 42, 45, 47, 64, 66, 67, 68, 187, 188, 268, 274, 278], "allow": [0, 1, 2, 5, 7, 12, 13, 15, 17, 18, 19, 21, 22, 25, 26, 27, 28, 35, 37, 38, 42, 43, 47, 51, 58, 67, 70, 74, 83, 84, 90, 91, 93, 97, 100, 101, 156, 178, 189, 208, 211, 213, 223, 224, 230, 231, 233, 238, 242, 243, 254, 256, 260, 261, 262, 268, 270, 274, 282], "you": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 56, 58, 59, 60, 64, 66, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 103, 104, 105, 106, 107, 112, 165, 178, 189, 194, 196, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282], "To": [0, 1, 2, 7, 8, 9, 12, 13, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 34, 37, 38, 39, 41, 42, 43, 44, 45, 47, 50, 52, 54, 56, 58, 66, 73, 82, 90, 91, 101, 178, 189, 212, 222, 230, 231, 239, 243, 252, 256, 258, 260, 261, 262, 263, 265, 266, 268, 270, 272, 273, 274, 277, 278, 280, 281, 282], "appli": [0, 8, 12, 28, 34, 38, 53, 54, 58, 90, 194, 196, 197, 198, 230, 256, 260, 261, 265, 268, 270], "your": [0, 1, 2, 3, 5, 6, 7, 9, 10, 12, 13, 14, 16, 17, 18, 19, 23, 24, 29, 30, 32, 33, 39, 41, 42, 43, 47, 48, 51, 52, 53, 57, 58, 64, 72, 82, 99, 112, 165, 178, 210, 211, 221, 222, 241, 244, 252, 255, 256, 257, 260, 261, 262, 263, 265, 266, 268, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282], "config_loader_class": [0, 1, 66, 67, 255], "constant": [0, 1, 30, 66, 67], "src": [0, 1, 2, 15, 17, 19, 22, 23, 25, 26, 27, 28, 31, 35, 37, 38, 41, 42, 43, 44, 45, 50, 52, 53, 54, 56, 58, 252, 256, 260, 261, 262, 264, 265, 268, 272, 273, 274, 277, 278, 280, 282], "package_nam": [0, 1, 2, 21, 26, 37, 38, 43, 50, 53, 54, 56, 58, 143, 147, 160, 165, 172, 255, 260, 262, 264, 265, 268, 272, 274], "py": [0, 1, 2, 7, 12, 15, 17, 21, 22, 23, 25, 26, 27, 34, 37, 38, 39, 42, 43, 44, 45, 47, 50, 52, 53, 54, 56, 58, 64, 66, 67, 97, 118, 160, 167, 237, 238, 252, 255, 256, 260, 261, 262, 264, 265, 268, 272, 273, 274, 280, 282], "from": [0, 1, 3, 5, 6, 7, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54, 56, 58, 63, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 114, 116, 134, 135, 137, 138, 143, 147, 153, 154, 161, 165, 167, 172, 175, 176, 178, 194, 196, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 275, 278, 280, 281, 282], "config": [0, 2, 3, 4, 5, 12, 15, 26, 34, 35, 37, 38, 41, 43, 47, 52, 53, 54, 57, 58, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 147, 153, 175, 176, 178, 188, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 260, 265, 274], "import": [0, 2, 3, 5, 12, 14, 15, 17, 18, 21, 22, 23, 25, 26, 27, 28, 34, 37, 38, 39, 41, 42, 43, 44, 45, 47, 51, 53, 54, 56, 58, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 161, 162, 165, 167, 175, 176, 178, 190, 194, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 254, 258, 260, 261, 262, 264, 265, 266, 272, 273, 274, 282], "new": [0, 1, 2, 5, 7, 10, 11, 12, 13, 15, 16, 18, 22, 25, 29, 34, 35, 37, 42, 43, 44, 45, 47, 49, 54, 57, 60, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 135, 156, 165, 176, 178, 194, 196, 198, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 257, 260, 262, 265, 266, 268, 269, 272, 273, 276, 280, 281, 282], "when": [0, 1, 2, 3, 5, 7, 8, 12, 13, 14, 15, 17, 18, 23, 25, 26, 27, 28, 30, 34, 35, 37, 38, 39, 41, 42, 45, 47, 50, 51, 56, 57, 58, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 148, 161, 165, 167, 173, 175, 176, 178, 188, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 265, 266, 267, 268, 270, 272, 273, 275, 276, 278, 280, 281, 282], "can": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 56, 58, 59, 60, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 112, 161, 178, 192, 196, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282], "dictionari": [0, 2, 5, 12, 13, 14, 15, 18, 25, 54, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 147, 156, 159, 165, 175, 176, 178, 189, 194, 198, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 257, 262, 264, 265, 268], "let": [0, 9, 12, 13, 15, 18, 19, 22, 30, 37, 47, 165, 262, 265, 266], "": [0, 2, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 48, 50, 51, 52, 54, 55, 56, 60, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 113, 114, 118, 119, 123, 124, 125, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 165, 167, 175, 176, 192, 196, 198, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 280], "assum": [0, 2, 12, 13, 14, 15, 18, 19, 21, 22, 25, 31, 35, 42, 43, 44, 52, 58, 268, 278, 280, 281, 282], "contain": [0, 2, 3, 5, 6, 7, 12, 13, 14, 15, 18, 19, 21, 22, 23, 25, 26, 27, 28, 31, 32, 33, 38, 42, 43, 44, 47, 48, 51, 54, 56, 64, 66, 89, 93, 97, 108, 110, 124, 147, 152, 156, 165, 178, 189, 191, 194, 198, 204, 208, 221, 229, 233, 238, 252, 254, 255, 256, 260, 262, 264, 265, 268, 269, 270, 272, 273, 274, 275, 276], "conf": [0, 2, 3, 5, 12, 13, 14, 15, 18, 19, 22, 23, 25, 26, 28, 35, 38, 42, 43, 44, 57, 64, 66, 100, 112, 153, 242, 255, 256, 257, 258, 260, 261, 269, 272, 273, 274, 275, 278, 282], "base": [0, 1, 3, 5, 8, 11, 12, 13, 14, 15, 18, 19, 23, 24, 27, 28, 30, 32, 34, 37, 38, 44, 47, 48, 52, 53, 54, 57, 64, 66, 67, 102, 147, 170, 175, 176, 200, 201, 203, 245, 256, 257, 260, 261, 265, 269, 270, 272, 273, 275, 282], "yml": [0, 2, 5, 12, 14, 15, 16, 18, 19, 21, 22, 23, 25, 27, 28, 38, 42, 44, 51, 52, 57, 64, 66, 67, 70, 90, 91, 112, 147, 175, 176, 208, 230, 231, 239, 256, 257, 258, 260, 261, 262, 265, 269, 272, 273, 275, 277, 278, 280, 282], "content": [0, 5, 9, 10, 12, 13, 14, 15, 19, 22, 23, 25, 26, 27, 28, 51, 56, 58, 60, 67, 101, 243, 272, 274, 275, 276], "bucket_nam": [0, 23, 72, 210], "my_s3_bucket": [0, 67], "key_prefix": 0, "my": [0, 7, 13, 14, 15, 18, 38, 44, 48, 52, 54, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 107, 175, 176, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 249, 250, 251, 272], "kei": [0, 1, 2, 3, 5, 12, 13, 14, 16, 21, 22, 25, 26, 27, 28, 35, 38, 42, 44, 47, 51, 56, 60, 64, 66, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 86, 87, 90, 93, 94, 95, 96, 97, 99, 100, 104, 105, 106, 107, 156, 165, 178, 189, 194, 198, 200, 201, 202, 203, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 226, 227, 230, 233, 234, 235, 236, 238, 241, 242, 247, 248, 249, 251, 255, 256, 257, 258, 260, 270, 272, 275, 279, 280], "prefix": [0, 2, 5, 17, 54, 71, 73, 74, 75, 76, 77, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 103, 104, 105, 106, 107, 196, 209, 212, 213, 214, 215, 216, 220, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 241, 245, 246, 247, 248, 249, 251, 261, 272], "dataset": [0, 3, 7, 16, 19, 21, 22, 25, 34, 39, 45, 47, 51, 52, 54, 57, 67, 68, 153, 154, 156, 165, 175, 176, 178, 194, 196, 197, 198, 200, 201, 202, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 245, 246, 247, 248, 249, 251, 252, 256, 261, 262, 263, 265, 269, 270, 272, 273, 274, 276, 278, 280, 281, 282], "csv": [0, 12, 13, 15, 17, 18, 19, 22, 23, 44, 48, 53, 58, 67, 81, 83, 86, 99, 175, 176, 178, 220, 223, 226, 237, 241, 244, 262, 269, 273, 275, 277, 278, 280, 281], "panda": [0, 12, 13, 14, 15, 17, 18, 19, 22, 23, 47, 53, 67, 72, 74, 93, 96, 97, 101, 175, 176, 178, 197, 210, 211, 213, 233, 236, 238, 243, 252, 256, 262, 266, 268, 269, 272, 273, 275, 277, 278, 280, 281, 282], "csvdataset": [0, 12, 13, 14, 15, 17, 18, 19, 22, 23, 53, 54, 67, 178, 252, 262, 265, 268, 269, 272, 273, 275, 277, 278, 280, 281, 282], "spark": [0, 7, 12, 13, 15, 17, 18, 53, 57, 67, 211, 252, 269, 272], "sparkdataset": [0, 12, 13, 14, 15, 17, 18, 53, 58, 67, 98, 240, 265, 269], "folder": [0, 3, 5, 7, 9, 13, 14, 18, 22, 25, 26, 27, 35, 37, 38, 43, 44, 48, 51, 52, 58, 67, 72, 77, 100, 210, 216, 242, 255, 256, 260, 261, 268, 269, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282], "raw": [0, 15, 21, 23, 42, 43, 44, 48, 51, 57, 67, 87, 178, 227, 244, 273, 277, 280, 281], "01_raw": [0, 12, 13, 14, 15, 17, 19, 26, 27, 28, 44, 53, 58, 67, 81, 82, 83, 86, 88, 89, 99, 102, 104, 175, 176, 220, 221, 222, 223, 226, 228, 229, 237, 241, 244, 245, 247, 250, 269, 275, 280, 281], "int": [0, 7, 22, 67, 70, 201, 203, 221], "02_intermedi": [0, 12, 13, 14, 26, 27, 28, 67, 81, 82, 83, 89, 98, 99, 220, 222, 223, 229, 237, 240, 241, 250, 273, 280], "pri": [0, 67], "03_primari": [0, 26, 27, 28, 58, 67, 273, 277, 280], "fea": [0, 67], "04_featur": [0, 26, 27, 28, 67], "point": [0, 1, 12, 27, 28, 34, 38, 41, 44, 45, 47, 56, 71, 72, 73, 74, 76, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 99, 104, 105, 106, 107, 118, 165, 178, 188, 194, 196, 209, 210, 212, 213, 215, 220, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 247, 248, 249, 251, 256, 258, 260, 261, 268], "add": [0, 2, 5, 7, 10, 11, 12, 14, 15, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 34, 35, 38, 42, 43, 47, 51, 52, 53, 55, 56, 118, 140, 178, 208, 252, 256, 260, 261, 262, 264, 265, 268, 272, 273, 275, 276, 278, 280, 281], "config_loader_arg": [0, 1, 2, 64, 66, 67, 255], "globals_pattern": [0, 67], "now": [0, 5, 8, 12, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 34, 37, 44, 45, 52, 109, 258, 261, 265, 268, 280, 282], "here": [0, 13, 15, 17, 18, 19, 21, 26, 30, 33, 38, 42, 43, 44, 45, 47, 51, 52, 53, 66, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 105, 106, 107, 192, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 246, 247, 248, 249, 251, 256, 261, 262, 265, 272, 275, 277, 280], "exampl": [0, 1, 2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 31, 34, 35, 38, 39, 41, 42, 43, 44, 45, 50, 51, 53, 55, 56, 57, 58, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 165, 168, 175, 176, 178, 189, 194, 197, 198, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 260, 261, 262, 263, 264, 265, 266, 269, 270, 272, 276, 278, 280, 281, 282], "raw_boat_data": [0, 67], "type": [0, 2, 7, 12, 14, 15, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 34, 35, 41, 43, 44, 47, 48, 50, 51, 52, 53, 54, 58, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 135, 138, 141, 143, 147, 154, 155, 165, 173, 175, 176, 178, 194, 196, 197, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 262, 268, 269, 270, 272, 273, 275, 277, 278, 280, 281, 282], "nest": [0, 5, 14, 15, 38, 71, 73, 74, 75, 76, 77, 78, 79, 80, 86, 87, 90, 93, 94, 95, 96, 97, 104, 105, 106, 107, 189, 209, 212, 213, 214, 215, 216, 217, 218, 219, 226, 227, 230, 233, 234, 235, 236, 238, 247, 248, 249, 251, 261], "path": [0, 1, 2, 7, 12, 13, 14, 15, 18, 21, 23, 28, 34, 35, 37, 38, 42, 43, 44, 47, 51, 52, 54, 64, 65, 66, 67, 72, 84, 89, 90, 93, 97, 98, 99, 100, 129, 131, 135, 143, 147, 165, 168, 170, 172, 175, 176, 189, 190, 206, 210, 221, 224, 229, 230, 233, 238, 240, 241, 242, 250, 254, 256, 258, 260, 268, 269, 272, 274, 275], "dict": [0, 12, 15, 18, 22, 25, 34, 38, 44, 54, 56, 58, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 147, 157, 165, 167, 169, 175, 176, 178, 194, 196, 197, 198, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 262, 264, 265, 266, 268, 272], "filepath": [0, 12, 14, 15, 17, 18, 19, 22, 23, 44, 53, 54, 58, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 106, 107, 175, 176, 178, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 262, 266, 269, 272, 273, 275, 277, 280, 281, 282], "s3a": [0, 14, 53, 58, 67, 99, 221, 241, 269], "boat": [0, 14, 17, 67, 89, 178, 197, 221, 229], "file_format": [0, 12, 14, 17, 53, 58, 67, 86, 98, 99, 226, 240, 241, 244, 269], "parquet": [0, 17, 18, 67, 72, 89, 98, 99, 100, 210, 229, 240, 241, 242, 244, 273, 278], "raw_car_data": [0, 67], "s3": [0, 12, 13, 15, 18, 21, 22, 23, 38, 44, 48, 53, 58, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 106, 107, 178, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 241, 245, 246, 247, 248, 249, 250, 251, 260], "data": [0, 2, 5, 8, 11, 15, 17, 18, 19, 21, 23, 25, 29, 35, 39, 47, 52, 53, 55, 56, 57, 59, 61, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 153, 154, 156, 165, 168, 170, 174, 175, 176, 178, 186, 193, 194, 197, 198, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 261, 264, 265, 266, 267, 268, 274, 276, 279, 280], "filenam": [0, 2, 3, 5, 18, 44, 66, 178], "car": [0, 12, 13, 14, 17, 53, 67, 72, 76, 81, 83, 86, 102, 105, 106, 107, 178, 197, 210, 215, 220, 223, 226, 237, 245, 248, 249, 250, 251], "found": [0, 9, 12, 15, 22, 38, 42, 43, 50, 64, 65, 66, 67, 90, 91, 100, 118, 143, 192, 230, 231, 242, 258, 260, 262, 264, 265, 274, 276], "under": [0, 2, 5, 7, 11, 19, 22, 28, 35, 38, 43, 44, 58, 73, 82, 212, 222, 255, 256, 260, 264, 280, 281], "hood": [0, 2, 5, 58, 256, 264], "jmespath": [0, 67], "extract": [0, 23, 206, 270], "element": [0, 7, 41, 51, 256], "declar": [0, 14, 22, 25, 26, 47, 56, 123, 151, 261], "fill": [0, 27, 28, 42], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 29, 30, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 64, 66, 67, 72, 86, 90, 91, 97, 99, 100, 102, 104, 108, 109, 110, 112, 116, 120, 123, 134, 135, 138, 147, 150, 151, 155, 156, 157, 161, 162, 164, 167, 168, 169, 171, 175, 176, 178, 186, 187, 188, 190, 191, 194, 196, 197, 198, 201, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282], "could": [0, 7, 10, 14, 17, 18, 23, 25, 39, 45, 58, 67, 90, 93, 97, 230, 233, 238, 252, 256, 261, 264, 268, 272], "look": [0, 7, 8, 11, 12, 15, 18, 19, 20, 22, 25, 26, 27, 33, 36, 37, 42, 44, 54, 58, 64, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 118, 188, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 249, 250, 251, 256, 261, 266, 272, 273, 274, 277], "like": [0, 7, 9, 12, 15, 17, 18, 20, 22, 23, 25, 27, 35, 38, 41, 42, 43, 44, 47, 48, 50, 53, 55, 58, 64, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 167, 169, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 249, 250, 251, 258, 260, 261, 265, 266, 268, 278], "another_bucket_nam": 0, "non_string_kei": 0, "10": [0, 23, 26, 27, 28, 34, 50, 58, 75, 82, 97, 214, 221, 222, 238, 262, 265, 272, 273, 277, 278, 281], "globals_dict": [0, 67], "If": [0, 1, 2, 3, 5, 7, 8, 9, 12, 13, 15, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 42, 43, 44, 45, 47, 50, 52, 53, 54, 58, 64, 66, 67, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 143, 147, 156, 165, 175, 176, 186, 189, 194, 196, 200, 201, 202, 203, 204, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 241, 242, 245, 246, 247, 248, 249, 250, 251, 256, 258, 260, 261, 262, 264, 265, 268, 272, 273, 274, 276, 277, 280, 281, 282], "specifi": [0, 1, 3, 9, 12, 13, 15, 18, 21, 22, 26, 28, 34, 38, 42, 43, 44, 48, 52, 56, 58, 64, 66, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 143, 147, 165, 176, 178, 189, 194, 196, 197, 198, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 258, 260, 261, 262, 264, 265, 268, 270, 272, 274, 275, 278, 280, 281, 282], "both": [0, 1, 2, 5, 13, 15, 18, 20, 23, 24, 25, 26, 29, 34, 41, 43, 44, 47, 58, 70, 84, 102, 196, 208, 224, 245, 252, 254, 255, 258, 261, 263, 264, 265, 266, 273, 274], "result": [0, 2, 9, 12, 13, 18, 22, 25, 27, 28, 35, 37, 38, 44, 48, 58, 66, 67, 194, 196, 197, 198, 200, 201, 202, 203, 254, 261, 262, 264, 266, 268, 274, 282], "merg": [0, 2, 7, 13, 47, 58, 66, 67, 273], "In": [0, 1, 2, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 26, 27, 28, 32, 34, 37, 38, 43, 44, 47, 51, 53, 54, 58, 60, 64, 66, 67, 162, 194, 198, 230, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 274, 276, 278, 280, 282], "case": [0, 5, 6, 7, 8, 12, 15, 16, 18, 26, 30, 34, 44, 46, 48, 55, 57, 64, 66, 67, 70, 90, 91, 101, 166, 178, 198, 208, 230, 231, 243, 256, 260, 261, 262, 263, 265], "conflict": [0, 41, 67, 252, 261], "take": [0, 2, 5, 7, 9, 17, 19, 20, 23, 25, 26, 27, 28, 33, 36, 38, 41, 42, 44, 45, 53, 54, 58, 64, 66, 67, 86, 99, 100, 106, 147, 165, 211, 226, 239, 241, 242, 249, 254, 258, 261, 265, 266, 267, 270, 272, 273, 276, 277], "preced": [0, 2, 5, 38, 64, 66, 67, 147, 165, 254, 265], "omegaconf": [0, 1, 66], "python": [0, 7, 8, 9, 15, 18, 19, 21, 22, 23, 25, 26, 27, 28, 34, 35, 37, 43, 47, 50, 51, 52, 58, 59, 60, 62, 67, 70, 72, 73, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 144, 192, 208, 210, 211, 212, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 260, 261, 262, 265, 268, 270, 272, 273, 274, 276, 278, 280], "librari": [0, 7, 8, 13, 14, 20, 25, 26, 27, 28, 29, 37, 38, 43, 45, 47, 50, 51, 53, 70, 73, 76, 93, 97, 105, 106, 174, 208, 212, 215, 233, 238, 248, 249, 254, 255, 257, 262, 268, 272, 276], "design": [0, 2, 7, 11, 13, 60, 91, 231, 261], "It": [0, 14, 15, 18, 19, 21, 22, 25, 28, 29, 30, 33, 37, 38, 41, 42, 43, 44, 47, 48, 51, 52, 58, 59, 66, 70, 72, 73, 76, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 99, 101, 102, 105, 106, 107, 125, 153, 178, 201, 202, 203, 208, 210, 212, 215, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 241, 243, 244, 245, 248, 249, 251, 260, 261, 262, 265, 270, 275, 276, 279, 280], "yaml": [0, 1, 2, 12, 13, 15, 16, 17, 19, 41, 43, 57, 58, 64, 66, 70, 72, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 208, 210, 211, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 260, 272, 273, 280], "hierarch": 0, "system": [0, 8, 13, 16, 18, 26, 27, 28, 31, 33, 34, 44, 45, 50, 51, 72, 178, 210, 258, 275], "support": [0, 7, 11, 13, 15, 18, 20, 21, 24, 30, 38, 42, 43, 45, 50, 51, 57, 58, 66, 71, 73, 74, 75, 76, 77, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 135, 203, 208, 209, 212, 213, 214, 215, 216, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 256, 258, 262, 265, 268, 274, 280, 281, 282], "multipl": [0, 5, 15, 16, 18, 22, 23, 31, 38, 39, 44, 47, 51, 77, 166, 194, 198, 216, 262, 265, 266, 268, 272], "sourc": [0, 7, 9, 15, 16, 19, 21, 25, 26, 27, 34, 35, 38, 42, 43, 48, 50, 51, 58, 59, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 117, 118, 121, 122, 125, 127, 129, 131, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 153, 154, 155, 156, 157, 159, 160, 161, 162, 165, 166, 168, 170, 172, 173, 175, 176, 178, 186, 188, 189, 190, 192, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 260, 265, 268, 270, 274, 275, 276, 278], "0": [0, 1, 5, 7, 13, 16, 17, 19, 22, 23, 25, 26, 27, 28, 37, 38, 41, 42, 43, 44, 47, 50, 52, 53, 54, 58, 69, 71, 96, 97, 102, 105, 106, 131, 161, 165, 172, 186, 209, 236, 238, 245, 248, 249, 250, 256, 260, 263, 264, 265, 266, 268, 272, 273, 274, 275, 278, 280, 281, 282], "18": [0, 1, 13, 16, 17, 19, 27, 34, 38, 42, 43, 44, 47, 161, 264, 266, 272, 275, 278, 280], "5": [0, 12, 14, 23, 37, 44, 72, 74, 76, 77, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 101, 107, 172, 178, 198, 210, 213, 215, 216, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 243, 251, 262, 265, 268, 272, 278, 281], "activ": [0, 7, 8, 9, 11, 26, 27, 28, 37, 38, 42, 44, 50, 147, 200, 201, 202, 203, 204], "develop": [0, 2, 6, 9, 13, 23, 26, 30, 31, 35, 37, 41, 42, 43, 56, 57, 178, 239, 261, 267, 268, 270, 272], "wa": [0, 1, 8, 11, 12, 15, 19, 21, 22, 25, 28, 35, 44, 47, 50, 52, 56, 58, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 125, 143, 153, 154, 155, 156, 157, 175, 176, 198, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 266, 272, 277, 278, 280, 281], "first": [0, 5, 7, 9, 12, 13, 15, 16, 18, 21, 22, 26, 27, 28, 29, 34, 38, 42, 43, 44, 51, 52, 56, 57, 64, 66, 86, 131, 172, 186, 189, 194, 226, 260, 262, 263, 266, 268, 272, 273, 274, 275], "avail": [0, 2, 5, 7, 11, 13, 14, 15, 16, 18, 19, 23, 27, 28, 31, 37, 38, 39, 41, 43, 44, 47, 50, 60, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 103, 104, 105, 106, 107, 114, 116, 134, 178, 186, 192, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 246, 247, 248, 249, 251, 255, 256, 258, 261, 265, 268, 270, 272, 275], "due": [0, 7, 12, 30, 194], "later": [0, 11, 19, 23, 30, 34, 50, 260, 264, 267, 268], "releas": [0, 18, 21, 22, 25, 32, 50, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 273], "u": [0, 1, 9, 14, 18, 21, 22, 50, 261, 263, 266], "know": [0, 9, 14, 38, 262, 263, 270], "ani": [0, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 28, 31, 33, 35, 38, 41, 43, 44, 45, 47, 48, 50, 53, 54, 56, 58, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 147, 154, 157, 162, 165, 175, 176, 178, 194, 196, 197, 198, 200, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 258, 260, 261, 262, 264, 265, 268, 269, 270, 272, 274, 275, 276], "feedback": 0, "about": [0, 2, 6, 7, 8, 9, 10, 11, 15, 16, 18, 21, 26, 37, 38, 42, 43, 47, 50, 51, 53, 56, 62, 124, 152, 256, 261, 265, 268, 270, 272, 274, 275], "json": [0, 1, 2, 12, 13, 14, 15, 18, 23, 26, 42, 43, 44, 47, 64, 66, 70, 80, 88, 95, 96, 99, 105, 106, 194, 208, 211, 219, 228, 235, 236, 241, 244, 248, 249, 256, 266, 280, 282], "accept": [0, 7, 11, 13, 15, 18, 21, 25, 34, 38, 51, 70, 93, 97, 221, 230, 233, 238, 260, 268, 278], "guidanc": [0, 2, 7, 11, 26], "want": [0, 2, 7, 11, 12, 18, 21, 22, 28, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 50, 53, 56, 58, 165, 189, 256, 258, 261, 265, 266, 268, 269, 272, 273, 274, 276, 278, 280, 281, 282], "pattern": [0, 1, 16, 17, 42, 47, 58, 64, 66, 67, 176, 178], "find": [0, 8, 9, 15, 16, 18, 22, 26, 27, 31, 38, 42, 43, 47, 48, 51, 59, 60, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 161, 165, 176, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 246, 247, 248, 249, 251, 256, 258, 263, 272, 275, 277, 278], "need": [0, 1, 2, 6, 8, 9, 11, 13, 14, 15, 16, 18, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 42, 43, 44, 45, 47, 48, 50, 51, 52, 56, 58, 90, 91, 135, 165, 178, 194, 196, 197, 198, 230, 231, 254, 255, 256, 258, 260, 261, 262, 264, 265, 266, 267, 268, 269, 272, 273, 274, 277, 278, 279, 281, 282], "For": [0, 1, 2, 3, 7, 10, 12, 13, 15, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 31, 34, 35, 37, 38, 39, 41, 42, 44, 45, 47, 50, 52, 53, 54, 56, 58, 60, 64, 66, 67, 72, 86, 99, 100, 123, 124, 151, 152, 161, 178, 208, 210, 226, 241, 242, 244, 252, 256, 258, 261, 262, 263, 264, 265, 266, 268, 272, 276, 278, 280], "param": [0, 5, 14, 17, 22, 25, 38, 54, 70, 135, 145, 147, 157, 189, 196, 208, 230, 261, 268, 272], "name": [0, 3, 5, 8, 12, 13, 15, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 31, 34, 35, 37, 38, 41, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 56, 58, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 127, 142, 147, 154, 156, 161, 165, 175, 176, 178, 189, 194, 196, 197, 198, 200, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 258, 260, 261, 262, 263, 264, 266, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282], "convent": [0, 2, 15, 31, 51, 56, 64, 66, 67, 178, 256, 261, 280], "instead": [0, 1, 3, 17, 18, 26, 27, 35, 38, 50, 54, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 162, 175, 176, 190, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 262, 272], "e": [0, 2, 7, 13, 14, 15, 18, 21, 22, 25, 26, 27, 31, 34, 35, 38, 41, 42, 43, 47, 48, 55, 56, 58, 64, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 100, 102, 103, 104, 105, 106, 107, 162, 165, 178, 189, 194, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 242, 245, 246, 247, 248, 249, 250, 251, 252, 256, 258, 261, 263, 265, 266, 268, 274, 280], "g": [0, 2, 7, 13, 14, 15, 18, 21, 22, 23, 26, 27, 35, 38, 42, 43, 47, 48, 55, 56, 58, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 100, 102, 103, 104, 105, 106, 107, 162, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 242, 245, 246, 247, 248, 249, 250, 251, 252, 256, 258, 263, 265, 268, 280], "updat": [0, 1, 7, 8, 10, 11, 15, 17, 18, 23, 38, 50, 54, 58, 64, 66, 67, 98, 101, 147, 156, 165, 240, 243, 252, 254, 255, 260, 262, 264, 268, 272, 274], "config_pattern": [0, 2, 64, 66, 67], "behaviour": [0, 5, 12, 31, 47, 55, 56, 119, 120, 149, 192, 255], "replac": [0, 1, 14, 22, 26, 27, 28, 34, 38, 41, 42, 47, 48, 54, 67, 91, 100, 178, 231, 242, 256, 268, 269, 272, 273, 282], "while": [0, 7, 8, 12, 13, 18, 19, 22, 27, 28, 30, 43, 51, 82, 97, 100, 222, 238, 242, 252, 261, 263, 265, 272], "remain": 0, "state": [0, 8, 14, 18, 22, 23, 70, 208, 265, 270], "match": [0, 2, 3, 5, 12, 16, 17, 22, 27, 28, 34, 38, 42, 44, 47, 64, 66, 67, 86, 156, 157, 176, 178, 194, 197, 198, 211, 221, 226, 265], "than": [0, 1, 18, 23, 26, 27, 28, 37, 44, 47, 56, 86, 109, 165, 201, 226, 255, 256, 258, 270], "log": [0, 2, 15, 22, 23, 26, 27, 28, 34, 35, 47, 51, 53, 54, 55, 56, 57, 64, 66, 159, 194, 197, 198, 262, 265, 272, 274, 276], "directli": [0, 2, 3, 12, 13, 28, 30, 37, 47, 53, 96, 100, 190, 194, 236, 242, 260, 265, 268, 274], "instanc": [0, 8, 12, 13, 15, 22, 25, 26, 27, 34, 38, 47, 53, 58, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 122, 147, 156, 162, 165, 175, 176, 178, 194, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 258, 261, 262, 265, 268, 272], "well": [0, 2, 15, 23, 24, 26, 58, 67, 71, 73, 74, 75, 76, 77, 78, 79, 80, 84, 86, 87, 90, 93, 94, 95, 96, 97, 104, 105, 106, 107, 125, 153, 156, 196, 209, 212, 213, 214, 215, 216, 217, 218, 219, 224, 226, 227, 230, 233, 234, 235, 236, 238, 247, 248, 249, 251, 263, 274], "framework": [0, 2, 3, 5, 20, 21, 23, 25, 26, 34, 37, 38, 39, 45, 47, 53, 54, 56, 58, 59, 61, 64, 66, 252, 254, 255, 257, 264, 267, 270, 274], "conf_path": [0, 1, 2, 3, 5, 64, 66, 67], "str": [0, 1, 2, 3, 5, 15, 18, 21, 22, 23, 25, 26, 34, 37, 38, 44, 53, 54, 56, 64, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 135, 138, 141, 143, 147, 154, 157, 165, 172, 175, 176, 178, 194, 196, 197, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 262, 264, 265, 268, 273], "project_path": [0, 1, 2, 3, 5, 21, 23, 34, 37, 47, 58, 64, 66, 117, 147, 157, 165, 172, 173, 254, 268], "conf_sourc": [0, 1, 2, 3, 5, 26, 37, 38, 64, 66, 67, 165, 255], "conf_load": [0, 1, 2, 3, 5, 64, 66], "catalog_config": [0, 12], "something_new": 0, "version": [0, 1, 2, 3, 6, 7, 14, 17, 18, 19, 21, 22, 23, 26, 27, 28, 31, 34, 35, 41, 42, 43, 47, 51, 57, 58, 62, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 143, 147, 165, 175, 176, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 268, 270, 272, 274, 275, 277, 278, 280, 281, 282], "17": [0, 19, 27, 34, 38, 50, 264, 266, 273], "engin": [0, 8, 13, 19, 21, 23, 26, 47, 51, 59, 82, 89, 90, 91, 95, 178, 222, 229, 230, 231, 235, 261, 264, 272, 275, 280], "alongsid": [0, 9, 30, 44, 256], "origin": [0, 1, 11, 15, 23, 28, 135, 196, 198, 266], "below": [0, 2, 12, 13, 17, 18, 21, 22, 25, 27, 28, 34, 37, 38, 41, 43, 44, 45, 48, 50, 58, 90, 91, 112, 165, 178, 230, 231, 261, 262, 263, 265, 268, 272, 273, 276], "speed": [0, 27, 31, 47], "fast": [0, 41, 265], "slow": 0, "train": [0, 14, 15, 24, 44, 47, 48, 51, 52, 54, 58, 82, 222, 261, 262, 272], "memorydataset": [0, 5, 12, 14, 17, 21, 23, 34, 38, 47, 54, 57, 178, 203, 262, 265, 266, 268, 272, 273], "save_arg": [0, 12, 13, 14, 17, 18, 58, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 178, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 251, 269, 275, 277], "index": [0, 9, 12, 13, 18, 42, 50, 54, 57, 81, 82, 86, 88, 89, 91, 92, 93, 97, 131, 172, 178, 186, 188, 220, 222, 226, 228, 229, 231, 232, 233, 238, 262, 274, 277], "true": [0, 2, 13, 14, 15, 17, 18, 21, 22, 23, 25, 28, 34, 38, 43, 44, 54, 58, 77, 83, 84, 85, 88, 89, 90, 98, 99, 100, 103, 105, 106, 165, 175, 176, 178, 192, 194, 200, 201, 202, 203, 204, 208, 211, 216, 221, 223, 224, 225, 228, 229, 230, 237, 240, 241, 242, 244, 246, 248, 249, 257, 258, 262, 265, 266, 272, 274, 280, 282], "endfor": [0, 21], "pars": [0, 15, 17, 71, 73, 178, 209, 212, 230, 260, 265, 270], "read": [0, 7, 9, 11, 13, 15, 16, 18, 19, 22, 23, 37, 41, 43, 48, 50, 51, 56, 58, 66, 84, 85, 86, 89, 90, 99, 147, 174, 224, 225, 226, 229, 230, 241, 244, 256, 258, 262, 274, 275], "compil": [0, 31, 38, 103, 246, 252, 260, 263], "parser": [0, 26, 73, 212, 274, 277], "expand": [0, 15, 22, 23, 38, 44, 47, 50, 52, 194, 196, 263, 265, 266, 272, 273, 275, 281, 282], "argument": [0, 1, 2, 12, 15, 18, 21, 25, 34, 38, 43, 47, 64, 66, 67, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 125, 135, 144, 147, 153, 156, 165, 175, 176, 178, 189, 192, 196, 197, 198, 204, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 261, 262, 263, 268, 272, 274, 275], "previou": [0, 7, 18, 23, 25, 28, 37, 44, 52, 58], "output": [0, 5, 8, 12, 13, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 31, 37, 42, 44, 47, 48, 51, 52, 54, 55, 58, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 156, 157, 165, 175, 176, 178, 194, 196, 197, 198, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 261, 268, 270, 272, 273, 274, 275, 278, 282], "although": [0, 13, 30, 51, 254, 275], "veri": [0, 23, 26, 31, 39, 256, 261], "power": [0, 27, 28, 37, 47, 261, 268], "extrem": 0, "flexibl": [0, 5, 25, 30], "come": [0, 7, 8, 18, 29, 44, 135, 211, 255, 262, 275], "wide": [0, 275], "rang": [0, 9, 15, 16, 30, 32, 52, 75, 77, 214, 216, 250, 256, 262, 268, 272, 274], "we": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 25, 26, 27, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 47, 48, 50, 51, 53, 54, 56, 58, 60, 208, 230, 237, 254, 256, 258, 261, 262, 263, 265, 266, 268, 272, 276, 278, 280, 281, 282], "recommend": [0, 1, 2, 3, 12, 21, 22, 26, 27, 28, 31, 34, 35, 38, 41, 48, 50, 51, 53, 56, 58, 60, 66, 254, 261, 265, 268, 272, 278], "unless": [0, 2, 12, 18, 28, 34, 43, 86, 226], "absolut": [0, 44], "necessari": [0, 9, 19, 22, 26, 27, 28, 30, 42, 44, 47, 194, 208], "dynam": [0, 22, 38, 86, 226, 254, 261, 272], "cost": [0, 18, 22], "significantli": [0, 18, 26], "reduc": [0, 6, 7, 16, 17, 90, 230, 265], "readabl": [0, 37, 41, 44, 52, 255, 256], "much": [0, 18, 37, 43, 58, 268], "higher": [0, 44, 161], "mainten": [0, 11], "overhead": [0, 6, 28, 30], "believ": 0, "major": [0, 6, 11, 23, 37], "analyt": [0, 27, 28, 34, 48, 52], "doe": [0, 2, 6, 8, 11, 13, 15, 18, 22, 25, 27, 37, 38, 42, 44, 51, 58, 64, 66, 67, 86, 90, 93, 97, 102, 143, 161, 178, 194, 206, 226, 230, 233, 238, 245, 258, 260, 262, 263, 266, 270, 272, 277], "harm": 0, "good": [0, 7, 23, 41, 256], "interpol": [0, 66], "call": [0, 2, 3, 5, 9, 12, 13, 15, 18, 19, 22, 23, 35, 37, 38, 43, 47, 50, 51, 52, 56, 58, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 161, 175, 176, 178, 197, 198, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 257, 258, 262, 264, 265, 266, 268, 277, 280], "work": [0, 7, 8, 9, 11, 13, 15, 16, 18, 22, 23, 24, 26, 27, 30, 31, 34, 37, 38, 41, 42, 43, 44, 45, 50, 51, 52, 58, 60, 67, 98, 99, 100, 115, 126, 128, 130, 132, 133, 165, 178, 211, 239, 240, 242, 255, 260, 261, 265, 268, 276, 278, 280, 281, 282], "out": [0, 9, 13, 15, 22, 23, 25, 26, 27, 28, 38, 41, 45, 47, 50, 54, 56, 58, 198, 252, 255, 256, 258, 262, 263, 265, 266, 272, 273, 275, 280], "box": [0, 15, 38, 45, 275], "within": [0, 9, 11, 12, 14, 15, 18, 26, 27, 28, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 47, 48, 56, 58, 65, 100, 155, 221, 242, 256, 260, 261, 262, 265, 267, 268, 270, 272, 273, 274, 277, 280, 281, 282], "same": [0, 1, 2, 3, 5, 7, 8, 13, 14, 15, 18, 19, 21, 22, 23, 25, 26, 29, 31, 38, 39, 42, 43, 44, 45, 47, 48, 56, 58, 64, 66, 70, 90, 91, 156, 178, 194, 196, 198, 200, 201, 202, 203, 211, 230, 231, 239, 256, 258, 261, 263, 264, 272, 278], "suppos": [0, 2, 53, 58, 90, 91, 230, 231], "one": [0, 1, 8, 11, 15, 17, 18, 19, 21, 22, 27, 28, 30, 34, 35, 37, 38, 43, 44, 45, 47, 48, 51, 56, 73, 77, 86, 90, 91, 102, 137, 165, 166, 194, 197, 198, 208, 211, 212, 216, 221, 226, 230, 231, 239, 245, 258, 261, 265, 268, 269, 270, 272], "placehold": [0, 17, 38], "model_opt": [0, 17, 272], "test_siz": [0, 272], "size": [0, 23, 28, 54, 208, 258], "random_st": [0, 262, 272], "3": [0, 7, 8, 11, 15, 18, 22, 26, 27, 28, 37, 43, 44, 50, 52, 54, 60, 73, 76, 77, 93, 95, 97, 102, 105, 106, 161, 172, 212, 215, 216, 221, 233, 235, 238, 239, 245, 248, 249, 250, 260, 262, 264, 265, 266, 268, 272, 273, 275, 277, 278, 281], "parameters_glob": 0, "2": [0, 5, 7, 11, 12, 15, 18, 22, 26, 28, 37, 38, 43, 44, 47, 54, 64, 66, 67, 72, 74, 76, 77, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 101, 102, 103, 105, 106, 107, 131, 172, 178, 197, 198, 210, 213, 215, 216, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 243, 245, 246, 248, 249, 251, 262, 263, 264, 265, 266, 268, 272, 273, 275, 277, 278], "sinc": [0, 1, 5, 8, 12, 13, 15, 21, 23, 38, 39, 41, 44, 58, 86, 90, 91, 226, 230, 231, 261, 264, 275], "correctli": [0, 8, 9, 15, 22, 25, 27, 28, 37, 265], "enabl": [0, 2, 12, 13, 15, 18, 19, 20, 23, 24, 26, 29, 33, 36, 41, 42, 43, 44, 47, 56, 58, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 178, 192, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 263, 265, 268, 272, 274, 278, 281, 282], "addition": [0, 19, 38, 44], "start": [0, 2, 3, 5, 10, 11, 14, 18, 19, 22, 23, 25, 26, 27, 34, 37, 38, 39, 41, 42, 43, 45, 47, 48, 50, 52, 53, 54, 67, 98, 99, 131, 165, 172, 178, 186, 194, 240, 241, 244, 261, 262, 266, 268, 270, 272, 273, 280, 281], "underscor": [0, 52, 198, 265], "_": [0, 2, 14, 22, 25, 38, 39, 56, 67], "becaus": [0, 18, 19, 25, 26, 27, 39, 41, 52, 58, 203, 261, 265, 266, 270, 273], "entri": [0, 5, 12, 14, 16, 17, 31, 41, 47, 56, 84, 90, 91, 118, 188, 224, 230, 231, 237, 239, 256, 273, 274], "valid": [0, 3, 5, 15, 18, 47, 50, 55, 66, 162, 201, 211, 221, 255, 256, 261, 264, 277], "neither": [0, 2, 35], "trigger": [0, 1, 2, 18, 22, 23, 25, 34, 39, 58, 155, 256, 280], "duplic": [0, 2, 15, 34, 67], "error": [0, 1, 2, 3, 5, 12, 15, 17, 22, 25, 26, 30, 38, 39, 41, 43, 44, 50, 54, 56, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 148, 156, 157, 162, 175, 176, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 268], "nor": [0, 2, 35, 280], "appear": [0, 2, 15, 17, 18, 22, 25, 26, 27, 28, 34, 42, 64, 66, 194], "compani": [0, 12, 13, 14, 17, 22, 23, 44, 54, 81, 82, 83, 86, 220, 222, 223, 226, 237, 250, 272, 273, 275, 276, 277, 280, 281, 282], "_panda": 0, "catalog_glob": 0, "possibl": [0, 1, 18, 19, 37, 38, 43, 47, 54, 55, 194, 198, 257, 261, 262, 263, 265], "mlflow": [0, 24, 26, 44, 47, 54, 55], "wai": [0, 2, 3, 5, 7, 11, 12, 14, 15, 18, 19, 22, 25, 26, 27, 31, 37, 42, 44, 47, 48, 50, 52, 67, 178, 239, 252, 255, 258, 261, 263, 266, 270, 272, 280], "still": [0, 2, 7, 9, 23, 38, 45, 53, 137, 161, 265, 273, 280, 281, 282], "mandatori": [0, 244, 255], "regist": [0, 13, 14, 16, 23, 34, 39, 47, 52, 53, 54, 58, 66, 133, 147, 178, 264, 265, 268, 272, 273, 275], "extend": [8, 14, 15, 34, 38, 41, 45, 52, 57, 119, 120, 149, 175, 176, 256, 270], "illustr": [0, 13, 16, 22, 44, 52, 54, 58, 266, 268, 276, 278], "customomegaconfigload": [], "def": [0, 5, 7, 15, 17, 18, 21, 22, 23, 25, 26, 34, 37, 38, 39, 44, 45, 47, 51, 53, 54, 56, 58, 175, 176, 194, 197, 230, 250, 262, 263, 264, 265, 266, 268, 272, 273, 282], "__init__": [13, 15, 22, 23, 25, 27, 37, 53, 54, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 147, 175, 176, 178, 194, 198, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 261, 272, 273], "self": [15, 22, 23, 25, 34, 37, 39, 47, 53, 54, 56, 58, 62, 65, 138, 148, 166, 175, 176, 195, 262, 265], "env": [0, 1, 2, 8, 14, 19, 21, 22, 23, 25, 26, 34, 38, 43, 64, 66, 67, 97, 140, 147, 155, 157, 165, 189, 190, 238, 254, 260, 265, 268], "none": [8, 12, 15, 18, 19, 21, 22, 23, 25, 34, 38, 51, 53, 54, 56, 58, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 127, 135, 138, 140, 142, 147, 154, 155, 156, 165, 175, 176, 178, 186, 189, 190, 194, 196, 197, 198, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 261, 262, 263, 265, 266, 268, 272], "runtime_param": [64, 66, 67], "super": [15, 22, 23, 25, 67, 176, 261], "number": [5, 6, 7, 15, 16, 17, 22, 28, 42, 50, 51, 131, 172, 174, 186, 197, 198, 201, 203, 262, 263, 266, 281], "register_custom_resolv": [], "lambda": [0, 15, 18, 34, 262, 263], "sum": [0, 7, 250, 261, 262, 263, 264, 265, 266], "staticmethod": 25, "helper": [21, 22, 25, 126, 195, 205, 262], "method": [1, 5, 7, 12, 13, 14, 18, 22, 23, 25, 26, 28, 32, 35, 37, 38, 52, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 125, 131, 135, 147, 153, 154, 155, 156, 157, 165, 172, 175, 176, 178, 186, 194, 197, 198, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 261, 262, 265, 266, 268, 272, 274, 275], "check": [7, 18, 21, 22, 27, 28, 34, 37, 41, 42, 44, 50, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 178, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 263, 265, 266, 276, 277, 278, 280], "ha": [2, 5, 7, 8, 12, 13, 14, 15, 18, 21, 22, 23, 26, 27, 28, 34, 37, 38, 44, 45, 47, 51, 52, 55, 56, 58, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 178, 194, 198, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 260, 261, 262, 263, 265, 266, 268, 270, 272, 274, 275, 277, 278, 280], "alreadi": [9, 11, 12, 14, 15, 18, 22, 25, 26, 28, 29, 44, 50, 52, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 262, 266, 268, 273, 275, 276, 277, 278], "been": [1, 8, 12, 18, 21, 22, 23, 25, 26, 32, 34, 37, 44, 52, 58, 178, 256, 265, 266, 276, 280], "throw": [1, 3, 5, 15, 56, 156, 157], "twice": [12, 261, 272], "register_new_resolv": 0, "has_resolv": [], "order": [1, 7, 12, 14, 15, 17, 21, 22, 23, 26, 27, 34, 38, 51, 56, 58, 64, 66, 127, 131, 178, 194, 198, 230, 263, 264, 265, 266, 273], "custom_configload": [], "1": [0, 5, 7, 11, 12, 14, 15, 18, 21, 22, 25, 26, 27, 28, 34, 37, 38, 43, 44, 52, 54, 70, 72, 74, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 101, 102, 105, 106, 107, 131, 138, 172, 178, 186, 198, 208, 210, 213, 215, 216, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 243, 245, 248, 249, 250, 251, 256, 260, 262, 263, 265, 266, 268, 272, 273, 275, 278, 280, 282], "achiev": [0, 28, 37, 45, 252, 264], "oc": 0, "access": [0, 1, 5, 8, 14, 15, 22, 26, 27, 38, 39, 43, 48, 51, 53, 57, 64, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 158, 163, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 241, 243, 245, 246, 247, 248, 249, 250, 251, 254, 263, 264, 268, 269, 278], "demonstr": [0, 11, 26, 27, 28, 37, 261, 262, 266, 281], "dev_s3": [0, 12, 13, 14, 81, 83, 220, 223, 237, 250, 269], "client_kwarg": [0, 12, 13, 14, 72, 178, 210, 260], "aws_access_key_id": [0, 3, 12, 13, 21, 44, 72, 178, 210], "aws_secret_access_kei": [0, 3, 12, 13, 21, 44, 72, 178, 210], "note": [0, 2, 8, 14, 15, 18, 22, 23, 34, 38, 39, 43, 44, 45, 48, 50, 53, 67, 71, 73, 74, 75, 76, 81, 82, 83, 87, 88, 89, 90, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 201, 209, 212, 213, 214, 215, 220, 222, 223, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 244, 246, 247, 248, 249, 250, 251, 263, 266, 273], "onli": [0, 1, 7, 12, 14, 15, 18, 19, 25, 26, 27, 28, 35, 38, 42, 44, 47, 48, 53, 54, 67, 77, 90, 105, 106, 147, 165, 167, 178, 194, 196, 198, 200, 201, 202, 203, 208, 216, 230, 239, 248, 249, 255, 256, 258, 261, 265, 266, 268, 272, 274, 278, 282], "encourag": [0, 8, 31, 261], "usag": [0, 16, 21, 34, 35, 52, 56, 60, 66, 70, 72, 76, 77, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 208, 210, 211, 215, 216, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 275], "anyth": [0, 6, 12, 38, 50, 58, 70, 265, 280, 281, 282], "inform": [2, 7, 8, 13, 15, 18, 23, 25, 26, 30, 32, 39, 42, 43, 47, 51, 53, 58, 66, 67, 123, 124, 151, 152, 155, 161, 252, 256, 258, 261, 262, 265, 270, 272, 274, 276, 278], "which": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 28, 30, 31, 34, 35, 37, 38, 42, 43, 44, 45, 47, 48, 50, 51, 52, 54, 56, 58, 66, 67, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 100, 103, 104, 105, 106, 107, 110, 111, 135, 147, 153, 156, 165, 176, 178, 191, 194, 198, 200, 201, 202, 203, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 238, 242, 246, 247, 248, 249, 251, 252, 254, 255, 256, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 273, 274, 275, 280, 281, 282], "store": [2, 3, 12, 13, 15, 16, 18, 21, 22, 23, 26, 27, 28, 29, 31, 34, 35, 41, 48, 51, 52, 53, 57, 58, 87, 91, 100, 102, 155, 165, 167, 168, 178, 227, 231, 242, 245, 255, 256, 265, 268, 272, 273, 274, 275, 277, 278, 280, 281, 282], "paramet": [2, 4, 12, 13, 14, 15, 21, 22, 25, 26, 27, 28, 34, 38, 42, 44, 47, 48, 51, 54, 56, 57, 58, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 125, 143, 147, 153, 154, 155, 156, 157, 165, 175, 176, 178, 189, 194, 196, 197, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 260, 262, 266, 268, 270, 273, 275], "credenti": [2, 4, 23, 27, 28, 44, 48, 51, 57, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 153, 155, 178, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 245, 246, 247, 248, 249, 250, 251, 269, 276, 278], "catalog": [1, 2, 5, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 31, 34, 44, 47, 52, 53, 54, 55, 56, 57, 58, 64, 66, 67, 84, 126, 147, 153, 154, 156, 157, 175, 176, 178, 200, 201, 202, 203, 204, 211, 221, 224, 230, 237, 239, 255, 260, 261, 262, 265, 266, 269, 272, 273, 275, 280], "make": [1, 2, 5, 7, 10, 11, 15, 22, 23, 25, 26, 27, 28, 30, 31, 34, 37, 38, 41, 43, 44, 50, 51, 52, 54, 55, 58, 61, 91, 231, 252, 256, 258, 260, 261, 262, 265, 268, 270, 272, 274, 275, 276, 280, 282], "ar": [1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 33, 34, 35, 37, 38, 41, 42, 43, 44, 47, 48, 51, 52, 54, 55, 56, 58, 60, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 112, 156, 165, 166, 178, 189, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 268, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282], "templatedconfigload": [1, 2, 3, 5], "omegaconfigload": [2, 3, 5, 38, 48, 274], "otherwis": [2, 5, 7, 15, 58, 64, 66, 67, 99, 194, 208, 241, 263, 277], "advanc": [2, 3, 4, 16, 22, 30, 41, 51, 60, 90, 230, 262, 274, 275], "cover": [2, 7, 20, 37, 275], "keep": [2, 5, 6, 18, 27, 28, 51, 52, 208, 258, 261, 263, 270, 272], "all": [0, 1, 2, 3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 31, 35, 37, 41, 44, 47, 48, 51, 52, 53, 54, 56, 58, 64, 66, 67, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 124, 125, 141, 152, 153, 154, 155, 156, 157, 170, 175, 176, 178, 192, 194, 196, 198, 200, 201, 202, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 246, 247, 248, 249, 251, 252, 255, 256, 260, 261, 262, 263, 264, 265, 266, 268, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282], "A": [2, 6, 7, 8, 9, 13, 15, 18, 21, 22, 23, 25, 26, 27, 28, 31, 34, 35, 38, 39, 44, 47, 51, 52, 53, 56, 66, 67, 72, 84, 90, 91, 101, 111, 112, 115, 117, 124, 126, 127, 128, 130, 132, 133, 142, 152, 156, 161, 165, 178, 194, 196, 197, 198, 204, 210, 221, 224, 230, 231, 239, 243, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 269, 270, 272, 273], "organis": [2, 11, 13, 19, 45, 50, 51, 260, 261, 263, 270], "stage": [2, 13, 23, 28, 30, 41, 43, 51, 270, 278, 280], "pipelin": [2, 5, 12, 13, 14, 15, 16, 17, 18, 20, 26, 27, 28, 29, 32, 35, 36, 37, 43, 45, 47, 52, 53, 55, 56, 57, 58, 59, 61, 100, 133, 147, 148, 157, 161, 162, 165, 199, 200, 201, 202, 203, 204, 242, 252, 254, 256, 258, 260, 262, 274, 276, 278, 279], "might": [2, 7, 12, 13, 14, 17, 18, 30, 45, 55, 58, 66, 250, 252, 258, 261, 262, 266, 268, 278], "test": [2, 7, 11, 12, 13, 14, 15, 21, 22, 26, 30, 32, 34, 40, 42, 43, 44, 51, 52, 57, 58, 73, 74, 76, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 106, 107, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 243, 245, 246, 247, 248, 249, 251, 255, 256, 260, 261, 262, 270, 277, 278], "product": [2, 13, 19, 23, 26, 30, 35, 37, 48, 50, 59, 262, 267], "refer": [2, 3, 5, 7, 12, 13, 17, 21, 22, 26, 27, 31, 38, 45, 47, 48, 56, 60, 69, 74, 78, 79, 80, 82, 83, 84, 85, 86, 89, 92, 94, 95, 96, 99, 101, 147, 178, 192, 196, 211, 213, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 232, 234, 235, 236, 237, 239, 241, 243, 244, 260, 261, 273, 274, 276], "foundat": [2, 59], "other": [1, 2, 3, 5, 7, 9, 10, 13, 15, 18, 23, 26, 27, 30, 34, 35, 37, 41, 42, 43, 44, 45, 47, 48, 50, 51, 55, 58, 74, 100, 194, 196, 197, 198, 213, 242, 252, 255, 258, 262, 264, 265, 266, 269, 270, 276], "across": [2, 5, 14, 22, 25, 30, 32, 37, 44, 45, 51, 90, 91, 205, 230, 231, 260, 261, 262, 272, 274, 275, 278], "thei": [2, 5, 6, 7, 11, 15, 18, 22, 26, 38, 47, 51, 54, 56, 58, 64, 66, 67, 86, 161, 196, 226, 230, 255, 256, 258, 261, 262, 263, 265, 268, 270, 272, 273, 278, 280], "overridden": [2, 14, 18, 66, 261], "do": [2, 3, 7, 11, 12, 14, 17, 18, 22, 26, 27, 28, 31, 34, 35, 38, 43, 44, 47, 48, 50, 51, 52, 54, 56, 58, 73, 86, 100, 135, 194, 196, 197, 198, 212, 226, 242, 256, 258, 262, 265, 268, 273, 274, 278], "put": [2, 12, 14, 23, 27, 34, 37, 51, 58, 70, 208, 262], "privat": [2, 15, 28, 35, 42], "control": [2, 3, 12, 26, 35, 44, 51, 52, 161, 211, 256, 258, 265, 268, 273, 278, 280], "should": [0, 2, 7, 8, 9, 12, 13, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 37, 38, 42, 43, 45, 47, 48, 50, 51, 52, 54, 56, 57, 58, 60, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 106, 107, 109, 138, 156, 157, 165, 175, 176, 190, 194, 197, 198, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 241, 245, 246, 247, 248, 249, 250, 251, 255, 256, 258, 260, 261, 262, 263, 264, 266, 268, 272, 273, 275, 278, 280], "either": [2, 15, 18, 22, 29, 34, 37, 38, 44, 48, 53, 64, 66, 67, 70, 84, 85, 86, 90, 91, 101, 156, 188, 224, 225, 226, 230, 231, 243, 260, 274], "user": [1, 2, 6, 7, 8, 9, 11, 13, 19, 26, 27, 28, 35, 43, 44, 47, 51, 52, 56, 57, 60, 70, 90, 91, 100, 101, 135, 138, 160, 162, 175, 198, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 256, 258, 260, 261, 268], "id": [2, 8, 15, 18, 22, 23, 25, 26, 28, 30, 34, 35, 39, 41, 42, 43, 51, 71, 75, 77, 84, 85, 156, 178, 200, 201, 202, 203, 204, 209, 214, 216, 221, 224, 225, 254, 265, 273, 275, 276], "protect": 2, "secur": [2, 3, 11], "datacatalog": [2, 3, 5, 12, 13, 14, 16, 22, 25, 34, 38, 45, 51, 54, 56, 58, 147, 156, 157, 165, 200, 201, 202, 203, 204, 221, 255, 256, 265, 266, 268, 269, 272], "o": [2, 12, 42, 43, 45, 47, 53, 262, 265, 266, 274], "interact": [2, 13, 22, 26, 27, 57, 252, 256, 265, 268, 269, 274, 282], "through": [1, 2, 5, 7, 11, 12, 13, 15, 21, 22, 23, 30, 31, 35, 38, 41, 42, 44, 47, 48, 51, 52, 53, 58, 66, 71, 73, 74, 75, 76, 77, 78, 79, 80, 86, 87, 90, 91, 93, 94, 95, 96, 97, 103, 104, 105, 106, 107, 178, 188, 190, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 226, 227, 230, 231, 233, 234, 235, 236, 238, 246, 247, 248, 249, 251, 256, 257, 258, 265, 272, 280, 281, 282], "command": [1, 2, 5, 7, 8, 9, 14, 21, 22, 23, 25, 26, 27, 28, 29, 34, 40, 41, 42, 43, 44, 50, 52, 56, 57, 102, 114, 115, 116, 117, 118, 125, 126, 127, 128, 130, 132, 133, 134, 139, 142, 144, 245, 252, 254, 256, 257, 258, 260, 261, 262, 265, 266, 268, 270, 272, 273, 274, 275, 277, 280, 281, 282], "line": [2, 5, 7, 12, 26, 27, 28, 29, 37, 40, 41, 42, 43, 44, 57, 88, 96, 102, 109, 125, 142, 189, 190, 228, 236, 245, 258, 265, 273, 274, 275, 277], "run": [1, 2, 5, 7, 8, 12, 13, 14, 18, 20, 24, 25, 29, 30, 32, 33, 36, 39, 43, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 64, 66, 67, 69, 99, 100, 125, 137, 144, 147, 148, 154, 155, 156, 157, 165, 166, 173, 190, 194, 198, 200, 201, 202, 203, 204, 241, 242, 244, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 268, 270, 272, 273, 276, 278, 280, 281], "recurs": [2, 13, 18, 26, 27, 28, 64, 66], "scan": [2, 13, 64, 66], "insid": [2, 3, 5, 13, 15, 18, 22, 25, 27, 28, 29, 34, 35, 38, 42, 47, 58, 64, 66, 135, 254, 256, 258, 260, 261, 262, 274], "firstli": [2, 13, 31, 42], "being": [2, 8, 15, 18, 26, 31, 34, 38, 58, 100, 165, 194, 205, 242, 261, 262], "return": [0, 2, 5, 7, 12, 13, 15, 17, 18, 21, 22, 23, 25, 27, 28, 34, 37, 38, 44, 50, 51, 53, 54, 56, 58, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 122, 131, 138, 141, 143, 147, 148, 154, 155, 156, 161, 165, 166, 172, 173, 175, 176, 178, 186, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 262, 263, 264, 265, 266, 268, 272, 273, 276, 282], "accord": [2, 7, 13, 17, 51, 127, 159, 178, 257, 268, 270, 280], "rule": [2, 13, 41, 48, 256, 261], "locat": [2, 3, 5, 7, 9, 12, 13, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 31, 38, 58, 64, 66, 85, 86, 102, 225, 226, 245, 250, 258, 260, 265, 274], "top": [2, 5, 7, 13, 14, 18, 22, 26, 27, 28, 42, 43, 47, 58, 64, 66, 230, 256, 261, 264, 275, 276], "level": [2, 5, 10, 13, 14, 18, 22, 25, 30, 45, 47, 48, 58, 64, 66, 112, 194, 256, 258, 260, 261, 264, 274, 275, 276], "rais": [2, 10, 12, 18, 22, 25, 39, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 125, 131, 143, 147, 156, 157, 165, 166, 172, 175, 176, 178, 186, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 264, 265, 277], "valueerror": [1, 2, 22, 25, 64, 66, 67, 70, 93, 97, 131, 165, 172, 186, 194, 196, 198, 200, 201, 202, 203, 204, 208, 233, 238], "indic": [2, 12, 13, 26, 37, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254], "anoth": [2, 22, 23, 25, 26, 37, 47, 51, 256, 261, 266, 270, 273], "last": [2, 12, 18, 22, 56, 64, 66, 277], "valu": [2, 5, 6, 12, 13, 14, 15, 18, 19, 21, 25, 26, 34, 37, 38, 44, 48, 52, 53, 54, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 131, 145, 156, 160, 172, 175, 176, 178, 186, 189, 194, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 258, 260, 261, 262, 264, 265, 270, 275], "get": [1, 2, 5, 8, 15, 16, 19, 21, 22, 23, 25, 26, 34, 35, 37, 39, 42, 43, 44, 48, 52, 57, 58, 60, 64, 66, 67, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 103, 104, 105, 106, 107, 143, 162, 178, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 245, 246, 247, 248, 249, 250, 251, 256, 262, 265, 268, 270, 272, 274, 277, 280, 281, 282], "debug": [2, 25, 34, 40, 41, 57, 112, 258], "messag": [2, 7, 8, 38, 43, 50, 73, 112, 138, 162, 212, 244, 258, 268, 277], "emit": [2, 12, 18, 258], "consid": [2, 6, 7, 15, 17, 18, 19, 21, 22, 28, 30, 44, 47, 262], "hidden": [2, 51], "reserv": [2, 7, 135], "ignor": [2, 3, 18, 41, 51, 67, 99, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251], "those": [1, 2, 15, 26, 27, 30, 31, 38, 44, 50, 52, 60, 156, 194, 196, 239, 252, 256, 260, 268, 273, 274, 275], "howev": [0, 2, 6, 13, 15, 18, 23, 28, 35, 52, 56, 256, 258, 260, 272], "anchor": [2, 66], "alias": 2, "templat": [2, 14, 19, 21, 22, 25, 26, 27, 28, 38, 45, 47, 48, 51, 52, 54, 61, 67, 135, 252, 256, 270, 272, 274, 276, 280], "fetch": [1, 2, 25, 53, 66, 70, 141, 200, 201, 202, 203, 208, 265], "search": [2, 43, 143, 270, 276, 280], "subfold": [2, 3, 15, 35, 44, 51, 147, 256, 274], "whose": [2, 3, 178, 270], "And": [2, 23, 29, 44, 265], "ini": [2, 64], "pickl": [2, 13, 17, 19, 22, 23, 64, 97, 238, 252, 262, 265, 272, 280], "xml": [2, 64, 92, 232], "properti": [2, 43, 53, 56, 64, 66, 67, 72, 101, 147, 165, 194, 198, 210, 221, 243, 254], "regex": [2, 64, 66, 67, 178, 256], "These": [0, 2, 5, 11, 12, 15, 17, 18, 25, 26, 38, 41, 47, 48, 53, 58, 69, 99, 165, 200, 201, 202, 203, 241, 244, 260, 261, 276], "customis": [2, 18, 52, 64, 66, 67, 255, 256, 260, 268, 274], "bypass": [2, 48], "chapter": [2, 3, 60], "time": [0, 2, 6, 8, 11, 13, 14, 15, 18, 22, 27, 28, 31, 37, 39, 41, 42, 43, 44, 48, 52, 53, 54, 56, 70, 255, 262, 265, 266, 272], "variabl": [2, 3, 8, 21, 27, 28, 38, 43, 44, 48, 53, 54, 58, 66, 67, 97, 187, 194, 197, 198, 238, 254, 263, 264, 265, 268, 270, 272, 275], "new_conf": 2, "cli": [2, 5, 7, 19, 21, 32, 39, 42, 43, 252, 254, 257, 260, 261, 264, 265, 266, 270, 272], "flag": [2, 7, 13, 18, 26, 27, 31, 38, 41, 44, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 139, 165, 175, 176, 194, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 265, 270, 272, 280], "tar": [2, 35, 38, 129, 260, 274], "gz": [2, 14, 35, 38, 260, 274], "zip": [2, 23, 38], "format": [2, 12, 13, 14, 15, 16, 23, 35, 38, 40, 47, 57, 63, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 112, 176, 186, 194, 198, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 258, 263, 265, 273, 274, 275, 278], "packag": [2, 7, 15, 16, 21, 22, 25, 29, 30, 32, 37, 42, 43, 47, 50, 52, 57, 73, 128, 143, 147, 165, 168, 205, 208, 212, 252, 255, 256, 259, 261, 265, 270, 272, 273, 276, 278, 279], "build": [2, 7, 11, 21, 22, 23, 26, 31, 34, 35, 42, 43, 51, 58, 59, 61, 255, 256, 262, 265, 270, 272, 273, 276], "dist": [2, 19, 23, 26, 35, 38, 260, 274], "creat": [2, 6, 8, 13, 16, 18, 33, 34, 35, 39, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 56, 57, 58, 59, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 122, 134, 147, 153, 155, 161, 165, 175, 176, 178, 187, 194, 196, 197, 198, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 264, 265, 266, 268, 269, 270, 274, 275, 276], "whl": [2, 8, 19, 23, 26, 35, 38, 274], "exclud": [2, 7, 35, 274], "czf": 2, "my_conf_nam": 2, "directori": [2, 5, 7, 8, 15, 18, 19, 21, 22, 23, 25, 26, 28, 34, 35, 38, 41, 42, 43, 44, 45, 47, 50, 52, 64, 66, 67, 72, 89, 100, 103, 109, 135, 147, 165, 189, 210, 229, 242, 246, 252, 254, 255, 256, 260, 264, 268, 269, 274, 275, 277, 278, 280, 281, 282], "dir": [2, 19, 23, 51, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 268], "Or": [1, 2, 53, 58], "x": [0, 2, 15, 54, 82, 95, 96, 103, 222, 235, 236, 246, 262, 263, 265, 266, 272, 273, 282], "r": [2, 15, 19, 21, 23, 27, 28, 35, 38, 41, 43, 44, 52, 71, 73, 76, 78, 79, 80, 86, 90, 94, 104, 105, 106, 107, 209, 212, 215, 217, 218, 219, 221, 226, 230, 234, 237, 247, 248, 249, 251, 252, 272, 277, 278, 280, 282], "structur": [2, 5, 15, 19, 23, 26, 28, 30, 31, 47, 48, 172, 196, 244, 256, 261, 272, 280], "expect": [2, 28, 37, 47, 54, 55, 162, 194, 196, 208, 230, 256, 261, 262, 275], "conf_dir": 2, "mai": [2, 9, 12, 15, 16, 18, 19, 28, 30, 31, 32, 42, 43, 44, 47, 51, 52, 58, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 256, 265, 268, 269, 272, 274, 276, 277, 278], "distribut": [2, 13, 18, 19, 23, 24, 26, 32, 35, 38, 260, 274, 276], "readm": [2, 7, 15, 19, 21, 22, 31, 35, 47, 51, 64, 256, 261], "md": [2, 7, 15, 19, 21, 22, 31, 35, 38, 47, 51, 64, 104, 247, 256, 261], "option": [2, 3, 5, 7, 15, 18, 21, 26, 27, 28, 34, 35, 42, 47, 48, 51, 54, 58, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 112, 135, 140, 147, 157, 165, 178, 189, 192, 194, 196, 197, 198, 201, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 257, 258, 260, 261, 262, 264, 265, 266, 268, 274, 280], "includ": [1, 2, 6, 7, 9, 11, 13, 14, 15, 18, 19, 22, 23, 25, 26, 27, 28, 34, 38, 41, 44, 45, 47, 50, 55, 58, 72, 73, 82, 99, 125, 192, 194, 206, 208, 210, 212, 221, 222, 241, 244, 252, 255, 257, 258, 260, 261, 262, 264, 266, 268, 270, 272, 274, 275, 278, 280], "so": [2, 3, 6, 7, 12, 14, 15, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 31, 32, 38, 41, 42, 47, 51, 52, 56, 64, 66, 67, 74, 83, 90, 91, 93, 97, 101, 189, 194, 213, 223, 230, 231, 233, 238, 243, 252, 256, 258, 261, 262, 264, 265, 266, 268, 269, 270, 272, 273, 278], "instanti": [2, 5, 12, 13, 14, 18, 22, 25, 34, 39, 42, 64, 66, 67, 84, 85, 90, 91, 97, 178, 200, 201, 202, 203, 224, 225, 230, 231, 238, 254, 261, 262, 265, 269, 272], "show": [2, 11, 15, 19, 26, 41, 42, 43, 44, 48, 53, 94, 135, 138, 234, 256, 258, 268, 269, 275, 278, 279], "conf_catalog": [2, 56, 64, 66, 153], "built": [0, 2, 9, 12, 14, 15, 16, 18, 21, 22, 23, 26, 28, 31, 35, 45, 47, 50, 51, 57, 60, 66, 257, 262, 265, 270, 272, 274], "own": [2, 3, 5, 10, 15, 16, 18, 21, 22, 23, 26, 31, 37, 44, 48, 175, 176, 256, 258, 265, 268, 272], "bottom": [2, 27, 42, 281, 282], "overwrit": [2, 5, 12, 14, 17, 45, 54, 58, 77, 90, 91, 99, 100, 103, 156, 211, 216, 221, 230, 231, 239, 241, 242, 244, 246, 257, 262], "server": [2, 13, 14, 23, 31, 32, 34, 35, 90, 97, 208, 230, 238], "kedro_env": 2, "ipython": [2, 15, 27, 28, 29, 38, 42, 108, 126, 192, 275, 277, 278], "jupyt": [2, 38, 45, 51, 52, 57, 60, 165, 188, 192, 256, 267, 269, 276, 278], "notebook": [2, 12, 19, 26, 30, 45, 48, 51, 52, 57, 60, 188, 256, 258, 269, 276, 278], "lab": [2, 38, 188, 268], "session": [2, 15, 22, 23, 25, 26, 27, 28, 34, 37, 38, 39, 42, 43, 47, 50, 53, 57, 58, 147, 156, 200, 201, 202, 203, 204, 255, 265, 275, 277], "export": [2, 7, 8, 44, 167, 258, 268], "provid": [1, 2, 5, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 25, 26, 27, 28, 32, 38, 39, 47, 51, 53, 56, 58, 61, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 113, 119, 123, 135, 146, 147, 149, 150, 151, 158, 163, 165, 171, 174, 175, 176, 178, 186, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 262, 263, 265, 268, 269, 270, 272, 273, 274], "default_run_env": [2, 64, 66, 67], "custom": [0, 2, 16, 18, 23, 31, 38, 45, 47, 51, 56, 57, 62, 66, 70, 93, 97, 127, 135, 139, 233, 238, 256, 262, 263, 272, 276, 281], "prod": [2, 268], "some": [0, 2, 7, 18, 23, 25, 26, 44, 54, 55, 58, 64, 66, 67, 86, 100, 194, 226, 242, 258, 260, 263, 266, 268, 269, 274, 275, 276, 278], "reason": [2, 3, 18, 21, 22, 26, 33], "apart": 2, "must": [2, 7, 8, 12, 14, 15, 17, 18, 21, 22, 23, 26, 27, 28, 29, 35, 43, 44, 45, 47, 50, 52, 54, 56, 93, 97, 100, 178, 189, 194, 196, 198, 230, 233, 238, 242, 256, 258, 260, 261, 262, 263, 264, 265, 266, 268, 274, 275, 277, 280, 282], "strongli": [1, 3, 12, 50], "commit": [3, 6, 11, 27, 28, 35, 38, 51, 256, 278], "secret": [3, 12, 13, 14, 18, 21, 53, 70, 72, 75, 77, 99, 178, 208, 210, 214, 216, 241], "kedro": [1, 3, 5, 7, 12, 14, 15, 18, 30, 32, 37, 39, 40, 41, 49, 53, 54, 55, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 258, 260, 262, 263, 264, 266, 271, 273, 276, 277, 278, 280], "default": [1, 3, 5, 7, 13, 14, 15, 17, 18, 19, 21, 22, 25, 26, 27, 28, 34, 35, 38, 43, 44, 47, 48, 51, 52, 56, 58, 64, 66, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 112, 147, 161, 165, 175, 176, 178, 189, 200, 201, 202, 203, 204, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 245, 246, 247, 248, 249, 251, 255, 256, 257, 260, 264, 265, 268, 272, 274, 275, 278], "file": [3, 5, 7, 8, 9, 13, 15, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 31, 34, 35, 37, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54, 56, 58, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 138, 143, 175, 176, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 260, 261, 262, 268, 269, 272, 273, 275, 276, 277, 278, 280, 282], "its": [3, 12, 13, 15, 18, 20, 21, 22, 23, 26, 27, 28, 30, 37, 38, 44, 45, 47, 50, 51, 52, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 118, 143, 158, 160, 165, 175, 176, 178, 198, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 261, 262, 263, 265, 266, 267, 268, 270, 272, 273], "git": [3, 7, 8, 9, 27, 28, 35, 38, 44, 47, 50, 51], "configur": [3, 5, 7, 16, 17, 21, 27, 28, 34, 35, 44, 47, 51, 57, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 147, 158, 159, 160, 165, 175, 176, 178, 189, 201, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 260, 261, 268, 269, 270, 274, 276], "us": [3, 7, 9, 11, 15, 16, 20, 23, 30, 31, 32, 38, 39, 41, 42, 46, 47, 48, 51, 52, 55, 56, 57, 59, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 119, 125, 135, 136, 141, 147, 149, 153, 155, 156, 157, 161, 165, 167, 168, 169, 175, 176, 178, 186, 189, 194, 195, 197, 198, 200, 201, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 260, 263, 264, 265, 266, 269, 270, 272, 273, 274, 275, 276, 278, 280, 281, 282], "fed": [3, 5, 208], "would": [1, 3, 12, 13, 14, 15, 17, 19, 31, 37, 45, 53, 73, 74, 82, 162, 212, 213, 222, 256, 258, 260, 261, 264, 265, 275], "rather": [1, 3, 18, 27, 28, 37, 47, 109, 258], "environ": [3, 7, 8, 9, 13, 21, 25, 30, 31, 35, 37, 38, 42, 43, 44, 48, 52, 53, 64, 66, 67, 84, 85, 147, 165, 189, 224, 225, 252, 254, 255, 257, 260, 267, 268, 270, 273], "local": [1, 3, 7, 8, 12, 13, 15, 18, 21, 22, 23, 25, 26, 28, 29, 30, 31, 34, 35, 38, 39, 42, 43, 48, 52, 64, 66, 67, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 107, 147, 187, 189, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 249, 251, 256, 258, 260, 261, 265, 274, 275, 278], "abov": [0, 1, 3, 5, 7, 12, 13, 14, 18, 22, 23, 25, 26, 35, 38, 42, 43, 44, 45, 51, 54, 58, 221, 252, 258, 260, 261, 262, 263, 264, 265, 273, 277, 282], "missingconfigexcept": [1, 3, 5, 66], "given": [3, 5, 14, 15, 18, 21, 22, 30, 34, 38, 58, 64, 66, 67, 90, 91, 176, 178, 189, 194, 198, 206, 208, 230, 231, 250, 275], "But": [3, 5], "workflow": [3, 5, 8, 12, 18, 19, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 44, 47, 58, 173, 262, 263, 278], "applic": [3, 5, 22, 23, 29, 31, 38, 42, 58, 125], "handl": [3, 5, 18, 22, 25, 72, 73, 76, 81, 82, 87, 88, 89, 90, 92, 94, 100, 105, 106, 107, 192, 210, 212, 215, 220, 221, 222, 227, 228, 229, 230, 232, 234, 237, 242, 248, 249, 251, 255, 257, 262, 265, 268], "try": [3, 5, 7, 12, 14, 15, 22, 25, 50, 86, 208, 226, 263, 265, 266, 268, 277], "except": [0, 3, 5, 12, 13, 15, 18, 22, 25, 39, 61, 62, 63, 65, 71, 73, 74, 75, 76, 77, 78, 79, 80, 86, 87, 90, 93, 94, 95, 96, 97, 103, 104, 105, 106, 107, 136, 138, 146, 148, 156, 157, 164, 165, 166, 174, 193, 195, 196, 198, 209, 212, 213, 214, 215, 216, 217, 218, 219, 226, 227, 230, 233, 234, 235, 236, 238, 239, 246, 247, 248, 249, 251, 258, 262, 263, 265, 266], "context": [3, 5, 15, 22, 23, 25, 27, 28, 34, 37, 38, 42, 53, 58, 155, 165, 189, 254, 255, 262], "kedrocontext": [3, 5, 37, 38, 45, 149, 153, 155, 165, 254, 255, 268], "approach": [3, 5, 18, 19, 23, 26, 27, 28, 30, 35, 47, 50, 53], "them": [0, 1, 3, 5, 7, 8, 9, 11, 13, 15, 18, 19, 25, 28, 32, 38, 39, 41, 44, 47, 50, 56, 58, 64, 66, 73, 82, 198, 212, 222, 260, 261, 262, 265, 266, 268, 273, 274, 277, 278, 279, 282], "aws_session_token": 3, "pleas": [3, 7, 9, 15, 21, 23, 38, 39, 45, 47, 50, 58, 99, 123, 124, 151, 152, 201, 241, 244, 265, 274, 277], "offici": [3, 20, 23, 25, 28, 47, 50, 60, 141], "defin": [0, 5, 12, 14, 17, 18, 21, 22, 23, 25, 26, 27, 28, 37, 38, 43, 45, 47, 48, 51, 54, 56, 58, 100, 112, 120, 125, 147, 153, 154, 155, 156, 157, 160, 161, 165, 175, 193, 194, 198, 200, 201, 202, 203, 208, 239, 242, 256, 258, 261, 262, 264, 265, 268, 270, 272, 273, 280], "pair": [5, 44, 64, 66, 67, 263, 273, 282], "where": [5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 22, 23, 25, 26, 27, 28, 29, 31, 38, 39, 42, 43, 44, 47, 53, 56, 69, 82, 135, 165, 178, 194, 198, 200, 201, 202, 203, 207, 222, 230, 239, 260, 262, 263, 265], "correspond": [5, 12, 13, 15, 18, 22, 23, 28, 31, 45, 54, 56, 64, 66, 67, 72, 101, 178, 197, 198, 210, 243, 254, 256, 258, 262, 263, 274, 276], "serv": [5, 13, 44, 47, 52, 266, 273, 280], "input": [5, 12, 15, 16, 17, 18, 21, 22, 23, 25, 31, 38, 44, 48, 51, 55, 58, 64, 66, 103, 156, 165, 194, 196, 197, 198, 200, 201, 202, 203, 204, 208, 246, 252, 256, 261, 265, 270, 277, 282], "node": [0, 5, 12, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 31, 34, 37, 38, 45, 47, 52, 55, 56, 57, 58, 154, 156, 165, 194, 196, 200, 201, 202, 203, 204, 258, 261, 264, 265, 276, 277, 279, 281], "easier": [5, 8, 22, 37, 41, 60, 252, 258, 261, 270, 272, 280], "chang": [5, 7, 11, 26, 31, 35, 37, 38, 43, 44, 48, 50, 54, 66, 100, 230, 242, 255, 258, 261, 262, 268, 270, 274, 277, 280], "modifi": [5, 6, 8, 15, 19, 43, 56, 57, 58, 91, 100, 137, 161, 231, 242, 252, 264, 274], "group": [5, 11, 13, 22, 23, 34, 38, 43, 45, 47, 48, 53, 54, 56, 87, 127, 137, 139, 142, 178, 194, 201, 203, 227], "determin": [5, 8, 18, 44, 51, 52, 135, 176, 208, 263, 270, 272, 273], "hyperparamet": [5, 33, 272], "model": [5, 13, 15, 17, 19, 26, 27, 28, 30, 33, 44, 48, 52, 58, 103, 178, 246, 261, 262, 276, 278, 280], "singl": [5, 9, 15, 18, 20, 23, 25, 26, 31, 32, 44, 47, 48, 52, 53, 89, 165, 178, 201, 204, 208, 229, 261, 262, 263, 268, 270, 272, 273], "modif": [5, 109], "centralis": [5, 57], "avoid": [5, 7, 17, 18, 27, 28, 30, 34, 41, 69, 252, 266, 269], "part": [5, 8, 12, 14, 15, 18, 19, 20, 22, 24, 31, 33, 36, 37, 44, 47, 52, 105, 106, 194, 196, 198, 211, 221, 239, 248, 249, 256, 260, 262, 263, 264, 272, 279, 282], "step_siz": 5, "learning_r": 5, "01": [5, 18, 54, 265, 268, 273], "definit": [5, 13, 15, 23, 26, 44, 197, 198, 239, 263, 265, 268, 272, 280], "increase_volum": 5, "volum": [5, 18, 42], "step": [1, 5, 12, 18, 21, 22, 26, 27, 28, 31, 32, 35, 37, 42, 44, 47, 50, 52, 57, 261, 264, 265, 273, 280], "func": [5, 12, 17, 18, 23, 44, 51, 53, 58, 194, 197, 198, 261, 262, 265, 272, 273, 282], "input_volum": 5, "output_volum": 5, "model_param": 5, "test_data_ratio": 5, "number_of_train_iter": 5, "10000": [5, 268], "train_model": [5, 17, 54, 58, 272], "lr": 5, "iter": [5, 11, 26, 27, 30, 51, 64, 66, 67, 70, 141, 194, 196, 197, 198, 262, 268], "input_data": 5, "output_data": 5, "pass": [0, 5, 7, 12, 13, 14, 15, 18, 23, 25, 34, 37, 38, 43, 47, 51, 52, 54, 56, 64, 66, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 138, 147, 165, 189, 192, 194, 201, 203, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 256, 258, 261, 262, 263, 265, 266, 270, 272, 274, 275], "entir": [5, 14, 19, 22, 23, 26, 27, 28, 31, 35, 37, 53, 57, 252, 257, 262, 263, 272, 276], "collect": [5, 11, 22, 25, 37, 47, 51, 54, 56, 58, 72, 115, 126, 128, 130, 131, 132, 133, 194, 196, 210, 252, 263, 270], "ad": [5, 7, 13, 17, 18, 37, 38, 41, 43, 44, 45, 53, 55, 66, 84, 139, 153, 178, 194, 198, 224, 237, 256, 261, 264, 266, 270, 272, 275, 282], "add_feed_dict": [5, 178], "live": [5, 47, 48, 239], "what": [5, 6, 9, 12, 14, 18, 25, 37, 56, 73, 212, 256, 260, 263, 270, 273], "inject": [0, 5, 38, 45, 47, 53, 56, 255], "per": [5, 11, 44, 102, 245, 260, 268, 275], "subdirectori": [5, 37, 52, 64, 66, 274], "comma": [5, 38, 43, 145, 189], "separ": [5, 13, 15, 17, 32, 34, 35, 38, 41, 47, 52, 167, 189, 261, 270, 272, 273, 274, 279], "list": [5, 7, 8, 10, 11, 12, 14, 18, 25, 26, 27, 28, 34, 43, 44, 47, 52, 54, 56, 60, 66, 70, 77, 99, 100, 127, 135, 157, 165, 176, 178, 192, 194, 196, 197, 198, 208, 211, 216, 221, 230, 241, 242, 244, 252, 258, 260, 261, 262, 263, 265, 266, 268, 274, 276], "made": [5, 9, 11, 27, 37, 109, 194, 196, 272, 273], "split": [5, 38, 41, 51, 52, 54, 145, 189, 262, 268, 272], "colon": [5, 189], "equal": [5, 12, 44, 58, 72, 74, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 97, 101, 178, 189, 210, 213, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 238, 243], "sign": [5, 7, 189], "param_key1": [5, 38], "value1": [5, 18, 38, 189], "param_key2": [5, 38], "alwai": [5, 9, 12, 17, 18, 21, 44, 50, 109, 178, 261, 268], "treat": [5, 15, 17, 41, 47, 64, 66, 194, 261], "string": [5, 8, 12, 13, 14, 15, 18, 48, 54, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 145, 175, 176, 178, 194, 198, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 256], "convert": [1, 5, 15, 21, 23, 38, 44, 47, 48, 256, 273, 274, 282], "float": [5, 44, 54, 273], "integ": 5, "convers": [5, 10, 12, 31], "succe": 5, "extra": [5, 9, 15, 18, 26, 53, 55, 56, 64, 66, 67, 147, 165, 178, 189, 192, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 245, 246, 247, 248, 249, 250, 251, 254, 258, 262], "space": [5, 9, 52, 275, 276], "wrap": [5, 15, 25, 34, 67, 204, 258, 261, 272], "whole": [5, 14, 18, 19, 23, 37, 38, 194], "quot": [5, 17, 260], "key1": [5, 262], "key2": [5, 262], "cannot": [5, 9, 18, 21, 25, 27, 28, 32, 43, 58, 165, 175, 200, 201, 202, 203, 257, 261, 263, 277], "endpoint_url": [5, 14], "http": [5, 13, 14, 15, 23, 26, 27, 28, 34, 41, 42, 43, 44, 47, 50, 52, 53, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 123, 124, 151, 152, 161, 162, 178, 188, 189, 192, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 260, 273, 277, 280], "endpoint": [5, 26, 70, 208, 260], "com": [5, 23, 26, 28, 35, 41, 42, 43, 47, 50, 67, 84, 85, 95, 96, 162, 224, 225, 235, 236, 239], "page": [6, 7, 8, 11, 13, 15, 16, 21, 22, 25, 32, 34, 37, 44, 51, 52, 54, 58, 255, 266, 268, 281, 282], "explain": [6, 7, 8, 13, 15, 16, 21, 23, 25, 26, 31, 34, 35, 45, 48, 49, 50, 52, 58, 255, 256, 268, 272, 273, 274, 276], "principl": [6, 7, 19, 23], "public": [6, 35, 43], "api": [6, 13, 15, 34, 58, 60, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 262, 265, 268, 270], "signatur": [6, 56, 156, 157], "remov": [1, 6, 12, 14, 15, 21, 48, 54, 64, 66, 67, 69, 77, 165, 216, 221, 252, 258, 261, 265, 266, 268, 273, 274], "modul": [6, 7, 12, 26, 38, 41, 43, 47, 50, 56, 57, 61, 68, 93, 97, 108, 110, 113, 114, 116, 119, 120, 123, 124, 134, 144, 149, 150, 151, 152, 158, 161, 162, 163, 164, 167, 169, 171, 178, 191, 192, 193, 205, 233, 238, 245, 252, 260, 261, 264, 265, 272, 274], "upgrad": [6, 27, 43, 252, 255], "without": [6, 18, 19, 23, 25, 26, 27, 48, 93, 100, 161, 162, 178, 196, 233, 242, 254, 258, 262, 264, 265, 268, 269, 270, 277], "aim": [6, 7, 36], "minimis": 6, "softwar": [6, 7, 26, 27, 31, 37, 59, 267, 270], "stabl": [6, 50, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 97, 123, 124, 151, 152, 178, 188, 189, 192, 213, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 238, 245, 277], "migrat": [4, 6, 50, 57], "bring": 6, "consider": [6, 15], "increas": [6, 18, 58, 261, 267, 270, 272], "maintain": [6, 22, 23, 37, 38, 41, 59, 256, 261, 270, 272], "codebas": [6, 7, 15, 32, 35, 44, 260, 261, 262, 272], "sens": 6, "befor": [6, 8, 9, 12, 13, 15, 18, 21, 22, 25, 27, 28, 34, 38, 41, 43, 45, 51, 53, 55, 56, 58, 118, 125, 154, 156, 157, 194, 256, 258, 260, 264, 274, 275], "contribut": [6, 11], "github": [6, 7, 9, 10, 11, 15, 19, 20, 21, 22, 33, 36, 41, 47, 50, 52, 59, 67, 93, 97, 162, 221, 233, 237, 238, 256, 258], "issu": [6, 7, 9, 10, 27, 41, 50, 162, 192, 258, 261, 268, 276], "justifi": 6, "gain": [6, 30], "non": [6, 7, 15, 19, 47, 48, 56, 57, 90, 93, 97, 230, 233, 238, 265], "go": [6, 7, 18, 21, 22, 23, 26, 30, 31, 35, 42, 43, 44, 47, 52, 104, 247, 256, 282], "main": [6, 7, 8, 15, 21, 26, 27, 28, 33, 47, 51, 55, 147, 188, 221, 254, 261, 262, 270, 272, 274], "minor": 6, "deploi": [6, 19, 21, 30, 31, 32, 33, 34, 35, 43, 256, 274], "branch": [6, 7, 9, 15, 23, 44, 47, 50, 256, 265, 272], "until": [6, 18, 22, 43], "next": [6, 7, 8, 18, 22, 23, 25, 27, 28, 42, 44, 50, 51, 57, 256, 265, 268, 272, 273, 280], "got": [6, 54, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 162, 175, 176, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "question": [6, 7, 11, 23, 52, 56, 274, 276, 280], "process": [6, 8, 9, 12, 15, 17, 18, 21, 22, 25, 26, 27, 28, 31, 35, 37, 41, 43, 44, 51, 57, 58, 64, 66, 67, 72, 150, 165, 200, 201, 202, 203, 210, 261, 262, 264, 265, 270, 272, 274, 276, 280], "ask": [6, 7, 9, 11, 26, 28, 34, 50, 52, 256, 274, 276, 277, 280], "commun": [6, 10, 21, 276, 277, 280], "slack": [6, 7, 10, 11, 21, 22, 50, 52, 276, 280], "apach": [7, 15, 47, 89, 99, 100, 101, 229, 241, 242, 243, 244], "licens": [7, 47], "short": [7, 37, 52, 198], "submit": [7, 9, 15, 25, 26, 34, 47, 58], "code": [0, 1, 7, 10, 11, 13, 14, 15, 19, 23, 24, 25, 26, 28, 30, 31, 35, 37, 38, 40, 44, 45, 47, 48, 51, 57, 58, 59, 90, 91, 125, 138, 230, 231, 254, 255, 256, 258, 260, 261, 262, 263, 264, 267, 268, 269, 270, 272, 273, 274, 278, 280, 281], "submiss": 7, "understood": 7, "permiss": [7, 18, 28], "share": [7, 15, 17, 19, 23, 25, 35, 44, 51, 58, 260, 261, 263, 269, 272, 274], "don": [1, 7, 9, 16, 18, 22, 28, 38, 39, 42, 45, 48, 50, 51, 58, 256, 261, 265, 268, 274, 278, 280], "t": [1, 7, 9, 15, 16, 18, 21, 22, 23, 25, 28, 38, 39, 41, 42, 45, 48, 50, 51, 58, 64, 66, 73, 74, 75, 76, 81, 82, 83, 87, 88, 89, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 170, 178, 203, 212, 213, 214, 215, 220, 222, 223, 227, 228, 229, 232, 233, 234, 235, 236, 237, 246, 247, 248, 249, 251, 256, 260, 261, 262, 264, 265, 268, 273, 274, 275, 277, 278, 280, 281, 282], "see": [7, 8, 12, 13, 14, 15, 18, 19, 22, 23, 25, 26, 27, 28, 31, 34, 37, 38, 42, 43, 44, 45, 47, 50, 52, 56, 66, 67, 75, 77, 78, 79, 80, 90, 91, 101, 123, 147, 151, 161, 165, 178, 188, 189, 214, 216, 217, 218, 219, 230, 231, 239, 243, 244, 245, 254, 256, 258, 261, 262, 263, 265, 266, 268, 270, 272, 273, 274, 275, 276, 277, 280, 281, 282], "our": [7, 9, 11, 15, 19, 23, 25, 27, 31, 32, 45, 47, 50, 56, 58, 208, 265, 276, 280], "guid": [4, 7, 8, 11, 14, 15, 19, 22, 23, 25, 26, 27, 28, 30, 31, 32, 39, 41, 42, 44, 45, 48, 50, 52, 56, 57, 99, 239, 241, 244, 256, 262, 265, 274], "practic": [7, 41, 58, 59, 263, 265, 267, 270], "descript": [7, 18, 23, 37, 38, 43, 48, 52, 61, 63, 68, 69, 108, 109, 110, 111, 113, 114, 115, 116, 119, 120, 123, 124, 126, 128, 130, 132, 133, 134, 136, 146, 149, 150, 151, 152, 158, 163, 164, 167, 169, 171, 174, 187, 191, 193, 194, 199, 205, 207, 221, 256, 261, 262, 268, 272], "how": [7, 11, 13, 14, 16, 23, 27, 28, 31, 37, 39, 41, 42, 43, 44, 48, 52, 53, 54, 56, 58, 72, 168, 208, 210, 250, 255, 258, 265, 268, 269, 270, 273, 274, 275, 276, 278, 280, 281, 282], "prepar": [7, 273], "against": [7, 11, 15, 21, 22, 32, 37, 38, 48, 64, 66, 67], "repositori": [7, 8, 15, 19, 20, 22, 23, 27, 33, 35, 36, 38, 41, 42, 43, 47, 50, 52, 135, 256, 260, 270], "window": [7, 8, 9, 18, 28, 38, 42, 43, 50, 52, 53, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 260, 266, 268, 273, 278, 280, 281, 282], "win_setup_conda": 7, "win_setup_env": 7, "circl": 7, "ci": [7, 11, 26, 30, 45, 256, 258], "correct": [7, 22, 23, 26, 47, 50, 268], "virtual": [7, 8, 9, 25, 37, 43, 52, 252, 273], "unfamiliar": 7, "requisit": 7, "ll": [7, 12, 22, 25, 27, 28, 43, 50, 268, 274, 281, 282], "fork": [7, 9], "click": [7, 15, 21, 22, 23, 26, 27, 28, 29, 34, 38, 42, 43, 44, 45, 50, 125, 136, 137, 261, 262, 263, 265, 266, 272, 273, 275, 281, 282], "right": [7, 11, 22, 26, 27, 28, 42], "corner": [7, 22, 26, 42], "choos": [7, 22, 25, 28, 30, 42, 43, 47, 50, 52, 60, 255, 265, 268, 276], "target": [7, 8, 19, 23, 32, 38, 42, 86, 100, 226, 242, 256, 260, 262, 272], "account": [7, 15, 22, 23, 25, 26, 28, 35, 43, 53, 84, 85, 224, 225, 239, 260], "further": [7, 13, 15, 16, 19, 20, 25, 27, 33, 36, 38, 51, 52, 58, 252, 258, 265, 270, 276], "consult": [7, 8, 15, 19, 20, 23, 24, 32, 33, 36, 53, 255, 268, 273, 274], "repo": [7, 9, 10, 29, 30, 41, 47, 258], "almost": [7, 35, 268], "readi": [7, 21, 22, 23, 25, 30, 47, 52, 59, 178, 280, 281, 282], "termin": [7, 8, 26, 27, 28, 34, 38, 42, 43, 44, 50, 52, 262, 266, 268, 272, 273, 275, 276, 278, 280, 281, 282], "navig": [7, 8, 9, 26, 27, 28, 34, 35, 41, 42, 44, 50, 52, 252, 268, 274, 278, 280, 281, 282], "instal": [7, 9, 14, 15, 19, 21, 23, 25, 29, 34, 42, 43, 47, 51, 52, 54, 56, 69, 192, 250, 256, 258, 260, 261, 268, 273, 274, 276, 277, 279, 280, 281, 282], "everyth": [7, 239], "onc": [7, 8, 16, 19, 22, 25, 26, 27, 28, 35, 37, 38, 44, 47, 50, 52, 54, 77, 216, 272, 273, 274], "execut": [7, 8, 12, 19, 22, 23, 25, 26, 27, 28, 31, 34, 35, 37, 38, 41, 42, 43, 44, 47, 50, 51, 53, 54, 55, 56, 58, 90, 100, 124, 150, 152, 165, 188, 193, 194, 198, 199, 208, 230, 242, 255, 260, 262, 263, 264, 265, 266, 268, 272, 273], "successfulli": [7, 18, 21, 22, 25, 26, 27, 28, 37, 272, 273, 277], "saniti": 7, "ensur": [1, 7, 11, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 34, 41, 43, 44, 48, 58, 167, 258, 268, 272, 273, 274, 277, 278], "fail": [7, 12, 22, 54, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 161, 175, 176, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 264], "plan": [7, 11, 22, 45, 100, 242, 260], "relat": [7, 27, 38, 44, 51, 56, 187, 256], "suit": [7, 26, 54], "place": [7, 9, 21, 22, 26, 34, 37, 38, 41, 58, 257, 260, 261, 273, 274, 280, 281, 282], "focu": [7, 23, 25], "three": [7, 17, 30, 35, 44, 51, 52, 211, 256, 262, 272, 273, 275, 277], "plugin": [7, 15, 19, 22, 31, 35, 37, 38, 43, 44, 45, 46, 57, 58, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 264, 273, 274], "primari": [1, 7, 22, 48, 88, 100, 211, 228, 242, 280], "introduc": [1, 7, 13, 16, 17, 28, 37, 44, 45, 48, 51, 52, 252, 262, 263, 272, 273, 276, 281], "too": [7, 22, 38, 41, 58, 189, 258, 268], "mani": [7, 8, 15, 18, 22, 25, 28, 37, 38, 53, 58, 60, 261, 270, 272], "depend": [1, 7, 9, 19, 21, 22, 23, 25, 26, 27, 28, 31, 32, 34, 35, 41, 47, 50, 51, 52, 54, 57, 58, 99, 162, 194, 241, 244, 250, 253, 262, 265, 268, 273, 277, 280], "airflow": [7, 32, 47, 256], "typic": [7, 13, 26, 31, 48, 198, 256, 257, 258, 261, 270, 272, 276], "small": [7, 41, 56, 281, 282], "push": [7, 22, 23, 35], "break": [7, 9, 22, 30, 37, 41, 42, 50, 261, 262, 268], "backward": [7, 109], "compat": [7, 12, 13, 26, 44, 47, 50, 90, 91, 93, 97, 109, 230, 231, 233, 238, 258], "off": [7, 41], "intend": [7, 17, 37, 38, 45, 272], "pr": [7, 9, 10], "unit": [7, 31, 38, 51, 260], "end": [7, 18, 22, 23, 33, 38, 44, 45, 53, 54, 58, 165, 178, 194, 230, 262, 266, 268], "e2": [7, 23, 33, 262], "linter": [7, 27, 41], "lint": [7, 27, 40, 51, 57], "open": [7, 9, 13, 14, 15, 19, 21, 25, 26, 27, 28, 29, 34, 42, 43, 44, 45, 52, 58, 59, 71, 73, 74, 75, 76, 77, 78, 79, 80, 86, 87, 90, 93, 94, 95, 96, 104, 105, 106, 107, 209, 212, 213, 214, 215, 216, 217, 218, 219, 226, 227, 230, 233, 234, 235, 236, 247, 248, 249, 251, 262, 265, 268, 270, 273, 275, 280], "org": [7, 42, 43, 47, 50, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 99, 100, 101, 103, 105, 106, 107, 178, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 238, 241, 242, 243, 244, 245, 246, 248, 249, 251], "NOT": [7, 15, 100, 242], "await": 7, "review": [7, 9, 10, 11, 12, 13, 17, 23, 25, 34, 41, 50, 52, 60, 256, 272, 273, 275, 276, 277, 280, 281], "comment": [7, 28, 255, 280], "team": [7, 8, 11, 21, 256, 261, 270], "address": [7, 18, 25, 28, 38, 43, 260], "complet": [7, 8, 18, 22, 23, 25, 26, 27, 28, 38, 41, 44, 52, 54, 58, 100, 125, 242, 262, 264, 272, 273, 274, 276, 278, 280], "over": [7, 9, 11, 12, 17, 38, 44, 48, 64, 66, 67, 147, 165, 239, 254, 272], "abandon": 7, "instruct": [1, 7, 9, 18, 21, 22, 25, 27, 31, 34, 35, 50, 211, 272, 274], "resolv": [7, 12, 48, 51, 66, 67, 100, 194, 242, 263, 270], "give": [7, 13, 22, 34, 37, 38, 52, 58, 194, 196, 258, 261, 262, 263, 268, 272], "cross": 7, "platform": [7, 8, 18, 19, 23, 36], "maco": [7, 8, 9, 38, 42, 43, 50], "linux": [7, 8, 38, 42, 43, 50, 52, 273, 280], "semant": [7, 31, 51], "7": [7, 12, 26, 27, 28, 37, 38, 42, 50, 60, 72, 102, 210, 221, 245, 263, 268, 272, 278], "onward": [7, 280], "style": [7, 41, 47], "cascad": 7, "pep": [7, 41, 262], "8": [7, 8, 12, 13, 23, 27, 28, 37, 41, 58, 72, 210, 221, 239, 263, 268, 272, 278], "googl": [7, 13, 36, 84, 85, 224, 225], "docstr": 7, "484": 7, "face": [7, 11], "count_truthi": 7, "elem": 7, "cleanli": 7, "cd": [7, 11, 19, 21, 26, 27, 28, 30, 37, 44, 50, 52, 256, 278], "ruff": 7, "black": [7, 38, 41, 112, 256, 278], "100": [7, 37, 78, 79, 80, 85, 208, 217, 218, 219, 225, 258, 273, 275], "coverag": [7, 15, 38], "pytest": [7, 38, 47, 51, 56, 255, 256, 278], "cov": [7, 278], "behav": [7, 47, 265], "pyspark": [7, 12, 18, 57, 98, 99, 100, 101, 211, 240, 241, 242, 243, 252, 256, 265], "hive": [7, 14, 89, 100, 229, 242], "lack": [7, 64, 66, 67], "java": 7, "java_hom": 7, "usr": [7, 23], "libexec": 7, "v": [7, 27, 28, 29, 38, 43, 50, 64, 66, 67, 263, 265, 266, 278], "workaround": 7, "conftest": 7, "fixtur": [7, 37], "reusabl": [7, 256, 261, 272], "squash": 7, "clariti": 7, "suggest": [7, 9, 27, 198], "chri": 7, "beam": 7, "hi": 7, "post": [7, 39, 48, 50, 70, 208, 256], "write": [7, 11, 16, 18, 22, 27, 37, 42, 43, 48, 51, 58, 71, 82, 85, 86, 99, 105, 106, 174, 209, 211, 221, 222, 225, 226, 241, 244, 248, 249, 250, 258, 265, 268, 273], "particular": [7, 13, 15, 22, 38, 56, 162, 165, 178, 268], "limit": [7, 12, 21, 178, 252, 264, 265], "length": [7, 14, 41, 52, 250], "50": [7, 52], "charact": [7, 17, 52, 256, 260, 261, 265], "capitalis": 7, "letter": [7, 198], "word": [7, 58], "omit": [7, 41, 178], "period": [7, 11, 35], "imper": 7, "tens": 7, "hook": [7, 18, 25, 34, 37, 38, 39, 45, 57, 147, 165, 200, 201, 202, 203, 204, 211, 255, 256, 273], "automat": [7, 12, 15, 18, 22, 27, 28, 34, 37, 41, 43, 47, 52, 67, 161, 188, 196, 201, 203, 254, 256, 258, 260, 263, 264, 266, 268, 272, 273, 274], "skip": [7, 51, 239, 264, 272], "verifi": [7, 8, 9, 15, 23, 26, 27, 28, 34, 35], "n": [7, 21, 22, 25, 27, 28, 38, 71, 209, 263, 265, 266, 274], "dure": [7, 13, 14, 18, 23, 25, 27, 28, 37, 39, 44, 99, 100, 156, 157, 165, 198, 208, 241, 242, 244, 261], "uninstal": [7, 8, 50], "compli": [7, 23], "dco": 7, "certifi": 7, "contributor": [7, 8, 9, 10, 11, 15], "wrote": 7, "random": [7, 58], "j": [7, 47], "m": [7, 13, 14, 23, 28, 35, 38, 43, 50, 54, 81, 86, 220, 226, 230, 263, 266, 274], "rememb": [7, 26, 27, 28, 30, 268], "everi": [7, 11, 19, 23, 27, 37, 41, 45, 56, 58, 255, 256, 257, 262, 263, 272], "alia": [7, 47, 131, 135, 172, 177, 179, 180, 181, 182, 183, 184, 185, 186, 256, 260, 269], "setup": [7, 8, 9, 14, 26, 30, 35, 41, 43, 44, 47, 51, 57, 58, 173, 211, 252, 256, 269], "msg": [7, 73, 212], "block": [7, 9, 14, 51, 262, 263, 270], "unsign": 7, "rebas": 7, "retroact": 7, "learn": [7, 11, 20, 26, 28, 30, 33, 43, 44, 47, 48, 51, 52, 55, 56, 245, 261, 262, 270, 272, 276, 278], "resourc": [7, 13, 23, 31, 37, 57, 58, 60, 84, 85, 178, 224, 225, 265], "timer": [7, 54], "q": 7, "discuss": [7, 9, 10, 11, 19, 23, 50, 276, 280], "searchabl": [7, 50, 276, 280], "archiv": [7, 50, 276, 280], "cloud": [8, 13, 21, 23, 31, 33, 36, 38, 44, 84, 85, 224, 225, 260, 275], "scienc": [8, 29, 38, 44, 57, 59, 264, 273, 276, 278], "improv": [8, 9, 23, 27, 44, 48], "experi": [8, 15, 26, 29, 33, 47, 51, 57, 60, 105, 106, 248, 249], "effici": [8, 27, 262, 272], "cycl": 8, "individu": [8, 18, 31, 41, 53, 276], "authent": [8, 28, 35, 53, 239], "workspac": [8, 27, 29, 30, 43, 211], "exist": [1, 8, 11, 12, 14, 15, 17, 18, 25, 27, 28, 37, 38, 42, 43, 44, 47, 48, 50, 52, 56, 58, 64, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 143, 175, 176, 178, 194, 196, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 261, 263, 265, 266, 268, 272, 277, 282], "cluster": [8, 13, 21, 25, 27, 28, 29, 33, 47, 58], "gnu": 8, "clone": [8, 9, 27, 28, 32, 35], "similar": [0, 8, 12, 16, 26, 27, 28, 31, 38, 48, 52, 54, 99, 241, 244, 256, 261, 263, 268, 272, 273, 277], "gener": [8, 12, 13, 15, 18, 19, 23, 26, 28, 29, 35, 37, 38, 47, 48, 50, 52, 57, 58, 72, 73, 78, 79, 80, 81, 82, 88, 89, 90, 91, 93, 95, 96, 138, 161, 204, 210, 212, 217, 218, 219, 220, 222, 228, 229, 230, 231, 233, 235, 236, 245, 250, 252, 256, 257, 260, 261, 264, 266, 270, 272, 274, 277, 278, 280, 281, 282], "manual": [8, 26, 27, 34, 35, 37, 43, 52, 188, 252, 261, 272], "wheel": [8, 19, 26, 35, 274], "makefil": 8, "autom": [8, 26, 30, 40, 57, 255], "save": [8, 15, 21, 25, 27, 28, 31, 35, 38, 41, 44, 45, 51, 54, 57, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 153, 154, 165, 175, 176, 178, 186, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 260, 266, 268, 269, 270, 272, 273, 274, 280], "left": [8, 22, 27, 42, 43, 44, 60], "chosen": [8, 28], "1234": 8, "567890": 8, "abcd1234": 8, "0987": 8, "654321": 8, "9876xywz": 8, "databricks_cluster_id": 8, "powershel": [8, 38], "With": [8, 26, 27, 28, 42, 258, 262, 268], "parent": [8, 38, 44, 51, 194, 256, 276], "stream": [8, 58, 112, 244], "written": [8, 9, 15, 18, 21, 31, 37, 98, 99, 240, 265, 268, 274], "behind": [8, 48, 90, 91, 230, 231, 262], "scene": [8, 90, 91, 230, 231, 262], "upload": [8, 14, 24], "dbf": [8, 98, 99, 240, 241, 244], "queue": [8, 34], "restart": [8, 268, 277], "unavail": 8, "poll": [8, 22], "statu": [8, 22, 26], "grep": 8, "select": [8, 11, 12, 14, 26, 27, 28, 31, 41, 42, 43, 44, 45, 50, 84, 86, 90, 99, 194, 224, 226, 230, 241, 244, 268, 274], "success": [8, 9, 11, 22, 26, 35, 125, 268], "cluster_id": 8, "library_status": 8, "tmp": [8, 75, 214], "py3": [8, 19, 23, 260], "is_library_for_all_clust": 8, "fals": [8, 12, 13, 14, 18, 22, 25, 34, 38, 66, 72, 76, 77, 81, 82, 85, 86, 88, 89, 91, 92, 102, 103, 105, 106, 107, 138, 142, 165, 178, 200, 201, 202, 203, 204, 210, 215, 216, 220, 222, 225, 226, 228, 229, 231, 232, 237, 245, 246, 248, 249, 251, 258, 262, 266, 277], "reflect": [8, 27, 280], "latest": [8, 11, 12, 13, 15, 23, 26, 28, 34, 35, 50, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 161, 176, 178, 186, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 256], "welcom": [9, 10], "someth": [9, 18, 43, 56, 270, 277], "incorrect": [9, 147], "miss": [9, 14, 25, 37, 38, 41, 67, 162, 200, 201, 202, 203, 265, 268, 277], "tell": [9, 21, 22, 43], "yourself": [9, 31], "guidelin": [9, 41], "wiki": [9, 71, 107, 209, 251], "markdown": [9, 274], "sphinx": [9, 38], "coordin": [9, 12, 44], "script": [9, 21, 22, 25, 26, 31, 34, 35, 42, 43, 44, 45, 50, 187, 256], "unix": [9, 42, 43, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "pandoc": 9, "fine": [9, 28, 161], "As": [9, 14, 18, 21, 23, 26, 28, 31, 37, 41, 58, 239, 254, 256, 260, 264, 266, 272], "long": [9, 11, 31, 39, 41, 52, 189, 208, 256, 266], "effort": [9, 86, 226], "render": [9, 21, 258, 261, 272, 280], "basic": [9, 15, 16, 28, 31, 37, 41, 51, 52, 58, 256, 274, 280], "happi": [9, 11], "final": [9, 12, 21, 23, 26, 35, 42, 44, 53, 194, 265, 268, 270, 274], "draft": 9, "peopl": [9, 25, 37], "who": [9, 11, 28, 30, 270], "comfort": [9, 30, 275], "probabl": 9, "jump": 9, "doc": [9, 19, 34, 37, 38, 42, 51, 72, 73, 74, 76, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 97, 99, 100, 101, 105, 106, 178, 210, 212, 213, 215, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 238, 239, 241, 242, 243, 244, 248, 249, 256, 274], "few": [9, 23, 37, 39, 41, 44, 45, 52, 192], "minut": [9, 23, 26, 70, 276], "finish": [9, 22, 23, 25, 26, 27, 28, 42, 54, 266, 275], "html": [9, 26, 47, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 161, 178, 188, 189, 192, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 251, 277], "collat": 9, "rst": [9, 15, 274], "tabl": [9, 48, 58, 60, 84, 85, 87, 91, 100, 101, 211, 221, 224, 225, 227, 231, 239, 242, 243, 272, 274, 281], "rest": [9, 18, 23, 26, 27, 28, 52, 142, 208, 278], "relev": [9, 18, 35, 38, 56, 77, 216, 262, 268, 277], "via": [9, 11, 12, 18, 37, 38, 44, 56, 58, 86, 101, 226, 239, 243, 256, 260, 261, 272, 274], "There": [9, 15, 26, 27, 37, 41, 43, 44, 51, 52, 60, 86, 226, 272, 274, 276, 277, 282], "shame": 9, "incredibli": 9, "fussi": 9, "even": [9, 14, 18, 25, 27, 41, 44, 45, 258, 260, 261, 281, 282], "wrong": 9, "sometim": [9, 18, 45, 58, 258, 261, 262, 266], "caus": [9, 261, 277], "problem": [9, 15, 23, 37, 50], "crop": 9, "whether": [9, 15, 18, 30, 31, 32, 34, 52, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 156, 165, 175, 176, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 258, 277, 280], "re": [9, 12, 14, 15, 21, 22, 23, 25, 30, 31, 33, 35, 39, 43, 54, 165, 252, 261, 262, 265, 266, 268, 277, 280], "technic": [9, 48], "experienc": 9, "less": [9, 41, 86, 226, 250, 264], "familiar": [9, 16, 52, 276, 280], "conda": [9, 26, 27, 28, 35, 42, 43, 252, 268], "lightweight": [9, 25, 44, 269], "whatev": [10, 268], "manag": [10, 18, 19, 20, 21, 22, 23, 24, 25, 31, 33, 34, 36, 44, 47, 48, 50, 51, 53, 57, 73, 84, 85, 116, 134, 165, 201, 211, 212, 224, 225, 253, 255, 270], "join": [10, 42, 43, 48, 211, 261, 273], "report": [10, 11, 33, 38, 48, 52, 54, 261, 262], "bug": [10, 11, 15, 42, 50], "request": [10, 11, 14, 15, 18, 22, 43, 47, 70, 208, 274], "pull": [10, 11, 15, 31, 34, 35], "awesom": 10, "curat": [10, 60], "propos": 10, "fix": [10, 12, 261], "incub": 11, "lf": [11, 59], "ai": [11, 32, 36, 47, 59], "term": [11, 31, 37, 261], "tsc": 11, "current": [11, 13, 15, 18, 25, 47, 48, 50, 52, 56, 147, 165, 178, 186, 194, 196, 198, 221, 239, 254, 261, 264, 274, 281], "past": [11, 14, 18, 26, 42, 43, 272], "futur": [11, 22, 25, 34, 44, 47, 66, 252], "duti": 11, "charter": 11, "member": [11, 270], "fuel": 11, "continu": [11, 22, 54, 264], "On": [11, 22, 27, 28, 44, 50, 201, 208, 264], "Be": [11, 34], "least": [11, 31, 52, 86, 101, 197, 198, 226, 243, 256, 262], "full": [11, 15, 23, 25, 37, 43, 47, 56, 256, 261, 268, 272, 274, 280], "dai": [11, 18, 73, 212], "week": 11, "help": [11, 12, 19, 21, 22, 27, 30, 37, 39, 41, 45, 50, 57, 59, 252, 261, 266, 274, 277, 280], "attend": 11, "meet": [11, 194, 265], "roadmap": 11, "proactiv": 11, "infrastructur": [11, 23, 34, 256], "prioritis": 11, "move": [11, 22, 23, 28, 51, 52, 256], "forward": 11, "ongo": 11, "pace": 11, "close": [11, 25, 27, 28, 52, 77, 165, 216, 254, 273, 275, 280], "variou": [11, 16, 25, 41, 45, 51, 274], "channel": [11, 52, 276, 280], "just": [11, 15, 23, 26, 38, 42, 56, 194, 258, 268, 272], "marker": 11, "high": [11, 18, 30, 37, 47, 48], "qualiti": [11, 37, 41, 278], "collabor": [11, 51, 57, 270, 280], "understand": [11, 12, 23, 31, 37, 52, 58, 270, 276], "intern": [11, 15, 84, 90, 91, 101, 135, 165, 224, 230, 231, 243, 261], "backlog": 11, "toward": [11, 33, 37], "goal": 11, "evid": 11, "excit": 11, "relationship": [11, 263], "ari": 11, "valtazano": 11, "nikolao": 11, "tsaousi": 11, "quantumblack": 11, "solv": [11, 45, 261, 262], "challeng": 11, "Their": [11, 25], "turn": [0, 11, 58, 264, 270, 272], "peteri": 11, "erin": 11, "ivan": [11, 276], "danov": 11, "kaltsa": 11, "meisam": 11, "emamjom": 11, "core": [11, 15, 23, 37, 53, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 103, 104, 105, 106, 107, 174, 176, 201, 203, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 245, 246, 247, 248, 249, 251, 252, 256, 262, 272, 277], "consist": [11, 15, 18, 23, 26, 27, 28, 41, 55, 56, 263, 272, 278], "ahdra": 11, "merali": 11, "andrew": 11, "mackai": 11, "ankita": 11, "katiyar": 11, "antoni": 11, "miln": 11, "deepyaman": [11, 47], "datta": [11, 47], "dmitri": 11, "sorokin": 11, "huong": 11, "nguyen": [11, 47], "jitendra": 11, "gundaniya": 11, "jo": 11, "stichburi": 11, "joel": 11, "schwarzmann": 11, "juan": 11, "lui": 11, "cano": 11, "laura": 11, "couto": 11, "marcin": 11, "zab\u0142ocki": 11, "merel": 11, "theisen": 11, "nero": 11, "okwa": 11, "nok": 11, "lam": 11, "chan": 11, "rashida": 11, "kanchwala": 11, "ravi": 11, "kumar": 11, "pilla": 11, "sajid": 11, "alam": 11, "stephani": 11, "kaiser": 11, "tynan": 11, "debold": 11, "vladimir": 11, "nikol": 11, "yetund": 11, "dada": 11, "former": 11, "signific": [11, 264, 265], "andrii": 11, "ivaniuk": 11, "anton": 11, "kirilenko": 11, "cvetanka": 11, "nechevska": 11, "dmitrii": 11, "deriabin": 11, "gabriel": [11, 47], "comym": 11, "gordon": 11, "wriglei": 11, "hamza": 11, "oza": 11, "ignacio": 11, "paricio": 11, "jannic": 11, "holzer": 11, "jiri": 11, "klein": 11, "kiyohito": 11, "kunii": 11, "la\u00ed": 11, "carvalho": 11, "liam": 11, "brummitt": 11, "lim": 11, "hoang": 11, "lorena": 11, "b\u0103lan": 11, "nasef": 11, "khan": 11, "richard": 11, "westenra": 11, "susanna": 11, "wong": 11, "zain": [11, 47], "patel": [11, 47], "quarter": 11, "year": [11, 14, 23, 70, 208], "shown": [11, 44, 51, 178, 258, 263, 268, 281, 282], "regular": [11, 18, 178, 262], "prior": [11, 47], "month": [11, 18], "candid": [11, 272], "decid": [11, 14, 32, 34, 256, 272], "lead": [11, 12, 17], "host": [11, 14, 34, 43, 47, 59], "affect": [11, 18, 54, 261], "amend": [11, 15], "decis": [11, 30, 34, 52], "act": [11, 23, 47, 52, 178], "onto": [11, 32, 35, 50], "shareabl": 261, "registri": [16, 21, 22, 23, 31, 38, 44, 51, 57, 161, 259, 267, 268, 270, 275], "connector": [47, 69, 207, 239], "reproduc": [26, 30, 38, 47, 59, 270], "copi": [14, 19, 22, 23, 25, 26, 27, 43, 58, 64, 66, 67, 165, 178, 194, 198, 261, 262, 270, 272, 280, 281, 282], "second": [12, 13, 23, 27, 28, 37, 51, 53, 70, 86, 194, 226, 239, 260, 263, 268, 272], "sampl": [13, 41, 52, 90, 91, 102, 230, 231, 245, 262, 268, 277], "prototyp": [12, 13], "mean": [14, 15, 18, 22, 23, 27, 29, 35, 37, 44, 47, 56, 58, 257, 262, 263, 264, 266, 270, 272, 274, 282], "detect": [13, 47, 258, 264], "usernam": [13, 14, 23, 28, 44, 208, 268, 278], "password": [13, 14, 23, 28, 42, 70, 97, 101, 208, 230, 238, 239, 243, 278], "certain": [13, 261, 270], "programmat": [12, 18, 21, 22, 26, 31, 34, 266], "fsspec": [13, 18, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 249, 251, 275], "reli": [13, 15, 37, 47, 56], "varieti": [13, 41, 270, 275], "network": [13, 31, 275], "object": [12, 13, 18, 25, 26, 37, 52, 57, 64, 66, 67, 70, 75, 77, 84, 85, 93, 97, 98, 147, 161, 165, 167, 169, 178, 194, 196, 197, 198, 200, 201, 202, 203, 206, 214, 216, 221, 224, 225, 233, 238, 240, 244, 250, 254, 261, 264, 265, 272, 273, 275, 277, 282], "hadoop": 13, "url": [13, 14, 26, 27, 28, 42, 70, 90, 91, 97, 101, 135, 208, 230, 231, 238, 243, 260], "form": [13, 25, 48, 64, 66, 101, 201, 203, 211, 243, 256, 262, 263, 272, 273], "protocol": [13, 15, 18, 26, 27, 71, 73, 74, 75, 76, 77, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 209, 212, 213, 214, 215, 216, 220, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 249, 251], "prepend": 13, "absenc": 13, "permit": 13, "rel": [13, 30], "port": [13, 14, 43, 230, 239], "resili": 13, "replic": 13, "amazon": [13, 22, 23, 32, 47], "often": [13, 25, 31, 37, 262], "ec2": [13, 22], "s3f": [13, 23], "_to": 13, "comput": [0, 13, 21, 23, 25, 31, 35, 42, 43, 44, 45, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 106, 107, 156, 176, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 241, 245, 246, 247, 248, 249, 251, 263, 266, 270, 274], "gcsf": 13, "lake": [13, 57, 221], "gen2": 13, "abf": [13, 14, 88, 89, 221, 228, 229], "web": [13, 29, 44], "ftp": 13, "webhdf": 13, "purpos": [13, 15, 19, 21, 22, 27, 28, 31, 35, 37, 39, 45, 48, 261, 270, 272], "fs_arg": [13, 14, 15, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 107, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 249, 250, 251], "load_arg": [0, 12, 13, 14, 18, 58, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 101, 102, 103, 178, 208, 209, 210, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 262, 275], "open_args_load": [13, 14, 71, 73, 74, 76, 78, 79, 80, 86, 87, 90, 93, 94, 95, 96, 104, 105, 106, 107, 209, 212, 213, 215, 217, 218, 219, 226, 227, 230, 233, 234, 235, 236, 247, 248, 249, 251], "open_args_sav": [13, 14, 71, 73, 74, 75, 76, 77, 78, 79, 80, 86, 87, 90, 93, 94, 95, 96, 104, 105, 106, 107, 209, 212, 213, 214, 215, 216, 217, 218, 219, 226, 227, 230, 233, 234, 235, 236, 247, 248, 249, 251], "test_dataset": [13, 14], "test_project": 13, "oper": [12, 13, 14, 18, 28, 31, 58, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 125, 153, 175, 176, 178, 198, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 261, 265], "respect": [13, 14, 15, 22, 25, 38, 44, 54, 99, 221, 241, 244, 255, 258, 261], "mode": [13, 14, 15, 17, 58, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 86, 87, 90, 93, 94, 95, 96, 99, 104, 105, 106, 107, 156, 173, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 226, 227, 230, 233, 234, 235, 236, 239, 241, 244, 247, 248, 249, 251, 252, 256, 262, 265], "rb": [13, 14, 265], "third": [13, 14, 27, 28, 43, 264, 274], "parti": [13, 14, 43, 274], "bike": [12, 14], "sep": [12, 13, 14, 58, 81, 86, 99, 220, 226, 237, 241], "date_format": [13, 14, 81, 86, 220, 226], "y": [13, 14, 23, 27, 28, 50, 54, 81, 82, 86, 95, 96, 220, 222, 226, 230, 235, 236, 262, 263, 266, 272, 274, 282], "d": [13, 14, 22, 25, 38, 54, 64, 66, 67, 81, 86, 194, 198, 220, 226, 230, 260, 262, 264, 265, 266], "h": [13, 14, 23, 38, 54, 81, 96, 220, 230, 236, 282], "decim": [13, 14, 81, 220], "gzip": [14, 72, 89, 210, 229], "motorbik": [12, 13, 14, 81, 83, 220, 223, 237, 250], "your_bucket": [13, 14, 53, 58, 76, 81, 82, 83, 93, 99, 102, 215, 220, 222, 223, 233, 237, 241, 245, 250, 269], "skiprow": [12, 14], "skipfoot": [12, 14], "na_valu": [12, 14, 81, 86, 220, 226], "na": [12, 14, 81, 86, 220, 226], "airplan": [14, 86, 226], "pickledataset": [13, 14, 17, 19, 22, 23, 272, 280], "06_model": [14, 17, 19, 26, 27, 28, 103, 246, 272, 280], "pkl": [14, 17, 19, 93, 233], "backend": [14, 34, 72, 93, 97, 210, 233, 238], "rocket": [14, 82, 222], "exceldataset": [13, 14, 22, 23, 252, 272, 273, 275, 278, 280, 281, 282], "xlsx": [13, 14, 22, 23, 82, 222, 273, 275, 280, 281], "my_gcp_credenti": [12, 14, 76, 82, 102, 215, 222, 245], "sheet_nam": [14, 82, 222], "sheet1": [14, 82, 222], "sheet2": [14, 82, 222], "sheet3": [14, 82, 222], "results_plot": 14, "matplotlibwrit": [13, 14, 44, 282], "08_result": 14, "plot": [14, 57, 77, 96, 216, 236, 282], "output_1": 14, "jpeg": 14, "skateboard": 14, "hdfdataset": [13, 14], "column": [14, 44, 72, 83, 89, 96, 100, 210, 211, 223, 229, 236, 242, 258, 262, 272, 273, 282], "brand": [12, 14], "w": [14, 41, 71, 73, 76, 78, 79, 80, 86, 94, 95, 96, 104, 105, 106, 107, 209, 212, 215, 217, 218, 219, 226, 234, 235, 236, 247, 248, 249, 251, 262], "dropna": [14, 197, 273], "truck": [14, 89, 229], "parquetdataset": [12, 13, 14, 178, 252, 272, 273, 277, 278, 280, 282], "gear": [12, 14, 89, 229], "disp": [14, 89, 229], "wt": [14, 89, 229], "categori": [14, 252, 260, 275], "file_schem": [14, 89, 229], "has_nul": [14, 89, 229], "partition_on": [14, 89, 229], "weather": [14, 53, 58, 98, 99, 101, 239, 240, 241, 243], "header": [14, 58, 70, 99, 208, 241, 244, 260, 262], "inferschema": [14, 58, 99, 241], "scooter": [12, 14], "sqltabledataset": [12, 14, 90, 230], "scooters_credenti": [12, 14], "table_nam": [12, 14, 85, 91, 100, 225, 231, 239, 242], "index_col": [14, 230], "if_exist": [14, 91, 231, 269], "scooters_queri": [12, 14], "sqlquerydataset": [12, 14], "con": [12, 14, 90, 91, 230, 231], "sqlalchemi": [12, 14, 90, 91, 230, 231], "explicitli": [14, 18, 47, 72, 167, 196, 210, 254, 257, 261, 265, 268], "us_corn_yield_data": 14, "apidataset": [13, 14], "quickstat": [14, 70, 208], "nass": [14, 70, 208], "gov": [14, 70, 208], "usda_credenti": 14, "some_token": [14, 70, 208], "commodity_desc": [14, 70, 208], "statisticcat_d": [14, 70, 208], "agg_level_desc": [14, 70, 208], "2000": [14, 70, 208], "usda_credienti": 14, "auth": [14, 70, 84, 85, 208, 224, 225], "dev_minio": 14, "token": [12, 14, 15, 26, 27, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 209, 210, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 249, 250, 251, 260], "localhost": [14, 34, 90, 91, 101, 230, 231, 243], "9000": 14, "easiest": [14, 15, 19, 67], "docker": [14, 21, 22, 24, 31, 32, 33, 35, 47, 256], "after": [12, 14, 18, 19, 21, 22, 23, 27, 28, 31, 35, 37, 44, 45, 47, 53, 54, 55, 56, 58, 64, 66, 125, 153, 154, 155, 156, 157, 165, 194, 208, 254, 256, 258, 260, 262, 264, 274, 281], "p": [14, 15, 21, 23, 34, 38, 43], "minio_access_kei": 14, "minio_secret_kei": 14, "ml_model": 14, "dev_ab": [14, 89, 229], "account_nam": 14, "account_kei": 14, "accountnam": 14, "paramiko": 14, "pip": [1, 14, 15, 19, 21, 23, 26, 27, 28, 29, 31, 35, 37, 38, 41, 43, 44, 52, 54, 69, 252, 256, 260, 273, 274, 277, 278, 279, 280, 282], "cool_dataset": 14, "sftp": 14, "remote_clust": 14, "cool_data": 14, "cluster_credenti": 14, "establish": 14, "my_usernam": 14, "host_address": 14, "22": [14, 28, 41, 272, 273, 278], "conf_root": [14, 38], "pipeline_nam": [14, 17, 21, 22, 25, 34, 38, 43, 157, 165, 260, 261, 264, 268, 273], "metadata": [21, 23, 34, 44, 47, 125, 171, 172, 173, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 268, 270, 280, 281, 282], "wish": [47, 52, 221, 255, 258, 268, 274], "attempt": [12, 13, 18, 47, 165, 166, 194], "from_config": [12, 13, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "sqlite": [12, 44], "db": [12, 44, 64, 97, 238], "id_token": 12, "receiv": [12, 13, 18, 23, 125, 142, 153, 156, 262], "essenti": [], "equival": [13, 41, 47, 86, 226, 268, 274, 275], "test_bucket": 12, "syntax": [1, 14, 17, 38, 48, 66, 162, 260, 265], "factoris": 14, "spend": 14, "_csv": 14, "insert": [14, 39, 64, 66, 100, 221, 242], "overrid": [12, 13, 14, 15, 25, 47, 48, 64, 66, 258, 272], "ones": [14, 56, 198, 250], "seen": [14, 261, 273, 282], "reuseabl": 14, "csv_load_arg": 14, "normal": [14, 18, 23, 31, 70, 100, 101, 242, 243], "factory_data": 17, "process_data": 17, "_data": 17, "enclos": 17, "combin": [17, 30, 38, 44, 48, 52, 67, 262, 263, 264, 265, 268, 270, 272, 273], "plane": [17, 178], "shuttl": [13, 17, 22, 23, 82, 84, 90, 91, 222, 224, 230, 231, 272, 273, 275, 276, 277, 280, 281, 282], "dataset_nam": [17, 38, 53, 54, 154], "project_nam": [17, 23, 34, 35, 45, 52, 172, 255, 256, 268], "suffix": [17, 18], "create_model_input_t": [17, 272, 273], "preprocess_compani": [17, 44, 272, 273], "preprocess_shuttl": [17, 272, 273], "create_pipelin": [17, 58, 161, 264, 272, 273, 282], "kwarg": [17, 23, 47, 58, 70, 96, 100, 139, 140, 144, 192, 236, 242, 272, 273, 282], "preprocess_boat": 17, "preprocessed_boat": 17, "preprocess_boats_nod": 17, "preprocess_car": 17, "preprocessed_car": 17, "preprocess_cars_nod": 17, "preprocess_plan": 17, "preprocessed_plan": 17, "preprocess_planes_nod": 17, "model_input_t": [17, 22, 23, 272, 273, 277, 280], "create_model_input_table_nod": [17, 272, 273, 280], "belong": 17, "modular": [17, 47, 48, 51, 57, 59, 161, 195, 252, 259, 260, 263, 268, 273], "regressor": [17, 22, 23, 44, 272, 280], "active_modelling_pipelin": [17, 272], "candidate_modelling_pipelin": [17, 272], "modular_pipelin": [17, 261, 272], "evaluate_model": [17, 44, 272], "split_data": [17, 52, 54, 262, 268, 272], "pipeline_inst": [17, 272], "x_train": [17, 22, 23, 54, 262, 268, 272], "y_train": [17, 22, 23, 54, 262, 268, 272], "split_data_nod": [17, 272], "train_model_nod": [17, 272], "ds_pipeline_1": [17, 272], "pipe": [17, 196, 261, 272], "ds_pipeline_2": [17, 272], "regressor_": 17, "pq": [17, 273, 280], "metric": [17, 26, 29, 47, 55, 57, 106, 249, 262, 272], "bodi": 17, "situat": [17, 18], "overcom": 17, "sort": [17, 18, 41, 178, 194, 202], "potenti": [17, 27, 41], "pick": [17, 47], "best": [17, 30, 31, 38, 50, 52, 58, 59, 86, 211, 226, 267, 268, 270], "rank": [12, 17], "criteria": [17, 178], "exact": [12, 15, 17, 28, 64, 66, 198, 230, 252], "between": [1, 12, 15, 17, 18, 21, 22, 23, 28, 47, 147, 178, 261, 268, 270, 272, 273, 279], "preprocess": [17, 44, 262], "alphabet": [17, 41], "creation": [17, 19, 26, 28, 44, 47, 52, 153, 161, 198], "default_dataset": 17, "mention": 17, "explicit": [17, 18], "implement": [12, 13, 18, 23, 26, 37, 39, 45, 47, 48, 53, 54, 58, 69, 114, 116, 123, 134, 151, 164, 167, 169, 170, 175, 176, 178, 200, 201, 202, 203, 262, 265, 272], "etc": [12, 15, 18, 31, 35, 38, 42, 43, 70], "my_datafram": 12, "my_func1": 12, "spark_input": 12, "my_func2": 12, "pipeline_output": 12, "datafram": [12, 13, 18, 44, 47, 57, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 175, 176, 178, 197, 198, 208, 210, 211, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 262, 272, 273, 275, 282], "simpl": [26, 51, 52, 56, 93, 97, 112, 233, 238, 262, 263, 265, 282], "perform": [26, 28, 31, 44, 45, 48, 52, 58, 100, 242, 252, 265, 272], "machin": [20, 21, 23, 25, 26, 27, 29, 31, 32, 33, 34, 42, 44, 47, 48, 50, 51, 52, 55, 201, 260, 262, 270, 273, 274, 280], "actual": [18, 25, 39, 44, 154, 156, 258, 261, 265, 282], "global": [23, 27, 28, 35, 58, 67, 122, 150, 276], "yyyi": [13, 15, 38, 186], "mm": [13, 15, 38, 186], "ddthh": [13, 15, 38, 186], "ss": [13, 15, 38, 186], "sssz": [13, 15, 38, 186], "timestamp": [13, 18, 38, 44, 165, 186, 268], "io": [12, 15, 18, 19, 21, 22, 25, 34, 54, 56, 58, 66, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 103, 104, 105, 106, 107, 123, 124, 151, 152, 161, 188, 189, 192, 194, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 241, 245, 246, 247, 248, 249, 251, 255, 262, 266, 277], "construct": [12, 23, 47, 48, 64, 66, 165, 262, 263, 264, 268, 272, 273, 276], "sever": [12, 18, 26, 27, 273, 274], "pre": [12, 26, 48, 58, 194, 255, 256, 261, 266, 270, 274], "kedro_dataset": [12, 13, 15, 18, 58, 69, 266, 277], "cars_tabl": 12, "happen": [12, 26, 58, 258, 270, 280], "abstractdataset": [12, 18, 25, 47, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 174, 176, 178, 200, 202, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 265], "retriev": [12, 64, 66, 147, 150, 165, 254, 265], "deleg": [12, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "read_csv": [12, 81, 86, 175, 176, 220, 226, 237], "forget": 12, "assign": [12, 22, 57, 198, 264], "cars_cach": 12, "mpg": 12, "clean": [12, 21, 22, 26, 270, 280], "filenotfounderror": [12, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 265, 266, 277], "tutori": [13, 16, 22, 23, 26, 27, 28, 44, 47, 52, 60, 78, 79, 80, 217, 218, 219, 256, 264, 268, 275, 278, 280, 281, 282], "underli": [12, 13, 14, 15, 18, 23, 25, 54, 56, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 165, 175, 176, 178, 190, 196, 198, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 261, 262, 263, 272, 275], "dataseterror": [12, 18, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "deal": [18, 30, 39, 262], "failur": [], "data_set": [25, 34, 70, 71, 72, 73, 74, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 178, 194, 208, 209, 210, 211, 212, 213, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251], "empti": [18, 22, 27, 64, 66, 67, 84, 90, 91, 101, 194, 224, 230, 231, 243, 256], "cars_df": 197, "print": [15, 26, 27, 39, 42, 43, 47, 53, 192, 194, 262, 263, 266, 268], "studi": [], "interfac": [15, 23, 26, 40, 45, 47, 57, 93, 97, 233, 238, 265, 274], "subclass": [15, 18, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258], "_load": [25, 175, 176], "_save": [25, 175, 176, 208, 262], "enrich": 15, "uniform": [15, 18, 61], "_describ": [25, 175, 176], "direct": [21, 50, 194, 277], "parts_df": [], "attribut": [15, 18, 21, 22, 37, 43, 64, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 131, 135, 147, 165, 172, 175, 176, 186, 194, 198, 201, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 268, 270, 275, 280, 281], "abstractversioneddataset": 15, "AND": [15, 230, 266], "posit": [15, 18, 35, 44, 189], "glob": [15, 66, 67], "filesystem": [13, 14, 18, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 107, 176, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 249, 250, 251, 262, 275], "mid": [], "extern": [18, 21, 22, 100, 101, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 261], "interfer": [], "stai": [196, 261], "throughout": [55, 280, 281, 282], "subsequ": [18, 44, 52, 257, 258, 268], "pathlib": [15, 21, 23, 34, 44, 47, 165, 175, 176, 254], "pureposixpath": [15, 175, 176], "pd": [12, 13, 18, 44, 72, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 101, 175, 176, 178, 197, 210, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 238, 243, 262, 272, 273, 275, 282], "myowndataset": [175, 176], "param1": [175, 176, 189], "param2": [175, 176, 189], "_param1": [175, 176], "_param2": [175, 176], "load_path": [15, 176], "_get_load_path": [15, 176], "df": [44, 58, 175, 176, 178, 230, 269, 282], "save_path": [15, 176, 262], "_get_save_path": [15, 176, 262], "to_csv": [81, 86, 175, 176, 220, 226, 262], "_exist": [25, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "bool": [22, 25, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 165, 175, 176, 178, 194, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "_version": [15, 176], "my_dataset": [0, 175, 176], "my_data": [97, 175, 176, 238], "Its": [15, 47], "repres": [15, 18, 44, 198, 256, 261, 262, 263], "generate_timestamp": 15, "car_data": 12, "propag": [18, 258], "deliber": 18, "runtim": [23, 26, 27, 28, 53, 194, 254, 261, 270], "pin": [44, 252], "load_vers": [12, 22, 25, 38, 56, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 153, 157, 165, 175, 176, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 268], "2019": [12, 18, 277], "02": [12, 15, 272], "13t14": 12, "35": 12, "36": [12, 277], "518z": 12, "row": [12, 44, 102, 208, 245, 275, 281], "effect": [1, 12, 22, 27, 28, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 270], "save_vers": [12, 56, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 153, 175, 176, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "inconsist": [12, 41], "therefor": [12, 15, 21, 22, 26, 27, 45, 58, 84, 147, 165, 224, 254], "some_data": 12, "tri": [12, 67], "mitig": 12, "reload": [12, 38, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 107, 189, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 241, 242, 243, 247, 251, 268, 277], "reload_kedro": [12, 27, 28, 29, 38, 109, 189], "magic": [12, 27, 28, 29, 38, 109, 189, 190], "initialis": [12, 19, 28, 57, 189, 194, 208, 256], "data1": 12, "col1": [12, 72, 74, 76, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 101, 105, 106, 107, 178, 208, 210, 213, 215, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 243, 248, 249, 251], "col2": [12, 72, 74, 76, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 101, 105, 106, 107, 178, 208, 210, 213, 215, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 243, 248, 249, 251], "4": [12, 14, 18, 21, 37, 38, 44, 72, 74, 76, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 99, 100, 101, 107, 172, 178, 198, 210, 211, 213, 215, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 241, 242, 243, 251, 268, 272, 275, 278], "col3": [12, 72, 74, 76, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 101, 105, 106, 107, 178, 210, 213, 215, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 243, 248, 249, 251], "6": [12, 44, 72, 74, 76, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 101, 103, 107, 172, 178, 210, 213, 215, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 243, 246, 251, 268, 272, 275, 278, 281], "data2": 12, "9": [12, 41, 80, 219, 221, 268, 272, 278, 280], "test_data_set": 12, "assert": [12, 22, 37, 58, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 101, 102, 104, 107, 178, 209, 210, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 243, 245, 247, 251], "did": 12, "becom": [12, 26, 39, 41, 58, 194, 196, 261], "slightli": [1, 12, 41, 261, 268, 278], "my_exact_vers": 12, "userwarn": [12, 18, 161], "exact_load_vers": 12, "exact_save_vers": 12, "matplotlib": [13, 44, 252], "holoview": 13, "holoviewswrit": 13, "networkx": 13, "networkxdataset": 13, "featherdataset": 13, "jsondataset": [13, 44, 96, 106, 236, 249, 266, 282], "pillow": [13, 15, 252], "imagedataset": [13, 15], "text": [13, 26, 44, 73, 75, 102, 212, 214, 245, 256, 258, 276], "textdataset": 13, "yamldataset": 13, "tensorflow": [13, 20, 24], "tensorflowmodeldataset": 13, "plai": [18, 31, 43, 44], "increasingli": [18, 37], "role": 18, "etl": [18, 26], "throughput": 18, "larger": [18, 37, 44, 201, 281, 282], "benefit": [18, 23, 31, 47, 263, 267], "encount": [18, 43, 50], "tool": [18, 19, 29, 33, 37, 38, 43, 44, 47, 55, 252, 255, 256, 260, 262, 278], "cater": 18, "feasibl": 18, "why": [18, 268], "partitioneddataset": [], "agnost": [18, 21, 33], "gc": [13, 14, 18, 58, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 102, 104, 105, 106, 107, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 245, 247, 248, 249, 251], "callabl": [18, 34, 124, 152, 176, 197, 198], "my_partitioned_dataset": 18, "bucket": [13, 15, 18, 21, 22, 23, 38, 44, 48, 53, 67, 99, 178, 221, 241], "my_credenti": [18, 53], "load_arg1": 18, "load_arg2": 18, "value2": [18, 38, 189], "granular": 18, "delimit": 18, "filepath_arg": 18, "filename_suffix": [15, 18], "exhaust": [18, 93, 97, 233, 238], "ye": [18, 230], "concret": [18, 56, 71, 72, 73, 74, 76, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 104, 105, 106, 107, 178, 209, 210, 212, 213, 215, 220, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 247, 248, 249, 251], "No": [18, 42, 262, 277], "filesystemcal": 18, "keyword": [13, 15, 18, 67, 99, 241, 255, 261, 262, 268, 272, 275], "initi": [15, 18, 34, 48, 147], "fulli": [15, 18, 20, 24, 30, 36, 178, 194, 257], "qualifi": [18, 178, 194], "dataset_credenti": 18, "deprec": [1, 18, 38, 69, 274], "somewhat": 18, "itself": [18, 58, 84, 224, 261], "around": [18, 44, 56], "never": [18, 48], "scenario": [18, 58, 194], "undefin": [18, 38, 43], "constructor": [15, 18, 25, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 103, 104, 105, 106, 107, 138, 178, 192, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 245, 246, 247, 248, 249, 250, 251, 255, 261], "dataset_secret": 18, "stop": [18, 26, 27, 42, 43, 54, 131, 172, 186], "concat_partit": 18, "concatenated_result": 18, "partitioned_input": 18, "concaten": 18, "arg": [15, 18, 21, 23, 25, 26, 34, 43, 44, 62, 65, 75, 77, 93, 97, 99, 138, 139, 142, 148, 166, 175, 192, 195, 208, 214, 216, 233, 238, 241, 244, 260, 262, 265, 272, 273], "partition_kei": 18, "partition_load_func": 18, "item": [18, 21, 37, 53, 54, 58, 64, 66, 67, 189, 262, 263], "partition_data": 18, "concat": [18, 262], "ignore_index": 18, "consum": [18, 37, 39, 41, 54, 194, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 261, 265], "logic": [0, 16, 18, 23, 51, 197, 198, 261, 262, 270, 272], "uniqu": [18, 22, 44, 178, 194, 198, 221], "12": [1, 16, 17, 18, 26, 28, 38, 44, 47, 90, 98, 99, 100, 211, 221, 240, 241, 242, 265, 268, 277, 282], "04": [18, 27, 277], "cach": [18, 23, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "were": [18, 22, 58, 73, 125, 198, 212, 262, 280], "done": [18, 22, 23, 27, 35, 43, 47, 278], "guarante": [18, 21, 32, 50, 198, 266], "race": 18, "condit": [18, 194, 211], "reset": 18, "new_partitioned_dataset": 18, "create_partit": 18, "foo": [18, 38], "bar": [18, 22, 26, 27, 28, 38, 95, 96, 235, 236, 282], "overwritten": 18, "lost": [18, 47], "simplest": [18, 37, 52, 258], "safeti": 18, "mechan": [18, 45, 47, 55, 56, 257, 265, 270], "chanc": [18, 58], "materialis": 18, "simpli": [18, 37, 42, 47, 50, 58, 260, 262, 268, 270, 274], "after_node_run": [18, 53, 54, 56, 156], "persist": [18, 19, 23, 167, 168, 169, 170, 254, 265, 270, 273], "similarli": [15, 18, 266, 268, 272, 273, 275], "eagerli": [18, 162], "pointer": 18, "comparison": [18, 44, 52], "ident": [18, 35, 53, 192, 265, 268, 269], "downstream": [18, 58, 196, 252, 261, 266], "process_partit": 18, "my_processed_dataset": 18, "defer": 18, "els": [18, 22, 25, 38, 43, 54, 260, 262], "confirm_partit": 18, "do_something_else_with_partit": 18, "though": [18, 28], "won": [18, 22], "deviat": 18, "sai": [18, 53, 268, 277], "undesir": 18, "elsewher": [0, 18, 35, 274], "partial": 18, "kept": 18, "unchang": [18, 208], "k1": 18, "v1": [18, 21], "along": [18, 41, 44, 90, 91, 101, 156, 157, 197, 198, 230, 231, 243, 274], "comparison_func": 18, "gt": 18, "compar": [18, 33, 37, 47, 52, 57, 265], "Such": 18, "filtrat": 18, "calendar": 18, "my_modul": 18, "custom_comparison_funct": 18, "force_checkpoint": 18, "roll": [18, 50], "back": [15, 18, 25, 50, 58, 200, 201, 202, 203, 270, 274, 275, 276], "reprocess": 18, "forc": 18, "2020": [15, 18, 23, 265], "popular": [19, 28, 37], "suitabl": [19, 102, 245, 258], "orchestr": [19, 21, 23, 33, 34, 38, 268], "author": [19, 53, 260], "k8": [19, 47], "getindata": [19, 20, 24, 33, 36, 47], "xebia": [19, 20, 24, 33, 36], "togeth": [19, 38, 39, 41, 54, 194, 221, 263, 264, 273, 276], "At": [15, 19, 27, 28, 43, 45, 174, 256], "present": [19, 29, 42, 48, 54, 64, 66, 67, 100, 131, 172, 178, 186, 197, 198, 242, 256, 260, 266], "spin": 19, "easili": [19, 21, 41, 260, 278], "iri": [19, 26, 27, 28, 29, 47, 256, 262, 269], "classif": [19, 52, 58], "astro": [19, 256], "starter": [19, 23, 26, 27, 28, 37, 41, 44, 45, 48, 52, 57, 211, 253, 262, 264, 268, 269, 272, 273, 275, 277, 278, 280, 281, 282], "boilerpl": [19, 256, 261, 270], "task": [19, 21, 23, 25, 26, 27, 28, 31, 34, 54, 252, 262, 263, 272, 273, 276], "mirror": [19, 23, 37], "quickstart": [19, 70, 274], "mkdir": [15, 19, 23, 37, 50], "dev": [19, 23, 67], "init": [19, 28, 34, 47], "root": [19, 21, 23, 25, 26, 28, 34, 35, 37, 38, 41, 42, 43, 50, 51, 64, 66, 67, 112, 147, 165, 189, 252, 254, 255, 258, 274, 275, 278, 280, 281, 282], "cp": [19, 26, 27, 28], "rm": 19, "dockerfil": [19, 23], "airflow_set": 19, "txt": [19, 23, 27, 28, 31, 35, 38, 41, 44, 52, 104, 143, 247, 252, 256, 260, 261, 277, 278, 280, 282], "pyproject": [19, 35, 37, 38, 41, 50, 51, 172, 255, 260], "toml": [19, 35, 37, 38, 41, 50, 51, 172, 255, 260], "cfg": [19, 41, 51, 256], "example_iris_data": [19, 54, 265, 268], "example_train_x": [19, 268], "05_model_input": [19, 26, 27, 28, 262], "example_train_i": 19, "example_test_x": 19, "example_test_i": 19, "example_model": [19, 54], "example_predict": [19, 58], "07_model_output": [19, 26, 27, 28, 93, 233, 262, 265, 266], "memori": [19, 22, 23, 39, 90, 178, 230, 262, 265, 273], "disk": [19, 165, 168, 254, 265, 266], "produc": [19, 26, 27, 28, 37, 39, 110, 111, 191, 194, 198, 264, 266], "new_kedro_project": 19, "dockerignor": 19, "bundl": [19, 23, 38, 274], "echo": [19, 21, 38], "quai": 19, "ap": 19, "buster": [19, 23], "onbuild": 19, "visit": [19, 23, 39, 43, 45, 47, 58, 124, 152, 194, 265], "ui": [19, 27, 28, 34], "compon": [20, 21, 33, 38, 45, 47, 56, 113, 205, 254, 255, 256, 268, 272], "toolset": 20, "classic": 20, "scikit": [20, 245, 272, 276, 278], "xgboost": 20, "deep": [20, 58], "pytorch": [20, 24], "servic": [20, 22, 23, 26, 36, 47, 72, 210], "recent": [1, 21, 22, 23, 27, 28, 32, 277, 278], "took": [15, 21, 22], "nativ": [21, 22, 23, 24, 44, 76, 105, 106, 215, 248, 249], "parallel": [15, 21, 22, 23, 25, 44, 47, 201, 203, 265, 270, 272, 276], "job": [21, 27, 30, 31, 58], "interest": 21, "intens": [21, 31], "acycl": 21, "graph": [21, 44, 78, 79, 80, 194, 217, 218, 219, 282], "dag": [21, 31, 58], "aw": [21, 31, 32, 35, 44, 178, 221, 260, 274], "prefer": [21, 22, 25, 27, 28, 30, 31, 34, 35, 42, 50, 51, 52, 56], "solut": [21, 22, 23, 31, 33, 35, 37, 44, 269], "imag": [15, 21, 22, 27, 28, 31, 35, 42, 75, 77, 94, 214, 216, 234, 250, 280, 282], "walk": [21, 22, 31, 35, 42, 48], "streamlin": [21, 22, 31, 35], "ve": [21, 22, 31, 35, 52, 255, 268, 280, 281], "transfer": [21, 22, 31, 35, 211, 267], "project_root": [21, 26, 27, 28, 29, 31, 34, 37, 41, 43, 165, 252, 268], "build_argo_spec": 21, "jinja2": [21, 48], "filesystemload": 21, "startup": [21, 23, 34, 47, 165, 254], "bootstrap_project": [21, 23, 34, 165, 254], "template_fil": 21, "argo_spec": 21, "tmpl": 21, "search_path": 21, "generate_argo_config": 21, "searchpath": 21, "template_env": 21, "trim_block": 21, "lstrip_block": 21, "get_templ": 21, "cwd": [21, 23, 34, 37, 47, 165, 254], "__default__": [21, 23, 34, 38, 47, 165, 264, 265, 268, 272, 274, 280], "get_depend": 21, "node_depend": [21, 22, 25, 31, 194], "f": [15, 21, 22, 23, 26, 27, 28, 41, 51, 53, 54, 64, 66, 67, 77, 216, 230, 260, 262, 265, 275], "write_text": 21, "deps_dict": 21, "clean_nam": 21, "dep": [21, 22], "val": 21, "parent_nod": 21, "sub": [21, 23, 64, 66, 270], "w_": [21, 23], "strip": [21, 23, 198, 258], "__name__": [21, 26, 34, 44, 53, 54, 56, 194, 258, 262, 272], "__main__": [21, 26, 34, 37, 42, 43, 256, 274], "apivers": 21, "argoproj": 21, "v1alpha1": 21, "kind": [21, 43, 262, 269], "generatenam": 21, "entrypoint": [21, 23], "label": [21, 43, 47, 102, 245, 256, 262, 272, 280], "abil": [21, 23, 47], "pod": 21, "app": [21, 23, 38, 44, 97, 238], "retrystrategi": 21, "kedro_nod": 21, "imagepullpolici": 21, "valuefrom": 21, "secretkeyref": 21, "access_key_id": 21, "secret_access_kei": 21, "endraw": 21, "endif": 21, "jinja": 21, "languag": [21, 31, 43, 60, 274], "project_imag": 21, "encod": [13, 21], "base64": 21, "opaqu": 21, "original_kei": 21, "namespac": [21, 38, 53, 54, 56, 67, 125, 153, 154, 155, 156, 157, 165, 194, 196, 197, 198, 261, 264], "kubectl": 21, "watch": [21, 27, 50], "delet": [21, 58, 70, 221, 257, 258, 261, 278], "selector": 21, "workabl": 21, "optimis": [22, 30, 58], "scale": [22, 33, 44, 261, 267], "optim": [22, 58, 268], "quantiti": 22, "assist": 22, "schedul": [22, 25, 26, 30, 33, 47, 58], "workload": 22, "demand": 22, "spot": 22, "integr": [22, 24, 26, 27, 28, 30, 32, 35, 39, 44, 47, 55, 57, 126, 195, 282], "cloudwatch": 22, "massiv": 22, "parallelis": [22, 272], "isol": [22, 50, 261, 270, 272], "spaceflight": [13, 22, 23, 37, 44, 52, 57, 60, 84, 90, 224, 230, 256, 264, 268, 272, 273, 275, 276, 279, 281, 282], "sensibl": [22, 255, 256], "node_nam": [22, 23, 25, 31, 38, 157, 165, 194, 268], "aws_batch": 22, "appropri": [22, 42, 43, 53, 86, 138, 178, 195, 221, 226, 261, 264, 268], "preprocessed_compani": [22, 23, 44, 54, 272, 273, 277, 280], "preprocessed_shuttl": [22, 23, 272, 273, 280, 282], "x_test": [22, 23, 44, 54, 262, 268, 272], "y_test": [22, 23, 44, 54, 262, 268, 272], "ecr": [22, 23, 35], "view": [22, 26, 28, 42, 43, 48, 57, 64, 66, 67, 268, 280, 281, 282], "button": [22, 26, 28, 34, 42, 43, 44, 281, 282], "dashboard": [22, 25, 48], "abl": [22, 23, 26, 31, 42, 43, 56, 86, 199, 226, 265, 272, 274, 276], "four": [22, 27, 28], "grant": 22, "polici": [22, 73, 212], "amazons3fullaccess": 22, "newli": [22, 25, 26, 27, 43, 262], "batchjobrol": 22, "kedro_run": 22, "timeout": [22, 23, 70, 208], "300": 22, "2000mb": 22, "leav": [22, 26, 27, 34, 43], "field": [22, 26, 27, 28, 42, 43, 72, 131, 135, 172, 186, 210, 211, 221], "spaceflights_env": 22, "yet": [22, 23, 28, 178, 280, 281, 282], "incur": 22, "immedi": 22, "bridg": 22, "spaceflights_queu": 22, "connect": [12, 22, 25, 28, 44, 48, 51, 72, 90, 91, 97, 101, 196, 210, 230, 231, 238, 239, 243, 261, 263, 268, 270, 279], "prioriti": [22, 38, 239], "region": [22, 23], "leverag": [15, 22, 54, 100, 242], "kedro_tutori": [22, 25, 273], "sure": [1, 22, 25, 26, 30, 31, 34, 37, 43, 44, 50, 256, 260, 265, 274], "batch_runn": 22, "awsbatchrunn": 22, "monitor": [22, 25, 34, 44, 256], "asynchron": [22, 25, 38, 200, 201, 202, 203, 204], "surfac": [22, 25, 162], "occur": [22, 25, 39, 47, 58, 148], "__all__": [22, 25], "concurr": [22, 57, 265, 270], "threadpoolexecutor": 22, "sleep": 22, "boto3": 22, "threadrunn": [15, 22, 57, 265, 272], "max_work": [22, 201, 203], "job_queu": 22, "job_definit": 22, "is_async": [22, 25, 38, 156, 200, 201, 202, 203, 204], "_job_queu": 22, "_job_definit": 22, "_client": [22, 54], "client": [22, 23, 25, 48, 53, 97, 99, 238, 241], "create_default_data_set": [22, 25, 200, 201, 202, 203, 265], "ds_name": [22, 25, 34, 200, 201, 202, 203, 265], "notimplementederror": 22, "_get_required_workers_count": 22, "_max_work": 22, "_run": [22, 25, 265], "pylint": [22, 27, 38, 41, 47], "disabl": [22, 38, 41, 47, 255], "useless": 22, "suppress": 22, "hook_manag": [22, 25, 37, 147, 150, 200, 201, 202, 203, 204, 265], "pluginmanag": [22, 25, 147, 200, 201, 202, 203, 204, 265], "session_id": [22, 25, 34, 54, 156, 157, 165, 168, 170, 200, 201, 202, 203, 204, 265], "todo_nod": 22, "node_to_job": 22, "done_nod": 22, "_logger": [22, 25, 53, 56, 265], "info": [22, 25, 26, 27, 28, 34, 38, 44, 47, 50, 53, 54, 56, 112, 162, 194, 258, 262, 265, 268, 272, 273, 275, 277], "max": [22, 41, 44, 47], "worker": [22, 25, 201, 203], "pool": [22, 34], "reach": [22, 47, 261, 273], "succeed": [22, 26], "fut": 22, "_suggest_resume_scenario": 22, "len": [15, 22, 25, 263, 265, 266], "upstream": [22, 25, 28, 196], "_submit_job": 22, "referenc": 22, "track": [22, 25, 26, 28, 33, 38, 47, 48, 55, 57, 258], "progress": [22, 26, 258, 273], "job_nam": 22, "kedro_": [22, 268], "depends_on": 22, "jobid": 22, "respons": [22, 52, 70, 163, 164, 165, 208, 261], "submit_job": 22, "jobnam": 22, "jobqueu": 22, "jobdefinit": 22, "dependson": [22, 43], "containeroverrid": 22, "job_id": 22, "_track_batch_job": 22, "bombard": 22, "throttl": 22, "describe_job": 22, "statusreason": 22, "prerequist": 22, "nearli": [22, 25], "tag": [22, 23, 25, 31, 35, 47, 53, 157, 165, 194, 196, 197, 198, 256, 265, 268], "sequentialrunn": [15, 22, 25, 38, 266, 272], "_get_values_as_tupl": [22, 25, 38], "kedrosess": [22, 23, 25, 26, 34, 38, 47, 57, 163, 166, 253, 268], "extra_param": [22, 25, 38, 147, 157, 165, 190, 254], "load_context": [22, 25, 34, 47, 165, 254], "runner_inst": [22, 25], "_instantiate_runn": [22, 25], "from_nod": [22, 25, 38, 157, 165, 194, 265, 266, 268, 270], "to_nod": [22, 25, 38, 157, 165, 194, 266, 268, 270], "from_input": [22, 25, 38, 157, 165, 194, 266, 268, 270], "to_output": [22, 25, 38, 157, 165, 194, 268], "project_context": [22, 25, 37], "runner_class": [22, 25], "load_obj": [22, 25, 38], "runner_kwarg": [22, 25], "endswith": [22, 25], "batch_kwarg": 22, "runnabl": [22, 194], "tab": [22, 26, 27, 28, 29, 44, 52, 273, 280], "soon": [1, 22], "pop": [22, 26, 64, 66, 67], "panel": [22, 27, 44, 280, 281, 282], "side": [22, 27, 28, 38, 42, 43, 44, 257, 270], "serverless": 23, "hand": [16, 23, 42, 43, 44, 51, 52, 60, 264], "provis": [23, 26], "scientist": [23, 47, 48, 270], "busi": [23, 262], "azur": [13, 23, 28, 32, 47, 53, 221], "offer": [16, 23, 25, 26, 27, 30, 37, 268, 276, 281], "capabl": [23, 30, 44, 178, 258], "easi": [23, 31, 34, 41, 51, 55, 61, 270], "sequenc": [23, 26, 45, 71, 209, 250], "critic": [23, 112], "perspect": 23, "retain": [23, 51], "reliabl": [23, 270], "concern": [23, 270], "advantag": [23, 27, 28, 30, 45, 51, 53, 58, 258, 261, 267, 272], "sagemak": [23, 32, 47], "kit": 23, "cdk": 23, "npm": 23, "associ": [23, 38, 178, 276], "laid": 23, "visualis": [23, 30, 44, 47, 54, 57, 60, 197, 198, 261, 263, 268, 270, 276, 278], "consol": [15, 23, 43, 112, 268, 277], "decemb": 23, "announc": 23, "gb": 23, "besid": [23, 24], "properli": [23, 198, 211, 265], "lambda_handl": 23, "unittest": 23, "mock": [23, 278], "patch": 23, "handler": [23, 110, 111, 112, 191, 192], "event": [23, 44], "configure_project": [23, 26], "spaceflights_step_funct": 23, "node_to_run": 23, "_multiprocess": 23, "semlock": 23, "impact": [23, 41], "henc": [23, 44, 102, 245], "lock": [23, 38, 252], "stackoverflow": 23, "34005930": 23, "multiprocess": [15, 23, 270, 272], "accordingli": 23, "function_dir": 23, "home": [23, 37, 43, 52], "runtime_vers": 23, "grab": 23, "fresh": 23, "gcc": 23, "cpp": 23, "apt": 23, "cmake": 23, "unzip": [15, 23], "libcurl4": 23, "openssl": 23, "awslambdar": 23, "workdir": 23, "bin": [23, 50], "cmd": [23, 26, 38, 42, 43], "adapt": [15, 23, 51, 52, 58, 195, 256, 258, 270], "elast": [23, 31], "dkr": 23, "amazonaw": 23, "login": [23, 26, 70, 208], "stdin": 23, "deploy_requir": 23, "aws_cdk": 23, "aws_s3": 23, "aws_ecr": 23, "aws_lambda": 23, "stepfunct": 23, "Then": [15, 23, 28, 34, 42, 43, 53, 54, 178, 262, 265, 275, 277, 280, 281, 282], "aws_stepfunct": 23, "sfn": 23, "ifunct": 23, "aws_stepfunctions_task": 23, "lambdainvok": 23, "_clean_nam": 23, "reformat": [23, 41], "63": 23, "kedrostepfunctionsstack": 23, "stack": [23, 25, 39, 256], "erc_repository_nam": 23, "s3_data_bucket_nam": 23, "scope": [23, 29, 34, 39, 187, 198, 272], "_parse_kedro_pipelin": 23, "_set_ecr_repositori": 23, "_set_ecr_imag": 23, "_set_s3_data_bucket": 23, "_convert_kedro_pipeline_to_step_functions_state_machin": 23, "ecr_repositori": 23, "from_repository_nam": 23, "repository_nam": 23, "ecr_imag": 23, "ecrimagecod": 23, "s3_bucket": 23, "rawdatabucket": 23, "_convert_kedro_node_to_lambda_funct": 23, "_fn": 23, "from_imag": 23, "function_nam": 23, "memory_s": 23, "256": 23, "reserved_concurrent_execut": 23, "durat": [23, 100, 242], "15": [23, 266, 272, 275, 281], "60": [23, 70, 208, 272], "grant_read_writ": 23, "_convert_kedro_node_to_sfn_task": 23, "lambda_funct": 23, "payload": [23, 70], "taskinput": 23, "from_object": 23, "enumer": [23, 25], "grouped_nod": [23, 34, 194], "group_nam": 23, "sfn_state": 23, "sfn_task": 23, "statemachin": 23, "synth": 23, "python3": [23, 41, 50], "straightforward": [23, 51], "speak": 23, "dramat": 23, "worth": 23, "10gb": 23, "maximum": 23, "longer": [23, 26, 280], "switch": [23, 30, 258, 268], "batch": [23, 31, 32, 54, 58, 262, 274], "ec": 23, "deploy": [24, 25, 27, 28, 30, 33, 34, 42, 47, 57, 60, 256], "fashion": [24, 36], "mpi": 24, "compos": [25, 256], "sophist": 25, "newer": [25, 50, 255], "workstat": 25, "vari": [25, 28, 48, 255], "hardwar": 25, "complement": 25, "pydata": [25, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232], "analysi": [25, 48, 267], "basi": [13, 25, 86, 226], "pure": [25, 51, 109, 265, 270], "eas": [25, 39, 47], "simplifi": [25, 31, 47, 261], "motiv": 25, "adopt": [1, 25], "beyond": [25, 260, 261, 274], "dask_runn": 25, "daskrunn": 25, "abstractrunn": [25, 201, 202, 203, 265, 268], "inter": 25, "counter": 25, "itertool": 25, "chain": [25, 39, 194, 263], "as_complet": 25, "worker_cli": 25, "_create_hook_manag": [25, 34, 37], "_register_hook": 25, "_register_hooks_setuptool": 25, "run_nod": [25, 34, 156], "pluggi": [25, 47, 56, 123, 124, 151, 152, 265], "_daskdataset": 25, "publish": [25, 260], "_name": 25, "get_dataset": 25, "upon": [25, 161, 276], "load": [15, 16, 17, 25, 26, 27, 28, 29, 34, 35, 38, 42, 43, 45, 47, 48, 51, 54, 55, 57, 63, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 117, 146, 148, 153, 154, 156, 165, 175, 176, 178, 186, 187, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 268, 269, 270, 272, 273, 274, 280], "free": [15, 25, 30, 31, 44, 50, 60, 194, 196, 261], "oppos": [25, 254, 258], "publish_dataset": 25, "list_dataset": 25, "_releas": 25, "unpublish_dataset": 25, "client_arg": 25, "thread": [25, 38, 58, 200, 201, 202, 203, 204, 265, 270], "__del__": 25, "factori": [16, 25, 57, 178, 200, 201, 202, 203, 265], "unregist": [25, 200, 201, 202, 203, 265], "_run_nod": 25, "serialis": [15, 25, 48, 58, 93, 97, 233, 238, 265], "disable_hooks_for_plugin": [25, 56, 255], "load_count": 25, "from_iter": 25, "node_futur": 25, "_is_async": 25, "with_result": 25, "decrement": 25, "count": [25, 131, 172, 186, 201, 203, 275], "particularli": [15, 25, 26, 39, 262], "run_only_miss": [25, 200, 201, 202, 203, 266], "free_output": 25, "to_build": 25, "to_rerun": 25, "only_nodes_with_output": [25, 194], "unregistered_d": [25, 34], "recreat": 25, "missing_unregistered_d": 25, "output_to_unregist": 25, "input_from_unregist": 25, "previous": [1, 25, 52, 189, 263, 266, 274, 280], "think": [25, 261], "shallow_copi": [25, 178], "dask_client": 25, "localclust": 25, "background": [25, 47, 67], "127": [25, 34, 43, 44, 52, 97, 238, 273, 280], "8786": 25, "pythonpath": [25, 43], "pwd": [25, 230], "snippet": [25, 27, 28, 45, 90, 91, 230, 231, 261, 262, 272], "again": [25, 26, 27, 28, 44, 52, 64, 66, 265, 266, 277], "diagnost": 25, "ml": [13, 26, 47, 58, 270], "slower": 26, "unsuit": 26, "rapid": [26, 47], "loop": [26, 27], "remaind": [26, 27], "browser": [26, 27, 29, 44, 52, 268, 273, 280], "slash": [26, 27], "adb": [26, 27], "123456789123456": [26, 27], "azuredatabrick": [26, 27], "net": [26, 27, 53], "person": [26, 27, 51, 276], "enter": [26, 27, 28, 42, 43, 52, 256, 273, 274, 280, 281, 282], "prompt": [26, 27, 28, 42, 43, 256, 275, 278, 280, 281, 282], "l": [15, 26, 27, 28], "iris_databrick": [26, 27, 28], "databricks_run": 26, "argpars": 26, "argumentpars": 26, "add_argu": 26, "dest": [26, 27], "parse_arg": 26, "kb": 26, "c": [26, 35, 38, 42, 43, 50, 52, 95, 194, 198, 235, 252, 265, 273, 280], "p0": 26, "getlogg": [26, 44, 53, 54, 56, 194, 258, 262, 272], "py4j": 26, "java_gatewai": 26, "setlevel": 26, "clientserv": 26, "editor": [26, 27, 28, 43, 51, 276], "entry_point": [26, 47], "tupl": [26, 44, 54, 64, 66, 67, 70, 102, 208, 245, 255, 262, 272], "usual": [26, 37, 45, 263, 270], "binari": [13, 26, 35, 274], "somewher": [26, 260], "dbutil": 26, "conveni": [15, 26, 27, 96, 236, 261], "filestor": [26, 27, 28], "destin": [26, 27, 28, 260], "08_report": [26, 27, 28, 77, 95, 96, 216, 235, 236, 282], "dedic": [26, 120], "drop": [26, 27, 39, 262], "down": [26, 27, 30, 260, 262], "menu": [26, 27, 28, 42, 43, 268], "job_clust": 26, "kedro_deployment_demo": 26, "radio": 26, "lt": 26, "dropdown": [26, 28, 42, 268], "confirm": [26, 44, 50, 178, 194, 197, 198, 265], "overview": [26, 28, 37], "pend": 26, "wait": [26, 42, 43, 70, 208], "thing": [26, 261, 262], "roughli": [26, 58], "six": 26, "seven": 26, "link": [14, 26, 28, 29, 38, 44, 270], "2023": [26, 27, 28, 239], "06": [26, 27, 28], "56": [26, 28, 54, 272], "14": [26, 27, 28, 265, 272], "399": [26, 28], "accuraci": [26, 27, 28, 52, 262], "972": [26, 27, 28], "403": [26, 28], "runner": [26, 27, 28, 34, 38, 58, 156, 157, 165, 262, 266, 268, 273, 277], "sequential_runn": [26, 27, 28, 54, 262, 265, 272, 273, 277], "404": [26, 28], "ran": [26, 37, 154, 156, 272], "outlin": [1, 26, 44, 58], "auto": [27, 47, 95, 235, 255], "flake8": [27, 38, 278], "catch": [27, 41], "static": [15, 27, 38, 42, 43, 47, 254, 261, 272, 282], "checker": 27, "mypi": 27, "identifi": [27, 51, 86, 87, 100, 226, 227, 242], "earli": [27, 30, 162], "11": [27, 28, 50, 221, 265, 272, 273, 278], "program": [27, 43, 60, 99, 102, 178, 208, 241, 244, 245, 270], "remot": [13, 27, 28, 31, 35, 44, 72, 135, 208, 210, 272], "uncheck": 27, "13": [27, 90, 91, 265, 272], "21": [27, 54], "59": 27, "48": 27, "148": [27, 268], "databricks_usernam": [27, 28], "168": 27, "test_pipelin": [27, 261], "189": 27, "test_run": [27, 37], "928": 27, "aliv": 27, "traceabl": [27, 28], "attach": [27, 28, 38, 43, 262, 266, 268], "cell": [27, 28, 268, 278], "load_ext": [27, 28, 29, 42, 109, 188, 268], "fourth": [27, 28], "consent": [27, 28, 34], "press": [27, 28, 43], "53": 27, "221": 27, "960": 27, "222": 27, "224": 27, "80": [27, 28, 258], "20": [27, 28, 37, 82, 222, 265, 272], "classifi": [15, 27, 28, 52, 58], "70": [27, 28], "30": [27, 28, 37, 276], "edit": [27, 28, 42, 43, 44, 252, 255], "observ": [27, 239, 270], "train_fract": [27, 28, 262], "29": [27, 98, 99, 100, 211, 240, 241, 242, 273], "39": 27, "235": 27, "40": [27, 37], "820": [27, 275], "23": [27, 54, 105, 106, 248, 249], "19": [1, 27, 38, 69, 165, 272, 274, 280], "561": 27, "562": 27, "564": 27, "ephemer": [27, 28, 170], "repeat": [27, 28, 37, 44], "exclus": 27, "ideal": [28, 30, 261], "sync": [28, 30, 43], "gitlab": [28, 35], "devop": 28, "venv": [28, 50], "virtualenv": 28, "choic": [28, 30, 32, 44, 52, 278], "synchronis": 28, "email": [28, 35], "profil": [28, 41, 43, 45, 47, 261], "photo": [28, 273, 276], "grain": [28, 161], "expir": 28, "area": [28, 48], "ssh": [13, 28, 35, 43], "popup": 28, "popul": [28, 52, 160, 211, 255, 264, 274, 278], "underneath": 28, "displai": [28, 44, 47, 50, 197, 198, 258, 263, 268, 275], "fileinfo": 28, "unnecessarili": 28, "55": [28, 37, 272], "705": 28, "953": 28, "709": 28, "doubl": 28, "untrack": 28, "visibl": [28, 35, 42, 280], "viz": [29, 45, 47, 48, 52, 57, 60, 261, 268, 272, 273, 276, 278, 280], "standalon": [29, 45, 256, 269], "launch": [15, 29, 43, 256, 268], "run_viz": 29, "princip": [30, 275], "spectrum": 30, "fit": [12, 30, 31, 58, 261, 262, 270, 272, 276], "quick": [30, 34, 37, 42], "transit": [1, 30, 194, 268], "hybrid": 30, "dbx": 30, "adjust": [30, 274], "faster": 30, "complex": [15, 30, 70, 208, 256, 261, 265, 267, 270, 272], "degre": 30, "bet": 30, "rigid": 30, "natur": 30, "flowchart": 30, "align": 30, "factor": [30, 32], "topic": [31, 35], "unlik": [31, 50, 282], "tradit": [31, 256, 269], "simultan": 31, "scalabl": [31, 61, 272], "strategi": [31, 37], "seri": [31, 44, 262, 272, 273, 274], "better": [31, 276], "date": [0, 31, 48, 50, 230], "dockerhub": 31, "translat": 31, "map": [16, 31, 42, 51, 54, 64, 66, 67, 72, 100, 156, 161, 178, 192, 196, 197, 198, 210, 221, 242, 261, 262, 264, 265, 268, 270], "kubeflow": [31, 32, 36, 47], "programm": 31, "friendli": [31, 198], "fairli": 31, "That": [31, 93, 97, 211, 233, 238, 239], "sizeabl": 32, "dask": [32, 252, 272], "databrick": [32, 44, 98, 99, 221, 240, 241, 244, 258, 268], "prefect": [32, 274], "vertex": [32, 36, 47], "legaci": 32, "argo": 32, "examin": 33, "kubernet": [33, 47], "tailor": [33, 45], "tune": [33, 272], "agent": 34, "dequeu": 34, "earlier": [15, 34, 194, 280], "prefect_api_url": 34, "4200": 34, "opt": [34, 50, 52], "record": [34, 44, 52, 71, 86, 209, 226, 252], "telemetri": [34, 52, 56, 278], "hang": 34, "declin": 34, "organ": [34, 47], "work_pool_nam": 34, "work_queue_nam": 34, "subscrib": 34, "register_prefect_flow": 34, "union": [34, 70, 84, 85, 208, 211, 224, 225], "get_run_logg": 34, "deployment_nam": 34, "prefect_deploi": 34, "ref": 34, "build_from_flow": 34, "my_flow": 34, "infra_overrid": 34, "prefect_logging_level": 34, "logger": [34, 44, 194, 258, 262, 272], "execution_config": 34, "kedro_init": 34, "layer": [34, 48, 178, 281], "execution_lay": 34, "init_kedro_tasks_by_execution_lay": 34, "node_task": 34, "bootstrap": [34, 256], "noqa": [34, 189, 230], "sess_id": 34, "topolog": [34, 194, 202, 263], "impli": 34, "b": [34, 43, 95, 178, 194, 198, 235, 262, 265, 272, 277], "instantiate_task": 34, "append": [15, 34, 42, 71, 77, 82, 209, 211, 216, 221, 222, 244, 250, 260, 262], "kedro_task": 34, "task_dict": 34, "with_opt": 34, "hub": 35, "dockerid": 35, "websit": [35, 48, 50, 60], "procedur": 35, "containeris": 35, "compress": [35, 38, 48, 72, 89, 93, 102, 210, 229, 233, 245, 274], "recipi": 35, "viabl": 35, "bitbucket": 35, "accomplish": 35, "forg": [35, 50, 252], "bash": [35, 38], "deliv": 36, "fulfil": 37, "grow": [37, 41, 44, 48], "interdepend": [37, 273], "unexpectedli": 37, "disadvantag": 37, "impract": 37, "old": [1, 37, 270], "discov": [37, 47, 56, 60, 263], "One": [15, 37, 51, 194, 266, 269], "test_": 37, "file_being_test": 37, "dataprocess": 37, "test_nod": 37, "special": [15, 37, 82, 222, 262], "config_load": [1, 37, 53, 58, 147, 155], "testprojectcontext": 37, "test_project_path": 37, "redund": 37, "layout": [37, 41, 64, 66, 96, 236, 256, 282], "begin": [37, 173, 230, 266], "statement": [37, 39, 55, 84, 90, 194, 224, 230, 260, 262, 273], "especi": [37, 38, 39], "test_node_passes_with_valid_input": 37, "test_pass": 37, "shell": [15, 37, 38, 41, 43, 50, 268], "38": [37, 54], "ini_opt": 37, "addopt": 37, "ra": 37, "stmt": 37, "47": 37, "pipeline_registri": [37, 160, 161, 256, 264, 265, 268, 272], "16": [37, 266, 272, 273, 278], "data_process": [37, 44, 260, 264, 272, 273, 277], "25": [37, 54, 250, 258, 273], "67": [37, 54, 275], "data_sci": [37, 44, 264, 272, 277], "total": 37, "98": 37, "ex": [38, 97, 238], "bashrc": 38, "eval": 38, "_kedro_complet": 38, "z": [38, 230, 266], "zsh": 38, "zshrc": 38, "source_zsh": 38, "fish": 38, "source_fish": 38, "shortcut": [38, 268], "anywher": [38, 58, 178], "nbstripout": [38, 278], "req": 38, "micropkg": [38, 260], "OR": [38, 266], "_____": 38, "__": 38, "___": 38, "v0": [38, 41], "kedro_viz": [38, 44], "line_mag": 38, "manipul": [15, 38], "async_arg_help": 38, "config_file_help": 38, "conf_source_help": 38, "from_inputs_help": 38, "from_nodes_help": 38, "load_version_help": 38, "node_arg_help": 38, "params_arg_help": 38, "pipeline_arg_help": 38, "runner_arg_help": 38, "tag_arg_help": 38, "to_nodes_help": 38, "to_outputs_help": 38, "project_group": 38, "util": [38, 51, 75, 150, 214, 260], "context_set": 38, "_config_file_callback": 38, "_reformat_load_vers": 38, "_split_param": 38, "env_opt": [38, 45], "split_str": 38, "split_node_nam": 38, "__file__": [38, 44], "callback": [38, 47], "async": [38, 156, 265], "is_flag": 38, "lv": 38, "dir_okai": 38, "resolve_path": 38, "file_okai": 38, "unprocess": 38, "unus": [38, 47], "hash": [38, 252], "context_path": 38, "angular": 38, "bracket": [38, 41, 67], "dataset_name1": 38, "dataset_name2": 38, "node_name1": 38, "node_name2": 38, "runner_nam": 38, "env_nam": [38, 260], "tag_name1": 38, "tag_name2": 38, "config_file_nam": 38, "path_to_config_directori": 38, "path_to_compress": 38, "parametris": 38, "dot": 38, "child": 38, "predict": [38, 44, 52, 58, 103, 246, 262, 272, 273, 276, 282], "parameteris": [38, 272], "methodologi": [38, 100, 242], "sdist": 38, "pypi": [38, 50, 260], "storag": [13, 38, 51, 53, 58, 100, 242, 260, 270], "isort": [38, 41, 51, 278], "coveragerc": 38, "package_module_path": 38, "aren": [38, 58], "filter": [38, 47, 165, 178, 194, 270], "de": 38, "jupyterlab": [38, 48, 258, 278], "sensit": [38, 51, 276, 278], "clear": [38, 64, 66, 67, 270, 273], "hard": [0, 39, 261, 269], "frustrat": [39, 41], "quickli": 39, "outsid": [39, 47, 58, 165, 260, 265, 268, 272], "isn": [39, 64, 66, 260, 261, 264], "larg": [39, 90, 230, 262], "mortem": 39, "pdb": 39, "uncaught": [39, 156, 157, 165], "ipdb": 39, "manner": [39, 55, 58, 202], "vscode": [39, 43], "pycharm": [39, 40, 43, 57], "on_node_error": [39, 56, 156], "sy": [39, 42, 43, 54, 112], "traceback": [39, 191, 192, 254, 258, 277], "hook_impl": [39, 47, 53, 54, 56, 58], "pdbnodedebughook": 39, "debugg": [39, 42, 43], "whenev": [39, 264], "traceback_object": 39, "exc_info": 39, "print_tb": 39, "post_mortem": 39, "on_pipeline_error": [39, 56, 157, 165], "pdbpipelinedebughook": 39, "frame": [39, 250], "visual": [40, 47, 57, 58], "studio": [40, 57], "stylist": 41, "whitespac": 41, "doesn": [15, 41, 58, 66, 73, 74, 75, 76, 81, 82, 83, 87, 88, 89, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 170, 178, 203, 212, 213, 214, 215, 220, 222, 223, 227, 228, 229, 232, 233, 234, 235, 236, 237, 246, 247, 248, 249, 251, 256, 260, 261, 265, 280], "reus": [41, 45, 239, 256, 261, 262, 270, 272, 274], "indent": [41, 76, 105, 106, 215, 248, 249], "goe": [41, 265], "compliant": 41, "opinion": [41, 267], "formatt": [41, 112], "pyupgrad": 41, "pep8": 41, "pyflak": 41, "pycodestyl": 41, "pl": [0, 41, 237], "e501": 41, "care": 41, "screen": [41, 44, 258], "88": 41, "e203": 41, "invok": [41, 84, 118, 125, 144, 153, 154, 155, 156, 157, 190, 224], "astral": 41, "sh": 41, "rev": 41, "270": 41, "psf": 41, "language_vers": 41, "cog": 42, "picker": 42, "ok": 42, "explor": [42, 44, 49, 60, 268, 273], "mark": [42, 123, 151, 175, 176], "preconfigur": [42, 51], "rapidli": 42, "dirnam": [42, 43], "lib": 42, "site": [42, 47], "obtain": [15, 42, 58, 67, 194, 268], "emul": 42, "rich": [42, 192], "toolbar": [42, 268], "green": [42, 43, 77, 112, 216], "triangl": [42, 43], "breakpoint": [42, 43], "jetbrain": 42, "profession": 42, "proce": [42, 44], "mount": [42, 98, 99, 240], "real": [42, 43, 261], "autocomplet": [42, 43], "githubusercont": [42, 43], "jsonschema": [15, 42, 43], "palett": 43, "shift": 43, "venvpath": 43, "anaconda": 43, "microsoft": 43, "fwlink": 43, "linkid": 43, "733558": 43, "isdefault": 43, "Will": [43, 86, 226], "environment": 43, "openconfigfil": 43, "intellisens": 43, "hover": [43, 272], "830387": 43, "integratedtermin": 43, "seper": 43, "pane": 43, "ptvsd": 43, "arrai": [15, 43, 102, 245], "pathmap": 43, "localroot": 43, "workspacefold": 43, "remoteroot": 43, "3000": 43, "ip": 43, "enable_attach": 43, "redirect_output": 43, "paus": 43, "wait_for_attach": 43, "scp": 43, "your_usernam": 43, "remote_serv": 43, "tunnel": 43, "vnl": 43, "experiment": [44, 51, 256, 267, 268], "evalu": [44, 54, 58, 67, 261, 272], "weight": 44, "demo": 44, "snapshot": 44, "captur": [44, 263], "discoveri": [44, 56], "plotli": 44, "timeseri": 44, "parellel": 44, "coord": 44, "central": [44, 239], "complementari": 44, "neptun": [44, 47], "ecosystem": [44, 47], "feel": [15, 44], "domain": [44, 48, 270], "databas": [44, 90, 91, 97, 100, 101, 211, 221, 230, 231, 238, 239, 242, 243, 265], "sqlite_stor": 44, "sqlitestor": 44, "session_store_class": [44, 255], "session_store_arg": [44, 255], "crucial": 44, "front": [44, 161], "interchang": 44, "kedro_sqlite_store_usernam": 44, "your_unique__usernam": 44, "remote_path": 44, "your_access_key_id": 44, "your_secret_access_kei": 44, "aws_region": 44, "your_aws_region": 44, "metricsdataset": 44, "numer": [16, 44, 51, 106, 249, 265, 275], "boolean": [44, 254, 273], "companies_column": 44, "coeffici": [44, 272], "r2": 44, "score": [44, 272], "me": 44, "mae": 44, "09_track": [44, 105, 106, 248, 249], "r2_score": [44, 272], "sklearn": [44, 54, 102, 245, 262, 272], "mean_absolute_error": 44, "max_error": 44, "linearregress": [44, 272], "calcul": [0, 44, 201, 203, 262, 263, 266, 272], "independ": [44, 194, 272], "price": [44, 272, 273, 275, 276], "y_pred": [44, 262, 268, 272], "3f": [44, 262, 272], "exactli": 44, "evaluate_model_nod": [44, 272], "company_r": [44, 272, 273, 275], "iata_approv": [44, 272, 273, 275], "_is_tru": [44, 273], "_parse_percentag": [44, 273], "tolist": 44, "data_typ": 44, "preprocess_companies_nod": [44, 272, 273], "beauti": 44, "session_stor": 44, "expos": [44, 161, 196, 198, 264, 274], "fun": 44, "icon": 44, "4141": [44, 52, 273, 280], "toggl": 44, "seaborn": [44, 237, 282], "pyplot": [44, 77, 216, 282], "plt": [44, 77, 216, 282], "sn": [44, 282], "create_confusion_matrix": [44, 282], "y_actual": [44, 282], "y_predict": [44, 282], "confusion_matrix": [44, 282], "crosstab": [44, 282], "rownam": [44, 282], "colnam": [44, 282], "heatmap": [44, 282], "annot": [44, 48, 282], "png": [15, 44, 75, 77, 94, 214, 216, 234, 282], "chart": [44, 47, 57, 279, 280], "vertic": 44, "axi": 44, "highlight": [44, 97, 238, 261], "multitud": 44, "graphic": [44, 50, 268], "taken": [44, 260], "emploi": 45, "thought": 45, "action": [45, 58, 221, 258, 268, 272], "lifecycl": [45, 57, 125, 153, 154, 155, 156, 157, 163, 164, 165, 253, 270], "notebook_run": 45, "proprietari": [15, 275], "perhap": 15, "kaggl": 15, "pok\u00e9mon": 15, "water": 15, "fire": 15, "numpi": [15, 94, 102, 103, 197, 234, 245, 246, 250, 252, 262], "pokemon": 15, "download": [15, 50], "compris": [15, 51, 52, 266, 269], "plu": 15, "minimum": [1, 13, 15, 256], "abstract": [15, 61, 175, 176, 200, 252], "skeleton": [15, 273], "np": [15, 102, 103, 197, 245, 246, 250, 262], "ndarrai": 15, "img": [15, 250], "_filepath": [15, 54, 175], "kedro_pokemon": 15, "image_dataset": 15, "mimic": 15, "conjunct": [15, 175], "flexibli": 15, "pil": [15, 94, 234, 250], "get_filepath_str": [15, 262], "get_protocol_and_path": 15, "_protocol": [15, 262], "_f": 15, "rgba": 15, "asarrai": [15, 250], "pikachu": 15, "preview": [15, 57, 279, 282], "fromarrai": [15, 250], "wb": [15, 74, 75, 77, 87, 93, 213, 214, 216, 227, 233, 265], "721": 15, "la": 15, "wc": 15, "datetim": [0, 15, 230], "exists_funct": [15, 176], "glob_funct": [15, 176], "22t00": 15, "00": 15, "000z": 15, "mv": 15, "backup": 15, "inspect": [15, 256, 275, 276], "depth": 48, "parallelrunn": [15, 175, 268, 272], "closur": 15, "decor": [15, 53, 56, 139], "functool": 15, "explan": 15, "dump": [15, 76, 93, 97, 105, 106, 107, 208, 215, 233, 238, 248, 249, 251, 265], "reduct": 15, "forkingpickl": 15, "_data_set": 15, "shouldn": 15, "sit": 15, "your_credenti": 15, "arg_1": 15, "gcsfilesystem": [13, 14, 15, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 249, 250, 251], "accompani": 15, "solid": 47, "importlib": 47, "kedrojson": 47, "pass_obj": 47, "to_json": [47, 88, 194, 228], "project_command": 47, "kedrostarterspec": 47, "test_plugin_start": 47, "template_path": [47, 135], "your_local_directori": 47, "starter_fold": 47, "checkout": [47, 256], "_get_project_metadata": 47, "proof": 47, "global_command": 47, "bit": 47, "plugin_nam": [47, 56], "myhook": 47, "after_catalog_cr": [47, 56, 153, 273], "cli_hook": 47, "cli_hook_impl": 47, "myclihook": 47, "before_command_run": [47, 56, 125], "project_metadata": [47, 125], "command_arg": [47, 125], "ship": [47, 274], "justin": 47, "malloi": 47, "waylon": 47, "walker": 47, "css": 47, "steel": 47, "toe": 47, "prevent": [47, 51, 58, 263], "wing": 47, "tam": 47, "sanh": 47, "great": [47, 54, 55], "acceler": [47, 261], "dropin": 47, "swap": [47, 258], "modin": 47, "specialis": [47, 51, 270], "gpu": 47, "yolan": 47, "honor\u00e9": 47, "roug\u00e9": 47, "takieddin": 47, "kadiri": 47, "facilit": [47, 198], "synchron": 47, "infer": [47, 196], "jakub": 47, "czakon": 47, "rafa\u0142": 47, "jankowski": 47, "nice": [47, 261], "brows": 47, "curv": [47, 60, 75, 214], "video": [47, 50], "dolt": 47, "hoffman": 47, "oscar": 47, "batori": 47, "vertexai": 47, "azureml": 47, "partit": [16, 47, 57, 89, 99, 100, 211, 221, 229, 241, 242, 244], "daiha": 47, "alv": 47, "nickola": 47, "da": 47, "rocha": 47, "machado": 47, "kernel": 48, "concept": [16, 49, 52, 57, 60, 262, 276, 280], "exit": [50, 52, 125, 138, 254, 273, 275, 277, 280], "deactiv": 50, "pipenv": 50, "ascii": 50, "art": 50, "queri": [50, 64, 66, 84, 90, 224, 230], "safe": [50, 265], "notabl": 50, "kedro_init_vers": [50, 172, 255], "projectcontext": 50, "caution": [0, 50], "unreleas": 50, "glossari": [51, 57, 60, 178, 271, 276], "wrapper": [51, 96, 236, 270], "inbuilt": 51, "return_greet": 51, "hello": [51, 53, 82, 222], "return_greeting_nod": 51, "my_salut": 51, "join_stat": 51, "greet": 51, "join_statements_nod": 51, "my_messag": 51, "necessarili": [51, 197, 198, 263, 270], "assembl": 51, "greeting_pipelin": 51, "advis": [51, 258, 260], "gitignor": 51, "unnecessari": 51, "inclus": 51, "commonli": 51, "human": [52, 255, 256], "alphanumer": [52, 256], "symbol": 52, "hyphen": [52, 198], "repo_nam": [52, 256], "python_packag": [52, 256], "get_start": 52, "lowercas": 52, "output_dir": 52, "test_kedro": 52, "swiftli": 52, "regain": [52, 273, 280], "mac": [52, 273, 280], "ctrl": [52, 273, 280], "fundament": 52, "unsur": 52, "1936": 52, "british": 52, "statistician": [52, 270], "biologist": 52, "ronald": 52, "fisher": 52, "150": 52, "speci": [52, 268], "plant": 52, "setosa": [52, 268], "versicolour": 52, "virginica": [52, 268], "flower": 52, "measur": 52, "sepal": 52, "width": [52, 258], "petal": 52, "categoris": 52, "known": [52, 256, 269, 276], "nearest": 52, "neighbour": 52, "algorithm": 52, "make_predict": [52, 262, 268], "report_accuraci": [52, 262, 268], "before_node_run": [53, 56, 156], "behavior": [53, 256], "furthermor": 53, "subset": [53, 56, 194, 261, 266, 270], "say_hello": 53, "projecthook": [53, 56], "retri": 53, "tenac": 53, "my_flaky_node_funct": 53, "flaki": 53, "before_dataset_load": [53, 54, 56, 154], "after_dataset_load": [53, 54, 56, 154], "before_dataset_sav": [53, 56, 58, 154], "after_dataset_sav": [53, 56, 58, 154], "logginghook": 53, "_timer": [53, 54], "2f": 53, "after_context_cr": [53, 56, 58, 155], "keyvault": 53, "s3_cred": 53, "your_data_stor": 53, "blob": [13, 53], "abs_cr": 53, "secretcli": 53, "defaultazurecredenti": 53, "azuresecretshook": 53, "keyvaultnam": 53, "0542abb": 53, "key_vault_nam": 53, "kvuri": 53, "vault": 53, "vault_url": 53, "cred": [53, 84, 85, 224, 225], "azure_cr": 53, "cred_nam": 53, "get_secret": 53, "secret_nam": 53, "my_project": [53, 260, 261], "authoris": 53, "memory_profil": 54, "memory_usag": 54, "_normalise_mem_usag": 54, "mem_usag": 54, "isinst": [54, 58], "memoryprofilinghook": 54, "_mem_usag": 54, "before_mem_usag": 54, "interv": 54, "max_usag": 54, "retval": 54, "include_children": 54, "after_mem_usag": 54, "2fmib": 54, "data_catalog": [54, 262, 265, 272, 273, 277], "343": [54, 272, 273], "99mib": 54, "48mib": 54, "327": [54, 272, 273], "382": [54, 272, 273, 277], "85": [54, 262, 272, 273], "49mib": 54, "great_expect": 54, "ge": [54, 262], "datavalidationhook": 54, "dataset_expectation_map": 54, "raw_companies_dataset_expect": 54, "preprocessed_companies_dataset_expect": 54, "_run_valid": 54, "dataset_valu": 54, "_get_dataset": [54, 265], "dataset_path": 54, "expectation_suit": 54, "expectation_context": 54, "data_context": 54, "datacontext": 54, "get_batch": 54, "datasourc": 54, "files_datasourc": 54, "run_validation_oper": 54, "action_list_oper": 54, "assets_to_valid": 54, "checkpoint": [54, 100, 242, 244], "raw_companies_dataset_checkpoint": 54, "data_connector_queri": 54, "batch_request": 54, "yaml_config": 54, "my_checkpoint_nam": 54, "config_vers": 54, "class_nam": 54, "simplecheckpoint": 54, "run_name_templ": 54, "datasource_nam": 54, "my_datasource_nam": 54, "data_connector_nam": 54, "default_runtime_data_connector_nam": 54, "data_asset_nam": 54, "my_runtime_asset_nam": 54, "expectation_suite_nam": 54, "my_expectation_suite_nam": 54, "dataset_checkpoint_map": 54, "run_checkpoint": 54, "checkpoint_nam": 54, "runtime_paramet": 54, "batch_data": 54, "batch_identifi": 54, "runtime_batch_identifier_nam": 54, "run_nam": 54, "statsd": 54, "grafana": 54, "pipelinemonitoringhook": 54, "statsclient": 54, "node_tim": 54, "short_nam": [54, 198], "gaug": 54, "_size": 54, "getsizeof": 54, "after_pipeline_run": [54, 56, 157], "incr": 54, "before_pipeline_run": [54, 56, 157], "modeltrackinghook": 54, "run_param": [54, 157], "start_run": 54, "log_param": 54, "_func_nam": 54, "split_data_ratio": 54, "example_test_data_ratio": [54, 268], "elif": 54, "log_model": 54, "end_run": 54, "my_nod": 54, "first_input": 54, "second_input": 54, "nodeinputreplacementhook": 54, "expected_input": 54, "actual_input": 54, "noun": 56, "past_participl": 56, "timelin": [56, 124, 152, 255], "on_": 56, "_error": 56, "lastli": 56, "after_command_run": [56, 125], "statist": [56, 270], "after_data_catalog_cr": 56, "hook_spec": 56, "conf_cr": [56, 153], "datacataloghook": 56, "__class__": 56, "arbitrari": [56, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251], "restrict": 56, "lifo": 56, "introduct": [16, 57, 266, 270, 274], "faq": [57, 276], "terminologi": 57, "frequent": [], "micro": [57, 128, 255, 259, 261, 272, 274], "slice": [57, 259], "sparksess": [57, 98, 99, 100, 101, 211, 240, 241, 242, 243], "delta": [57, 98, 99, 211, 221, 240, 241, 244], "intermediari": 57, "copy_mod": 57, "tip": 57, "maximis": [57, 265], "maxresults": 58, "driver": [58, 72, 74, 101, 210, 213, 230, 243], "fair": 58, "3g": 58, "sparkconf": 58, "sql": [58, 84, 90, 91, 98, 99, 100, 101, 211, 224, 230, 231, 240, 241, 242, 243], "sparkhook": 58, "spark_conf": 58, "setal": 58, "spark_session_conf": 58, "builder": [58, 98, 99, 100, 101, 211, 240, 241, 242, 243], "appnam": 58, "enablehivesupport": 58, "_spark_sess": 58, "getorcr": [58, 98, 99, 100, 101, 211, 240, 241, 242, 243], "sparkcontext": [58, 99, 100, 241, 242, 244], "setloglevel": 58, "warn": [58, 62, 112, 161, 178, 192, 258, 264, 277], "master": 58, "yarn": 58, "singleton": [58, 90, 91, 122, 150, 230, 231], "deltatabledataset": 58, "sparkjdbcdataset": 58, "sparkhivedataset": 58, "spark_d": 58, "lakehous": 58, "architectur": 58, "acid": 58, "transact": 58, "unifi": 58, "adl": [58, 221], "hdf": [13, 58, 87, 99, 227, 241, 275], "transcod": [58, 194], "temperatur": 58, "my_bucket": [58, 87, 227, 260], "versionasof": 58, "deltat": [58, 98, 221, 240], "process_barometer_data": 58, "update_meterological_st": 58, "first_operation_complet": 58, "estimate_weather_trend": 58, "second_operation_complet": 58, "signal": 58, "preserv": [58, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 103, 104, 105, 106, 107, 198, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 246, 247, 248, 249, 251], "shape": [58, 74, 213], "diagram": 58, "represent": [48, 58, 194], "dummi": [58, 274], "flow": [58, 256, 268], "hold": [58, 147, 172, 255, 256, 270], "lazi": [58, 262], "randomforrestclassifi": 58, "randomforestclassifi": 58, "training_data": 58, "forest": 58, "numtre": 58, "testing_data": 58, "transform": [48, 58, 262, 273], "example_classifi": 58, "fifo": 58, "intermedi": [48, 60, 194, 196, 261, 265, 266, 280], "comprehens": [60, 258], "preliminari": 60, "anyon": 60, "knowledg": [60, 270], "excel": [13, 60, 82, 222, 273, 275, 278], "onlin": 60, "book": 60, "robust": 61, "assembli": 61, "incompat": [62, 93, 97, 100, 198, 233, 238, 242], "with_traceback": [62, 65, 138, 148, 166, 195], "tb": [62, 65, 138, 148, 166, 195], "__traceback__": [62, 65, 138, 148, 166, 195], "base_env": [64, 66, 67], "experiment1": 64, "model_paramet": 64, "experiment2": 64, "conf_log": [64, 66], "dictconfig": [64, 66, 257], "conf_param": [64, 66], "suppli": [64, 66, 67, 100, 147, 211, 221, 242, 255, 256, 265, 273], "overriden": 64, "dedupl": [64, 67], "classmethod": [64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 165, 175, 176, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "fromkei": [64, 66, 67], "k": [64, 66, 67, 262], "keyerror": [64, 66, 67, 265], "popitem": [64, 66, 67], "setdefault": [64, 66, 67], "readthedoc": [66, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 90, 93, 94, 95, 96, 97, 104, 105, 106, 107, 123, 124, 151, 152, 161, 188, 189, 192, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 224, 225, 226, 227, 230, 233, 234, 235, 236, 238, 247, 248, 249, 251, 277], "en": [66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 90, 91, 93, 94, 95, 96, 97, 104, 105, 106, 107, 123, 124, 151, 152, 161, 178, 188, 189, 192, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 224, 225, 226, 227, 230, 233, 234, 235, 236, 238, 239, 247, 248, 249, 251, 277], "2_branch": 66, "load_and_merge_dir_config": 66, "processed_fil": 66, "read_environment_vari": 66, "parsererror": [1, 66], "invalid": [66, 71, 74, 100, 178, 194, 209, 211, 213, 221, 242, 263], "express": [67, 95, 96, 178, 235, 236, 282], "malform": [67, 268], "breakag": 69, "usda": [14, 70, 208], "corn": [14, 70, 208], "yield": [14, 70, 208, 250, 262], "head": [70, 275], "complic": [70, 263], "authbas": [70, 208], "httpbasicauth": 70, "cast": 70, "typevar": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "_do": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "_di": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "notadirectoryerror": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 175, 176, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "stringio": [71, 209], "bio": [71, 209], "seqio": [71, 209], "alpha": [71, 209, 261, 265], "naccggatgta": [71, 209], "beta": [71, 209, 261], "naggctcggtta": [71, 209], "raw_data": [71, 178, 209], "fasta": [71, 209], "ls_orchid": [71, 209], "sequence_list": [71, 209], "seq": [71, 209], "default_load_arg": [71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 101, 102, 103, 209, 210, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246], "default_save_arg": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 251], "posix": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 99, 103, 104, 105, 106, 107, 176, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 244, 245, 246, 247, 248, 249, 251, 260], "biopython": [71, 209], "spec": [71, 73, 74, 75, 76, 77, 78, 79, 80, 86, 87, 90, 93, 94, 95, 96, 104, 105, 106, 107, 123, 151, 209, 212, 213, 214, 215, 216, 217, 218, 219, 226, 227, 230, 233, 234, 235, 236, 247, 248, 249, 251], "abstractfilesystem": [71, 73, 74, 75, 76, 77, 78, 79, 80, 86, 87, 90, 93, 94, 95, 96, 104, 105, 106, 107, 209, 212, 213, 214, 215, 216, 217, 218, 219, 226, 227, 230, 233, 234, 235, 236, 247, 248, 249, 251], "invalidate_cach": [71, 74, 209, 213], "your_kei": [72, 210], "your_secret": [72, 210], "dd": [72, 210], "ddf": [72, 210], "from_panda": [72, 210], "npartit": [72, 210], "schema": [72, 91, 98, 99, 100, 157, 210, 211, 221, 231, 239, 240, 241, 242, 244, 257], "triad": [72, 210], "pyarrow": [72, 89, 210, 229], "parquet_dataset": [72, 210], "int32": [72, 210], "write_index": [72, 210], "multipart": [72, 210], "read_parquet": [72, 89, 210, 229], "to_parquet": [72, 89, 210, 229], "send": [73, 208, 212, 258], "emailmessag": [73, 212], "string_to_writ": [73, 104, 212, 247], "invis": [73, 212], "plain": [73, 212, 230], "set_cont": [73, 212], "subject": [73, 212], "sin": [73, 212], "studly17": [73, 212], "strong": [73, 212], "bad": [1, 73, 201, 203, 212], "__dict__": [73, 212], "mime": [73, 212], "flatten": [73, 212], "autogener": [73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 103, 104, 105, 106, 107, 176, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 241, 245, 246, 247, 248, 249, 251], "resolve_load_vers": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 106, 107, 176, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 241, 245, 246, 247, 248, 249, 251], "resolve_save_vers": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 106, 107, 176, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 241, 245, 246, 247, 248, 249, 251], "geojson": [74, 213], "eg": [74, 213], "gpd": [74, 213], "geometri": [74, 213], "geodatafram": [74, 213], "read_fil": [74, 213], "to_fil": [74, 213], "gcfilesystem": [74, 213], "hv": [75, 214], "holoviews_writ": [75, 214], "fmt": [75, 214], "s3filesystem": [75, 77, 214, 216], "reference_manu": [75, 214], "default_flow_styl": [76, 105, 106, 107, 215, 248, 249, 251], "output_plot": [77, 216], "fig": [77, 95, 96, 216, 235, 236, 282], "figur": [77, 95, 96, 216, 235, 236, 268, 282], "plot_writ": [77, 216], "pdf": [77, 216], "pdf_plot_writ": [77, 216], "plots_dict": [77, 216], "colour": [77, 110, 111, 191, 216], "blue": [77, 112, 216], "red": [77, 112, 216, 258], "color": [77, 112, 216], "dict_plot_writ": [77, 216], "plots_list": [77, 216], "list_plot_writ": [77, 216], "savefig": [77, 216], "_as_gen": [77, 216], "gml": [78, 217], "nx": [78, 79, 80, 217, 218, 219], "complete_graph": [78, 79, 80, 217, 218, 219], "graph_dataset": [78, 79, 80, 217, 218, 219], "is_isomorph": [78, 79, 80, 217, 218, 219], "read_gml": [78, 217], "readwrit": [78, 79, 80, 217, 218, 219], "write_gml": [78, 217], "graphml": [79, 218], "read_graphml": [79, 218], "write_graphml": [79, 218], "node_link_graph": [80, 219], "json_graph": [80, 219], "node_link_data": [80, 219], "openpyxl": [13, 82, 222, 275], "multi": [82, 222], "sheet": [82, 222], "another_datafram": [82, 222], "world": [82, 222, 261, 265], "multifram": [82, 222], "read_excel": [13, 82, 222, 275], "to_excel": [13, 82, 222, 275], "excelwrit": [82, 222], "writer": [82, 222], "feather": [83, 223], "use_thread": [83, 223], "read_feath": [83, 223], "to_feath": [83, 223], "bigqueri": [84, 85, 224, 225], "read_gbq": [84, 85, 224, 225], "gbq": [84, 85, 224, 225], "vehicl": [84, 85, 224, 225], "shuttle_id": [84, 90, 224, 230, 273], "reauth": [84, 85, 224, 225], "dataset_1": [84, 224], "table_a": [84, 90, 91, 101, 224, 230, 231, 243], "sql_data": [84, 90, 224, 230], "oauth2": [84, 85, 224, 225], "big_query_dataset": [85, 225], "big_query_t": [85, 225], "chunk_siz": [85, 208, 225], "progress_bar": [85, 225], "to_gbq": [85, 225], "sas7bdat": [86, 226], "read_sa": [86, 226], "to_sa": [86, 226], "flight": [86, 226, 276], "sa": [86, 226, 230], "assumpt": [86, 100, 226, 242], "buffer": [86, 226], "clipboard": [86, 226], "read_": [86, 226], "to_": [86, 226], "hdfstore": [87, 227], "hdf_dataset": [87, 227], "sensor_read": [87, 227], "h5": [87, 103, 227, 246], "aws_s3_cr": [87, 227], "pytabl": [87, 227], "www": [87, 103, 227, 246, 260], "usersguid": [87, 227], "libref": [87, 227], "top_level": [87, 227], "open_fil": [87, 227], "clickstream_dataset": [88, 228], "landing_area": [88, 228], "click_stream": [88, 228], "abfs_cr": [88, 228], "json_dataset": [88, 228], "video_gam": [88, 228], "read_json": [88, 228], "use_nullable_dtyp": [89, 229], "arrow": [89, 229], "partition_col": [89, 229], "execution_opt": [90, 230], "read_sql_queri": [90, 230], "shuttle_id_dataset": [90, 230], "db_credenti": [90, 91, 101, 230, 231, 239, 243], "stream_result": [90, 230], "chunksiz": [90, 230, 262], "1000": [90, 230], "postgresql": [90, 91, 101, 230, 231, 243], "scott": [90, 91, 101, 230, 231, 243], "tiger": [90, 91, 101, 230, 231, 243], "create_connect": [90, 91, 230, 231], "connection_str": [90, 91, 230, 231], "read_sql_tabl": [91, 231], "to_sql": [91, 231], "symmetr": [91, 231], "shuttles_table_dataset": [91, 231], "dwschema": [91, 231], "read_xml": [92, 232], "to_xml": [92, 232], "test_model": [93, 233], "final_model": [93, 233], "lz4": [93, 233], "joblib": [93, 233], "s3_credenti": [93, 233], "compress_pickl": [93, 97, 233, 238], "deserialis": [93, 97, 233, 238], "dill": [93, 97, 233, 238], "torch": [93, 97, 233, 238], "lucianopaz": [93, 97, 233, 238], "importerror": [93, 97, 233, 238], "scatter_plot": [95, 96, 235, 236], "px": [95, 96, 235, 236, 282], "from_json": [95, 96, 235, 236], "write_json": [95, 96, 235, 236], "plotly_arg": [96, 236, 282], "bar_plot": [96, 236], "orient": [96, 236, 282], "xaxis_titl": [96, 236, 282], "yaxis_titl": [96, 236, 282], "titl": [96, 236, 256, 282], "df_data": [96, 236], "x1": [96, 236], "x2": [96, 236], "scatter": [96, 236], "theme": [96, 236], "redis_arg": [97, 238], "from_url": [97, 238], "my_python_object": [97, 238], "my_object": [97, 238], "from_url_arg": [97, 238], "6379": [97, 238], "final_python_object": [97, 238], "my_final_object": [97, 238], "default_redis_url": [97, 238], "strictredi": [97, 238], "socket_timeout": [97, 238], "set_arg": [97, 238], "redis_url": [97, 238], "structfield": [98, 99, 100, 211, 240, 241, 242], "stringtyp": [98, 99, 100, 211, 240, 241, 242], "integertyp": [98, 99, 100, 211, 240, 241, 242], "structtyp": [98, 99, 100, 211, 240, 241, 242], "ag": [98, 99, 100, 211, 240, 241, 242], "alex": [98, 99, 100, 211, 240, 241, 242], "31": [98, 99, 100, 211, 240, 241, 242, 278], "bob": [98, 99, 100, 211, 240, 241, 242], "clark": [98, 99, 100, 211, 240, 241, 242], "65": [98, 99, 100, 211, 240, 241, 242], "dave": [98, 99, 100, 211, 240, 241, 242], "spark_df": [98, 99, 100, 211, 240, 241, 242], "createdatafram": [98, 99, 100, 101, 211, 240, 241, 242, 243], "test_data": [98, 99, 240, 241], "deltatable_dataset": [98, 240], "delta_t": [98, 240], "mnt": [98, 99, 240], "weather_with_schema": [99, 241], "weather_clean": [99, 241], "dataframeread": [99, 101, 241, 243, 244], "getting_start": [99, 241], "quickstart_df": [99, 241], "partitionbi": [99, 100, 241, 242, 244], "s3n": [99, 241], "insecurecli": [99, 241], "write_mod": [100, 211, 242], "errorifexist": [100, 242], "table_pk": [100, 242], "upsert": [100, 211, 242], "pk": [100, 242], "atom": [100, 242], "hive_dataset": [100, 242], "hive_databas": [100, 242], "test_databas": [100, 242], "test_tabl": [100, 242], "preexist": [100, 242], "dataframewrit": [100, 101, 239, 242, 243], "saveast": [100, 239, 242], "hiveopt": [100, 242], "setcheckpointdir": [100, 242], "jdbc": [101, 243], "weather_t": [101, 243], "connection_properti": [101, 243], "topanda": [101, 243], "subprotocol": [101, 243], "subnam": [101, 243], "libsvm": [102, 245], "dump_svmlight_fil": [102, 245], "load_svmlight_fil": [102, 245], "spars": [102, 245], "matrix": [102, 245], "zero": [102, 245], "svm_dataset": [102, 245], "svm": [102, 245], "zero_bas": [102, 245], "14159": [102, 245], "reloaded_featur": [102, 245], "reloaded_label": [102, 245], "load_model": [103, 246], "save_model": [103, 246], "tensorflow_model": [103, 246], "include_optim": [103, 246], "tf_cred": [103, 246], "tf": [103, 246], "kera": [103, 246], "loaded_model": [103, 246], "new_predict": [103, 246], "assert_allclos": [103, 246], "rtol": [103, 246], "1e": [103, 246], "atol": [103, 246], "save_format": [103, 246], "api_doc": [103, 246], "alice_book": [104, 247], "alic": [104, 247], "002": [105, 106, 248, 249], "pyyaml": [107, 251], "pyyamldocument": [107, 251], "incorpor": 112, "asctim": 112, "levelnam": 112, "ext": [112, 268, 274], "stdout": 112, "white": 112, "magenta": 112, "yellow": 112, "ansi": 112, "cyan": 112, "commandcollect": 117, "encapsul": [48, 117, 261, 272], "primit": [0, 119, 149], "kedrocli": 119, "_hook_manag": 122, "exit_cod": [125, 138], "subcommand": 125, "themselv": 125, "attr": 127, "list_command": 127, "ctx": [127, 145], "pipeline_dir": 131, "pipeline_test": 131, "pipeline_conf": 131, "source_path": 131, "tests_path": 131, "config_path": 131, "occurr": [131, 172, 186], "9223372036854775807": [131, 172, 186], "vc": [135, 256], "cookiecutt": [135, 256, 270], "resid": 135, "verbose_error": 138, "format_messag": 138, "verbos": 139, "func_": 140, "stylesheet": 141, "forward_help": 142, "reqs_path": 143, "kedroclierror": 143, "subprocess": 144, "kedrocontexterror": 147, "mismatch": 147, "feed_dict": [153, 178], "_create_catalog": 153, "earliest": 155, "thrown": [156, 157, 198], "run_result": 157, "kedro_vers": [157, 255], "utitl": 158, "logging_config": 159, "autoregist": 161, "autodiscoveri": 161, "nodes_and_pipelin": 161, "desir": [162, 258, 266], "dynaconf": 162, "silenc": 162, "mislabel": 162, "cryptic": 162, "nonetyp": 162, "rochacbruno": 162, "460": 162, "save_on_clos": [165, 254], "register_pipelin": [165, 264, 265, 268, 272], "kedrosessionerror": 165, "shelv": 168, "config_fil": 172, "project_vers": 172, "source_dir": 172, "deriv": 172, "projectmetadata": 173, "kwd": 175, "_single_process": [175, 201], "as_posix": [175, 176], "dataset_pattern": 178, "relai": 178, "feed": 178, "insensit": 178, "conform": [178, 198], "lexicograph": 178, "data_set_nam": 178, "datasetalreadyexistserror": 178, "add_al": 178, "parq": 178, "datasetnotfounderror": 178, "boats_credenti": 178, "regex_search": 178, "syntaxerror": 178, "substr": 178, "prm": 178, "feat": 178, "feat_eng_data": 178, "time_seri": 178, "shallow": 178, "namedtupl": 186, "local_n": 189, "notebooks_and_ipython": 189, "kedro_and_notebook": 189, "setproject": 189, "param_group": 189, "local_namespac": 190, "redirect": 192, "pretti": 192, "repl": 192, "rich_traceback": [192, 258], "driven": 193, "among": [194, 196, 263], "circulardependencyerror": 194, "circular": 194, "outputnotuniqueerror": 194, "confirmnotuniqueerror": 194, "first_d": 194, "second_d": 194, "first_nod": 194, "second_nod": 194, "third_d": 194, "fourth_d": 194, "all_input": 194, "all_output": [194, 268], "names_onli": 194, "loggabl": 194, "invoc": 194, "func1": 194, "func2": 194, "func3": 194, "node_namespac": 194, "intersect": 194, "distinct": [1, 194, 255], "lookup": 194, "node1": [194, 263, 265], "node2": [194, 263, 265], "node3": [194, 265], "inner": [194, 198], "only_nod": [194, 266, 270], "only_nodes_with_input": 194, "only_nodes_with_namespac": 194, "only_nodes_with_tag": [194, 266, 270], "modularpipelineerror": 196, "incorrectli": 196, "clean_data": 197, "boats_df": 197, "halve_datafram": 197, "array_split": 197, "cars2017": 197, "boats2017": 197, "clean_cars2017": 197, "clean_boats2017": 197, "train_cars2017": 197, "test_cars2017": 197, "train_boats2017": 197, "test_boats2017": 197, "auxiliari": 198, "hint": 198, "violat": 198, "digit": 198, "fullstop": 198, "bind": 198, "outer": 198, "wherea": 198, "toposort": [201, 203], "_validate_catalog": 201, "spawn": [201, 203], "cpu": [201, 203, 265, 272], "61": 201, "min": 201, "_sharedmemorydataset": 201, "sequenti": [202, 265, 268, 270, 272, 276], "classs": 202, "obj_path": 206, "default_obj_path": 206, "attributeerror": 206, "example_t": 208, "val1": 208, "val2": 208, "val3": 208, "val4": 208, "url_of_remote_serv": 208, "mind": 208, "divid": 208, "chunk": [208, 262], "sent": 208, "unsupport": 208, "dataframe_typ": 211, "primary_kei": 211, "partition_column": [211, 221], "owner_group": 211, "primary_column": 211, "names_and_ag": 211, "uniti": [211, 221], "truncat": 211, "ownership": 211, "owner": [48, 211], "managedt": 211, "catalog_typ": 221, "catalog_nam": 221, "glue": 221, "alter": [221, 257, 258], "overwrite_schema": 221, "partition_filt": 221, "boats_filesystem": 221, "dev_cr": 221, "boats_databricks_unity_catalog": 221, "simple_databas": 221, "simple_t": 221, "trucks_aws_glue_catalog": 221, "db_schema": 221, "db_tabl": 221, "new_data": 221, "get_loaded_vers": 221, "accepted_write_mod": 221, "default_write_mod": 221, "az": 221, "api_refer": 221, "histori": [221, 272], "created_tim": 221, "appendonli": 221, "meant": 221, "mssql": 230, "1433": 230, "testdb": 230, "strongpassword": 230, "_make_mssql_connection_str": 230, "pyodbc": 230, "encrypt": 230, "uid": 230, "trustservercertif": 230, "odbc_connect": 230, "testtabl": 230, "mssql_dataset": 230, "mssql_credenti": 230, "datet": 230, "BY": 230, "parse_d": [230, 237], "f0": 230, "adapt_mssql_date_param": 230, "dt": 230, "has_head": 237, "null_valu": 237, "somenullstr": 237, "frame_equ": 237, "rechunk": 237, "pola": 237, "explic": 237, "compabl": 237, "write_csv": 237, "snowpark": 239, "mar": 239, "weather_data": 239, "meteorologi": 239, "column_ord": 239, "table_typ": 239, "shorter": 239, "polygon": 239, "externalbrows": 239, "snowflake_cli": 239, "geopolygon": 239, "geodata": 239, "ab12345": 239, "eu": 239, "443": 239, "warehous": 239, "datascience_wh": 239, "detailed_data": 239, "service_account_abc": 239, "supersecret": 239, "john_do": 239, "wdomain": 239, "save_as_t": 239, "sparkjbdcdataset": 243, "new_inventori": 244, "inventori": 244, "output_mod": 244, "04_checkpoint": 244, "raw_new_inventori": 244, "inventory_schema": 244, "broker": 244, "kafka": 244, "schemainfer": 244, "fourcc": 250, "mp4v": 250, "opencv": 250, "mp4": 250, "video_dataset": 250, "sequencevideo": 250, "640": 250, "480": 250, "dtype": [0, 250], "uint8": 250, "255": [250, 262], "my_video": 250, "fp": 250, "generatorvideo": 250, "gen": 250, "codec": 250, "avaiabl": 250, "strict": 252, "broken": [252, 270], "decoupl": 254, "registr": 255, "basesessionstor": 255, "context_class": 255, "data_catalog_class": 255, "metaphor": 256, "minim": [256, 269], "astronom": 256, "exploratori": [256, 267], "phase": 256, "formerli": [256, 269], "mini": [256, 269], "my_kedro_pyspark_project": 256, "creator": 256, "custom_prompt": 256, "regex_valid": 256, "__init": 256, "py__": 256, "your_start": 256, "increment": [16, 57, 257], "info_file_handl": 258, "default_log": 258, "richhandl": 258, "aid": 258, "tracebacks_show_loc": 258, "richli": 258, "circleci": 258, "narrow": 258, "120": 258, "jupyter_column": 258, "jupyter_lin": 258, "115": 258, "markup": 258, "bold": 258, "blink": 258, "micropkg_nam": 260, "clash": [260, 265], "renam": [260, 261], "new_package_nam": 260, "bulk": 260, "manifest": 260, "cleaning_util": 260, "aliased_util": 260, "uat": 260, "second_pipelin": 260, "first_pipelin": 260, "fall": 260, "unpack": 260, "embed": [260, 268], "pypi_package_nam": 260, "micropkg_pull_arg": 260, "aliased_pipelin": 260, "pipeline_pull_arg": 260, "package_path": 260, "za": 260, "z0": 260, "9_": 260, "evolv": [261, 270, 272], "modern": [13, 261, 275], "ingest": 261, "unlock": 261, "mental": 261, "collaps": 261, "adher": 261, "revers": 261, "coupl": 261, "scoop": 261, "realli": 261, "lunch_pipelin": 261, "lunch": 261, "verb": 261, "defrost": 261, "eat": 261, "food": 261, "frozen": [261, 272], "thaw": 261, "cook_pipelin": 261, "frozen_veg": 261, "veg": 261, "grill": 261, "grilled_veg": 261, "prep_pipelin": 261, "meal_pipelin": 261, "imagin": 261, "meal": 261, "defrost_nod": 261, "eat_breakfast_pipelin": 261, "eat_breakfast": 261, "breakfast_food": 261, "eat_lunch_pipelin": 261, "eat_lunch": 261, "lunch_food": 261, "disjoint": 261, "cook_breakfast_pipelin": 261, "breakfast": 261, "cook_lunch_pipelin": 261, "final_pipelin": 261, "freez": 261, "remap": 261, "confus": 261, "arbitrarili": 261, "template_pipelin": [261, 272], "input1": 261, "input2": 261, "thu": [261, 266], "override_m": 261, "node_func1": 261, "intermediary_output": 261, "node_func2": 261, "alpha_pipelin": 261, "beta_pipelin": 261, "adder_nod": 262, "adding_a_and_b": 262, "bound": 262, "resolut": [262, 263], "arg1": 262, "arg2": 262, "example_report": 262, "combined_report": 262, "uk_reporting_nod": 262, "uk_input1": 262, "uk_input2": 262, "uk": 262, "ge_reporting_nod": 262, "ge_input1": 262, "ge_input2": 262, "node_tag": [262, 263], "moreov": 262, "pipeline_tag": [262, 263], "chunkwisecsvdataset": 262, "your_project_nam": [], "chunkwise_dataset": [], "deepcopi": [], "bytesio": [], "_fs_arg": [], "_credenti": [], "auto_mkdir": [], "_storage_opt": [], "_load_arg": [], "_save_arg": [], "buf": [], "path_or_buf": [], "fs_file": [], "getvalu": [], "repurpos": [], "wise": [], "full_data": [], "textfileread": [], "data_train": 262, "frac": 262, "data_test": 262, "target_column": 262, "42": [], "329": [], "varianc": [263, 265, 266], "mean_so": [263, 266], "m2": [263, 266], "variance_pipelin": 263, "mean_nod": [263, 266], "variance_nod": [263, 266], "pipeline_d": 263, "last_nod": 263, "pipeline_al": 263, "readili": 263, "co": 263, "aforement": 264, "dp": 264, "data_processing_pipelin": 264, "data_science_pipelin": 264, "remind": 264, "centric": 264, "find_pipelin": [264, 265], "travers": 264, "data_engin": 264, "inherit": 265, "scarc": 265, "ram": 265, "dry": 265, "dryrunn": 265, "neccessari": 265, "dry_runn": 265, "input_nam": 265, "missing_input": 265, "03": 265, "24": 265, "09": [265, 268, 272, 273], "482": 265, "483": 265, "my_pipelin": 265, "tackl": 265, "outsourc": 265, "ultim": 265, "666666666666667": [265, 266], "lambdadataset": 265, "pickler": 265, "ouput": [265, 266], "tag1": 265, "tag2": 265, "tag3": 265, "pipeline1": 265, "nodes_nam": 265, "env1": 265, "dash": 265, "full_pipelin": 266, "recomput": 266, "sliced_pipelin": 266, "n_json": 266, "liber": 267, "example_num_train_it": 268, "example_learning_r": 268, "sepal_length": 268, "sepal_width": 268, "petal_length": 268, "petal_width": 268, "145": 268, "146": 268, "147": 268, "149": 268, "2021": 268, "13t15": 268, "08": [268, 272, 273], "255z": 268, "posixpath": 268, "kedro_project": 268, "refresh": [268, 280], "some_act": 268, "came": 268, "my_notebook": 268, "ipynb": 268, "kernelspec": 268, "kernel_nam": 268, "unabl": 268, "saw": 268, "qt": 268, "kedro_iri": 268, "qtconsol": 268, "noth": 268, "trick": 268, "vanilla": 268, "example_dataset_1": 269, "example_dataset_2": 269, "df_2": 269, "wrangl": [48, 270], "messi": 270, "unrefin": 270, "insight": 270, "expertis": 270, "skill": 270, "mathemat": 270, "joke": 270, "someon": 270, "trace": 270, "pictur": 270, "lot": 270, "everyon": 270, "idea": 270, "portabl": [270, 272], "sole": 270, "mutabl": 270, "chonki": 270, "anim": 270, "plump": 270, "round": 270, "heavier": 270, "averag": [270, 282], "likewis": [270, 275], "bulki": 270, "linear_model": 272, "model_select": 272, "train_test_split": 272, "linear": 272, "regress": 272, "passenger_capac": [272, 282], "crew": 272, "d_check_complet": [272, 273, 275], "moon_clearance_complet": [272, 273, 275], "review_scores_r": 272, "preprocess_shuttles_nod": [272, 273], "462": 272, "89": [272, 273], "occas": 272, "portion": 272, "regressor_act": 272, "regressor_candid": 272, "41": 272, "y_t": 272, "rain": 272, "candidate_modelling_pip": 272, "elin": 272, "active_model": 272, "ling_pipelin": 272, "ate_modelling_pipelin": 272, "449": 272, "multithread": 272, "scratch": 273, "astyp": 273, "_parse_monei": 273, "43": 273, "46": 273, "temporari": 273, "garbag": 273, "collector": 273, "rated_shuttl": 273, "left_on": 273, "right_on": 273, "company_id": [273, 275], "28": 273, "leisur": 273, "breath": 273, "summaris": 273, "far": 273, "malt": 273, "helmhold": 273, "unsplash": [273, 276], "proceed": 274, "_build": 274, "english": 274, "restor": 274, "myst": 274, "autodoc": 274, "autosummari": 274, "autosummary_gener": 274, "apidoc": 274, "toctre": 274, "touch": 274, "fiction": 275, "moon": [275, 276], "travel": 275, "fleet": 275, "rate": 275, "spacecraft": 275, "passeng": [275, 282], "capac": [275, 282], "five": 275, "company_loc": 275, "total_fleet_count": 275, "35029": 275, "niue": 275, "30292": 275, "anguilla": 275, "19032": 275, "russian": 275, "feder": 275, "8238": 275, "91": 275, "barbado": 275, "30342": 275, "nan": 275, "sao": 275, "tome": 275, "shuttle_loc": 275, "shuttle_typ": [275, 282], "engine_typ": 275, "63561": 275, "v5": 275, "quantum": 275, "325": 275, "36260": 275, "780": 275, "57015": 275, "715": 275, "14035": 275, "plasma": 275, "770": 275, "10036": 275, "v2": 275, "approxim": 276, "2160": 276, "tourism": 276, "industri": 276, "boom": 276, "thousand": 276, "tourist": 276, "amen": 276, "trip": 276, "diaz": 276, "hit": 276, "answer": [48, 276, 277], "reader": 276, "errno": 277, "kedro_reload": 277, "kedro_project_setup": 277, "158": 277, "resum": 277, "_lib": 277, "pyx": 277, "textread": 277, "__cinit__": 277, "689": 277, "_setup_parser_sourc": 277, "exc": 277, "sharabl": 278, "jupyterlab_serv": 278, "sneak": 278, "haven": [262, 280, 281, 282], "autoreload": 280, "my_shareable_pipelin": 280, "preview_arg": 281, "nrow": 281, "plotlydataset": 282, "shuttle_passenger_capacity_plot_exp": 282, "shuttle_passenger_capacity_plot_go": 282, "graph_obj": 282, "compare_passenger_capacity_exp": 282, "groupbi": 282, "numeric_onli": 282, "reset_index": 282, "graph_object": 282, "compare_passenger_capacity_go": 282, "data_fram": 282, "dummy_confusion_matrix": 282, "THE": [12, 15], "WITH": 12, "TO": [12, 14, 15], "revis": [], "_arg": 13, "utf": 13, "minio": 13, "ON": 15, "polar": 0, "date_todai": 0, "todai": 0, "custom_resolv": [0, 66], "my_list": 0, "getattr": 0, "my_polars_dataset": 0, "product_ag": 0, "float64": 0, "group_identifi": 0, "utf8": 0, "try_parse_d": 0, "3_branch": 66, "bruce": 48, "philp": 48, "guilherm": 48, "braccial": 48, "brain": 48, "blog": 48, "medium": 48, "truth": 48, "un": 48, "cleans": 48, "dimens": 48, "histor": 48, "drive": 48, "blend": 48, "redefin": 48, "smooth": 1, "utilis": 1, "awar": 1, "badconfigexcept": 1, "diataxi": [12, 14, 15], "generalis": [14, 16], "revisit": 13, "summari": 13, "parameters_": [38, 260, 261], "catalog_": [38, 260], "lazili": 262, "decisiontreeclassifi": 262, "labelencod": 262, "tree": 262, "accuracy_scor": 262, "label_encod": 262, "chunkwisedataset": 262, "variant": 262, "chunkwis": 262, "_overwrit": 262, "smaller": 262, "475": 262, "331": 262, "514": 262, "105": 262, "parameters_data_sci": 272, "parameters_data_process": 273, "incrementaldataset": 18, "conclud": 16, "repetit": 16}, "objects": {"": [[61, 0, 0, "-", "kedro"], [207, 0, 0, "-", "kedro_datasets"]], "kedro": [[62, 1, 1, "", "KedroPythonVersionWarning"], [63, 0, 0, "-", "config"], [68, 0, 0, "-", "extras"], [113, 0, 0, "-", "framework"], [174, 0, 0, "-", "io"], [187, 0, 0, "-", "ipython"], [191, 0, 0, "-", "logging"], [193, 0, 0, "-", "pipeline"], [199, 0, 0, "-", "runner"], [205, 0, 0, "-", "utils"]], "kedro.KedroPythonVersionWarning": [[62, 2, 1, "", "args"], [62, 3, 1, "", "with_traceback"]], "kedro.config": [[64, 1, 1, "", "ConfigLoader"], [65, 1, 1, "", "MissingConfigException"], [66, 1, 1, "", "OmegaConfigLoader"], [67, 1, 1, "", "TemplatedConfigLoader"]], "kedro.config.ConfigLoader": [[64, 3, 1, "", "__init__"], [64, 3, 1, "", "clear"], [64, 4, 1, "", "conf_paths"], [64, 3, 1, "", "copy"], [64, 3, 1, "", "fromkeys"], [64, 3, 1, "", "get"], [64, 3, 1, "", "items"], [64, 3, 1, "", "keys"], [64, 3, 1, "", "pop"], [64, 3, 1, "", "popitem"], [64, 3, 1, "", "setdefault"], [64, 3, 1, "", "update"], [64, 3, 1, "", "values"]], "kedro.config.MissingConfigException": [[65, 2, 1, "", "args"], [65, 3, 1, "", "with_traceback"]], "kedro.config.OmegaConfigLoader": [[66, 3, 1, "", "__init__"], [66, 3, 1, "", "clear"], [66, 3, 1, "", "copy"], [66, 3, 1, "", "fromkeys"], [66, 3, 1, "", "get"], [66, 3, 1, "", "items"], [66, 3, 1, "", "keys"], [66, 3, 1, "", "load_and_merge_dir_config"], [66, 3, 1, "", "pop"], [66, 3, 1, "", "popitem"], [66, 3, 1, "", "setdefault"], [66, 3, 1, "", "update"], [66, 3, 1, "", "values"]], "kedro.config.TemplatedConfigLoader": [[67, 3, 1, "", "__init__"], [67, 3, 1, "", "clear"], [67, 4, 1, "", "conf_paths"], [67, 3, 1, "", "copy"], [67, 3, 1, "", "fromkeys"], [67, 3, 1, "", "get"], [67, 3, 1, "", "items"], [67, 3, 1, "", "keys"], [67, 3, 1, "", "pop"], [67, 3, 1, "", "popitem"], [67, 3, 1, "", "setdefault"], [67, 3, 1, "", "update"], [67, 3, 1, "", "values"]], "kedro.extras": [[69, 0, 0, "-", "datasets"], [108, 0, 0, "-", "extensions"], [110, 0, 0, "-", "logging"]], "kedro.extras.datasets.api": [[70, 1, 1, "", "APIDataSet"]], "kedro.extras.datasets.api.APIDataSet": [[70, 3, 1, "", "__init__"], [70, 3, 1, "", "exists"], [70, 3, 1, "", "from_config"], [70, 3, 1, "", "load"], [70, 3, 1, "", "release"], [70, 3, 1, "", "save"]], "kedro.extras.datasets.biosequence": [[71, 1, 1, "", "BioSequenceDataSet"]], "kedro.extras.datasets.biosequence.BioSequenceDataSet": [[71, 2, 1, "", "DEFAULT_LOAD_ARGS"], [71, 2, 1, "", "DEFAULT_SAVE_ARGS"], [71, 3, 1, "", "__init__"], [71, 3, 1, "", "exists"], [71, 3, 1, "", "from_config"], [71, 3, 1, "", "invalidate_cache"], [71, 3, 1, "", "load"], [71, 3, 1, "", "release"], [71, 3, 1, "", "save"]], "kedro.extras.datasets.dask": [[72, 1, 1, "", "ParquetDataSet"]], "kedro.extras.datasets.dask.ParquetDataSet": [[72, 2, 1, "", "DEFAULT_LOAD_ARGS"], [72, 2, 1, "", "DEFAULT_SAVE_ARGS"], [72, 3, 1, "", "__init__"], [72, 3, 1, "", "exists"], [72, 3, 1, "", "from_config"], [72, 4, 1, "", "fs_args"], [72, 3, 1, "", "load"], [72, 3, 1, "", "release"], [72, 3, 1, "", "save"]], "kedro.extras.datasets.email": [[73, 1, 1, "", "EmailMessageDataSet"]], "kedro.extras.datasets.email.EmailMessageDataSet": [[73, 2, 1, "", "DEFAULT_LOAD_ARGS"], [73, 2, 1, "", "DEFAULT_SAVE_ARGS"], [73, 3, 1, "", "__init__"], [73, 3, 1, "", "exists"], [73, 3, 1, "", "from_config"], [73, 3, 1, "", "load"], [73, 3, 1, "", "release"], [73, 3, 1, "", "resolve_load_version"], [73, 3, 1, "", "resolve_save_version"], [73, 3, 1, "", "save"]], "kedro.extras.datasets.geopandas": [[74, 1, 1, "", "GeoJSONDataSet"]], "kedro.extras.datasets.geopandas.GeoJSONDataSet": [[74, 2, 1, "", "DEFAULT_LOAD_ARGS"], [74, 2, 1, "", "DEFAULT_SAVE_ARGS"], [74, 3, 1, "", "__init__"], [74, 3, 1, "", "exists"], [74, 3, 1, "", "from_config"], [74, 3, 1, "", "invalidate_cache"], [74, 3, 1, "", "load"], [74, 3, 1, "", "release"], [74, 3, 1, "", "resolve_load_version"], [74, 3, 1, "", "resolve_save_version"], [74, 3, 1, "", "save"]], "kedro.extras.datasets.holoviews": [[75, 1, 1, "", "HoloviewsWriter"]], "kedro.extras.datasets.holoviews.HoloviewsWriter": [[75, 2, 1, "", "DEFAULT_SAVE_ARGS"], [75, 3, 1, "", "__init__"], [75, 3, 1, "", "exists"], [75, 3, 1, "", "from_config"], [75, 3, 1, "", "load"], [75, 3, 1, "", "release"], [75, 3, 1, "", "resolve_load_version"], [75, 3, 1, "", "resolve_save_version"], [75, 3, 1, "", "save"]], "kedro.extras.datasets.json": [[76, 1, 1, "", "JSONDataSet"]], "kedro.extras.datasets.json.JSONDataSet": [[76, 2, 1, "", "DEFAULT_SAVE_ARGS"], [76, 3, 1, "", "__init__"], [76, 3, 1, "", "exists"], [76, 3, 1, "", "from_config"], [76, 3, 1, "", "load"], [76, 3, 1, "", "release"], [76, 3, 1, "", "resolve_load_version"], [76, 3, 1, "", "resolve_save_version"], [76, 3, 1, "", "save"]], "kedro.extras.datasets.matplotlib": [[77, 1, 1, "", "MatplotlibWriter"]], "kedro.extras.datasets.matplotlib.MatplotlibWriter": [[77, 2, 1, "", "DEFAULT_SAVE_ARGS"], [77, 3, 1, "", "__init__"], [77, 3, 1, "", "exists"], [77, 3, 1, "", "from_config"], [77, 3, 1, "", "load"], [77, 3, 1, "", "release"], [77, 3, 1, "", "resolve_load_version"], [77, 3, 1, "", "resolve_save_version"], [77, 3, 1, "", "save"]], "kedro.extras.datasets.networkx": [[78, 1, 1, "", "GMLDataSet"], [79, 1, 1, "", "GraphMLDataSet"], [80, 1, 1, "", "JSONDataSet"]], "kedro.extras.datasets.networkx.GMLDataSet": [[78, 2, 1, "", "DEFAULT_LOAD_ARGS"], [78, 2, 1, "", "DEFAULT_SAVE_ARGS"], [78, 3, 1, "", "__init__"], [78, 3, 1, "", "exists"], [78, 3, 1, "", "from_config"], [78, 3, 1, "", "load"], [78, 3, 1, "", "release"], [78, 3, 1, "", "resolve_load_version"], [78, 3, 1, "", "resolve_save_version"], [78, 3, 1, "", "save"]], "kedro.extras.datasets.networkx.GraphMLDataSet": [[79, 2, 1, "", "DEFAULT_LOAD_ARGS"], [79, 2, 1, "", "DEFAULT_SAVE_ARGS"], [79, 3, 1, "", "__init__"], [79, 3, 1, "", "exists"], [79, 3, 1, "", "from_config"], [79, 3, 1, "", "load"], [79, 3, 1, "", "release"], [79, 3, 1, "", "resolve_load_version"], [79, 3, 1, "", "resolve_save_version"], [79, 3, 1, "", "save"]], "kedro.extras.datasets.networkx.JSONDataSet": [[80, 2, 1, "", "DEFAULT_LOAD_ARGS"], [80, 2, 1, "", "DEFAULT_SAVE_ARGS"], [80, 3, 1, "", "__init__"], [80, 3, 1, "", "exists"], [80, 3, 1, "", "from_config"], [80, 3, 1, "", "load"], [80, 3, 1, "", "release"], [80, 3, 1, "", "resolve_load_version"], [80, 3, 1, "", "resolve_save_version"], [80, 3, 1, "", "save"]], "kedro.extras.datasets.pandas": [[81, 1, 1, "", "CSVDataSet"], [82, 1, 1, "", "ExcelDataSet"], [83, 1, 1, "", "FeatherDataSet"], [84, 1, 1, "", "GBQQueryDataSet"], [85, 1, 1, "", "GBQTableDataSet"], [86, 1, 1, "", "GenericDataSet"], [87, 1, 1, "", "HDFDataSet"], [88, 1, 1, "", "JSONDataSet"], [89, 1, 1, "", "ParquetDataSet"], [90, 1, 1, "", "SQLQueryDataSet"], [91, 1, 1, "", "SQLTableDataSet"], [92, 1, 1, "", "XMLDataSet"]], "kedro.extras.datasets.pandas.CSVDataSet": [[81, 2, 1, "", "DEFAULT_LOAD_ARGS"], [81, 2, 1, "", "DEFAULT_SAVE_ARGS"], [81, 3, 1, "", "__init__"], [81, 3, 1, "", "exists"], [81, 3, 1, "", "from_config"], [81, 3, 1, "", "load"], [81, 3, 1, "", "release"], [81, 3, 1, "", "resolve_load_version"], [81, 3, 1, "", "resolve_save_version"], [81, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.ExcelDataSet": [[82, 2, 1, "", "DEFAULT_LOAD_ARGS"], [82, 2, 1, "", "DEFAULT_SAVE_ARGS"], [82, 3, 1, "", "__init__"], [82, 3, 1, "", "exists"], [82, 3, 1, "", "from_config"], [82, 3, 1, "", "load"], [82, 3, 1, "", "release"], [82, 3, 1, "", "resolve_load_version"], [82, 3, 1, "", "resolve_save_version"], [82, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.FeatherDataSet": [[83, 2, 1, "", "DEFAULT_LOAD_ARGS"], [83, 2, 1, "", "DEFAULT_SAVE_ARGS"], [83, 3, 1, "", "__init__"], [83, 3, 1, "", "exists"], [83, 3, 1, "", "from_config"], [83, 3, 1, "", "load"], [83, 3, 1, "", "release"], [83, 3, 1, "", "resolve_load_version"], [83, 3, 1, "", "resolve_save_version"], [83, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.GBQQueryDataSet": [[84, 2, 1, "", "DEFAULT_LOAD_ARGS"], [84, 3, 1, "", "__init__"], [84, 3, 1, "", "exists"], [84, 3, 1, "", "from_config"], [84, 3, 1, "", "load"], [84, 3, 1, "", "release"], [84, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.GBQTableDataSet": [[85, 2, 1, "", "DEFAULT_LOAD_ARGS"], [85, 2, 1, "", "DEFAULT_SAVE_ARGS"], [85, 3, 1, "", "__init__"], [85, 3, 1, "", "exists"], [85, 3, 1, "", "from_config"], [85, 3, 1, "", "load"], [85, 3, 1, "", "release"], [85, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.GenericDataSet": [[86, 2, 1, "", "DEFAULT_LOAD_ARGS"], [86, 2, 1, "", "DEFAULT_SAVE_ARGS"], [86, 3, 1, "", "__init__"], [86, 3, 1, "", "exists"], [86, 3, 1, "", "from_config"], [86, 3, 1, "", "load"], [86, 3, 1, "", "release"], [86, 3, 1, "", "resolve_load_version"], [86, 3, 1, "", "resolve_save_version"], [86, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.HDFDataSet": [[87, 2, 1, "", "DEFAULT_LOAD_ARGS"], [87, 2, 1, "", "DEFAULT_SAVE_ARGS"], [87, 3, 1, "", "__init__"], [87, 3, 1, "", "exists"], [87, 3, 1, "", "from_config"], [87, 3, 1, "", "load"], [87, 3, 1, "", "release"], [87, 3, 1, "", "resolve_load_version"], [87, 3, 1, "", "resolve_save_version"], [87, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.JSONDataSet": [[88, 2, 1, "", "DEFAULT_LOAD_ARGS"], [88, 2, 1, "", "DEFAULT_SAVE_ARGS"], [88, 3, 1, "", "__init__"], [88, 3, 1, "", "exists"], [88, 3, 1, "", "from_config"], [88, 3, 1, "", "load"], [88, 3, 1, "", "release"], [88, 3, 1, "", "resolve_load_version"], [88, 3, 1, "", "resolve_save_version"], [88, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.ParquetDataSet": [[89, 2, 1, "", "DEFAULT_LOAD_ARGS"], [89, 2, 1, "", "DEFAULT_SAVE_ARGS"], [89, 3, 1, "", "__init__"], [89, 3, 1, "", "exists"], [89, 3, 1, "", "from_config"], [89, 3, 1, "", "load"], [89, 3, 1, "", "release"], [89, 3, 1, "", "resolve_load_version"], [89, 3, 1, "", "resolve_save_version"], [89, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.SQLQueryDataSet": [[90, 3, 1, "", "__init__"], [90, 3, 1, "", "create_connection"], [90, 2, 1, "", "engines"], [90, 3, 1, "", "exists"], [90, 3, 1, "", "from_config"], [90, 3, 1, "", "load"], [90, 3, 1, "", "release"], [90, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.SQLTableDataSet": [[91, 2, 1, "", "DEFAULT_LOAD_ARGS"], [91, 2, 1, "", "DEFAULT_SAVE_ARGS"], [91, 3, 1, "", "__init__"], [91, 3, 1, "", "create_connection"], [91, 2, 1, "", "engines"], [91, 3, 1, "", "exists"], [91, 3, 1, "", "from_config"], [91, 3, 1, "", "load"], [91, 3, 1, "", "release"], [91, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.XMLDataSet": [[92, 2, 1, "", "DEFAULT_LOAD_ARGS"], [92, 2, 1, "", "DEFAULT_SAVE_ARGS"], [92, 3, 1, "", "__init__"], [92, 3, 1, "", "exists"], [92, 3, 1, "", "from_config"], [92, 3, 1, "", "load"], [92, 3, 1, "", "release"], [92, 3, 1, "", "resolve_load_version"], [92, 3, 1, "", "resolve_save_version"], [92, 3, 1, "", "save"]], "kedro.extras.datasets.pickle": [[93, 1, 1, "", "PickleDataSet"]], "kedro.extras.datasets.pickle.PickleDataSet": [[93, 2, 1, "", "DEFAULT_LOAD_ARGS"], [93, 2, 1, "", "DEFAULT_SAVE_ARGS"], [93, 3, 1, "", "__init__"], [93, 3, 1, "", "exists"], [93, 3, 1, "", "from_config"], [93, 3, 1, "", "load"], [93, 3, 1, "", "release"], [93, 3, 1, "", "resolve_load_version"], [93, 3, 1, "", "resolve_save_version"], [93, 3, 1, "", "save"]], "kedro.extras.datasets.pillow": [[94, 1, 1, "", "ImageDataSet"]], "kedro.extras.datasets.pillow.ImageDataSet": [[94, 2, 1, "", "DEFAULT_SAVE_ARGS"], [94, 3, 1, "", "__init__"], [94, 3, 1, "", "exists"], [94, 3, 1, "", "from_config"], [94, 3, 1, "", "load"], [94, 3, 1, "", "release"], [94, 3, 1, "", "resolve_load_version"], [94, 3, 1, "", "resolve_save_version"], [94, 3, 1, "", "save"]], "kedro.extras.datasets.plotly": [[95, 1, 1, "", "JSONDataSet"], [96, 1, 1, "", "PlotlyDataSet"]], "kedro.extras.datasets.plotly.JSONDataSet": [[95, 2, 1, "", "DEFAULT_LOAD_ARGS"], [95, 2, 1, "", "DEFAULT_SAVE_ARGS"], [95, 3, 1, "", "__init__"], [95, 3, 1, "", "exists"], [95, 3, 1, "", "from_config"], [95, 3, 1, "", "load"], [95, 3, 1, "", "release"], [95, 3, 1, "", "resolve_load_version"], [95, 3, 1, "", "resolve_save_version"], [95, 3, 1, "", "save"]], "kedro.extras.datasets.plotly.PlotlyDataSet": [[96, 2, 1, "", "DEFAULT_LOAD_ARGS"], [96, 2, 1, "", "DEFAULT_SAVE_ARGS"], [96, 3, 1, "", "__init__"], [96, 3, 1, "", "exists"], [96, 3, 1, "", "from_config"], [96, 3, 1, "", "load"], [96, 3, 1, "", "release"], [96, 3, 1, "", "resolve_load_version"], [96, 3, 1, "", "resolve_save_version"], [96, 3, 1, "", "save"]], "kedro.extras.datasets.redis": [[97, 1, 1, "", "PickleDataSet"]], "kedro.extras.datasets.redis.PickleDataSet": [[97, 2, 1, "", "DEFAULT_LOAD_ARGS"], [97, 2, 1, "", "DEFAULT_REDIS_URL"], [97, 2, 1, "", "DEFAULT_SAVE_ARGS"], [97, 3, 1, "", "__init__"], [97, 3, 1, "", "exists"], [97, 3, 1, "", "from_config"], [97, 3, 1, "", "load"], [97, 3, 1, "", "release"], [97, 3, 1, "", "save"]], "kedro.extras.datasets.spark": [[98, 1, 1, "", "DeltaTableDataSet"], [99, 1, 1, "", "SparkDataSet"], [100, 1, 1, "", "SparkHiveDataSet"], [101, 1, 1, "", "SparkJDBCDataSet"]], "kedro.extras.datasets.spark.DeltaTableDataSet": [[98, 3, 1, "", "__init__"], [98, 3, 1, "", "exists"], [98, 3, 1, "", "from_config"], [98, 3, 1, "", "load"], [98, 3, 1, "", "release"], [98, 3, 1, "", "save"]], "kedro.extras.datasets.spark.SparkDataSet": [[99, 2, 1, "", "DEFAULT_LOAD_ARGS"], [99, 2, 1, "", "DEFAULT_SAVE_ARGS"], [99, 3, 1, "", "__init__"], [99, 3, 1, "", "exists"], [99, 3, 1, "", "from_config"], [99, 3, 1, "", "load"], [99, 3, 1, "", "release"], [99, 3, 1, "", "resolve_load_version"], [99, 3, 1, "", "resolve_save_version"], [99, 3, 1, "", "save"]], "kedro.extras.datasets.spark.SparkHiveDataSet": [[100, 2, 1, "", "DEFAULT_SAVE_ARGS"], [100, 3, 1, "", "__init__"], [100, 3, 1, "", "exists"], [100, 3, 1, "", "from_config"], [100, 3, 1, "", "load"], [100, 3, 1, "", "release"], [100, 3, 1, "", "save"]], "kedro.extras.datasets.spark.SparkJDBCDataSet": [[101, 2, 1, "", "DEFAULT_LOAD_ARGS"], [101, 2, 1, "", "DEFAULT_SAVE_ARGS"], [101, 3, 1, "", "__init__"], [101, 3, 1, "", "exists"], [101, 3, 1, "", "from_config"], [101, 3, 1, "", "load"], [101, 3, 1, "", "release"], [101, 3, 1, "", "save"]], "kedro.extras.datasets.svmlight": [[102, 1, 1, "", "SVMLightDataSet"]], "kedro.extras.datasets.svmlight.SVMLightDataSet": [[102, 2, 1, "", "DEFAULT_LOAD_ARGS"], [102, 2, 1, "", "DEFAULT_SAVE_ARGS"], [102, 3, 1, "", "exists"], [102, 3, 1, "", "from_config"], [102, 3, 1, "", "load"], [102, 3, 1, "", "release"], [102, 3, 1, "", "resolve_load_version"], [102, 3, 1, "", "resolve_save_version"], [102, 3, 1, "", "save"]], "kedro.extras.datasets.tensorflow": [[103, 1, 1, "", "TensorFlowModelDataset"]], "kedro.extras.datasets.tensorflow.TensorFlowModelDataset": [[103, 2, 1, "", "DEFAULT_LOAD_ARGS"], [103, 2, 1, "", "DEFAULT_SAVE_ARGS"], [103, 3, 1, "", "__init__"], [103, 3, 1, "", "exists"], [103, 3, 1, "", "from_config"], [103, 3, 1, "", "load"], [103, 3, 1, "", "release"], [103, 3, 1, "", "resolve_load_version"], [103, 3, 1, "", "resolve_save_version"], [103, 3, 1, "", "save"]], "kedro.extras.datasets.text": [[104, 1, 1, "", "TextDataSet"]], "kedro.extras.datasets.text.TextDataSet": [[104, 3, 1, "", "__init__"], [104, 3, 1, "", "exists"], [104, 3, 1, "", "from_config"], [104, 3, 1, "", "load"], [104, 3, 1, "", "release"], [104, 3, 1, "", "resolve_load_version"], [104, 3, 1, "", "resolve_save_version"], [104, 3, 1, "", "save"]], "kedro.extras.datasets.tracking": [[105, 1, 1, "", "JSONDataSet"], [106, 1, 1, "", "MetricsDataSet"]], "kedro.extras.datasets.tracking.JSONDataSet": [[105, 2, 1, "", "DEFAULT_SAVE_ARGS"], [105, 3, 1, "", "__init__"], [105, 3, 1, "", "exists"], [105, 3, 1, "", "from_config"], [105, 3, 1, "", "load"], [105, 3, 1, "", "release"], [105, 3, 1, "", "resolve_load_version"], [105, 3, 1, "", "resolve_save_version"], [105, 3, 1, "", "save"], [105, 2, 1, "", "versioned"]], "kedro.extras.datasets.tracking.MetricsDataSet": [[106, 2, 1, "", "DEFAULT_SAVE_ARGS"], [106, 3, 1, "", "__init__"], [106, 3, 1, "", "exists"], [106, 3, 1, "", "from_config"], [106, 3, 1, "", "load"], [106, 3, 1, "", "release"], [106, 3, 1, "", "resolve_load_version"], [106, 3, 1, "", "resolve_save_version"], [106, 3, 1, "", "save"], [106, 2, 1, "", "versioned"]], "kedro.extras.datasets.yaml": [[107, 1, 1, "", "YAMLDataSet"]], "kedro.extras.datasets.yaml.YAMLDataSet": [[107, 2, 1, "", "DEFAULT_SAVE_ARGS"], [107, 3, 1, "", "__init__"], [107, 3, 1, "", "exists"], [107, 3, 1, "", "from_config"], [107, 3, 1, "", "load"], [107, 3, 1, "", "release"], [107, 3, 1, "", "resolve_load_version"], [107, 3, 1, "", "resolve_save_version"], [107, 3, 1, "", "save"]], "kedro.extras.extensions": [[109, 0, 0, "-", "ipython"]], "kedro.extras.logging": [[111, 0, 0, "-", "color_logger"]], "kedro.extras.logging.color_logger": [[112, 1, 1, "", "ColorHandler"]], "kedro.framework": [[114, 0, 0, "-", "cli"], [146, 0, 0, "-", "context"], [149, 0, 0, "-", "hooks"], [158, 0, 0, "-", "project"], [163, 0, 0, "-", "session"], [171, 0, 0, "-", "startup"]], "kedro.framework.cli": [[115, 0, 0, "-", "catalog"], [116, 0, 0, "-", "cli"], [119, 0, 0, "-", "hooks"], [126, 0, 0, "-", "jupyter"], [128, 0, 0, "-", "micropkg"], [130, 0, 0, "-", "pipeline"], [132, 0, 0, "-", "project"], [133, 0, 0, "-", "registry"], [134, 0, 0, "-", "starters"], [136, 0, 0, "-", "utils"]], "kedro.framework.cli.cli": [[117, 1, 1, "", "KedroCLI"], [118, 5, 1, "", "main"]], "kedro.framework.cli.hooks": [[120, 0, 0, "-", "manager"], [123, 0, 0, "-", "markers"], [124, 0, 0, "-", "specs"]], "kedro.framework.cli.hooks.manager": [[121, 1, 1, "", "CLIHooksManager"], [122, 5, 1, "", "get_cli_hook_manager"]], "kedro.framework.cli.hooks.specs": [[125, 1, 1, "", "CLICommandSpecs"]], "kedro.framework.cli.hooks.specs.CLICommandSpecs": [[125, 3, 1, "", "after_command_run"], [125, 3, 1, "", "before_command_run"]], "kedro.framework.cli.jupyter": [[127, 1, 1, "", "JupyterCommandGroup"]], "kedro.framework.cli.jupyter.JupyterCommandGroup": [[127, 3, 1, "", "list_commands"]], "kedro.framework.cli.micropkg": [[129, 5, 1, "", "safe_extract"]], "kedro.framework.cli.pipeline": [[131, 1, 1, "", "PipelineArtifacts"]], "kedro.framework.cli.pipeline.PipelineArtifacts": [[131, 3, 1, "", "count"], [131, 3, 1, "", "index"], [131, 2, 1, "", "pipeline_conf"], [131, 2, 1, "", "pipeline_dir"], [131, 2, 1, "", "pipeline_tests"]], "kedro.framework.cli.starters": [[135, 1, 1, "", "KedroStarterSpec"]], "kedro.framework.cli.starters.KedroStarterSpec": [[135, 2, 1, "", "alias"], [135, 2, 1, "", "directory"], [135, 2, 1, "", "origin"], [135, 2, 1, "", "template_path"]], "kedro.framework.cli.utils": [[137, 1, 1, "", "CommandCollection"], [138, 1, 1, "", "KedroCliError"], [139, 5, 1, "", "command_with_verbosity"], [140, 5, 1, "", "env_option"], [141, 5, 1, "", "find_stylesheets"], [142, 5, 1, "", "forward_command"], [143, 5, 1, "", "get_pkg_version"], [144, 5, 1, "", "python_call"], [145, 5, 1, "", "split_string"]], "kedro.framework.cli.utils.KedroCliError": [[138, 2, 1, "", "VERBOSE_ERROR"], [138, 2, 1, "", "args"], [138, 2, 1, "", "exit_code"], [138, 3, 1, "", "format_message"], [138, 3, 1, "", "show"], [138, 3, 1, "", "with_traceback"]], "kedro.framework.context": [[147, 1, 1, "", "KedroContext"], [148, 1, 1, "", "KedroContextError"]], "kedro.framework.context.KedroContext": [[147, 3, 1, "", "__init__"], [147, 4, 1, "", "catalog"], [147, 4, 1, "", "config_loader"], [147, 4, 1, "", "env"], [147, 4, 1, "", "params"], [147, 4, 1, "", "project_path"]], "kedro.framework.context.KedroContextError": [[148, 2, 1, "", "args"], [148, 3, 1, "", "with_traceback"]], "kedro.framework.hooks": [[150, 0, 0, "-", "manager"], [151, 0, 0, "-", "markers"], [152, 0, 0, "-", "specs"]], "kedro.framework.hooks.specs": [[153, 1, 1, "", "DataCatalogSpecs"], [154, 1, 1, "", "DatasetSpecs"], [155, 1, 1, "", "KedroContextSpecs"], [156, 1, 1, "", "NodeSpecs"], [157, 1, 1, "", "PipelineSpecs"]], "kedro.framework.hooks.specs.DataCatalogSpecs": [[153, 3, 1, "", "after_catalog_created"]], "kedro.framework.hooks.specs.DatasetSpecs": [[154, 3, 1, "", "after_dataset_loaded"], [154, 3, 1, "", "after_dataset_saved"], [154, 3, 1, "", "before_dataset_loaded"], [154, 3, 1, "", "before_dataset_saved"]], "kedro.framework.hooks.specs.KedroContextSpecs": [[155, 3, 1, "", "after_context_created"]], "kedro.framework.hooks.specs.NodeSpecs": [[156, 3, 1, "", "after_node_run"], [156, 3, 1, "", "before_node_run"], [156, 3, 1, "", "on_node_error"]], "kedro.framework.hooks.specs.PipelineSpecs": [[157, 3, 1, "", "after_pipeline_run"], [157, 3, 1, "", "before_pipeline_run"], [157, 3, 1, "", "on_pipeline_error"]], "kedro.framework.project": [[159, 5, 1, "", "configure_logging"], [160, 5, 1, "", "configure_project"], [161, 5, 1, "", "find_pipelines"], [162, 5, 1, "", "validate_settings"]], "kedro.framework.session": [[164, 0, 0, "-", "session"], [167, 0, 0, "-", "shelvestore"], [169, 0, 0, "-", "store"]], "kedro.framework.session.session": [[165, 1, 1, "", "KedroSession"], [166, 1, 1, "", "KedroSessionError"]], "kedro.framework.session.session.KedroSession": [[165, 3, 1, "", "close"], [165, 3, 1, "", "create"], [165, 3, 1, "", "load_context"], [165, 3, 1, "", "run"], [165, 4, 1, "", "store"]], "kedro.framework.session.session.KedroSessionError": [[166, 2, 1, "", "args"], [166, 3, 1, "", "with_traceback"]], "kedro.framework.session.shelvestore": [[168, 1, 1, "", "ShelveStore"]], "kedro.framework.session.store": [[170, 1, 1, "", "BaseSessionStore"]], "kedro.framework.startup": [[172, 1, 1, "", "ProjectMetadata"], [173, 5, 1, "", "bootstrap_project"]], "kedro.framework.startup.ProjectMetadata": [[172, 2, 1, "", "config_file"], [172, 3, 1, "", "count"], [172, 3, 1, "", "index"], [172, 2, 1, "", "kedro_init_version"], [172, 2, 1, "", "package_name"], [172, 2, 1, "", "project_name"], [172, 2, 1, "", "project_path"], [172, 2, 1, "", "project_version"], [172, 2, 1, "", "source_dir"]], "kedro.io": [[175, 1, 1, "", "AbstractDataSet"], [176, 1, 1, "", "AbstractVersionedDataSet"], [177, 2, 1, "", "CachedDataSet"], [178, 1, 1, "", "DataCatalog"], [179, 2, 1, "", "DataSetAlreadyExistsError"], [180, 2, 1, "", "DataSetError"], [181, 2, 1, "", "DataSetNotFoundError"], [182, 2, 1, "", "IncrementalDataSet"], [183, 2, 1, "", "LambdaDataSet"], [184, 2, 1, "", "MemoryDataSet"], [185, 2, 1, "", "PartitionedDataSet"], [186, 1, 1, "", "Version"]], "kedro.io.AbstractDataSet": [[175, 3, 1, "", "exists"], [175, 3, 1, "", "from_config"], [175, 3, 1, "", "load"], [175, 3, 1, "", "release"], [175, 3, 1, "", "save"]], "kedro.io.AbstractVersionedDataSet": [[176, 3, 1, "", "__init__"], [176, 3, 1, "", "exists"], [176, 3, 1, "", "from_config"], [176, 3, 1, "", "load"], [176, 3, 1, "", "release"], [176, 3, 1, "", "resolve_load_version"], [176, 3, 1, "", "resolve_save_version"], [176, 3, 1, "", "save"]], "kedro.io.DataCatalog": [[178, 3, 1, "", "__init__"], [178, 3, 1, "", "add"], [178, 3, 1, "", "add_all"], [178, 3, 1, "", "add_feed_dict"], [178, 3, 1, "", "confirm"], [178, 3, 1, "", "exists"], [178, 3, 1, "", "from_config"], [178, 3, 1, "", "list"], [178, 3, 1, "", "load"], [178, 3, 1, "", "release"], [178, 3, 1, "", "save"], [178, 3, 1, "", "shallow_copy"]], "kedro.io.Version": [[186, 3, 1, "", "count"], [186, 3, 1, "", "index"], [186, 2, 1, "", "load"], [186, 2, 1, "", "save"]], "kedro.ipython": [[188, 5, 1, "", "load_ipython_extension"], [189, 5, 1, "", "magic_reload_kedro"], [190, 5, 1, "", "reload_kedro"]], "kedro.logging": [[192, 1, 1, "", "RichHandler"]], "kedro.pipeline": [[194, 1, 1, "", "Pipeline"], [197, 5, 1, "", "node"]], "kedro.pipeline.Pipeline": [[194, 3, 1, "", "__init__"], [194, 3, 1, "", "all_inputs"], [194, 3, 1, "", "all_outputs"], [194, 3, 1, "", "data_sets"], [194, 3, 1, "", "describe"], [194, 3, 1, "", "filter"], [194, 3, 1, "", "from_inputs"], [194, 3, 1, "", "from_nodes"], [194, 4, 1, "", "grouped_nodes"], [194, 3, 1, "", "inputs"], [194, 4, 1, "", "node_dependencies"], [194, 4, 1, "", "nodes"], [194, 3, 1, "", "only_nodes"], [194, 3, 1, "", "only_nodes_with_inputs"], [194, 3, 1, "", "only_nodes_with_namespace"], [194, 3, 1, "", "only_nodes_with_outputs"], [194, 3, 1, "", "only_nodes_with_tags"], [194, 3, 1, "", "outputs"], [194, 3, 1, "", "tag"], [194, 3, 1, "", "to_json"], [194, 3, 1, "", "to_nodes"], [194, 3, 1, "", "to_outputs"]], "kedro.pipeline.modular_pipeline": [[195, 1, 1, "", "ModularPipelineError"], [196, 5, 1, "", "pipeline"]], "kedro.pipeline.modular_pipeline.ModularPipelineError": [[195, 2, 1, "", "args"], [195, 3, 1, "", "with_traceback"]], "kedro.pipeline.node": [[198, 1, 1, "", "Node"]], "kedro.pipeline.node.Node": [[198, 3, 1, "", "__init__"], [198, 4, 1, "", "confirms"], [198, 4, 1, "", "func"], [198, 4, 1, "", "inputs"], [198, 4, 1, "", "name"], [198, 4, 1, "", "namespace"], [198, 4, 1, "", "outputs"], [198, 3, 1, "", "run"], [198, 4, 1, "", "short_name"], [198, 3, 1, "", "tag"], [198, 4, 1, "", "tags"]], "kedro.runner": [[200, 1, 1, "", "AbstractRunner"], [201, 1, 1, "", "ParallelRunner"], [202, 1, 1, "", "SequentialRunner"], [203, 1, 1, "", "ThreadRunner"], [204, 5, 1, "", "run_node"]], "kedro.runner.AbstractRunner": [[200, 3, 1, "", "__init__"], [200, 3, 1, "", "create_default_data_set"], [200, 3, 1, "", "run"], [200, 3, 1, "", "run_only_missing"]], "kedro.runner.ParallelRunner": [[201, 3, 1, "", "__init__"], [201, 3, 1, "", "create_default_data_set"], [201, 3, 1, "", "run"], [201, 3, 1, "", "run_only_missing"]], "kedro.runner.SequentialRunner": [[202, 3, 1, "", "__init__"], [202, 3, 1, "", "create_default_data_set"], [202, 3, 1, "", "run"], [202, 3, 1, "", "run_only_missing"]], "kedro.runner.ThreadRunner": [[203, 3, 1, "", "__init__"], [203, 3, 1, "", "create_default_data_set"], [203, 3, 1, "", "run"], [203, 3, 1, "", "run_only_missing"]], "kedro.utils": [[206, 5, 1, "", "load_obj"]], "kedro_datasets.api": [[208, 1, 1, "", "APIDataSet"]], "kedro_datasets.api.APIDataSet": [[208, 2, 1, "", "DEFAULT_SAVE_ARGS"], [208, 3, 1, "", "__init__"], [208, 3, 1, "", "exists"], [208, 3, 1, "", "from_config"], [208, 3, 1, "", "load"], [208, 3, 1, "", "release"], [208, 3, 1, "", "save"]], "kedro_datasets.biosequence": [[209, 1, 1, "", "BioSequenceDataSet"]], "kedro_datasets.biosequence.BioSequenceDataSet": [[209, 2, 1, "", "DEFAULT_LOAD_ARGS"], [209, 2, 1, "", "DEFAULT_SAVE_ARGS"], [209, 3, 1, "", "__init__"], [209, 3, 1, "", "exists"], [209, 3, 1, "", "from_config"], [209, 3, 1, "", "invalidate_cache"], [209, 3, 1, "", "load"], [209, 3, 1, "", "release"], [209, 3, 1, "", "save"]], "kedro_datasets.dask": [[210, 1, 1, "", "ParquetDataSet"]], "kedro_datasets.dask.ParquetDataSet": [[210, 2, 1, "", "DEFAULT_LOAD_ARGS"], [210, 2, 1, "", "DEFAULT_SAVE_ARGS"], [210, 3, 1, "", "__init__"], [210, 3, 1, "", "exists"], [210, 3, 1, "", "from_config"], [210, 4, 1, "", "fs_args"], [210, 3, 1, "", "load"], [210, 3, 1, "", "release"], [210, 3, 1, "", "save"]], "kedro_datasets.databricks": [[211, 1, 1, "", "ManagedTableDataSet"]], "kedro_datasets.databricks.ManagedTableDataSet": [[211, 3, 1, "", "__init__"], [211, 3, 1, "", "exists"], [211, 3, 1, "", "from_config"], [211, 3, 1, "", "load"], [211, 3, 1, "", "release"], [211, 3, 1, "", "resolve_load_version"], [211, 3, 1, "", "resolve_save_version"], [211, 3, 1, "", "save"]], "kedro_datasets.email": [[212, 1, 1, "", "EmailMessageDataSet"]], "kedro_datasets.email.EmailMessageDataSet": [[212, 2, 1, "", "DEFAULT_LOAD_ARGS"], [212, 2, 1, "", "DEFAULT_SAVE_ARGS"], [212, 3, 1, "", "__init__"], [212, 3, 1, "", "exists"], [212, 3, 1, "", "from_config"], [212, 3, 1, "", "load"], [212, 3, 1, "", "release"], [212, 3, 1, "", "resolve_load_version"], [212, 3, 1, "", "resolve_save_version"], [212, 3, 1, "", "save"]], "kedro_datasets.geopandas": [[213, 1, 1, "", "GeoJSONDataSet"]], "kedro_datasets.geopandas.GeoJSONDataSet": [[213, 2, 1, "", "DEFAULT_LOAD_ARGS"], [213, 2, 1, "", "DEFAULT_SAVE_ARGS"], [213, 3, 1, "", "__init__"], [213, 3, 1, "", "exists"], [213, 3, 1, "", "from_config"], [213, 3, 1, "", "invalidate_cache"], [213, 3, 1, "", "load"], [213, 3, 1, "", "release"], [213, 3, 1, "", "resolve_load_version"], [213, 3, 1, "", "resolve_save_version"], [213, 3, 1, "", "save"]], "kedro_datasets.holoviews": [[214, 1, 1, "", "HoloviewsWriter"]], "kedro_datasets.holoviews.HoloviewsWriter": [[214, 2, 1, "", "DEFAULT_SAVE_ARGS"], [214, 3, 1, "", "__init__"], [214, 3, 1, "", "exists"], [214, 3, 1, "", "from_config"], [214, 3, 1, "", "load"], [214, 3, 1, "", "release"], [214, 3, 1, "", "resolve_load_version"], [214, 3, 1, "", "resolve_save_version"], [214, 3, 1, "", "save"]], "kedro_datasets.json": [[215, 1, 1, "", "JSONDataSet"]], "kedro_datasets.json.JSONDataSet": [[215, 2, 1, "", "DEFAULT_SAVE_ARGS"], [215, 3, 1, "", "__init__"], [215, 3, 1, "", "exists"], [215, 3, 1, "", "from_config"], [215, 3, 1, "", "load"], [215, 3, 1, "", "release"], [215, 3, 1, "", "resolve_load_version"], [215, 3, 1, "", "resolve_save_version"], [215, 3, 1, "", "save"]], "kedro_datasets.matplotlib": [[216, 1, 1, "", "MatplotlibWriter"]], "kedro_datasets.matplotlib.MatplotlibWriter": [[216, 2, 1, "", "DEFAULT_SAVE_ARGS"], [216, 3, 1, "", "__init__"], [216, 3, 1, "", "exists"], [216, 3, 1, "", "from_config"], [216, 3, 1, "", "load"], [216, 3, 1, "", "release"], [216, 3, 1, "", "resolve_load_version"], [216, 3, 1, "", "resolve_save_version"], [216, 3, 1, "", "save"]], "kedro_datasets.networkx": [[217, 1, 1, "", "GMLDataSet"], [218, 1, 1, "", "GraphMLDataSet"], [219, 1, 1, "", "JSONDataSet"]], "kedro_datasets.networkx.GMLDataSet": [[217, 2, 1, "", "DEFAULT_LOAD_ARGS"], [217, 2, 1, "", "DEFAULT_SAVE_ARGS"], [217, 3, 1, "", "__init__"], [217, 3, 1, "", "exists"], [217, 3, 1, "", "from_config"], [217, 3, 1, "", "load"], [217, 3, 1, "", "release"], [217, 3, 1, "", "resolve_load_version"], [217, 3, 1, "", "resolve_save_version"], [217, 3, 1, "", "save"]], "kedro_datasets.networkx.GraphMLDataSet": [[218, 2, 1, "", "DEFAULT_LOAD_ARGS"], [218, 2, 1, "", "DEFAULT_SAVE_ARGS"], [218, 3, 1, "", "__init__"], [218, 3, 1, "", "exists"], [218, 3, 1, "", "from_config"], [218, 3, 1, "", "load"], [218, 3, 1, "", "release"], [218, 3, 1, "", "resolve_load_version"], [218, 3, 1, "", "resolve_save_version"], [218, 3, 1, "", "save"]], "kedro_datasets.networkx.JSONDataSet": [[219, 2, 1, "", "DEFAULT_LOAD_ARGS"], [219, 2, 1, "", "DEFAULT_SAVE_ARGS"], [219, 3, 1, "", "__init__"], [219, 3, 1, "", "exists"], [219, 3, 1, "", "from_config"], [219, 3, 1, "", "load"], [219, 3, 1, "", "release"], [219, 3, 1, "", "resolve_load_version"], [219, 3, 1, "", "resolve_save_version"], [219, 3, 1, "", "save"]], "kedro_datasets.pandas": [[220, 1, 1, "", "CSVDataSet"], [221, 1, 1, "", "DeltaTableDataSet"], [222, 1, 1, "", "ExcelDataSet"], [223, 1, 1, "", "FeatherDataSet"], [224, 1, 1, "", "GBQQueryDataSet"], [225, 1, 1, "", "GBQTableDataSet"], [226, 1, 1, "", "GenericDataSet"], [227, 1, 1, "", "HDFDataSet"], [228, 1, 1, "", "JSONDataSet"], [229, 1, 1, "", "ParquetDataSet"], [230, 1, 1, "", "SQLQueryDataSet"], [231, 1, 1, "", "SQLTableDataSet"], [232, 1, 1, "", "XMLDataSet"]], "kedro_datasets.pandas.CSVDataSet": [[220, 2, 1, "", "DEFAULT_LOAD_ARGS"], [220, 2, 1, "", "DEFAULT_SAVE_ARGS"], [220, 3, 1, "", "__init__"], [220, 3, 1, "", "exists"], [220, 3, 1, "", "from_config"], [220, 3, 1, "", "load"], [220, 3, 1, "", "release"], [220, 3, 1, "", "resolve_load_version"], [220, 3, 1, "", "resolve_save_version"], [220, 3, 1, "", "save"]], "kedro_datasets.pandas.DeltaTableDataSet": [[221, 2, 1, "", "ACCEPTED_WRITE_MODES"], [221, 2, 1, "", "DEFAULT_LOAD_ARGS"], [221, 2, 1, "", "DEFAULT_SAVE_ARGS"], [221, 2, 1, "", "DEFAULT_WRITE_MODE"], [221, 3, 1, "", "__init__"], [221, 3, 1, "", "exists"], [221, 3, 1, "", "from_config"], [221, 4, 1, "", "fs_args"], [221, 3, 1, "", "get_loaded_version"], [221, 4, 1, "", "history"], [221, 3, 1, "", "load"], [221, 4, 1, "", "metadata"], [221, 3, 1, "", "release"], [221, 3, 1, "", "save"], [221, 4, 1, "", "schema"]], "kedro_datasets.pandas.ExcelDataSet": [[222, 2, 1, "", "DEFAULT_LOAD_ARGS"], [222, 2, 1, "", "DEFAULT_SAVE_ARGS"], [222, 3, 1, "", "__init__"], [222, 3, 1, "", "exists"], [222, 3, 1, "", "from_config"], [222, 3, 1, "", "load"], [222, 3, 1, "", "release"], [222, 3, 1, "", "resolve_load_version"], [222, 3, 1, "", "resolve_save_version"], [222, 3, 1, "", "save"]], "kedro_datasets.pandas.FeatherDataSet": [[223, 2, 1, "", "DEFAULT_LOAD_ARGS"], [223, 2, 1, "", "DEFAULT_SAVE_ARGS"], [223, 3, 1, "", "__init__"], [223, 3, 1, "", "exists"], [223, 3, 1, "", "from_config"], [223, 3, 1, "", "load"], [223, 3, 1, "", "release"], [223, 3, 1, "", "resolve_load_version"], [223, 3, 1, "", "resolve_save_version"], [223, 3, 1, "", "save"]], "kedro_datasets.pandas.GBQQueryDataSet": [[224, 2, 1, "", "DEFAULT_LOAD_ARGS"], [224, 3, 1, "", "__init__"], [224, 3, 1, "", "exists"], [224, 3, 1, "", "from_config"], [224, 3, 1, "", "load"], [224, 3, 1, "", "release"], [224, 3, 1, "", "save"]], "kedro_datasets.pandas.GBQTableDataSet": [[225, 2, 1, "", "DEFAULT_LOAD_ARGS"], [225, 2, 1, "", "DEFAULT_SAVE_ARGS"], [225, 3, 1, "", "__init__"], [225, 3, 1, "", "exists"], [225, 3, 1, "", "from_config"], [225, 3, 1, "", "load"], [225, 3, 1, "", "release"], [225, 3, 1, "", "save"]], "kedro_datasets.pandas.GenericDataSet": [[226, 2, 1, "", "DEFAULT_LOAD_ARGS"], [226, 2, 1, "", "DEFAULT_SAVE_ARGS"], [226, 3, 1, "", "__init__"], [226, 3, 1, "", "exists"], [226, 3, 1, "", "from_config"], [226, 3, 1, "", "load"], [226, 3, 1, "", "release"], [226, 3, 1, "", "resolve_load_version"], [226, 3, 1, "", "resolve_save_version"], [226, 3, 1, "", "save"]], "kedro_datasets.pandas.HDFDataSet": [[227, 2, 1, "", "DEFAULT_LOAD_ARGS"], [227, 2, 1, "", "DEFAULT_SAVE_ARGS"], [227, 3, 1, "", "__init__"], [227, 3, 1, "", "exists"], [227, 3, 1, "", "from_config"], [227, 3, 1, "", "load"], [227, 3, 1, "", "release"], [227, 3, 1, "", "resolve_load_version"], [227, 3, 1, "", "resolve_save_version"], [227, 3, 1, "", "save"]], "kedro_datasets.pandas.JSONDataSet": [[228, 2, 1, "", "DEFAULT_LOAD_ARGS"], [228, 2, 1, "", "DEFAULT_SAVE_ARGS"], [228, 3, 1, "", "__init__"], [228, 3, 1, "", "exists"], [228, 3, 1, "", "from_config"], [228, 3, 1, "", "load"], [228, 3, 1, "", "release"], [228, 3, 1, "", "resolve_load_version"], [228, 3, 1, "", "resolve_save_version"], [228, 3, 1, "", "save"]], "kedro_datasets.pandas.ParquetDataSet": [[229, 2, 1, "", "DEFAULT_LOAD_ARGS"], [229, 2, 1, "", "DEFAULT_SAVE_ARGS"], [229, 3, 1, "", "__init__"], [229, 3, 1, "", "exists"], [229, 3, 1, "", "from_config"], [229, 3, 1, "", "load"], [229, 3, 1, "", "release"], [229, 3, 1, "", "resolve_load_version"], [229, 3, 1, "", "resolve_save_version"], [229, 3, 1, "", "save"]], "kedro_datasets.pandas.SQLQueryDataSet": [[230, 3, 1, "", "__init__"], [230, 3, 1, "", "adapt_mssql_date_params"], [230, 3, 1, "", "create_connection"], [230, 2, 1, "", "engines"], [230, 3, 1, "", "exists"], [230, 3, 1, "", "from_config"], [230, 3, 1, "", "load"], [230, 3, 1, "", "release"], [230, 3, 1, "", "save"]], "kedro_datasets.pandas.SQLTableDataSet": [[231, 2, 1, "", "DEFAULT_LOAD_ARGS"], [231, 2, 1, "", "DEFAULT_SAVE_ARGS"], [231, 3, 1, "", "__init__"], [231, 3, 1, "", "create_connection"], [231, 2, 1, "", "engines"], [231, 3, 1, "", "exists"], [231, 3, 1, "", "from_config"], [231, 3, 1, "", "load"], [231, 3, 1, "", "release"], [231, 3, 1, "", "save"]], "kedro_datasets.pandas.XMLDataSet": [[232, 2, 1, "", "DEFAULT_LOAD_ARGS"], [232, 2, 1, "", "DEFAULT_SAVE_ARGS"], [232, 3, 1, "", "__init__"], [232, 3, 1, "", "exists"], [232, 3, 1, "", "from_config"], [232, 3, 1, "", "load"], [232, 3, 1, "", "release"], [232, 3, 1, "", "resolve_load_version"], [232, 3, 1, "", "resolve_save_version"], [232, 3, 1, "", "save"]], "kedro_datasets.pickle": [[233, 1, 1, "", "PickleDataSet"]], "kedro_datasets.pickle.PickleDataSet": [[233, 2, 1, "", "DEFAULT_LOAD_ARGS"], [233, 2, 1, "", "DEFAULT_SAVE_ARGS"], [233, 3, 1, "", "__init__"], [233, 3, 1, "", "exists"], [233, 3, 1, "", "from_config"], [233, 3, 1, "", "load"], [233, 3, 1, "", "release"], [233, 3, 1, "", "resolve_load_version"], [233, 3, 1, "", "resolve_save_version"], [233, 3, 1, "", "save"]], "kedro_datasets.pillow": [[234, 1, 1, "", "ImageDataSet"]], "kedro_datasets.pillow.ImageDataSet": [[234, 2, 1, "", "DEFAULT_SAVE_ARGS"], [234, 3, 1, "", "__init__"], [234, 3, 1, "", "exists"], [234, 3, 1, "", "from_config"], [234, 3, 1, "", "load"], [234, 3, 1, "", "release"], [234, 3, 1, "", "resolve_load_version"], [234, 3, 1, "", "resolve_save_version"], [234, 3, 1, "", "save"]], "kedro_datasets.plotly": [[235, 1, 1, "", "JSONDataSet"], [236, 1, 1, "", "PlotlyDataSet"]], "kedro_datasets.plotly.JSONDataSet": [[235, 2, 1, "", "DEFAULT_LOAD_ARGS"], [235, 2, 1, "", "DEFAULT_SAVE_ARGS"], [235, 3, 1, "", "__init__"], [235, 3, 1, "", "exists"], [235, 3, 1, "", "from_config"], [235, 3, 1, "", "load"], [235, 3, 1, "", "release"], [235, 3, 1, "", "resolve_load_version"], [235, 3, 1, "", "resolve_save_version"], [235, 3, 1, "", "save"]], "kedro_datasets.plotly.PlotlyDataSet": [[236, 2, 1, "", "DEFAULT_LOAD_ARGS"], [236, 2, 1, "", "DEFAULT_SAVE_ARGS"], [236, 3, 1, "", "__init__"], [236, 3, 1, "", "exists"], [236, 3, 1, "", "from_config"], [236, 3, 1, "", "load"], [236, 3, 1, "", "release"], [236, 3, 1, "", "resolve_load_version"], [236, 3, 1, "", "resolve_save_version"], [236, 3, 1, "", "save"]], "kedro_datasets.polars": [[237, 1, 1, "", "CSVDataSet"]], "kedro_datasets.polars.CSVDataSet": [[237, 2, 1, "", "DEFAULT_LOAD_ARGS"], [237, 2, 1, "", "DEFAULT_SAVE_ARGS"], [237, 3, 1, "", "__init__"], [237, 3, 1, "", "exists"], [237, 3, 1, "", "from_config"], [237, 3, 1, "", "load"], [237, 3, 1, "", "release"], [237, 3, 1, "", "resolve_load_version"], [237, 3, 1, "", "resolve_save_version"], [237, 3, 1, "", "save"]], "kedro_datasets.redis": [[238, 1, 1, "", "PickleDataSet"]], "kedro_datasets.redis.PickleDataSet": [[238, 2, 1, "", "DEFAULT_LOAD_ARGS"], [238, 2, 1, "", "DEFAULT_REDIS_URL"], [238, 2, 1, "", "DEFAULT_SAVE_ARGS"], [238, 3, 1, "", "__init__"], [238, 3, 1, "", "exists"], [238, 3, 1, "", "from_config"], [238, 3, 1, "", "load"], [238, 3, 1, "", "release"], [238, 3, 1, "", "save"]], "kedro_datasets.snowflake": [[239, 1, 1, "", "SnowparkTableDataSet"]], "kedro_datasets.snowflake.SnowparkTableDataSet": [[239, 2, 1, "", "DEFAULT_LOAD_ARGS"], [239, 2, 1, "", "DEFAULT_SAVE_ARGS"], [239, 3, 1, "", "__init__"], [239, 3, 1, "", "exists"], [239, 3, 1, "", "from_config"], [239, 3, 1, "", "load"], [239, 3, 1, "", "release"], [239, 3, 1, "", "save"]], "kedro_datasets.spark": [[240, 1, 1, "", "DeltaTableDataSet"], [241, 1, 1, "", "SparkDataSet"], [242, 1, 1, "", "SparkHiveDataSet"], [243, 1, 1, "", "SparkJDBCDataSet"], [244, 1, 1, "", "SparkStreamingDataSet"]], "kedro_datasets.spark.DeltaTableDataSet": [[240, 3, 1, "", "__init__"], [240, 3, 1, "", "exists"], [240, 3, 1, "", "from_config"], [240, 3, 1, "", "load"], [240, 3, 1, "", "release"], [240, 3, 1, "", "save"]], "kedro_datasets.spark.SparkDataSet": [[241, 2, 1, "", "DEFAULT_LOAD_ARGS"], [241, 2, 1, "", "DEFAULT_SAVE_ARGS"], [241, 3, 1, "", "__init__"], [241, 3, 1, "", "exists"], [241, 3, 1, "", "from_config"], [241, 3, 1, "", "load"], [241, 3, 1, "", "release"], [241, 3, 1, "", "resolve_load_version"], [241, 3, 1, "", "resolve_save_version"], [241, 3, 1, "", "save"]], "kedro_datasets.spark.SparkHiveDataSet": [[242, 2, 1, "", "DEFAULT_SAVE_ARGS"], [242, 3, 1, "", "__init__"], [242, 3, 1, "", "exists"], [242, 3, 1, "", "from_config"], [242, 3, 1, "", "load"], [242, 3, 1, "", "release"], [242, 3, 1, "", "save"]], "kedro_datasets.spark.SparkJDBCDataSet": [[243, 2, 1, "", "DEFAULT_LOAD_ARGS"], [243, 2, 1, "", "DEFAULT_SAVE_ARGS"], [243, 3, 1, "", "__init__"], [243, 3, 1, "", "exists"], [243, 3, 1, "", "from_config"], [243, 3, 1, "", "load"], [243, 3, 1, "", "release"], [243, 3, 1, "", "save"]], "kedro_datasets.spark.SparkStreamingDataSet": [[244, 2, 1, "", "DEFAULT_LOAD_ARGS"], [244, 2, 1, "", "DEFAULT_SAVE_ARGS"], [244, 3, 1, "", "__init__"], [244, 3, 1, "", "exists"], [244, 3, 1, "", "from_config"], [244, 3, 1, "", "load"], [244, 3, 1, "", "release"], [244, 3, 1, "", "save"]], "kedro_datasets.svmlight": [[245, 1, 1, "", "SVMLightDataSet"]], "kedro_datasets.svmlight.SVMLightDataSet": [[245, 2, 1, "", "DEFAULT_LOAD_ARGS"], [245, 2, 1, "", "DEFAULT_SAVE_ARGS"], [245, 3, 1, "", "__init__"], [245, 3, 1, "", "exists"], [245, 3, 1, "", "from_config"], [245, 3, 1, "", "load"], [245, 3, 1, "", "release"], [245, 3, 1, "", "resolve_load_version"], [245, 3, 1, "", "resolve_save_version"], [245, 3, 1, "", "save"]], "kedro_datasets.tensorflow": [[246, 1, 1, "", "TensorFlowModelDataSet"]], "kedro_datasets.tensorflow.TensorFlowModelDataSet": [[246, 2, 1, "", "DEFAULT_LOAD_ARGS"], [246, 2, 1, "", "DEFAULT_SAVE_ARGS"], [246, 3, 1, "", "__init__"], [246, 3, 1, "", "exists"], [246, 3, 1, "", "from_config"], [246, 3, 1, "", "load"], [246, 3, 1, "", "release"], [246, 3, 1, "", "resolve_load_version"], [246, 3, 1, "", "resolve_save_version"], [246, 3, 1, "", "save"]], "kedro_datasets.text": [[247, 1, 1, "", "TextDataSet"]], "kedro_datasets.text.TextDataSet": [[247, 3, 1, "", "__init__"], [247, 3, 1, "", "exists"], [247, 3, 1, "", "from_config"], [247, 3, 1, "", "load"], [247, 3, 1, "", "release"], [247, 3, 1, "", "resolve_load_version"], [247, 3, 1, "", "resolve_save_version"], [247, 3, 1, "", "save"]], "kedro_datasets.tracking": [[248, 1, 1, "", "JSONDataSet"], [249, 1, 1, "", "MetricsDataSet"]], "kedro_datasets.tracking.JSONDataSet": [[248, 2, 1, "", "DEFAULT_SAVE_ARGS"], [248, 3, 1, "", "__init__"], [248, 3, 1, "", "exists"], [248, 3, 1, "", "from_config"], [248, 3, 1, "", "load"], [248, 3, 1, "", "release"], [248, 3, 1, "", "resolve_load_version"], [248, 3, 1, "", "resolve_save_version"], [248, 3, 1, "", "save"], [248, 2, 1, "", "versioned"]], "kedro_datasets.tracking.MetricsDataSet": [[249, 2, 1, "", "DEFAULT_SAVE_ARGS"], [249, 3, 1, "", "__init__"], [249, 3, 1, "", "exists"], [249, 3, 1, "", "from_config"], [249, 3, 1, "", "load"], [249, 3, 1, "", "release"], [249, 3, 1, "", "resolve_load_version"], [249, 3, 1, "", "resolve_save_version"], [249, 3, 1, "", "save"], [249, 2, 1, "", "versioned"]], "kedro_datasets.video": [[250, 1, 1, "", "VideoDataSet"]], "kedro_datasets.video.VideoDataSet": [[250, 3, 1, "", "__init__"], [250, 3, 1, "", "exists"], [250, 3, 1, "", "from_config"], [250, 3, 1, "", "load"], [250, 3, 1, "", "release"], [250, 3, 1, "", "save"]], "kedro_datasets.yaml": [[251, 1, 1, "", "YAMLDataSet"]], "kedro_datasets.yaml.YAMLDataSet": [[251, 2, 1, "", "DEFAULT_SAVE_ARGS"], [251, 3, 1, "", "__init__"], [251, 3, 1, "", "exists"], [251, 3, 1, "", "from_config"], [251, 3, 1, "", "load"], [251, 3, 1, "", "release"], [251, 3, 1, "", "resolve_load_version"], [251, 3, 1, "", "resolve_save_version"], [251, 3, 1, "", "save"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"advanc": [0, 12, 15, 18, 42, 43, 48, 57], "configur": [0, 1, 2, 4, 12, 13, 14, 18, 19, 22, 23, 25, 26, 37, 38, 41, 42, 43, 48, 52, 58, 256, 258, 265, 272, 278, 281, 282], "templatedconfigload": [0, 67], "provid": [0, 260, 261, 266], "templat": [0, 282], "valu": 0, "through": [0, 14], "global": [0, 38, 47], "omegaconfigload": [0, 1, 66], "kedro": [0, 2, 6, 8, 9, 10, 11, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 253, 256, 261, 265, 267, 268, 269, 270, 272, 274, 275, 279, 281, 282], "how": [0, 2, 3, 5, 8, 9, 12, 15, 18, 19, 21, 22, 25, 26, 34, 35, 45, 50, 60, 256, 261, 262, 263, 266, 272, 277], "chang": [0, 2, 6, 8, 9, 27, 28], "which": 0, "file": [0, 1, 2, 12, 14, 38, 41, 52, 256, 258, 265, 274], "ar": [0, 8, 26, 261], "load": [0, 1, 2, 3, 5, 12, 13, 14, 18, 53, 58, 262, 265, 275, 277], "ensur": [0, 261], "non": [0, 58], "default": [0, 2, 258], "get": [0, 7, 38, 276], "bypass": 0, "rule": 0, "us": [0, 1, 2, 5, 8, 12, 13, 14, 17, 18, 19, 21, 22, 25, 26, 27, 28, 33, 34, 35, 37, 43, 44, 45, 50, 53, 54, 58, 60, 256, 258, 261, 262, 268], "jinja2": 0, "syntax": [0, 262], "do": [0, 9, 261, 272, 277], "paramet": [0, 5, 261, 272], "catalog": [0, 12, 13, 14, 16, 38, 42, 43, 48, 51, 115, 252, 268, 270, 277, 281, 282], "other": [0, 11, 268, 274], "custom": [15, 22, 25, 265, 268, 275], "resolv": [0, 277], "credenti": [0, 3, 12, 13, 14, 15, 18, 22, 53], "environ": [0, 2, 19, 22, 23, 26, 27, 28, 50, 258], "variabl": [0, 256, 258, 262], "sourc": [2, 12, 45], "base": [2, 35, 51, 58, 258], "local": [2, 14, 19, 27, 44, 51], "name": [2, 14, 17, 265], "pattern": 2, "set": [2, 7, 8, 9, 13, 22, 25, 26, 27, 28, 37, 41, 42, 43, 44, 50, 255, 262, 274, 275, 277, 278], "folder": 2, "runtim": [2, 5], "read": [2, 12], "from": [2, 14, 38, 52, 268, 274, 277], "compress": [2, 14], "access": [2, 12, 13, 28, 44], "code": [2, 3, 5, 12, 27, 41, 43, 52, 282], "specifi": [2, 5, 14, 266], "addit": [2, 13, 45], "overrid": [2, 38, 261], "onli": [2, 262], "one": 2, "work": [3, 12, 47, 48, 272], "aw": [3, 22, 23], "backward": 6, "compat": [6, 14, 19, 23], "break": 6, "when": [6, 44, 277], "should": [6, 44], "i": [6, 9, 44, 48, 261, 277], "make": [6, 8, 9], "The": [6, 13, 15, 16, 20, 33, 36, 264, 273], "releas": 6, "model": [6, 14, 54, 272, 273], "guidelin": 7, "contribut": [7, 8, 9, 10, 15, 47, 57], "develop": [7, 8, 11, 27, 28, 38, 40, 47, 48, 50, 276], "introduct": [7, 13, 37, 39, 41, 59, 273], "befor": 7, "you": [7, 21, 22, 23, 25, 33], "start": 7, "up": [7, 8, 9, 22, 25, 26, 27, 28, 37, 41, 42, 43, 44, 50, 262, 274, 275, 278], "area": 7, "core": 7, "process": [7, 11, 19, 23, 47, 273], "extra": [7, 45, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "creat": [7, 9, 14, 15, 19, 21, 22, 23, 25, 26, 27, 28, 31, 37, 38, 50, 52, 254, 256, 261, 262, 272, 273, 278, 282], "pull": [7, 9, 38, 260], "request": [7, 9], "titl": 7, "convent": [7, 47, 48, 270], "hint": 7, "pre": [7, 41], "commit": [7, 41], "usag": [7, 12, 57, 269], "certif": 7, "origin": 7, "need": [7, 12, 21, 22], "help": [7, 9, 38, 276], "test": [8, 27, 28, 37, 38, 272, 273, 275], "databrick": [8, 26, 27, 28, 29, 30, 211], "deploi": [8, 22, 23, 25, 26, 38], "version": [8, 12, 13, 15, 38, 44, 50, 186, 256], "prerequisit": [8, 19, 21, 22, 23, 25, 26, 27, 28, 34, 50], "instal": [1, 8, 26, 27, 28, 35, 37, 38, 41, 44, 50, 252, 278], "build": [8, 9, 38, 263, 274], "onto": 8, "cli": [8, 14, 22, 25, 26, 27, 35, 38, 45, 47, 56, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "your": [8, 15, 21, 22, 25, 26, 27, 28, 31, 34, 35, 37, 38, 44, 45, 50, 54, 56, 258], "document": [9, 21, 22, 38, 57, 274], "rebuild": 9, "after": 9, "extend": [9, 46, 47, 53, 272], "add": [9, 37, 41, 44, 45, 54, 274, 282], "new": [9, 19, 23, 26, 27, 28, 38, 50, 52, 278], "page": [9, 26, 27, 28], "move": 9, "remov": [9, 11], "style": 9, "guid": [1, 9], "join": 11, "technic": 11, "steer": 11, "committe": 11, "respons": 11, "maintain": 11, "product": 11, "commun": [11, 47], "manag": [11, 28, 120, 121, 122, 150, 254, 268], "requir": [1, 11], "becom": 11, "applic": [11, 255], "vote": 11, "issu": 11, "propos": 11, "ad": 11, "data": [12, 13, 14, 16, 26, 27, 28, 38, 44, 45, 48, 51, 54, 58, 252, 262, 269, 270, 272, 273, 275, 277, 278, 281, 282], "within": 13, "locat": [14, 275], "dataset": [12, 13, 14, 15, 17, 18, 38, 44, 48, 53, 58, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 268, 275, 277], "_arg": [], "exampl": [12, 14, 15, 37, 47, 52, 54, 256, 268, 273], "1": [1, 19, 23, 31, 45], "project": [15, 19, 21, 22, 26, 27, 28, 29, 35, 38, 44, 45, 47, 48, 50, 51, 52, 57, 132, 158, 159, 160, 161, 162, 252, 253, 255, 258, 262, 272, 273, 274, 275, 276, 278, 280], "underli": [], "filesystem": 15, "class": [], "gcsfilesystem": [], "interact": 58, "googl": 14, "cloud": 14, "storag": [14, 44], "gc": [], "2": [1, 19, 23, 31, 34, 45], "binari": 14, "utf": 14, "8": 14, "encod": 14, "3": [1, 19, 23, 31, 45], "save": [12, 13, 14, 18, 53, 58, 262, 265], "csv": 14, "without": [14, 50], "row": 14, "index": 14, "yaml": [14, 38, 107, 251], "api": [12, 14, 26, 54, 57, 70, 208], "system": 14, "argument": [13, 14, 260, 265], "4": [1, 19, 23, 31, 45], "specif": [14, 26, 38, 56, 252, 261], "s3": 14, "bucket": 14, "5": 1, "pickl": [14, 93, 233], "6": 1, "an": [14, 19, 23, 26, 27, 37, 274, 277], "excel": 14, "7": [], "multi": 14, "sheet": 14, "imag": [14, 19, 23], "matplotlib": [14, 77, 216, 282], "9": [], "hdf": 14, "10": [], "parquet": [12, 14], "11": [], "spark": [14, 58, 98, 99, 100, 101, 240, 241, 242, 243, 244], "tabl": [14, 57, 273], "12": [], "sql": [12, 14], "databas": [12, 14], "connect": 14, "13": [], "appli": 14, "queri": [12, 14], "14": [], "endpoint": 14, "u": [], "corn": [], "yield": [], "usda": [], "15": [], "minio": 14, "16": [], "azur": [14, 24], "blob": 14, "17": [], "store": [14, 44, 169, 170], "remot": [14, 42, 43], "ssh": [14, 42], "via": 14, "feed": [], "multipl": [14, 17, 260, 261, 263], "similar": [14, 17], "anchor": 14, "factori": [17, 38], "generalis": 17, "type": [13, 17, 38, 252], "same": [12, 17], "namespac": [17, 272], "differ": [12, 15, 17, 261], "layer": [17, 270, 280], "placehold": [], "all": [17, 38], "catch": 17, "overwrit": [], "memorydataset": [58, 184], "transcod": 12, "A": [12, 268], "typic": 12, "doe": [12, 261], "ml": 24, "behind": 12, "scene": 12, "view": [12, 44], "avail": 12, "memori": [12, 54], "io": [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 265], "error": 277, "handl": [1, 15], "abstractdataset": [15, 175], "namedtupl": 15, "support": [1, 44, 47, 275], "partit": 18, "definit": [18, 22, 262], "shorthand": 18, "notat": 18, "full": 18, "lazi": 18, "increment": 18, "incrementaldataset": 182, "confirm": [18, 38], "checkpoint": [18, 273], "special": 18, "config": [1, 18, 63, 64, 65, 66, 67, 277], "kei": [18, 261], "apach": 19, "airflow": [19, 274], "run": [19, 21, 22, 23, 26, 27, 28, 31, 34, 35, 37, 38, 41, 42, 44, 52, 262, 265, 266, 274, 277, 282], "pipelin": [19, 21, 22, 23, 24, 25, 31, 33, 34, 38, 39, 44, 48, 51, 54, 130, 131, 193, 194, 195, 196, 197, 198, 259, 261, 263, 264, 265, 266, 268, 270, 272, 273, 277, 280, 282], "kubernet": [19, 21], "cluster": [19, 26], "astronom": 19, "strategi": [19, 23], "tutori": [15, 19, 57, 276, 277], "setup": [15, 19, 34, 38, 253], "deploy": [19, 23, 26, 31, 32, 35, 274], "step": [19, 23, 49, 276], "prepar": [19, 23], "datacatalog": [19, 23, 178], "packag": [19, 23, 26, 35, 38, 260, 274], "compliant": [19, 23], "docker": [19, 23, 42, 274], "convert": [19, 31, 34, 268], "dag": 19, "launch": 19, "amazon": 20, "sagemak": 20, "plugin": [20, 21, 24, 33, 36, 47, 56], "argo": 21, "workflow": [21, 35, 252, 270, 276], "outdat": [21, 22], "review": [21, 22], "why": [21, 22, 23, 25, 33], "would": [21, 22, 23, 25, 33], "containeris": [21, 22, 31], "spec": [21, 124, 125, 152, 153, 154, 155, 156, 157], "submit": [21, 22], "batch": 22, "provis": 22, "resourc": [22, 26, 271], "iam": 22, "role": 22, "job": [22, 26], "comput": 22, "queue": 22, "runner": [22, 25, 199, 200, 201, 202, 203, 204, 265, 270, 272], "relat": [22, 25, 252], "updat": [22, 25, 44, 280, 282], "implement": [15, 22, 25, 56], "function": [23, 262, 268, 273], "lambda": 23, "write": 23, "script": [23, 41], "limit": 23, "azureml": 24, "dask": [25, 72, 210], "distribut": [25, 31], "what": [26, 27, 28, 48, 261], "advantag": 26, "thi": [26, 27, 28], "cover": [26, 27, 28], "note": [26, 27], "usernam": [26, 27], "host": [26, 27], "virtual": [26, 27, 28, 50], "authent": [26, 27], "entri": 26, "point": 26, "upload": [26, 27], "dbf": [26, 27, 28], "workspac": [26, 28], "ui": 26, "automat": [26, 280], "summari": [26, 27, 28, 50, 51, 52], "id": 27, "dbx": 27, "repo": [27, 28], "sync": 27, "conf": [27, 51, 58], "directori": [27, 37, 51, 276], "notebook": [27, 28, 29, 38, 267, 268], "modifi": [27, 28, 38, 44, 45, 54], "train": [27, 28], "split": [27, 28], "ratio": [27, 28], "re": [27, 28], "github": [28, 35], "repositori": 28, "person": 28, "token": 28, "push": 28, "copi": [28, 35, 38], "dbutil": 28, "visualis": [29, 48, 52, 273, 279, 280, 282], "target": [31, 274], "platform": 31, "primit": 31, "parameteris": 31, "option": [31, 38, 272, 278], "starter": [31, 47, 134, 135, 256, 270], "kubeflow": 33, "prefect": 34, "0": 34, "flow": 34, "singl": 35, "machin": 35, "contain": [35, 52], "registri": [35, 133, 264, 269], "vertexai": 36, "autom": [37, 41], "pytest": 37, "structur": [37, 51], "coverag": 37, "report": [37, 282], "cov": 37, "": [38, 45, 53, 57, 58], "command": [38, 45, 47], "line": [38, 268], "interfac": 38, "autocomplet": 38, "invok": 38, "python": [38, 41, 42], "inform": [38, 52, 263, 275], "open": 38, "browser": 38, "customis": [38, 45, 53, 258], "depend": [38, 44, 252, 261, 263, 270, 276, 278, 282], "tree": 38, "micro": [38, 260], "qualiti": 38, "lint": [38, 41], "modular": [38, 261, 270, 272], "delet": 38, "regist": [38, 56], "describ": 38, "list": [38, 256], "per": 38, "rank": 38, "tag": [38, 262, 263, 266, 270], "cell": 38, "strip": 38, "output": [38, 262, 263, 265, 266], "debug": [39, 42, 43], "node": [39, 44, 48, 51, 53, 54, 197, 198, 259, 262, 263, 266, 268, 270, 272, 273, 282], "format": [1, 41], "tool": 41, "ruff": 41, "flake8": 41, "hook": [41, 47, 53, 54, 55, 56, 58, 119, 120, 121, 122, 123, 124, 125, 149, 150, 151, 152, 153, 154, 155, 156, 157], "git": 41, "pycharm": 42, "interpret": [42, 43], "consol": [42, 258], "valid": [42, 43, 54], "schema": [42, 43], "visual": 43, "studio": 43, "For": 43, "those": 43, "venv": 43, "virtualenv": 43, "task": 43, "experi": 44, "track": [44, 54, 105, 106, 248, 249], "viz": [44, 270, 279, 281, 282], "session": [44, 163, 164, 165, 166, 167, 168, 169, 170, 254, 268], "collabor": 44, "log": [44, 110, 111, 112, 191, 192, 257, 258, 278], "metric": [44, 54], "gener": [44, 262], "compar": 44, "plot": 44, "common": [45, 53, 277], "case": [45, 53], "behaviour": [45, 53], "execut": [45, 270], "timelin": 45, "integr": [15, 45, 58], "initi": 45, "boilerpl": 45, "scenario": 15, "anatomi": 15, "_load": 15, "method": [15, 53], "fsspec": [15, 260], "_save": 15, "_describ": 15, "complet": 15, "partitioneddataset": [15, 18, 185], "thread": 15, "safeti": 15, "overview": [47, 254], "simpl": 47, "alias": [47, 256], "click": 47, "context": [47, 146, 147, 148, 268], "initialis": [47, 58], "suggest": 47, "frequent": [], "ask": [], "question": [], "jupyt": [48, 126, 127, 258, 268], "topic": 48, "first": 49, "conda": 50, "pip": 50, "verifi": 50, "upgrad": 50, "concept": [51, 56, 261], "src": 51, "empti": 52, "where": 52, "next": [52, 276], "more": [52, 268], "about": [52, 57, 263], "panda": [52, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "iri": [52, 268], "background": 52, "extern": 53, "consumpt": 54, "v2": 54, "v3": 54, "observ": 54, "input": [54, 262, 263, 266, 272, 273], "before_node_run": 54, "disabl": [56, 258], "auto": 56, "under": 56, "hood": 56, "welcom": 57, "learn": [57, 60], "basic": [13, 57], "indic": 57, "pyspark": 58, "centralis": 58, "yml": [13, 58], "sparksess": 58, "built": 58, "raw": 58, "delta": 58, "lake": 58, "intermediari": 58, "datafram": 58, "copy_mod": 58, "assign": 58, "object": 58, "tip": 58, "maximis": 58, "concurr": 58, "threadrunn": [58, 203], "assumpt": 60, "kedropythonversionwarn": 62, "configload": [1, 64], "missingconfigexcept": 65, "apidataset": [70, 208], "biosequ": [71, 209], "biosequencedataset": [71, 209], "parquetdataset": [72, 89, 210, 229], "email": [73, 212], "emailmessagedataset": [73, 212], "geopanda": [74, 213], "geojsondataset": [74, 213], "holoview": [75, 214], "holoviewswrit": [75, 214], "json": [76, 215], "jsondataset": [76, 80, 88, 95, 105, 215, 219, 228, 235, 248], "matplotlibwrit": [77, 216], "networkx": [78, 79, 80, 217, 218, 219], "gmldataset": [78, 217], "graphmldataset": [79, 218], "csvdataset": [81, 220, 237], "exceldataset": [82, 222], "featherdataset": [83, 223], "gbqquerydataset": [84, 224], "gbqtabledataset": [85, 225], "genericdataset": [86, 226], "hdfdataset": [87, 227], "sqlquerydataset": [90, 230], "sqltabledataset": [91, 231], "xmldataset": [92, 232], "pickledataset": [93, 97, 233, 238], "pillow": [94, 234], "imagedataset": [94, 234], "plotli": [95, 96, 235, 236, 282], "plotlydataset": [96, 236], "redi": [97, 238], "deltatabledataset": [98, 221, 240], "sparkdataset": [99, 241], "sparkhivedataset": [100, 242], "sparkjdbcdataset": [101, 243], "svmlight": [102, 245], "svmlightdataset": [102, 245], "tensorflow": [103, 246], "tensorflowmodeldataset": [103, 246], "text": [104, 247], "textdataset": [104, 247], "metricsdataset": [106, 249], "yamldataset": [107, 251], "extens": [108, 109], "ipython": [109, 187, 188, 189, 190, 268], "color_logg": [111, 112], "colorhandl": 112, "framework": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 258], "kedrocli": 117, "main": 118, "clihooksmanag": 121, "get_cli_hook_manag": 122, "marker": [123, 151], "clicommandspec": 125, "jupytercommandgroup": 127, "micropkg": [128, 129], "safe_extract": 129, "pipelineartifact": 131, "kedrostarterspec": 135, "util": [136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 205, 206], "commandcollect": 137, "kedroclierror": 138, "command_with_verbos": 139, "env_opt": 140, "find_stylesheet": 141, "forward_command": 142, "get_pkg_vers": 143, "python_cal": 144, "split_str": 145, "kedrocontext": [147, 270], "kedrocontexterror": 148, "datacatalogspec": 153, "datasetspec": 154, "kedrocontextspec": 155, "nodespec": 156, "pipelinespec": 157, "configure_log": 159, "configure_project": 160, "find_pipelin": 161, "validate_set": 162, "kedrosess": [165, 254, 270], "kedrosessionerror": 166, "shelvestor": [167, 168], "basesessionstor": 170, "startup": [171, 172, 173], "projectmetadata": 172, "bootstrap_project": 173, "abstractversioneddataset": 176, "cacheddataset": 177, "datasetalreadyexistserror": 179, "dataseterror": [180, 277], "datasetnotfounderror": [181, 277], "lambdadataset": 183, "load_ipython_extens": 188, "magic_reload_kedro": 189, "reload_kedro": [190, 268], "richhandl": 192, "modular_pipelin": [195, 196], "modularpipelineerror": 195, "abstractrunn": 200, "parallelrunn": [201, 265], "sequentialrunn": [202, 265], "run_nod": 204, "load_obj": 206, "kedro_dataset": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "managedtabledataset": 211, "polar": 237, "snowflak": 239, "snowparktabledataset": 239, "sparkstreamingdataset": 244, "video": 250, "videodataset": 250, "group": 252, "level": 252, "lifecycl": 254, "metadata": 255, "offici": 256, "side": 258, "kedro_logging_config": 258, "rich": 258, "handler": 258, "plain": 258, "dumb": 258, "termin": 258, "perform": 258, "portabl": 261, "wrapper": [261, 272], "combin": 261, "disconnect": 261, "time": 261, "kwarg": 262, "merg": 263, "bad": 263, "circular": 263, "autodiscoveri": 264, "multiprocess": 265, "multithread": 265, "asynchron": 265, "slice": [266, 270, 272], "final": 266, "recreat": 266, "miss": 266, "user": 267, "kernel": 268, "magic": 268, "run_viz": 268, "know": 268, "servic": 268, "jupyterlab": 268, "client": 268, "find": 268, "out": 268, "glossari": 270, "engin": [48, 270], "v": 270, "scienc": [270, 272], "order": 270, "registr": [272, 273, 275], "affect": 272, "preprocess": 273, "again": 273, "entir": 274, "sphinx": 274, "html": 274, "docstr": 274, "can": 275, "further": 275, "terminologi": 276, "root": 276, "standard": 276, "spaceflight": [277, 278, 280], "faq": [48, 271, 277], "fail": 277, "while": 277, "found": 277, "except": [1, 277], "occur": 277, "pars": 277, "best": 278, "practic": 278, "avoid": 278, "leak": 278, "confidenti": 278, "share": 280, "preview": 281, "chart": 282, "anoth": 282, "two": 12, "migrat": 1, "loader": 1, "librari": 1, "import": 1, "statement": 1, "introduc": [], "filepath": 13}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"kedro.framework.cli.hooks.manager": [[120, "kedro-framework-cli-hooks-manager"]], "kedro.framework.cli.cli.main": [[118, "kedro-framework-cli-cli-main"]], "kedro.framework.cli.hooks.specs": [[124, "kedro-framework-cli-hooks-specs"]], "kedro.framework.cli.hooks.markers": [[123, "kedro-framework-cli-hooks-markers"]], "kedro.framework.cli.hooks.specs.CLICommandSpecs": [[125, "kedro-framework-cli-hooks-specs-clicommandspecs"]], "kedro.framework.cli.jupyter": [[126, "kedro-framework-cli-jupyter"]], "kedro.framework": [[113, "kedro-framework"]], "kedro.framework.cli": [[114, "kedro-framework-cli"]], "kedro.framework.cli.catalog": [[115, "kedro-framework-cli-catalog"]], "kedro.framework.cli.hooks.manager.CLIHooksManager": [[121, "kedro-framework-cli-hooks-manager-clihooksmanager"]], "kedro.framework.cli.cli.KedroCLI": [[117, "kedro-framework-cli-cli-kedrocli"]], "kedro.framework.cli.hooks": [[119, "kedro-framework-cli-hooks"]], "kedro.framework.cli.cli": [[116, "kedro-framework-cli-cli"]], "kedro.framework.cli.jupyter.JupyterCommandGroup": [[127, "kedro-framework-cli-jupyter-jupytercommandgroup"]], "kedro.framework.cli.hooks.manager.get_cli_hook_manager": [[122, "kedro-framework-cli-hooks-manager-get-cli-hook-manager"]], "kedro.extras.logging.color_logger.ColorHandler": [[112, "kedro-extras-logging-color-logger-colorhandler"]], "kedro.framework.cli.utils.command_with_verbosity": [[139, "kedro-framework-cli-utils-command-with-verbosity"]], "kedro.framework.cli.project": [[132, "kedro-framework-cli-project"]], "kedro.framework.cli.registry": [[133, "kedro-framework-cli-registry"]], "kedro.framework.cli.micropkg.safe_extract": [[129, "kedro-framework-cli-micropkg-safe-extract"]], "kedro.framework.cli.micropkg": [[128, "kedro-framework-cli-micropkg"]], "kedro.framework.cli.utils.CommandCollection": [[137, "kedro-framework-cli-utils-commandcollection"]], "kedro.framework.cli.pipeline.PipelineArtifacts": [[131, "kedro-framework-cli-pipeline-pipelineartifacts"]], "kedro.framework.cli.utils.KedroCliError": [[138, "kedro-framework-cli-utils-kedroclierror"]], "kedro.framework.cli.utils.env_option": [[140, "kedro-framework-cli-utils-env-option"]], "kedro.framework.cli.pipeline": [[130, "kedro-framework-cli-pipeline"]], "kedro.framework.cli.utils.find_stylesheets": [[141, "kedro-framework-cli-utils-find-stylesheets"]], "kedro.framework.cli.utils.forward_command": [[142, "kedro-framework-cli-utils-forward-command"]], "kedro.framework.cli.utils.get_pkg_version": [[143, "kedro-framework-cli-utils-get-pkg-version"]], "kedro.framework.cli.starters": [[134, "kedro-framework-cli-starters"]], "kedro.framework.cli.utils": [[136, "kedro-framework-cli-utils"]], "kedro.framework.cli.starters.KedroStarterSpec": [[135, "kedro-framework-cli-starters-kedrostarterspec"]], "Debugging": [[39, "debugging"], [42, "debugging"], [43, "debugging"]], "Introduction": [[39, "introduction"], [41, "introduction"], [37, "introduction"], [7, "introduction"], [273, "introduction"]], "Debugging Node": [[39, "debugging-node"]], "Debugging Pipeline": [[39, "debugging-pipeline"]], "Set up PyCharm": [[42, "set-up-pycharm"]], "Set up Run configurations": [[42, "set-up-run-configurations"]], "Advanced: Remote SSH interpreter": [[42, "advanced-remote-ssh-interpreter"]], "Advanced: Docker interpreter": [[42, "advanced-docker-interpreter"]], "Configure Python Console": [[42, "configure-python-console"]], "Configuring the Kedro catalog validation schema": [[42, "configuring-the-kedro-catalog-validation-schema"], [43, "configuring-the-kedro-catalog-validation-schema"]], "Deployment": [[32, "deployment"]], "Development": [[40, "development"]], "Code formatting and linting": [[41, "code-formatting-and-linting"]], "Set up Python tools": [[41, "set-up-python-tools"]], "Install the tools": [[41, "install-the-tools"]], "Configure ruff": [[41, "configure-ruff"]], "Configure flake8": [[41, "configure-flake8"]], "Run the tools": [[41, "run-the-tools"]], "Automated formatting and linting with pre-commit hooks": [[41, "automated-formatting-and-linting-with-pre-commit-hooks"]], "Install pre-commit": [[41, "install-pre-commit"]], "Add pre-commit configuration file": [[41, "add-pre-commit-configuration-file"]], "Install git hook scripts": [[41, "install-git-hook-scripts"]], "Common use cases": [[45, "common-use-cases"], [53, "common-use-cases"]], "Use Case 1: How to add extra behaviour to Kedro\u2019s execution timeline": [[45, "use-case-1-how-to-add-extra-behaviour-to-kedro-s-execution-timeline"]], "Use Case 2: How to integrate Kedro with additional data sources": [[45, "use-case-2-how-to-integrate-kedro-with-additional-data-sources"]], "Use Case 3: How to add or modify CLI commands": [[45, "use-case-3-how-to-add-or-modify-cli-commands"]], "Use Case 4: How to customise the initial boilerplate of your project": [[45, "use-case-4-how-to-customise-the-initial-boilerplate-of-your-project"]], "Set up Visual Studio Code": [[43, "set-up-visual-studio-code"]], "Advanced: For those using venv / virtualenv": [[43, "advanced-for-those-using-venv-virtualenv"]], "Setting up tasks": [[43, "setting-up-tasks"]], "Advanced: Remote Interpreter / Debugging": [[43, "advanced-remote-interpreter-debugging"]], "VertexAI": [[36, "vertexai"]], "The kedro-vertexai plugin": [[36, "the-kedro-vertexai-plugin"]], "Prefect": [[34, "prefect"]], "Prerequisites": [[34, "prerequisites"], [8, "prerequisites"], [22, "prerequisites"], [19, "prerequisites"], [26, "prerequisites"], [28, "prerequisites"], [25, "prerequisites"], [27, "prerequisites"], [21, "prerequisites"], [23, "prerequisites"]], "Setup": [[34, "setup"]], "How to run your Kedro pipeline using Prefect 2.0": [[34, "how-to-run-your-kedro-pipeline-using-prefect-2-0"]], "Convert your Kedro pipeline to Prefect 2.0 flow": [[34, "convert-your-kedro-pipeline-to-prefect-2-0-flow"]], "Run Prefect flow": [[34, "run-prefect-flow"]], "Automated Testing": [[37, "automated-testing"]], "Set up automated testing with pytest": [[37, "set-up-automated-testing-with-pytest"]], "Install pytest": [[37, "install-pytest"]], "Create a /tests directory": [[37, "create-a-tests-directory"]], "Test directory structure": [[37, "test-directory-structure"]], "Create an example test": [[37, "create-an-example-test"]], "Run your tests": [[37, "run-your-tests"]], "Add test coverage reports with pytest-cov": [[37, "add-test-coverage-reports-with-pytest-cov"]], "Install pytest-cov": [[37, "install-pytest-cov"]], "Configure pytest to use pytest-cov": [[37, "configure-pytest-to-use-pytest-cov"]], "Run pytest with pytest-cov": [[37, "run-pytest-with-pytest-cov"]], "Single-machine deployment": [[35, "single-machine-deployment"]], "Container-based": [[35, "container-based"]], "How to use container registry": [[35, "how-to-use-container-registry"]], "Package-based": [[35, "package-based"]], "CLI-based": [[35, "cli-based"]], "Use GitHub workflow to copy your project": [[35, "use-github-workflow-to-copy-your-project"]], "Install and run the Kedro project": [[35, "install-and-run-the-kedro-project"]], "Extend Kedro": [[46, "extend-kedro"]], "Kubeflow Pipelines": [[33, "kubeflow-pipelines"]], "Why would you use Kubeflow Pipelines?": [[33, "why-would-you-use-kubeflow-pipelines"]], "The kedro-kubeflow plugin": [[33, "the-kedro-kubeflow-plugin"]], "Kedro plugins": [[47, "kedro-plugins"]], "Overview": [[47, "overview"], [254, "overview"]], "Example of a simple plugin": [[47, "example-of-a-simple-plugin"]], "Extend starter aliases": [[47, "extend-starter-aliases"]], "Working with click": [[47, "working-with-click"]], "Project context": [[47, "project-context"]], "Initialisation": [[47, "initialisation"]], "global and project commands": [[47, "global-and-project-commands"]], "Suggested command convention": [[47, "suggested-command-convention"]], "Hooks": [[47, "hooks"], [56, "hooks"], [55, "hooks"]], "CLI Hooks": [[47, "cli-hooks"]], "Contributing process": [[47, "contributing-process"]], "Supported Kedro plugins": [[47, "supported-kedro-plugins"]], "Community-developed plugins": [[47, "community-developed-plugins"]], "Experiment tracking in Kedro-Viz": [[44, "experiment-tracking-in-kedro-viz"]], "Kedro versions supporting experiment tracking": [[44, "kedro-versions-supporting-experiment-tracking"]], "When should I use experiment tracking in Kedro?": [[44, "when-should-i-use-experiment-tracking-in-kedro"]], "Set up a project": [[44, "set-up-a-project"]], "Install Kedro and Kedro-Viz": [[44, "install-kedro-and-kedro-viz"]], "Install the dependencies for the project": [[44, "install-the-dependencies-for-the-project"]], "Set up the session store": [[44, "set-up-the-session-store"]], "Local storage": [[44, "local-storage"]], "Collaborative experiment tracking": [[44, "collaborative-experiment-tracking"]], "Set up experiment tracking datasets": [[44, "set-up-experiment-tracking-datasets"]], "Modify your nodes and pipelines to log metrics": [[44, "modify-your-nodes-and-pipelines-to-log-metrics"]], "Generate the run data": [[44, "generate-the-run-data"]], "Access run data and compare runs": [[44, "access-run-data-and-compare-runs"]], "View and compare plots": [[44, "view-and-compare-plots"]], "Update the dependencies": [[44, "update-the-dependencies"], [282, "update-the-dependencies"], [282, "id1"]], "Add a plotting node": [[44, "add-a-plotting-node"]], "View and compare metrics data": [[44, "view-and-compare-metrics-data"]], "Kedro\u2019s command line interface": [[38, "kedro-s-command-line-interface"]], "Autocompletion (optional)": [[38, "autocompletion-optional"]], "Invoke Kedro CLI from Python (optional)": [[38, "invoke-kedro-cli-from-python-optional"]], "Kedro commands": [[38, "kedro-commands"]], "Global Kedro commands": [[38, "global-kedro-commands"]], "Get help on Kedro commands": [[38, "get-help-on-kedro-commands"]], "Confirm the Kedro version": [[38, "confirm-the-kedro-version"]], "Confirm Kedro information": [[38, "confirm-kedro-information"]], "Create a new Kedro project": [[38, "create-a-new-kedro-project"], [52, "create-a-new-kedro-project"], [26, "create-a-new-kedro-project"], [28, "create-a-new-kedro-project"], [27, "create-a-new-kedro-project"]], "Open the Kedro documentation in your browser": [[38, "open-the-kedro-documentation-in-your-browser"]], "Customise or Override Project-specific Kedro commands": [[38, "customise-or-override-project-specific-kedro-commands"]], "Project setup": [[38, "project-setup"], [15, "project-setup"]], "Build the project\u2019s dependency tree": [[38, "build-the-project-s-dependency-tree"]], "Install all package dependencies": [[38, "install-all-package-dependencies"]], "Run the project": [[38, "run-the-project"], [52, "run-the-project"]], "Modifying a kedro run": [[38, "modifying-a-kedro-run"]], "Deploy the project": [[38, "deploy-the-project"]], "Pull a micro-package": [[38, "pull-a-micro-package"], [260, "pull-a-micro-package"]], "Project quality": [[38, "project-quality"]], "Build the project documentation": [[38, "build-the-project-documentation"]], "Lint your project": [[38, "lint-your-project"]], "Test your project": [[38, "test-your-project"]], "Project development": [[38, "project-development"]], "Modular pipelines": [[38, "modular-pipelines"], [272, "modular-pipelines"], [261, "modular-pipelines"]], "Create a new modular pipeline in your project": [[38, "create-a-new-modular-pipeline-in-your-project"]], "Package a micro-package": [[38, "package-a-micro-package"], [260, "package-a-micro-package"]], "Pull a micro-package in your project": [[38, "pull-a-micro-package-in-your-project"]], "Delete a modular pipeline": [[38, "delete-a-modular-pipeline"]], "Registered pipelines": [[38, "registered-pipelines"]], "Describe a registered pipeline": [[38, "describe-a-registered-pipeline"]], "List all registered pipelines in your project": [[38, "list-all-registered-pipelines-in-your-project"]], "Datasets": [[38, "datasets"]], "List datasets per pipeline per type": [[38, "list-datasets-per-pipeline-per-type"]], "Rank dataset factories in the catalog": [[38, "rank-dataset-factories-in-the-catalog"]], "Data Catalog": [[38, "data-catalog"], [51, "data-catalog"], [270, "data-catalog"]], "Create a Data Catalog YAML configuration file": [[38, "create-a-data-catalog-yaml-configuration-file"]], "Notebooks": [[38, "notebooks"]], "Copy tagged cells": [[38, "copy-tagged-cells"]], "Strip output cells": [[38, "strip-output-cells"]], "Learn how to use Kedro": [[60, "learn-how-to-use-kedro"]], "Assumptions": [[60, "assumptions"]], "kedro.config": [[63, "kedro-config"]], "Kedro concepts": [[51, "kedro-concepts"]], "Summary": [[51, "summary"], [50, "summary"], [52, "summary"], [26, "summary"], [28, "summary"], [27, "summary"]], "Node": [[51, "node"], [270, "node"]], "Pipeline": [[51, "pipeline"], [270, "pipeline"]], "Kedro project directory structure": [[51, "kedro-project-directory-structure"]], "conf": [[51, "conf"]], "conf/base": [[51, "conf-base"]], "conf/local": [[51, "conf-local"]], "data": [[51, "data"]], "src": [[51, "src"]], "Welcome to Kedro\u2019s documentation!": [[57, "welcome-to-kedro-s-documentation"]], "Learn about Kedro": [[57, null]], "Tutorial and basic Kedro usage": [[57, null]], "Kedro projects": [[57, null]], "Advanced usage": [[57, null]], "Contribute to Kedro": [[57, null], [10, "contribute-to-kedro"]], "API documentation": [[57, "api-documentation"]], "Indices and tables": [[57, "indices-and-tables"]], "kedro": [[61, "kedro"]], "Introduction to Kedro": [[59, "introduction-to-kedro"]], "Hooks examples": [[54, "hooks-examples"]], "Add memory consumption tracking": [[54, "add-memory-consumption-tracking"]], "Add data validation": [[54, "add-data-validation"]], "V2 API": [[54, "v2-api"]], "V3 API": [[54, "v3-api"]], "Add observability to your pipeline": [[54, "add-observability-to-your-pipeline"]], "Add metrics tracking to your model": [[54, "add-metrics-tracking-to-your-model"]], "Modify node inputs using before_node_run hook": [[54, "modify-node-inputs-using-before-node-run-hook"]], "kedro.KedroPythonVersionWarning": [[62, "kedro-kedropythonversionwarning"]], "Set up Kedro": [[50, "set-up-kedro"]], "Installation prerequisites": [[50, "installation-prerequisites"]], "Create a virtual environment for your Kedro project": [[50, "create-a-virtual-environment-for-your-kedro-project"]], "How to create a new virtual environment using conda": [[50, "how-to-create-a-new-virtual-environment-using-conda"]], "How to create a new virtual environment without using conda": [[50, "how-to-create-a-new-virtual-environment-without-using-conda"]], "How to install Kedro using pip": [[50, "how-to-install-kedro-using-pip"]], "How to verify your Kedro installation": [[50, "how-to-verify-your-kedro-installation"]], "How to upgrade Kedro": [[50, "how-to-upgrade-kedro"]], "How to install a development version of Kedro": [[50, "how-to-install-a-development-version-of-kedro"]], "FAQs": [[48, "faqs"]], "Visualisation": [[48, "visualisation"]], "Working with Jupyter": [[48, "working-with-jupyter"]], "Kedro project development": [[48, "kedro-project-development"]], "Configuration": [[48, "configuration"], [4, "configuration"], [2, "configuration"]], "Advanced topics": [[48, "advanced-topics"]], "Datasets and the Data Catalog": [[48, "datasets-and-the-data-catalog"]], "Nodes and pipelines": [[48, "nodes-and-pipelines"], [259, "nodes-and-pipelines"]], "What is data engineering convention?": [[48, "what-is-data-engineering-convention"]], "Concepts": [[56, "concepts"]], "Hook specification": [[56, "hook-specification"]], "CLI hooks": [[56, "cli-hooks"]], "Hook implementation": [[56, "hook-implementation"]], "Registering your Hook implementations with Kedro": [[56, "registering-your-hook-implementations-with-kedro"]], "Disable auto-registered plugins\u2019 Hooks": [[56, "disable-auto-registered-plugins-hooks"]], "Under the hood": [[56, "under-the-hood"]], "Create a new empty project": [[52, "create-a-new-empty-project"]], "Create a new project from a configuration file": [[52, "create-a-new-project-from-a-configuration-file"]], "Create a new project containing example code": [[52, "create-a-new-project-containing-example-code"]], "Visualise a Kedro project": [[52, "visualise-a-kedro-project"]], "Where next?": [[52, "where-next"]], "More information about the pandas-iris example project": [[52, "more-information-about-the-pandas-iris-example-project"]], "Background information": [[52, "background-information"]], "Iris example: visualisation": [[52, "iris-example-visualisation"]], "Use Hooks to extend a node\u2019s behaviour": [[53, "use-hooks-to-extend-a-node-s-behaviour"]], "Use Hooks to customise the dataset load and save methods": [[53, "use-hooks-to-customise-the-dataset-load-and-save-methods"]], "Use Hooks to load external credentials": [[53, "use-hooks-to-load-external-credentials"]], "First steps": [[49, "first-steps"]], "PySpark integration": [[58, "pyspark-integration"]], "Centralise Spark configuration in conf/base/spark.yml": [[58, "centralise-spark-configuration-in-conf-base-spark-yml"]], "Initialise a SparkSession using a hook": [[58, "initialise-a-sparksession-using-a-hook"]], "Use Kedro\u2019s built-in Spark datasets to load and save raw data": [[58, "use-kedro-s-built-in-spark-datasets-to-load-and-save-raw-data"]], "Spark and Delta Lake interaction": [[58, "spark-and-delta-lake-interaction"]], "Use MemoryDataSet for intermediary DataFrame": [[58, "use-memorydataset-for-intermediary-dataframe"]], "Use MemoryDataSet with copy_mode=\"assign\" for non-DataFrame Spark objects": [[58, "use-memorydataset-with-copy-mode-assign-for-non-dataframe-spark-objects"]], "Tips for maximising concurrency using ThreadRunner": [[58, "tips-for-maximising-concurrency-using-threadrunner"]], "Advanced Data Catalog usage": [[12, "advanced-data-catalog-usage"]], "How to read the same file using two different datasets": [[12, "how-to-read-the-same-file-using-two-different-datasets"]], "A typical example of transcoding": [[12, "a-typical-example-of-transcoding"]], "How does transcoding work?": [[12, "how-does-transcoding-work"]], "Access the Data Catalog in code": [[12, "access-the-data-catalog-in-code"]], "Configure a Data Catalog": [[12, "configure-a-data-catalog"]], "Load datasets": [[12, "load-datasets"]], "Behind the scenes": [[12, "behind-the-scenes"]], "View the available data sources": [[12, "view-the-available-data-sources"]], "Save data": [[12, "save-data"]], "Save data to memory": [[12, "save-data-to-memory"]], "Save data to a SQL database for querying": [[12, "save-data-to-a-sql-database-for-querying"]], "Save data in Parquet": [[12, "save-data-in-parquet"]], "Accessing a dataset that needs credentials": [[12, "accessing-a-dataset-that-needs-credentials"]], "Versioning using the Code API": [[12, "versioning-using-the-code-api"]], "Parameters": [[5, "parameters"], [0, "parameters"]], "How to use parameters": [[5, "how-to-use-parameters"]], "How to load parameters in code": [[5, "how-to-load-parameters-in-code"]], "How to specify parameters at runtime": [[5, "how-to-specify-parameters-at-runtime"]], "Contribute to the Kedro documentation": [[9, "contribute-to-the-kedro-documentation"]], "How do I rebuild the documentation after I make changes to it?": [[9, "how-do-i-rebuild-the-documentation-after-i-make-changes-to-it"]], "Set up to build Kedro documentation": [[9, "set-up-to-build-kedro-documentation"]], "Build the documentation": [[9, "build-the-documentation"]], "Extend Kedro documentation": [[9, "extend-kedro-documentation"]], "Add new pages": [[9, "add-new-pages"]], "Move or remove pages": [[9, "move-or-remove-pages"]], "Create a pull request": [[9, "create-a-pull-request"], [7, "create-a-pull-request"]], "Help!": [[9, "help"]], "Kedro documentation style guide": [[9, "kedro-documentation-style-guide"]], "Configuration source": [[2, "configuration-source"]], "Configuration environments": [[2, "configuration-environments"]], "Base": [[2, "base"]], "Local": [[2, "local"]], "Configuration loading": [[2, "configuration-loading"]], "Configuration file names": [[2, "configuration-file-names"]], "Configuration patterns": [[2, "configuration-patterns"]], "How to use Kedro configuration": [[2, "how-to-use-kedro-configuration"]], "How to change the setting for a configuration source folder": [[2, "how-to-change-the-setting-for-a-configuration-source-folder"]], "How to change the configuration source folder at runtime": [[2, "how-to-change-the-configuration-source-folder-at-runtime"]], "How to read configuration from a compressed file": [[2, "how-to-read-configuration-from-a-compressed-file"]], "How to access configuration in code": [[2, "how-to-access-configuration-in-code"]], "How to specify additional configuration environments": [[2, "how-to-specify-additional-configuration-environments"]], "How to change the default overriding environment": [[2, "how-to-change-the-default-overriding-environment"]], "How to use only one configuration environment": [[2, "how-to-use-only-one-configuration-environment"]], "Join the Technical Steering Committee": [[11, "join-the-technical-steering-committee"]], "Responsibilities of a maintainer": [[11, "responsibilities-of-a-maintainer"]], "Product development": [[11, "product-development"]], "Community management": [[11, "community-management"]], "Requirements to become a maintainer": [[11, "requirements-to-become-a-maintainer"]], "Kedro maintainers": [[11, "kedro-maintainers"]], "Application process": [[11, "application-process"]], "Voting process": [[11, "voting-process"]], "Other issues or proposals": [[11, "other-issues-or-proposals"]], "Adding or removing maintainers": [[11, "adding-or-removing-maintainers"]], "Guidelines for contributing developers": [[7, "guidelines-for-contributing-developers"]], "Before you start: development set up": [[7, "before-you-start-development-set-up"]], "Get started: areas of contribution": [[7, "get-started-areas-of-contribution"]], "core contribution process": [[7, "core-contribution-process"]], "extras contribution process": [[7, "extras-contribution-process"]], "Pull request title conventions": [[7, "pull-request-title-conventions"]], "Hints on pre-commit usage": [[7, "hints-on-pre-commit-usage"]], "Developer Certificate of Origin": [[7, "developer-certificate-of-origin"]], "Need help?": [[7, "need-help"]], "Introduction to the Data Catalog": [[13, "introduction-to-the-data-catalog"]], "The basics of catalog.yml": [[13, "the-basics-of-catalog-yml"]], "Dataset type": [[13, "dataset-type"]], "Dataset filepath": [[13, "dataset-filepath"]], "Additional settings in catalog.yml": [[13, "additional-settings-in-catalog-yml"]], "Load and save arguments": [[13, "load-and-save-arguments"]], "Dataset access credentials": [[13, "dataset-access-credentials"]], "Dataset versioning": [[13, "dataset-versioning"]], "Use the Data Catalog within Kedro configuration": [[13, "use-the-data-catalog-within-kedro-configuration"]], "Advanced: Tutorial to create a custom dataset": [[15, "advanced-tutorial-to-create-a-custom-dataset"]], "AbstractDataSet": [[15, "abstractdataset"]], "Scenario": [[15, "scenario"]], "The anatomy of a dataset": [[15, "the-anatomy-of-a-dataset"]], "Implement the _load method with fsspec": [[15, "implement-the-load-method-with-fsspec"]], "Implement the _save method with fsspec": [[15, "implement-the-save-method-with-fsspec"]], "Implement the _describe method": [[15, "implement-the-describe-method"]], "The complete example": [[15, "the-complete-example"]], "Integration with PartitionedDataSet": [[15, "integration-with-partitioneddataset"]], "Versioning": [[15, "versioning"]], "How to implement versioning in your dataset": [[15, "how-to-implement-versioning-in-your-dataset"]], "version namedtuple": [[15, "version-namedtuple"]], "Thread-safety": [[15, "thread-safety"]], "How to handle credentials and different filesystems": [[15, "how-to-handle-credentials-and-different-filesystems"]], "How to contribute a custom dataset implementation": [[15, "how-to-contribute-a-custom-dataset-implementation"]], "Contribute changes to Kedro that are tested on Databricks": [[8, "contribute-changes-to-kedro-that-are-tested-on-databricks"]], "How to deploy a development version of Kedro to Databricks": [[8, "how-to-deploy-a-development-version-of-kedro-to-databricks"]], "How to install a build of Kedro onto Databricks": [[8, "how-to-install-a-build-of-kedro-onto-databricks"]], "How to set up the Databricks CLI to test a Kedro build": [[8, "how-to-set-up-the-databricks-cli-to-test-a-kedro-build"]], "How to use make databricks-build to test your Kedro build": [[8, "how-to-use-make-databricks-build-to-test-your-kedro-build"]], "Backwards compatibility & breaking changes": [[6, "backwards-compatibility-breaking-changes"]], "When should I make a breaking change?": [[6, "when-should-i-make-a-breaking-change"]], "The Kedro release model": [[6, "the-kedro-release-model"]], "Data Catalog YAML examples": [[14, "data-catalog-yaml-examples"]], "Load data from a local binary file using utf-8 encoding": [[14, "load-data-from-a-local-binary-file-using-utf-8-encoding"]], "Save data to a CSV file without row names (index) using utf-8 encoding": [[14, "save-data-to-a-csv-file-without-row-names-index-using-utf-8-encoding"]], "Load/save a CSV file from/to a local file system": [[14, "load-save-a-csv-file-from-to-a-local-file-system"]], "Load/save a CSV on a local file system, using specified load/save arguments": [[14, "load-save-a-csv-on-a-local-file-system-using-specified-load-save-arguments"]], "Load/save a compressed CSV on a local file system": [[14, "load-save-a-compressed-csv-on-a-local-file-system"]], "Load a CSV file from a specific S3 bucket, using credentials and load arguments": [[14, "load-a-csv-file-from-a-specific-s3-bucket-using-credentials-and-load-arguments"]], "Load/save a pickle file from/to a local file system": [[14, "load-save-a-pickle-file-from-to-a-local-file-system"]], "Load an Excel file from Google Cloud Storage": [[14, "load-an-excel-file-from-google-cloud-storage"]], "Load a multi-sheet Excel file from a local file system": [[14, "load-a-multi-sheet-excel-file-from-a-local-file-system"]], "Save an image created with Matplotlib on Google Cloud Storage": [[14, "save-an-image-created-with-matplotlib-on-google-cloud-storage"]], "Load/save an HDF file on local file system storage, using specified load/save arguments": [[14, "load-save-an-hdf-file-on-local-file-system-storage-using-specified-load-save-arguments"]], "Load/save a parquet file on local file system storage, using specified load/save arguments": [[14, "load-save-a-parquet-file-on-local-file-system-storage-using-specified-load-save-arguments"]], "Load/save a Spark table on S3, using specified load/save arguments": [[14, "load-save-a-spark-table-on-s3-using-specified-load-save-arguments"]], "Load/save a SQL table using credentials, a database connection, and specified load/save arguments": [[14, "load-save-a-sql-table-using-credentials-a-database-connection-and-specified-load-save-arguments"]], "Load a SQL table with credentials and a database connection, and apply a SQL query to the table": [[14, "load-a-sql-table-with-credentials-and-a-database-connection-and-apply-a-sql-query-to-the-table"]], "Load data from an API endpoint": [[14, "load-data-from-an-api-endpoint"]], "Load data from Minio (S3 API Compatible Storage)": [[14, "load-data-from-minio-s3-api-compatible-storage"]], "Load a model saved as a pickle from Azure Blob Storage": [[14, "load-a-model-saved-as-a-pickle-from-azure-blob-storage"]], "Load a CSV file stored in a remote location through SSH": [[14, "load-a-csv-file-stored-in-a-remote-location-through-ssh"]], "Load multiple datasets with similar configuration using YAML anchors": [[14, "load-multiple-datasets-with-similar-configuration-using-yaml-anchors"]], "Create a Data Catalog YAML configuration file via the CLI": [[14, "create-a-data-catalog-yaml-configuration-file-via-the-cli"]], "Advanced configuration": [[0, "advanced-configuration"]], "TemplatedConfigLoader": [[0, "templatedconfigloader"]], "Provide template values through globals": [[0, "provide-template-values-through-globals"]], "OmegaConfigLoader": [[0, "omegaconfigloader"]], "Advanced Kedro configuration": [[0, "advanced-kedro-configuration"]], "How to change which configuration files are loaded": [[0, "how-to-change-which-configuration-files-are-loaded"]], "How to ensure non default configuration files get loaded": [[0, "how-to-ensure-non-default-configuration-files-get-loaded"]], "How to bypass the configuration loading rules": [[0, "how-to-bypass-the-configuration-loading-rules"]], "How to use Jinja2 syntax in configuration": [[0, "how-to-use-jinja2-syntax-in-configuration"]], "How to do templating with the OmegaConfigLoader": [[0, "how-to-do-templating-with-the-omegaconfigloader"]], "Catalog": [[0, "catalog"]], "Other configuration files": [[0, "other-configuration-files"]], "How to use resolvers in the OmegaConfigLoader": [[0, "how-to-use-resolvers-in-the-omegaconfigloader"]], "How to load credentials through environment variables": [[0, "how-to-load-credentials-through-environment-variables"]], "Migration guide for config loaders": [[1, "migration-guide-for-config-loaders"]], "ConfigLoader to OmegaConfigLoader": [[1, "configloader-to-omegaconfigloader"]], "1. Install the Required Library": [[1, "install-the-required-library"]], "2. Use the OmegaConfigLoader": [[1, "use-the-omegaconfigloader"]], "3. Import Statements": [[1, "import-statements"]], "4. File Format Support": [[1, "file-format-support"]], "5. Load Configuration": [[1, "load-configuration"]], "6. Exception Handling": [[1, "exception-handling"]], "Credentials": [[3, "credentials"]], "How to load credentials in code": [[3, "how-to-load-credentials-in-code"]], "How to work with AWS credentials": [[3, "how-to-work-with-aws-credentials"]], "Azure ML pipelines": [[24, "azure-ml-pipelines"]], "kedro-azureml plugin": [[24, "kedro-azureml-plugin"]], "AWS Batch (outdated documentation that needs review)": [[22, "aws-batch-outdated-documentation-that-needs-review"]], "Why would you use AWS Batch?": [[22, "why-would-you-use-aws-batch"]], "How to run a Kedro pipeline using AWS Batch": [[22, "how-to-run-a-kedro-pipeline-using-aws-batch"]], "Containerise your Kedro project": [[22, "containerise-your-kedro-project"], [21, "containerise-your-kedro-project"]], "Provision resources": [[22, "provision-resources"]], "Create IAM Role": [[22, "create-iam-role"]], "Create AWS Batch job definition": [[22, "create-aws-batch-job-definition"]], "Create AWS Batch compute environment": [[22, "create-aws-batch-compute-environment"]], "Create AWS Batch job queue": [[22, "create-aws-batch-job-queue"]], "Configure the credentials": [[22, "configure-the-credentials"]], "Submit AWS Batch jobs": [[22, "submit-aws-batch-jobs"]], "Create a custom runner": [[22, "create-a-custom-runner"], [25, "create-a-custom-runner"]], "Set up Batch-related configuration": [[22, "set-up-batch-related-configuration"]], "Update CLI implementation": [[22, "update-cli-implementation"], [25, "update-cli-implementation"]], "Deploy": [[22, "deploy"], [25, "deploy"]], "Apache Airflow": [[19, "apache-airflow"]], "How to run a Kedro pipeline on Apache Airflow using a Kubernetes cluster": [[19, "how-to-run-a-kedro-pipeline-on-apache-airflow-using-a-kubernetes-cluster"]], "How to run a Kedro pipeline on Apache Airflow with Astronomer": [[19, "how-to-run-a-kedro-pipeline-on-apache-airflow-with-astronomer"]], "Strategy": [[19, "strategy"], [23, "strategy"]], "Tutorial project setup": [[19, "tutorial-project-setup"]], "Deployment process": [[19, "deployment-process"], [23, "deployment-process"]], "Step 1. Create new configuration environment to prepare a compatible DataCatalog": [[19, "step-1-create-new-configuration-environment-to-prepare-a-compatible-datacatalog"], [23, "step-1-create-new-configuration-environment-to-prepare-a-compatible-datacatalog"]], "Step 2. Package the Kedro pipeline as an Astronomer-compliant Docker image": [[19, "step-2-package-the-kedro-pipeline-as-an-astronomer-compliant-docker-image"]], "Step 3. Convert the Kedro pipeline into an Airflow DAG with kedro airflow": [[19, "step-3-convert-the-kedro-pipeline-into-an-airflow-dag-with-kedro-airflow"]], "Step 4. Launch the local Airflow cluster with Astronomer": [[19, "step-4-launch-the-local-airflow-cluster-with-astronomer"]], "Amazon SageMaker": [[20, "amazon-sagemaker"]], "The kedro-sagemaker plugin": [[20, "the-kedro-sagemaker-plugin"]], "Advanced: Partitioned and incremental datasets": [[18, "advanced-partitioned-and-incremental-datasets"]], "Partitioned datasets": [[18, "partitioned-datasets"]], "How to use PartitionedDataSet": [[18, "how-to-use-partitioneddataset"]], "Dataset definition": [[18, "dataset-definition"]], "Shorthand notation": [[18, "shorthand-notation"]], "Full notation": [[18, "full-notation"]], "Partitioned dataset credentials": [[18, "partitioned-dataset-credentials"]], "Partitioned dataset load": [[18, "partitioned-dataset-load"]], "Partitioned dataset save": [[18, "partitioned-dataset-save"]], "Partitioned dataset lazy saving": [[18, "partitioned-dataset-lazy-saving"]], "Incremental datasets": [[18, "incremental-datasets"]], "Incremental dataset loads": [[18, "incremental-dataset-loads"]], "Incremental dataset save": [[18, "incremental-dataset-save"]], "Incremental dataset confirm": [[18, "incremental-dataset-confirm"]], "Checkpoint configuration": [[18, "checkpoint-configuration"]], "Special checkpoint config keys": [[18, "special-checkpoint-config-keys"]], "Use a Databricks job to deploy a Kedro project": [[26, "use-a-databricks-job-to-deploy-a-kedro-project"]], "What are the advantages of packaging a Kedro project to run on Databricks?": [[26, "what-are-the-advantages-of-packaging-a-kedro-project-to-run-on-databricks"]], "What this page covers": [[26, "what-this-page-covers"], [28, "what-this-page-covers"], [27, "what-this-page-covers"]], "Set up your project for deployment to Databricks": [[26, "set-up-your-project-for-deployment-to-databricks"]], "Note your Databricks username and host": [[26, "note-your-databricks-username-and-host"], [27, "note-your-databricks-username-and-host"]], "Install Kedro and the databricks CLI in a new virtual environment": [[26, "install-kedro-and-the-databricks-cli-in-a-new-virtual-environment"]], "Authenticate the Databricks CLI": [[26, "authenticate-the-databricks-cli"], [27, "authenticate-the-databricks-cli"]], "Create an entry point for Databricks": [[26, "create-an-entry-point-for-databricks"]], "Package your project": [[26, "package-your-project"]], "Upload project data and configuration to DBFS": [[26, "upload-project-data-and-configuration-to-dbfs"]], "Deploy and run your Kedro project using the workspace UI": [[26, "deploy-and-run-your-kedro-project-using-the-workspace-ui"]], "Create a new job": [[26, "create-a-new-job"]], "Create a new job cluster specific to your job": [[26, "create-a-new-job-cluster-specific-to-your-job"]], "Configure the job": [[26, "configure-the-job"]], "Run the job": [[26, "run-the-job"]], "Resources for automatically deploying to Databricks": [[26, "resources-for-automatically-deploying-to-databricks"]], "How to use the Databricks API to automatically deploy a Kedro project": [[26, "how-to-use-the-databricks-api-to-automatically-deploy-a-kedro-project"]], "How to use the Databricks CLI to automatically deploy a Kedro project": [[26, "how-to-use-the-databricks-cli-to-automatically-deploy-a-kedro-project"]], "The Kedro Data Catalog": [[16, "the-kedro-data-catalog"]], "Kedro dataset factories": [[17, "kedro-dataset-factories"]], "Generalise datasets with similar names and types": [[17, "generalise-datasets-with-similar-names-and-types"]], "Generalise datasets of the same type": [[17, "generalise-datasets-of-the-same-type"]], "Generalise datasets using namespaces": [[17, "generalise-datasets-using-namespaces"]], "Generalise datasets of the same type in different layers": [[17, "generalise-datasets-of-the-same-type-in-different-layers"]], "Generalise datasets using multiple dataset factories": [[17, "generalise-datasets-using-multiple-dataset-factories"]], "Generalise all datasets with a catch-all dataset factory": [[17, "generalise-all-datasets-with-a-catch-all-dataset-factory"]], "Use a Databricks workspace to develop a Kedro project": [[28, "use-a-databricks-workspace-to-develop-a-kedro-project"]], "Set up your project": [[28, "set-up-your-project"], [27, "set-up-your-project"]], "Install Kedro in a new virtual environment": [[28, "install-kedro-in-a-new-virtual-environment"]], "Create a GitHub repository": [[28, "create-a-github-repository"]], "Create a GitHub personal access token": [[28, "create-a-github-personal-access-token"]], "Push your Kedro project to the GitHub repository": [[28, "push-your-kedro-project-to-the-github-repository"]], "Create a repo on Databricks": [[28, "create-a-repo-on-databricks"]], "Create a new Databricks notebook": [[28, "create-a-new-databricks-notebook"], [27, "create-a-new-databricks-notebook"]], "Copy project data to DBFS using dbutils": [[28, "copy-project-data-to-dbfs-using-dbutils"]], "Run your project": [[28, "run-your-project"], [27, "run-your-project"]], "Modify your project and test the changes": [[28, "modify-your-project-and-test-the-changes"], [27, "modify-your-project-and-test-the-changes"]], "Modify the training / test split ratio": [[28, "modify-the-training-test-split-ratio"], [27, "modify-the-training-test-split-ratio"]], "Re-run your project": [[28, "re-run-your-project"], [27, "re-run-your-project"]], "Managing your Databricks Repo": [[28, "managing-your-databricks-repo"]], "Databricks": [[30, "databricks"]], "Visualise a Kedro project in Databricks notebooks": [[29, "visualise-a-kedro-project-in-databricks-notebooks"]], "Dask": [[25, "dask"]], "Why would you use Dask?": [[25, "why-would-you-use-dask"]], "How to distribute your Kedro pipeline using Dask": [[25, "how-to-distribute-your-kedro-pipeline-using-dask"]], "Set up Dask and related configuration": [[25, "set-up-dask-and-related-configuration"]], "Use an IDE, dbx and Databricks Repos to develop a Kedro project": [[27, "use-an-ide-dbx-and-databricks-repos-to-develop-a-kedro-project"]], "Install Kedro and dbx in a new virtual environment": [[27, "install-kedro-and-dbx-in-a-new-virtual-environment"]], "Create a Repo on Databricks": [[27, "create-a-repo-on-databricks"]], "Sync code with your Databricks Repo using dbx": [[27, "sync-code-with-your-databricks-repo-using-dbx"]], "Create a conf/local directory in your Databricks Repo": [[27, "create-a-conf-local-directory-in-your-databricks-repo"]], "Upload project data to DBFS": [[27, "upload-project-data-to-dbfs"]], "Argo Workflows (outdated documentation that needs review)": [[21, "argo-workflows-outdated-documentation-that-needs-review"]], "Why would you use Argo Workflows?": [[21, "why-would-you-use-argo-workflows"]], "How to run your Kedro pipeline using Argo Workflows": [[21, "how-to-run-your-kedro-pipeline-using-argo-workflows"]], "Create Argo Workflows spec": [[21, "create-argo-workflows-spec"]], "Submit Argo Workflows spec to Kubernetes": [[21, "submit-argo-workflows-spec-to-kubernetes"]], "Kedro-Argo plugin": [[21, "kedro-argo-plugin"]], "Distributed deployment": [[31, "distributed-deployment"]], "1. Containerise the pipeline": [[31, "containerise-the-pipeline"]], "2. Convert your Kedro pipeline into targeted platform primitives": [[31, "convert-your-kedro-pipeline-into-targeted-platform-primitives"]], "3. Parameterise the runs": [[31, "parameterise-the-runs"]], "4. (Optional) Create starters": [[31, "optional-create-starters"]], "AWS Step Functions": [[23, "aws-step-functions"]], "Why would you run a Kedro pipeline with AWS Step Functions?": [[23, "why-would-you-run-a-kedro-pipeline-with-aws-step-functions"]], "Step 2. Package the Kedro pipeline as an AWS Lambda-compliant Docker image": [[23, "step-2-package-the-kedro-pipeline-as-an-aws-lambda-compliant-docker-image"]], "Step 3. Write the deployment script": [[23, "step-3-write-the-deployment-script"]], "Step 4. Deploy the pipeline": [[23, "step-4-deploy-the-pipeline"]], "Limitations": [[23, "limitations"]], "kedro.framework.hooks.specs.DatasetSpecs": [[154, "kedro-framework-hooks-specs-datasetspecs"]], "kedro.framework.context.KedroContext": [[147, "kedro-framework-context-kedrocontext"]], "kedro.framework.hooks.specs": [[152, "kedro-framework-hooks-specs"]], "kedro.framework.cli.utils.python_call": [[144, "kedro-framework-cli-utils-python-call"]], "kedro.framework.hooks.specs.KedroContextSpecs": [[155, "kedro-framework-hooks-specs-kedrocontextspecs"]], "kedro.framework.project": [[158, "kedro-framework-project"]], "kedro.framework.project.configure_logging": [[159, "kedro-framework-project-configure-logging"]], "kedro.framework.context": [[146, "kedro-framework-context"]], "kedro.framework.hooks.markers": [[151, "kedro-framework-hooks-markers"]], "kedro.framework.context.KedroContextError": [[148, "kedro-framework-context-kedrocontexterror"]], "kedro.framework.cli.utils.split_string": [[145, "kedro-framework-cli-utils-split-string"]], "kedro.framework.hooks": [[149, "kedro-framework-hooks"]], "kedro.framework.hooks.specs.NodeSpecs": [[156, "kedro-framework-hooks-specs-nodespecs"]], "kedro.framework.hooks.manager": [[150, "kedro-framework-hooks-manager"]], "kedro.framework.hooks.specs.PipelineSpecs": [[157, "kedro-framework-hooks-specs-pipelinespecs"]], "kedro.framework.hooks.specs.DataCatalogSpecs": [[153, "kedro-framework-hooks-specs-datacatalogspecs"]], "Create a data processing pipeline": [[273, "create-a-data-processing-pipeline"]], "Data preprocessing node functions": [[273, "data-preprocessing-node-functions"]], "The data processing pipeline": [[273, "the-data-processing-pipeline"]], "Test the example": [[273, "test-the-example"]], "Preprocessed data registration": [[273, "preprocessed-data-registration"]], "Create a table for model input": [[273, "create-a-table-for-model-input"]], "Model input table registration": [[273, "model-input-table-registration"]], "Test the example again": [[273, "test-the-example-again"]], "Visualise the project": [[273, "visualise-the-project"]], "Checkpoint": [[273, "checkpoint"]], "Visualisation with Kedro-Viz": [[279, "visualisation-with-kedro-viz"]], "Set up the data": [[275, "set-up-the-data"]], "Project datasets": [[275, "project-datasets"]], "Dataset registration": [[275, "dataset-registration"]], "Test that Kedro can load the data": [[275, "test-that-kedro-can-load-the-data"]], "Further information": [[275, "further-information"]], "Custom data": [[275, "custom-data"]], "Supported data locations": [[275, "supported-data-locations"]], "Package an entire Kedro project": [[274, "package-an-entire-kedro-project"]], "Add documentation to a Kedro project": [[274, "add-documentation-to-a-kedro-project"]], "Set up the Sphinx project files": [[274, "set-up-the-sphinx-project-files"]], "Build HTML documentation": [[274, "build-html-documentation"]], "Documentation from docstrings": [[274, "documentation-from-docstrings"]], "Package a Kedro project": [[274, "package-a-kedro-project"]], "Run a packaged project": [[274, "run-a-packaged-project"]], "Docker, Airflow and other deployment targets": [[274, "docker-airflow-and-other-deployment-targets"]], "Spaceflights tutorial FAQs": [[277, "spaceflights-tutorial-faqs"]], "How do I resolve these common errors?": [[277, "how-do-i-resolve-these-common-errors"]], "DataSet errors": [[277, "dataset-errors"]], "DataSetError: Failed while loading data from data set": [[277, "dataseterror-failed-while-loading-data-from-data-set"]], "DataSetNotFoundError: DataSet not found in the catalog": [[277, "datasetnotfounderror-dataset-not-found-in-the-catalog"]], "DataSetError: An exception occurred when parsing config for DataSet": [[277, "dataseterror-an-exception-occurred-when-parsing-config-for-dataset"]], "Pipeline run": [[277, "pipeline-run"]], "Set up the spaceflights project": [[278, "set-up-the-spaceflights-project"]], "Create a new project": [[278, "create-a-new-project"]], "Install project dependencies": [[278, "install-project-dependencies"]], "Install the dependencies": [[278, "install-the-dependencies"]], "Optional: logging and configuration": [[278, "optional-logging-and-configuration"]], "Configuration best practice to avoid leaking confidential data": [[278, "configuration-best-practice-to-avoid-leaking-confidential-data"]], "Visualise charts in Kedro-Viz": [[282, "visualise-charts-in-kedro-viz"]], "Visualisation with Plotly": [[282, "visualisation-with-plotly"]], "Configure the Data Catalog": [[282, "configure-the-data-catalog"], [282, "id2"], [281, "configure-the-data-catalog"]], "Create the template reporting pipeline": [[282, "create-the-template-reporting-pipeline"]], "Add the Plotly reporting nodes": [[282, "add-the-plotly-reporting-nodes"]], "Update the reporting pipeline code": [[282, "update-the-reporting-pipeline-code"]], "Run the pipeline": [[282, "run-the-pipeline"], [282, "id3"]], "Visualisation with Matplotlib": [[282, "visualisation-with-matplotlib"]], "Add another node": [[282, "add-another-node"]], "Update the pipeline": [[282, "update-the-pipeline"]], "Create a data science pipeline": [[272, "create-a-data-science-pipeline"]], "Data science nodes": [[272, "data-science-nodes"]], "Input parameter configuration": [[272, "input-parameter-configuration"]], "Model registration": [[272, "model-registration"]], "Data science pipeline": [[272, "data-science-pipeline"]], "Test the pipelines": [[272, "test-the-pipelines"]], "Slice a pipeline": [[272, "slice-a-pipeline"], [266, "slice-a-pipeline"]], "Optional: Extend the project with namespacing and a modular pipeline": [[272, "optional-extend-the-project-with-namespacing-and-a-modular-pipeline"]], "How it works: the modular pipeline() wrapper": [[272, "how-it-works-the-modular-pipeline-wrapper"]], "How do namespaces affect parameters?": [[272, "how-do-namespaces-affect-parameters"]], "Optional: Kedro runners": [[272, "optional-kedro-runners"]], "Next steps: Tutorial": [[276, "next-steps-tutorial"]], "Get help": [[276, "get-help"]], "Terminology": [[276, "terminology"]], "Project root directory": [[276, "project-root-directory"]], "Dependencies": [[276, "dependencies"], [252, "dependencies"]], "Standard development workflow": [[276, "standard-development-workflow"]], "Preview data in Kedro-Viz": [[281, "preview-data-in-kedro-viz"]], "Previewing Data on Kedro-viz": [[281, "previewing-data-on-kedro-viz"]], "Visualise the spaceflights project": [[280, "visualise-the-spaceflights-project"]], "Automatic visualisation updates": [[280, "automatic-visualisation-updates"]], "Visualise layers": [[280, "visualise-layers"]], "Share a pipeline visualisation": [[280, "share-a-pipeline-visualisation"]], "What are modular pipelines?": [[261, "what-are-modular-pipelines"]], "Key concepts": [[261, "key-concepts"]], "How do I create a modular pipeline?": [[261, "how-do-i-create-a-modular-pipeline"]], "What does kedro pipeline create do?": [[261, "what-does-kedro-pipeline-create-do"]], "Ensuring portability": [[261, "ensuring-portability"]], "Providing modular pipeline specific dependencies": [[261, "providing-modular-pipeline-specific-dependencies"]], "Using the modular pipeline() wrapper to provide overrides": [[261, "using-the-modular-pipeline-wrapper-to-provide-overrides"]], "Combining disconnected pipelines": [[261, "combining-disconnected-pipelines"]], "Using a modular pipeline multiple times": [[261, "using-a-modular-pipeline-multiple-times"]], "How to use a modular pipeline with different parameters": [[261, "how-to-use-a-modular-pipeline-with-different-parameters"]], "Micro-packaging": [[260, "micro-packaging"]], "Package multiple micro-packages": [[260, "package-multiple-micro-packages"]], "Providing fsspec arguments": [[260, "providing-fsspec-arguments"]], "Pull multiple micro-packages": [[260, "pull-multiple-micro-packages"]], "Run a pipeline": [[265, "run-a-pipeline"]], "Runners": [[265, "runners"]], "SequentialRunner": [[265, "sequentialrunner"]], "ParallelRunner": [[265, "parallelrunner"]], "Multiprocessing": [[265, "multiprocessing"]], "Multithreading": [[265, "multithreading"]], "Custom runners": [[265, "custom-runners"]], "Load and save asynchronously": [[265, "load-and-save-asynchronously"]], "Run a pipeline by name": [[265, "run-a-pipeline-by-name"]], "Run pipelines with IO": [[265, "run-pipelines-with-io"]], "Output to a file": [[265, "output-to-a-file"]], "Configure kedro run arguments": [[265, "configure-kedro-run-arguments"]], "Nodes": [[262, "nodes"]], "How to create a node": [[262, "how-to-create-a-node"]], "Node definition syntax": [[262, "node-definition-syntax"]], "Syntax for input variables": [[262, "syntax-for-input-variables"]], "Syntax for output variables": [[262, "syntax-for-output-variables"]], "**kwargs-only node functions": [[262, "kwargs-only-node-functions"]], "How to tag a node": [[262, "how-to-tag-a-node"]], "How to run a node": [[262, "how-to-run-a-node"]], "How to use generator functions in a node": [[262, "how-to-use-generator-functions-in-a-node"]], "Set up the project": [[262, "set-up-the-project"]], "Loading data with Generators": [[262, "loading-data-with-generators"]], "Saving data with Generators": [[262, "saving-data-with-generators"]], "Slice a pipeline by providing inputs": [[266, "slice-a-pipeline-by-providing-inputs"]], "Slice a pipeline by specifying nodes": [[266, "slice-a-pipeline-by-specifying-nodes"]], "Slice a pipeline by specifying final nodes": [[266, "slice-a-pipeline-by-specifying-final-nodes"]], "Slice a pipeline with tagged nodes": [[266, "slice-a-pipeline-with-tagged-nodes"]], "Slice a pipeline by running specified nodes": [[266, "slice-a-pipeline-by-running-specified-nodes"]], "How to recreate missing outputs": [[266, "how-to-recreate-missing-outputs"]], "Kedro for notebook users": [[267, "kedro-for-notebook-users"]], "Kedro as a data registry": [[269, "kedro-as-a-data-registry"]], "Usage": [[269, "usage"]], "Kedro glossary": [[270, "kedro-glossary"]], "Data engineering vs Data science": [[270, "data-engineering-vs-data-science"]], "Kedro": [[270, "kedro"]], "KedroContext": [[270, "kedrocontext"]], "KedroSession": [[270, "kedrosession"]], "Kedro-Viz": [[270, "kedro-viz"]], "Layers (data engineering convention)": [[270, "layers-data-engineering-convention"]], "Modular pipeline": [[270, "modular-pipeline"]], "Node execution order": [[270, "node-execution-order"]], "Pipeline slicing": [[270, "pipeline-slicing"]], "Runner": [[270, "runner"]], "Starters": [[270, "starters"]], "Tags": [[270, "tags"]], "Workflow dependencies": [[270, "workflow-dependencies"], [252, "workflow-dependencies"]], "The pipeline registry": [[264, "the-pipeline-registry"]], "Pipeline autodiscovery": [[264, "pipeline-autodiscovery"]], "Logging": [[257, "logging"]], "Pipelines": [[263, "pipelines"]], "How to build a pipeline": [[263, "how-to-build-a-pipeline"]], "How to tag a pipeline": [[263, "how-to-tag-a-pipeline"]], "How to merge multiple pipelines": [[263, "how-to-merge-multiple-pipelines"]], "Information about the nodes in a pipeline": [[263, "information-about-the-nodes-in-a-pipeline"]], "Information about pipeline inputs and outputs": [[263, "information-about-pipeline-inputs-and-outputs"]], "Bad pipelines": [[263, "bad-pipelines"]], "Pipeline with bad nodes": [[263, "pipeline-with-bad-nodes"]], "Pipeline with circular dependencies": [[263, "pipeline-with-circular-dependencies"]], "FAQs and resources": [[271, "faqs-and-resources"]], "Kedro starters": [[256, "kedro-starters"]], "How to use Kedro starters": [[256, "how-to-use-kedro-starters"]], "Starter aliases": [[256, "starter-aliases"]], "List of official starters": [[256, "list-of-official-starters"]], "Starter versioning": [[256, "starter-versioning"]], "Use a starter with a configuration file": [[256, "use-a-starter-with-a-configuration-file"]], "How to create a Kedro starter": [[256, "how-to-create-a-kedro-starter"]], "Configuration variables": [[256, "configuration-variables"]], "Example Kedro starter": [[256, "example-kedro-starter"]], "Kedro and Jupyter Notebooks": [[268, "kedro-and-jupyter-notebooks"]], "A custom Kedro kernel": [[268, "a-custom-kedro-kernel"]], "Iris dataset example": [[268, "iris-dataset-example"]], "catalog": [[268, "catalog"]], "context": [[268, "context"]], "pipelines": [[268, "pipelines"]], "session": [[268, "session"]], "%reload_kedro line magic": [[268, "reload-kedro-line-magic"]], "%run_viz line magic": [[268, "run-viz-line-magic"]], "Convert functions from Jupyter Notebooks into Kedro nodes": [[268, "convert-functions-from-jupyter-notebooks-into-kedro-nodes"]], "Useful to know\u2026": [[268, "useful-to-know"]], "Managed services": [[268, "managed-services"]], "IPython, JupyterLab and other Jupyter clients": [[268, "ipython-jupyterlab-and-other-jupyter-clients"]], "Find out more": [[268, "find-out-more"]], "Default framework-side logging configuration": [[258, "default-framework-side-logging-configuration"]], "Project-side logging configuration": [[258, "project-side-logging-configuration"]], "Using KEDRO_LOGGING_CONFIG environment variable": [[258, "using-kedro-logging-config-environment-variable"]], "Disable file-based logging": [[258, "disable-file-based-logging"]], "Customise the rich Handler": [[258, "customise-the-rich-handler"]], "Use plain console logging": [[258, "use-plain-console-logging"]], "Rich logging in a dumb terminal": [[258, "rich-logging-in-a-dumb-terminal"]], "Rich logging in Jupyter": [[258, "rich-logging-in-jupyter"]], "Perform logging in your project": [[258, "perform-logging-in-your-project"]], "kedro.io.DataSetError": [[180, "kedro-io-dataseterror"]], "kedro.io.DataSetAlreadyExistsError": [[179, "kedro-io-datasetalreadyexistserror"]], "kedro.io.Version": [[186, "kedro-io-version"]], "kedro.ipython": [[187, "kedro-ipython"]], "kedro.io.PartitionedDataSet": [[185, "kedro-io-partitioneddataset"]], "kedro.io.MemoryDataSet": [[184, "kedro-io-memorydataset"]], "kedro.io.DataSetNotFoundError": [[181, "kedro-io-datasetnotfounderror"]], "kedro.ipython.reload_kedro": [[190, "kedro-ipython-reload-kedro"]], "kedro.ipython.magic_reload_kedro": [[189, "kedro-ipython-magic-reload-kedro"]], "kedro.io.IncrementalDataSet": [[182, "kedro-io-incrementaldataset"]], "kedro.io.DataCatalog": [[178, "kedro-io-datacatalog"]], "kedro.io.CachedDataSet": [[177, "kedro-io-cacheddataset"]], "kedro.ipython.load_ipython_extension": [[188, "kedro-ipython-load-ipython-extension"]], "kedro.io.AbstractVersionedDataSet": [[176, "kedro-io-abstractversioneddataset"]], "kedro.logging": [[191, "kedro-logging"]], "kedro.io.LambdaDataSet": [[183, "kedro-io-lambdadataset"]], "kedro.framework.session.session": [[164, "kedro-framework-session-session"]], "kedro.framework.session.session.KedroSessionError": [[166, "kedro-framework-session-session-kedrosessionerror"]], "kedro.framework.session.session.KedroSession": [[165, "kedro-framework-session-session-kedrosession"]], "kedro.framework.session.shelvestore": [[167, "kedro-framework-session-shelvestore"]], "kedro.framework.project.validate_settings": [[162, "kedro-framework-project-validate-settings"]], "kedro.framework.session.shelvestore.ShelveStore": [[168, "kedro-framework-session-shelvestore-shelvestore"]], "kedro.io": [[174, "kedro-io"]], "kedro.framework.session": [[163, "kedro-framework-session"]], "kedro.framework.startup.ProjectMetadata": [[172, "kedro-framework-startup-projectmetadata"]], "kedro.io.AbstractDataSet": [[175, "kedro-io-abstractdataset"]], "kedro.framework.project.configure_project": [[160, "kedro-framework-project-configure-project"]], "kedro.framework.session.store.BaseSessionStore": [[170, "kedro-framework-session-store-basesessionstore"]], "kedro.framework.startup.bootstrap_project": [[173, "kedro-framework-startup-bootstrap-project"]], "kedro.framework.startup": [[171, "kedro-framework-startup"]], "kedro.framework.session.store": [[169, "kedro-framework-session-store"]], "kedro.framework.project.find_pipelines": [[161, "kedro-framework-project-find-pipelines"]], "kedro.extras.datasets.yaml.YAMLDataSet": [[107, "kedro-extras-datasets-yaml-yamldataset"]], "kedro.extras.datasets.redis.PickleDataSet": [[97, "kedro-extras-datasets-redis-pickledataset"]], "kedro.extras.datasets.spark.SparkJDBCDataSet": [[101, "kedro-extras-datasets-spark-sparkjdbcdataset"]], "kedro.extras.logging.color_logger": [[111, "kedro-extras-logging-color-logger"]], "kedro.extras.datasets.text.TextDataSet": [[104, "kedro-extras-datasets-text-textdataset"]], "kedro.extras.logging": [[110, "kedro-extras-logging"]], "kedro.extras.datasets.spark.SparkDataSet": [[99, "kedro-extras-datasets-spark-sparkdataset"]], "kedro.extras.datasets.spark.SparkHiveDataSet": [[100, "kedro-extras-datasets-spark-sparkhivedataset"]], "kedro.extras.datasets.plotly.PlotlyDataSet": [[96, "kedro-extras-datasets-plotly-plotlydataset"]], "kedro.extras.datasets.tracking.JSONDataSet": [[105, "kedro-extras-datasets-tracking-jsondataset"]], "kedro.extras.extensions": [[108, "kedro-extras-extensions"]], "kedro.extras.datasets.tracking.MetricsDataSet": [[106, "kedro-extras-datasets-tracking-metricsdataset"]], "kedro.extras.datasets.svmlight.SVMLightDataSet": [[102, "kedro-extras-datasets-svmlight-svmlightdataset"]], "kedro.extras.datasets.tensorflow.TensorFlowModelDataset": [[103, "kedro-extras-datasets-tensorflow-tensorflowmodeldataset"]], "kedro.extras.datasets.spark.DeltaTableDataSet": [[98, "kedro-extras-datasets-spark-deltatabledataset"]], "kedro.extras.extensions.ipython": [[109, "kedro-extras-extensions-ipython"]], "kedro_datasets.spark.SparkHiveDataSet": [[242, "kedro-datasets-spark-sparkhivedataset"]], "Project-specific dependencies": [[252, "project-specific-dependencies"]], "Install project-specific dependencies": [[252, "install-project-specific-dependencies"]], "Install dependencies related to the Data Catalog": [[252, "install-dependencies-related-to-the-data-catalog"]], "Install dependencies at a group-level": [[252, "install-dependencies-at-a-group-level"]], "Install dependencies at a type-level": [[252, "install-dependencies-at-a-type-level"]], "Kedro project setup": [[253, "kedro-project-setup"]], "kedro_datasets.spark.SparkJDBCDataSet": [[243, "kedro-datasets-spark-sparkjdbcdataset"]], "kedro_datasets.spark.DeltaTableDataSet": [[240, "kedro-datasets-spark-deltatabledataset"]], "kedro_datasets.text.TextDataSet": [[247, "kedro-datasets-text-textdataset"]], "Lifecycle management with KedroSession": [[254, "lifecycle-management-with-kedrosession"]], "Create a session": [[254, "create-a-session"]], "Project settings": [[255, "project-settings"]], "Application settings": [[255, "application-settings"]], "Project metadata": [[255, "project-metadata"]], "kedro_datasets.tensorflow.TensorFlowModelDataSet": [[246, "kedro-datasets-tensorflow-tensorflowmodeldataset"]], "kedro_datasets.svmlight.SVMLightDataSet": [[245, "kedro-datasets-svmlight-svmlightdataset"]], "kedro_datasets.tracking.JSONDataSet": [[248, "kedro-datasets-tracking-jsondataset"]], "kedro_datasets.video.VideoDataSet": [[250, "kedro-datasets-video-videodataset"]], "kedro_datasets.spark.SparkDataSet": [[241, "kedro-datasets-spark-sparkdataset"]], "kedro_datasets.tracking.MetricsDataSet": [[249, "kedro-datasets-tracking-metricsdataset"]], "kedro_datasets.yaml.YAMLDataSet": [[251, "kedro-datasets-yaml-yamldataset"]], "kedro_datasets.spark.SparkStreamingDataSet": [[244, "kedro-datasets-spark-sparkstreamingdataset"]], "kedro.runner.run_node": [[204, "kedro-runner-run-node"]], "kedro.pipeline.modular_pipeline.pipeline": [[196, "kedro-pipeline-modular-pipeline-pipeline"]], "kedro.pipeline.Pipeline": [[194, "kedro-pipeline-pipeline"]], "kedro.utils": [[205, "kedro-utils"]], "kedro.pipeline.node.Node": [[198, "kedro-pipeline-node-node"]], "kedro.logging.RichHandler": [[192, "kedro-logging-richhandler"]], "kedro.utils.load_obj": [[206, "kedro-utils-load-obj"]], "kedro.pipeline": [[193, "kedro-pipeline"]], "kedro.runner.SequentialRunner": [[202, "kedro-runner-sequentialrunner"]], "kedro.runner": [[199, "kedro-runner"]], "kedro.runner.ThreadRunner": [[203, "kedro-runner-threadrunner"]], "kedro.runner.ParallelRunner": [[201, "kedro-runner-parallelrunner"]], "kedro_datasets": [[207, "kedro-datasets"]], "kedro.runner.AbstractRunner": [[200, "kedro-runner-abstractrunner"]], "kedro.pipeline.node": [[197, "kedro-pipeline-node"]], "kedro.pipeline.modular_pipeline.ModularPipelineError": [[195, "kedro-pipeline-modular-pipeline-modularpipelineerror"]], "kedro.config.OmegaConfigLoader": [[66, "kedro-config-omegaconfigloader"]], "kedro.extras.datasets": [[69, "kedro-extras-datasets"]], "kedro.extras.datasets.dask.ParquetDataSet": [[72, "kedro-extras-datasets-dask-parquetdataset"]], "kedro.extras.datasets.json.JSONDataSet": [[76, "kedro-extras-datasets-json-jsondataset"]], "kedro.extras.datasets.networkx.GraphMLDataSet": [[79, "kedro-extras-datasets-networkx-graphmldataset"]], "kedro.extras.datasets.holoviews.HoloviewsWriter": [[75, "kedro-extras-datasets-holoviews-holoviewswriter"]], "kedro.config.ConfigLoader": [[64, "kedro-config-configloader"]], "kedro.extras.datasets.networkx.GMLDataSet": [[78, "kedro-extras-datasets-networkx-gmldataset"]], "kedro.extras.datasets.email.EmailMessageDataSet": [[73, "kedro-extras-datasets-email-emailmessagedataset"]], "kedro.config.TemplatedConfigLoader": [[67, "kedro-config-templatedconfigloader"]], "kedro.extras.datasets.geopandas.GeoJSONDataSet": [[74, "kedro-extras-datasets-geopandas-geojsondataset"]], "kedro.extras.datasets.biosequence.BioSequenceDataSet": [[71, "kedro-extras-datasets-biosequence-biosequencedataset"]], "kedro.extras.datasets.matplotlib.MatplotlibWriter": [[77, "kedro-extras-datasets-matplotlib-matplotlibwriter"]], "kedro.extras": [[68, "kedro-extras"]], "kedro.config.MissingConfigException": [[65, "kedro-config-missingconfigexception"]], "kedro.extras.datasets.api.APIDataSet": [[70, "kedro-extras-datasets-api-apidataset"]], "kedro.extras.datasets.pandas.ExcelDataSet": [[82, "kedro-extras-datasets-pandas-exceldataset"]], "kedro.extras.datasets.pandas.GBQTableDataSet": [[85, "kedro-extras-datasets-pandas-gbqtabledataset"]], "kedro.extras.datasets.pickle.PickleDataSet": [[93, "kedro-extras-datasets-pickle-pickledataset"]], "kedro.extras.datasets.networkx.JSONDataSet": [[80, "kedro-extras-datasets-networkx-jsondataset"]], "kedro.extras.datasets.pandas.SQLTableDataSet": [[91, "kedro-extras-datasets-pandas-sqltabledataset"]], "kedro.extras.datasets.pandas.JSONDataSet": [[88, "kedro-extras-datasets-pandas-jsondataset"]], "kedro.extras.datasets.pandas.GBQQueryDataSet": [[84, "kedro-extras-datasets-pandas-gbqquerydataset"]], "kedro.extras.datasets.pandas.ParquetDataSet": [[89, "kedro-extras-datasets-pandas-parquetdataset"]], "kedro.extras.datasets.pandas.CSVDataSet": [[81, "kedro-extras-datasets-pandas-csvdataset"]], "kedro.extras.datasets.pillow.ImageDataSet": [[94, "kedro-extras-datasets-pillow-imagedataset"]], "kedro.extras.datasets.pandas.FeatherDataSet": [[83, "kedro-extras-datasets-pandas-featherdataset"]], "kedro.extras.datasets.plotly.JSONDataSet": [[95, "kedro-extras-datasets-plotly-jsondataset"]], "kedro.extras.datasets.pandas.HDFDataSet": [[87, "kedro-extras-datasets-pandas-hdfdataset"]], "kedro.extras.datasets.pandas.GenericDataSet": [[86, "kedro-extras-datasets-pandas-genericdataset"]], "kedro.extras.datasets.pandas.XMLDataSet": [[92, "kedro-extras-datasets-pandas-xmldataset"]], "kedro.extras.datasets.pandas.SQLQueryDataSet": [[90, "kedro-extras-datasets-pandas-sqlquerydataset"]], "kedro_datasets.email.EmailMessageDataSet": [[212, "kedro-datasets-email-emailmessagedataset"]], "kedro_datasets.api.APIDataSet": [[208, "kedro-datasets-api-apidataset"]], "kedro_datasets.json.JSONDataSet": [[215, "kedro-datasets-json-jsondataset"]], "kedro_datasets.networkx.GMLDataSet": [[217, "kedro-datasets-networkx-gmldataset"]], "kedro_datasets.pandas.CSVDataSet": [[220, "kedro-datasets-pandas-csvdataset"]], "kedro_datasets.pandas.DeltaTableDataSet": [[221, "kedro-datasets-pandas-deltatabledataset"]], "kedro_datasets.matplotlib.MatplotlibWriter": [[216, "kedro-datasets-matplotlib-matplotlibwriter"]], "kedro_datasets.dask.ParquetDataSet": [[210, "kedro-datasets-dask-parquetdataset"]], "kedro_datasets.databricks.ManagedTableDataSet": [[211, "kedro-datasets-databricks-managedtabledataset"]], "kedro_datasets.networkx.GraphMLDataSet": [[218, "kedro-datasets-networkx-graphmldataset"]], "kedro_datasets.pandas.ExcelDataSet": [[222, "kedro-datasets-pandas-exceldataset"]], "kedro_datasets.geopandas.GeoJSONDataSet": [[213, "kedro-datasets-geopandas-geojsondataset"]], "kedro_datasets.holoviews.HoloviewsWriter": [[214, "kedro-datasets-holoviews-holoviewswriter"]], "kedro_datasets.networkx.JSONDataSet": [[219, "kedro-datasets-networkx-jsondataset"]], "kedro_datasets.pandas.FeatherDataSet": [[223, "kedro-datasets-pandas-featherdataset"]], "kedro_datasets.biosequence.BioSequenceDataSet": [[209, "kedro-datasets-biosequence-biosequencedataset"]], "kedro_datasets.pillow.ImageDataSet": [[234, "kedro-datasets-pillow-imagedataset"]], "kedro_datasets.pandas.XMLDataSet": [[232, "kedro-datasets-pandas-xmldataset"]], "kedro_datasets.pandas.GBQTableDataSet": [[225, "kedro-datasets-pandas-gbqtabledataset"]], "kedro_datasets.pandas.SQLQueryDataSet": [[230, "kedro-datasets-pandas-sqlquerydataset"]], "kedro_datasets.pandas.SQLTableDataSet": [[231, "kedro-datasets-pandas-sqltabledataset"]], "kedro_datasets.plotly.JSONDataSet": [[235, "kedro-datasets-plotly-jsondataset"]], "kedro_datasets.pandas.GenericDataSet": [[226, "kedro-datasets-pandas-genericdataset"]], "kedro_datasets.snowflake.SnowparkTableDataSet": [[239, "kedro-datasets-snowflake-snowparktabledataset"]], "kedro_datasets.pandas.GBQQueryDataSet": [[224, "kedro-datasets-pandas-gbqquerydataset"]], "kedro_datasets.plotly.PlotlyDataSet": [[236, "kedro-datasets-plotly-plotlydataset"]], "kedro_datasets.pandas.HDFDataSet": [[227, "kedro-datasets-pandas-hdfdataset"]], "kedro_datasets.pandas.ParquetDataSet": [[229, "kedro-datasets-pandas-parquetdataset"]], "kedro_datasets.pandas.JSONDataSet": [[228, "kedro-datasets-pandas-jsondataset"]], "kedro_datasets.polars.CSVDataSet": [[237, "kedro-datasets-polars-csvdataset"]], "kedro_datasets.redis.PickleDataSet": [[238, "kedro-datasets-redis-pickledataset"]], "kedro_datasets.pickle.PickleDataSet": [[233, "kedro-datasets-pickle-pickledataset"]]}, "indexentries": {"kedro": [[61, "module-kedro"]], "module": [[61, "module-kedro"], [63, "module-kedro.config"], [68, "module-kedro.extras"], [69, "module-kedro.extras.datasets"], [108, "module-kedro.extras.extensions"], [109, "module-kedro.extras.extensions.ipython"], [110, "module-kedro.extras.logging"], [111, "module-kedro.extras.logging.color_logger"], [113, "module-kedro.framework"], [114, "module-kedro.framework.cli"], [115, "module-kedro.framework.cli.catalog"], [116, "module-kedro.framework.cli.cli"], [119, "module-kedro.framework.cli.hooks"], [120, "module-kedro.framework.cli.hooks.manager"], [123, "module-kedro.framework.cli.hooks.markers"], [124, "module-kedro.framework.cli.hooks.specs"], [126, "module-kedro.framework.cli.jupyter"], [128, "module-kedro.framework.cli.micropkg"], [130, "module-kedro.framework.cli.pipeline"], [132, "module-kedro.framework.cli.project"], [133, "module-kedro.framework.cli.registry"], [134, "module-kedro.framework.cli.starters"], [136, "module-kedro.framework.cli.utils"], [146, "module-kedro.framework.context"], [149, "module-kedro.framework.hooks"], [150, "module-kedro.framework.hooks.manager"], [151, "module-kedro.framework.hooks.markers"], [152, "module-kedro.framework.hooks.specs"], [158, "module-kedro.framework.project"], [163, "module-kedro.framework.session"], [164, "module-kedro.framework.session.session"], [167, "module-kedro.framework.session.shelvestore"], [169, "module-kedro.framework.session.store"], [171, "module-kedro.framework.startup"], [174, "module-kedro.io"], [187, "module-kedro.ipython"], [191, "module-kedro.logging"], [193, "module-kedro.pipeline"], [199, "module-kedro.runner"], [205, "module-kedro.utils"], [207, "module-kedro_datasets"]], "kedropythonversionwarning (class in kedro)": [[62, "kedro.KedroPythonVersionWarning"]], "args (kedro.kedropythonversionwarning attribute)": [[62, "kedro.KedroPythonVersionWarning.args"]], "with_traceback() (kedro.kedropythonversionwarning method)": [[62, "kedro.KedroPythonVersionWarning.with_traceback"]], "kedro.config": [[63, "module-kedro.config"]], "configloader (class in kedro.config)": [[64, "kedro.config.ConfigLoader"]], "__init__() (kedro.config.configloader method)": [[64, "kedro.config.ConfigLoader.__init__"]], "clear() (kedro.config.configloader method)": [[64, "kedro.config.ConfigLoader.clear"]], "conf_paths (kedro.config.configloader property)": [[64, "kedro.config.ConfigLoader.conf_paths"]], "copy() (kedro.config.configloader method)": [[64, "kedro.config.ConfigLoader.copy"]], "fromkeys() (kedro.config.configloader class method)": [[64, "kedro.config.ConfigLoader.fromkeys"]], "get() (kedro.config.configloader method)": [[64, "kedro.config.ConfigLoader.get"]], "items() (kedro.config.configloader method)": [[64, "kedro.config.ConfigLoader.items"]], "keys() (kedro.config.configloader method)": [[64, "kedro.config.ConfigLoader.keys"]], "pop() (kedro.config.configloader method)": [[64, "kedro.config.ConfigLoader.pop"]], "popitem() (kedro.config.configloader method)": [[64, "kedro.config.ConfigLoader.popitem"]], "setdefault() (kedro.config.configloader method)": [[64, "kedro.config.ConfigLoader.setdefault"]], "update() (kedro.config.configloader method)": [[64, "kedro.config.ConfigLoader.update"]], "values() (kedro.config.configloader method)": [[64, "kedro.config.ConfigLoader.values"]], "missingconfigexception (class in kedro.config)": [[65, "kedro.config.MissingConfigException"]], "args (kedro.config.missingconfigexception attribute)": [[65, "kedro.config.MissingConfigException.args"]], "with_traceback() (kedro.config.missingconfigexception method)": [[65, "kedro.config.MissingConfigException.with_traceback"]], "omegaconfigloader (class in kedro.config)": [[66, "kedro.config.OmegaConfigLoader"]], "__init__() (kedro.config.omegaconfigloader method)": [[66, "kedro.config.OmegaConfigLoader.__init__"]], "clear() (kedro.config.omegaconfigloader method)": [[66, "kedro.config.OmegaConfigLoader.clear"]], "copy() (kedro.config.omegaconfigloader method)": [[66, "kedro.config.OmegaConfigLoader.copy"]], "fromkeys() (kedro.config.omegaconfigloader class method)": [[66, "kedro.config.OmegaConfigLoader.fromkeys"]], "get() (kedro.config.omegaconfigloader method)": [[66, "kedro.config.OmegaConfigLoader.get"]], "items() (kedro.config.omegaconfigloader method)": [[66, "kedro.config.OmegaConfigLoader.items"]], "keys() (kedro.config.omegaconfigloader method)": [[66, "kedro.config.OmegaConfigLoader.keys"]], "load_and_merge_dir_config() (kedro.config.omegaconfigloader method)": [[66, "kedro.config.OmegaConfigLoader.load_and_merge_dir_config"]], "pop() (kedro.config.omegaconfigloader method)": [[66, "kedro.config.OmegaConfigLoader.pop"]], "popitem() (kedro.config.omegaconfigloader method)": [[66, "kedro.config.OmegaConfigLoader.popitem"]], "setdefault() (kedro.config.omegaconfigloader method)": [[66, "kedro.config.OmegaConfigLoader.setdefault"]], "update() (kedro.config.omegaconfigloader method)": [[66, "kedro.config.OmegaConfigLoader.update"]], "values() (kedro.config.omegaconfigloader method)": [[66, "kedro.config.OmegaConfigLoader.values"]], "templatedconfigloader (class in kedro.config)": [[67, "kedro.config.TemplatedConfigLoader"]], "__init__() (kedro.config.templatedconfigloader method)": [[67, "kedro.config.TemplatedConfigLoader.__init__"]], "clear() (kedro.config.templatedconfigloader method)": [[67, "kedro.config.TemplatedConfigLoader.clear"]], "conf_paths (kedro.config.templatedconfigloader property)": [[67, "kedro.config.TemplatedConfigLoader.conf_paths"]], "copy() (kedro.config.templatedconfigloader method)": [[67, "kedro.config.TemplatedConfigLoader.copy"]], "fromkeys() (kedro.config.templatedconfigloader class method)": [[67, "kedro.config.TemplatedConfigLoader.fromkeys"]], "get() (kedro.config.templatedconfigloader method)": [[67, "kedro.config.TemplatedConfigLoader.get"]], "items() (kedro.config.templatedconfigloader method)": [[67, "kedro.config.TemplatedConfigLoader.items"]], "keys() (kedro.config.templatedconfigloader method)": [[67, "kedro.config.TemplatedConfigLoader.keys"]], "pop() (kedro.config.templatedconfigloader method)": [[67, "kedro.config.TemplatedConfigLoader.pop"]], "popitem() (kedro.config.templatedconfigloader method)": [[67, "kedro.config.TemplatedConfigLoader.popitem"]], "setdefault() (kedro.config.templatedconfigloader method)": [[67, "kedro.config.TemplatedConfigLoader.setdefault"]], "update() (kedro.config.templatedconfigloader method)": [[67, "kedro.config.TemplatedConfigLoader.update"]], "values() (kedro.config.templatedconfigloader method)": [[67, "kedro.config.TemplatedConfigLoader.values"]], "kedro.extras": [[68, "module-kedro.extras"]], "kedro.extras.datasets": [[69, "module-kedro.extras.datasets"]], "apidataset (class in kedro.extras.datasets.api)": [[70, "kedro.extras.datasets.api.APIDataSet"]], "__init__() (kedro.extras.datasets.api.apidataset method)": [[70, "kedro.extras.datasets.api.APIDataSet.__init__"]], "exists() (kedro.extras.datasets.api.apidataset method)": [[70, "kedro.extras.datasets.api.APIDataSet.exists"]], "from_config() (kedro.extras.datasets.api.apidataset class method)": [[70, "kedro.extras.datasets.api.APIDataSet.from_config"]], "load() (kedro.extras.datasets.api.apidataset method)": [[70, "kedro.extras.datasets.api.APIDataSet.load"]], "release() (kedro.extras.datasets.api.apidataset method)": [[70, "kedro.extras.datasets.api.APIDataSet.release"]], "save() (kedro.extras.datasets.api.apidataset method)": [[70, "kedro.extras.datasets.api.APIDataSet.save"]], "biosequencedataset (class in kedro.extras.datasets.biosequence)": [[71, "kedro.extras.datasets.biosequence.BioSequenceDataSet"]], "default_load_args (kedro.extras.datasets.biosequence.biosequencedataset attribute)": [[71, "kedro.extras.datasets.biosequence.BioSequenceDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.biosequence.biosequencedataset attribute)": [[71, "kedro.extras.datasets.biosequence.BioSequenceDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[71, "kedro.extras.datasets.biosequence.BioSequenceDataSet.__init__"]], "exists() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[71, "kedro.extras.datasets.biosequence.BioSequenceDataSet.exists"]], "from_config() (kedro.extras.datasets.biosequence.biosequencedataset class method)": [[71, "kedro.extras.datasets.biosequence.BioSequenceDataSet.from_config"]], "invalidate_cache() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[71, "kedro.extras.datasets.biosequence.BioSequenceDataSet.invalidate_cache"]], "load() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[71, "kedro.extras.datasets.biosequence.BioSequenceDataSet.load"]], "release() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[71, "kedro.extras.datasets.biosequence.BioSequenceDataSet.release"]], "save() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[71, "kedro.extras.datasets.biosequence.BioSequenceDataSet.save"]], "default_load_args (kedro.extras.datasets.dask.parquetdataset attribute)": [[72, "kedro.extras.datasets.dask.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.dask.parquetdataset attribute)": [[72, "kedro.extras.datasets.dask.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro.extras.datasets.dask)": [[72, "kedro.extras.datasets.dask.ParquetDataSet"]], "__init__() (kedro.extras.datasets.dask.parquetdataset method)": [[72, "kedro.extras.datasets.dask.ParquetDataSet.__init__"]], "exists() (kedro.extras.datasets.dask.parquetdataset method)": [[72, "kedro.extras.datasets.dask.ParquetDataSet.exists"]], "from_config() (kedro.extras.datasets.dask.parquetdataset class method)": [[72, "kedro.extras.datasets.dask.ParquetDataSet.from_config"]], "fs_args (kedro.extras.datasets.dask.parquetdataset property)": [[72, "kedro.extras.datasets.dask.ParquetDataSet.fs_args"]], "load() (kedro.extras.datasets.dask.parquetdataset method)": [[72, "kedro.extras.datasets.dask.ParquetDataSet.load"]], "release() (kedro.extras.datasets.dask.parquetdataset method)": [[72, "kedro.extras.datasets.dask.ParquetDataSet.release"]], "save() (kedro.extras.datasets.dask.parquetdataset method)": [[72, "kedro.extras.datasets.dask.ParquetDataSet.save"]], "default_load_args (kedro.extras.datasets.email.emailmessagedataset attribute)": [[73, "kedro.extras.datasets.email.EmailMessageDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.email.emailmessagedataset attribute)": [[73, "kedro.extras.datasets.email.EmailMessageDataSet.DEFAULT_SAVE_ARGS"]], "emailmessagedataset (class in kedro.extras.datasets.email)": [[73, "kedro.extras.datasets.email.EmailMessageDataSet"]], "__init__() (kedro.extras.datasets.email.emailmessagedataset method)": [[73, "kedro.extras.datasets.email.EmailMessageDataSet.__init__"]], "exists() (kedro.extras.datasets.email.emailmessagedataset method)": [[73, "kedro.extras.datasets.email.EmailMessageDataSet.exists"]], "from_config() (kedro.extras.datasets.email.emailmessagedataset class method)": [[73, "kedro.extras.datasets.email.EmailMessageDataSet.from_config"]], "load() (kedro.extras.datasets.email.emailmessagedataset method)": [[73, "kedro.extras.datasets.email.EmailMessageDataSet.load"]], "release() (kedro.extras.datasets.email.emailmessagedataset method)": [[73, "kedro.extras.datasets.email.EmailMessageDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.email.emailmessagedataset method)": [[73, "kedro.extras.datasets.email.EmailMessageDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.email.emailmessagedataset method)": [[73, "kedro.extras.datasets.email.EmailMessageDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.email.emailmessagedataset method)": [[73, "kedro.extras.datasets.email.EmailMessageDataSet.save"]], "default_load_args (kedro.extras.datasets.geopandas.geojsondataset attribute)": [[74, "kedro.extras.datasets.geopandas.GeoJSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.geopandas.geojsondataset attribute)": [[74, "kedro.extras.datasets.geopandas.GeoJSONDataSet.DEFAULT_SAVE_ARGS"]], "geojsondataset (class in kedro.extras.datasets.geopandas)": [[74, "kedro.extras.datasets.geopandas.GeoJSONDataSet"]], "__init__() (kedro.extras.datasets.geopandas.geojsondataset method)": [[74, "kedro.extras.datasets.geopandas.GeoJSONDataSet.__init__"]], "exists() (kedro.extras.datasets.geopandas.geojsondataset method)": [[74, "kedro.extras.datasets.geopandas.GeoJSONDataSet.exists"]], "from_config() (kedro.extras.datasets.geopandas.geojsondataset class method)": [[74, "kedro.extras.datasets.geopandas.GeoJSONDataSet.from_config"]], "invalidate_cache() (kedro.extras.datasets.geopandas.geojsondataset method)": [[74, "kedro.extras.datasets.geopandas.GeoJSONDataSet.invalidate_cache"]], "load() (kedro.extras.datasets.geopandas.geojsondataset method)": [[74, "kedro.extras.datasets.geopandas.GeoJSONDataSet.load"]], "release() (kedro.extras.datasets.geopandas.geojsondataset method)": [[74, "kedro.extras.datasets.geopandas.GeoJSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.geopandas.geojsondataset method)": [[74, "kedro.extras.datasets.geopandas.GeoJSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.geopandas.geojsondataset method)": [[74, "kedro.extras.datasets.geopandas.GeoJSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.geopandas.geojsondataset method)": [[74, "kedro.extras.datasets.geopandas.GeoJSONDataSet.save"]], "default_save_args (kedro.extras.datasets.holoviews.holoviewswriter attribute)": [[75, "kedro.extras.datasets.holoviews.HoloviewsWriter.DEFAULT_SAVE_ARGS"]], "holoviewswriter (class in kedro.extras.datasets.holoviews)": [[75, "kedro.extras.datasets.holoviews.HoloviewsWriter"]], "__init__() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[75, "kedro.extras.datasets.holoviews.HoloviewsWriter.__init__"]], "exists() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[75, "kedro.extras.datasets.holoviews.HoloviewsWriter.exists"]], "from_config() (kedro.extras.datasets.holoviews.holoviewswriter class method)": [[75, "kedro.extras.datasets.holoviews.HoloviewsWriter.from_config"]], "load() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[75, "kedro.extras.datasets.holoviews.HoloviewsWriter.load"]], "release() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[75, "kedro.extras.datasets.holoviews.HoloviewsWriter.release"]], "resolve_load_version() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[75, "kedro.extras.datasets.holoviews.HoloviewsWriter.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[75, "kedro.extras.datasets.holoviews.HoloviewsWriter.resolve_save_version"]], "save() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[75, "kedro.extras.datasets.holoviews.HoloviewsWriter.save"]], "default_save_args (kedro.extras.datasets.json.jsondataset attribute)": [[76, "kedro.extras.datasets.json.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.json)": [[76, "kedro.extras.datasets.json.JSONDataSet"]], "__init__() (kedro.extras.datasets.json.jsondataset method)": [[76, "kedro.extras.datasets.json.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.json.jsondataset method)": [[76, "kedro.extras.datasets.json.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.json.jsondataset class method)": [[76, "kedro.extras.datasets.json.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.json.jsondataset method)": [[76, "kedro.extras.datasets.json.JSONDataSet.load"]], "release() (kedro.extras.datasets.json.jsondataset method)": [[76, "kedro.extras.datasets.json.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.json.jsondataset method)": [[76, "kedro.extras.datasets.json.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.json.jsondataset method)": [[76, "kedro.extras.datasets.json.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.json.jsondataset method)": [[76, "kedro.extras.datasets.json.JSONDataSet.save"]], "default_save_args (kedro.extras.datasets.matplotlib.matplotlibwriter attribute)": [[77, "kedro.extras.datasets.matplotlib.MatplotlibWriter.DEFAULT_SAVE_ARGS"]], "matplotlibwriter (class in kedro.extras.datasets.matplotlib)": [[77, "kedro.extras.datasets.matplotlib.MatplotlibWriter"]], "__init__() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[77, "kedro.extras.datasets.matplotlib.MatplotlibWriter.__init__"]], "exists() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[77, "kedro.extras.datasets.matplotlib.MatplotlibWriter.exists"]], "from_config() (kedro.extras.datasets.matplotlib.matplotlibwriter class method)": [[77, "kedro.extras.datasets.matplotlib.MatplotlibWriter.from_config"]], "load() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[77, "kedro.extras.datasets.matplotlib.MatplotlibWriter.load"]], "release() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[77, "kedro.extras.datasets.matplotlib.MatplotlibWriter.release"]], "resolve_load_version() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[77, "kedro.extras.datasets.matplotlib.MatplotlibWriter.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[77, "kedro.extras.datasets.matplotlib.MatplotlibWriter.resolve_save_version"]], "save() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[77, "kedro.extras.datasets.matplotlib.MatplotlibWriter.save"]], "default_load_args (kedro.extras.datasets.networkx.gmldataset attribute)": [[78, "kedro.extras.datasets.networkx.GMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.networkx.gmldataset attribute)": [[78, "kedro.extras.datasets.networkx.GMLDataSet.DEFAULT_SAVE_ARGS"]], "gmldataset (class in kedro.extras.datasets.networkx)": [[78, "kedro.extras.datasets.networkx.GMLDataSet"]], "__init__() (kedro.extras.datasets.networkx.gmldataset method)": [[78, "kedro.extras.datasets.networkx.GMLDataSet.__init__"]], "exists() (kedro.extras.datasets.networkx.gmldataset method)": [[78, "kedro.extras.datasets.networkx.GMLDataSet.exists"]], "from_config() (kedro.extras.datasets.networkx.gmldataset class method)": [[78, "kedro.extras.datasets.networkx.GMLDataSet.from_config"]], "load() (kedro.extras.datasets.networkx.gmldataset method)": [[78, "kedro.extras.datasets.networkx.GMLDataSet.load"]], "release() (kedro.extras.datasets.networkx.gmldataset method)": [[78, "kedro.extras.datasets.networkx.GMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.networkx.gmldataset method)": [[78, "kedro.extras.datasets.networkx.GMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.networkx.gmldataset method)": [[78, "kedro.extras.datasets.networkx.GMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.networkx.gmldataset method)": [[78, "kedro.extras.datasets.networkx.GMLDataSet.save"]], "default_load_args (kedro.extras.datasets.networkx.graphmldataset attribute)": [[79, "kedro.extras.datasets.networkx.GraphMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.networkx.graphmldataset attribute)": [[79, "kedro.extras.datasets.networkx.GraphMLDataSet.DEFAULT_SAVE_ARGS"]], "graphmldataset (class in kedro.extras.datasets.networkx)": [[79, "kedro.extras.datasets.networkx.GraphMLDataSet"]], "__init__() (kedro.extras.datasets.networkx.graphmldataset method)": [[79, "kedro.extras.datasets.networkx.GraphMLDataSet.__init__"]], "exists() (kedro.extras.datasets.networkx.graphmldataset method)": [[79, "kedro.extras.datasets.networkx.GraphMLDataSet.exists"]], "from_config() (kedro.extras.datasets.networkx.graphmldataset class method)": [[79, "kedro.extras.datasets.networkx.GraphMLDataSet.from_config"]], "load() (kedro.extras.datasets.networkx.graphmldataset method)": [[79, "kedro.extras.datasets.networkx.GraphMLDataSet.load"]], "release() (kedro.extras.datasets.networkx.graphmldataset method)": [[79, "kedro.extras.datasets.networkx.GraphMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.networkx.graphmldataset method)": [[79, "kedro.extras.datasets.networkx.GraphMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.networkx.graphmldataset method)": [[79, "kedro.extras.datasets.networkx.GraphMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.networkx.graphmldataset method)": [[79, "kedro.extras.datasets.networkx.GraphMLDataSet.save"]], "default_load_args (kedro.extras.datasets.networkx.jsondataset attribute)": [[80, "kedro.extras.datasets.networkx.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.networkx.jsondataset attribute)": [[80, "kedro.extras.datasets.networkx.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.networkx)": [[80, "kedro.extras.datasets.networkx.JSONDataSet"]], "__init__() (kedro.extras.datasets.networkx.jsondataset method)": [[80, "kedro.extras.datasets.networkx.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.networkx.jsondataset method)": [[80, "kedro.extras.datasets.networkx.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.networkx.jsondataset class method)": [[80, "kedro.extras.datasets.networkx.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.networkx.jsondataset method)": [[80, "kedro.extras.datasets.networkx.JSONDataSet.load"]], "release() (kedro.extras.datasets.networkx.jsondataset method)": [[80, "kedro.extras.datasets.networkx.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.networkx.jsondataset method)": [[80, "kedro.extras.datasets.networkx.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.networkx.jsondataset method)": [[80, "kedro.extras.datasets.networkx.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.networkx.jsondataset method)": [[80, "kedro.extras.datasets.networkx.JSONDataSet.save"]], "csvdataset (class in kedro.extras.datasets.pandas)": [[81, "kedro.extras.datasets.pandas.CSVDataSet"]], "default_load_args (kedro.extras.datasets.pandas.csvdataset attribute)": [[81, "kedro.extras.datasets.pandas.CSVDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.csvdataset attribute)": [[81, "kedro.extras.datasets.pandas.CSVDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro.extras.datasets.pandas.csvdataset method)": [[81, "kedro.extras.datasets.pandas.CSVDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.csvdataset method)": [[81, "kedro.extras.datasets.pandas.CSVDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.csvdataset class method)": [[81, "kedro.extras.datasets.pandas.CSVDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.csvdataset method)": [[81, "kedro.extras.datasets.pandas.CSVDataSet.load"]], "release() (kedro.extras.datasets.pandas.csvdataset method)": [[81, "kedro.extras.datasets.pandas.CSVDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.csvdataset method)": [[81, "kedro.extras.datasets.pandas.CSVDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.csvdataset method)": [[81, "kedro.extras.datasets.pandas.CSVDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.csvdataset method)": [[81, "kedro.extras.datasets.pandas.CSVDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.exceldataset attribute)": [[82, "kedro.extras.datasets.pandas.ExcelDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.exceldataset attribute)": [[82, "kedro.extras.datasets.pandas.ExcelDataSet.DEFAULT_SAVE_ARGS"]], "exceldataset (class in kedro.extras.datasets.pandas)": [[82, "kedro.extras.datasets.pandas.ExcelDataSet"]], "__init__() (kedro.extras.datasets.pandas.exceldataset method)": [[82, "kedro.extras.datasets.pandas.ExcelDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.exceldataset method)": [[82, "kedro.extras.datasets.pandas.ExcelDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.exceldataset class method)": [[82, "kedro.extras.datasets.pandas.ExcelDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.exceldataset method)": [[82, "kedro.extras.datasets.pandas.ExcelDataSet.load"]], "release() (kedro.extras.datasets.pandas.exceldataset method)": [[82, "kedro.extras.datasets.pandas.ExcelDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.exceldataset method)": [[82, "kedro.extras.datasets.pandas.ExcelDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.exceldataset method)": [[82, "kedro.extras.datasets.pandas.ExcelDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.exceldataset method)": [[82, "kedro.extras.datasets.pandas.ExcelDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.featherdataset attribute)": [[83, "kedro.extras.datasets.pandas.FeatherDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.featherdataset attribute)": [[83, "kedro.extras.datasets.pandas.FeatherDataSet.DEFAULT_SAVE_ARGS"]], "featherdataset (class in kedro.extras.datasets.pandas)": [[83, "kedro.extras.datasets.pandas.FeatherDataSet"]], "__init__() (kedro.extras.datasets.pandas.featherdataset method)": [[83, "kedro.extras.datasets.pandas.FeatherDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.featherdataset method)": [[83, "kedro.extras.datasets.pandas.FeatherDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.featherdataset class method)": [[83, "kedro.extras.datasets.pandas.FeatherDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.featherdataset method)": [[83, "kedro.extras.datasets.pandas.FeatherDataSet.load"]], "release() (kedro.extras.datasets.pandas.featherdataset method)": [[83, "kedro.extras.datasets.pandas.FeatherDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.featherdataset method)": [[83, "kedro.extras.datasets.pandas.FeatherDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.featherdataset method)": [[83, "kedro.extras.datasets.pandas.FeatherDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.featherdataset method)": [[83, "kedro.extras.datasets.pandas.FeatherDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.gbqquerydataset attribute)": [[84, "kedro.extras.datasets.pandas.GBQQueryDataSet.DEFAULT_LOAD_ARGS"]], "gbqquerydataset (class in kedro.extras.datasets.pandas)": [[84, "kedro.extras.datasets.pandas.GBQQueryDataSet"]], "__init__() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[84, "kedro.extras.datasets.pandas.GBQQueryDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[84, "kedro.extras.datasets.pandas.GBQQueryDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.gbqquerydataset class method)": [[84, "kedro.extras.datasets.pandas.GBQQueryDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[84, "kedro.extras.datasets.pandas.GBQQueryDataSet.load"]], "release() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[84, "kedro.extras.datasets.pandas.GBQQueryDataSet.release"]], "save() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[84, "kedro.extras.datasets.pandas.GBQQueryDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.gbqtabledataset attribute)": [[85, "kedro.extras.datasets.pandas.GBQTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.gbqtabledataset attribute)": [[85, "kedro.extras.datasets.pandas.GBQTableDataSet.DEFAULT_SAVE_ARGS"]], "gbqtabledataset (class in kedro.extras.datasets.pandas)": [[85, "kedro.extras.datasets.pandas.GBQTableDataSet"]], "__init__() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[85, "kedro.extras.datasets.pandas.GBQTableDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[85, "kedro.extras.datasets.pandas.GBQTableDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.gbqtabledataset class method)": [[85, "kedro.extras.datasets.pandas.GBQTableDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[85, "kedro.extras.datasets.pandas.GBQTableDataSet.load"]], "release() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[85, "kedro.extras.datasets.pandas.GBQTableDataSet.release"]], "save() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[85, "kedro.extras.datasets.pandas.GBQTableDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.genericdataset attribute)": [[86, "kedro.extras.datasets.pandas.GenericDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.genericdataset attribute)": [[86, "kedro.extras.datasets.pandas.GenericDataSet.DEFAULT_SAVE_ARGS"]], "genericdataset (class in kedro.extras.datasets.pandas)": [[86, "kedro.extras.datasets.pandas.GenericDataSet"]], "__init__() (kedro.extras.datasets.pandas.genericdataset method)": [[86, "kedro.extras.datasets.pandas.GenericDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.genericdataset method)": [[86, "kedro.extras.datasets.pandas.GenericDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.genericdataset class method)": [[86, "kedro.extras.datasets.pandas.GenericDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.genericdataset method)": [[86, "kedro.extras.datasets.pandas.GenericDataSet.load"]], "release() (kedro.extras.datasets.pandas.genericdataset method)": [[86, "kedro.extras.datasets.pandas.GenericDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.genericdataset method)": [[86, "kedro.extras.datasets.pandas.GenericDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.genericdataset method)": [[86, "kedro.extras.datasets.pandas.GenericDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.genericdataset method)": [[86, "kedro.extras.datasets.pandas.GenericDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.hdfdataset attribute)": [[87, "kedro.extras.datasets.pandas.HDFDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.hdfdataset attribute)": [[87, "kedro.extras.datasets.pandas.HDFDataSet.DEFAULT_SAVE_ARGS"]], "hdfdataset (class in kedro.extras.datasets.pandas)": [[87, "kedro.extras.datasets.pandas.HDFDataSet"]], "__init__() (kedro.extras.datasets.pandas.hdfdataset method)": [[87, "kedro.extras.datasets.pandas.HDFDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.hdfdataset method)": [[87, "kedro.extras.datasets.pandas.HDFDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.hdfdataset class method)": [[87, "kedro.extras.datasets.pandas.HDFDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.hdfdataset method)": [[87, "kedro.extras.datasets.pandas.HDFDataSet.load"]], "release() (kedro.extras.datasets.pandas.hdfdataset method)": [[87, "kedro.extras.datasets.pandas.HDFDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.hdfdataset method)": [[87, "kedro.extras.datasets.pandas.HDFDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.hdfdataset method)": [[87, "kedro.extras.datasets.pandas.HDFDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.hdfdataset method)": [[87, "kedro.extras.datasets.pandas.HDFDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.jsondataset attribute)": [[88, "kedro.extras.datasets.pandas.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.jsondataset attribute)": [[88, "kedro.extras.datasets.pandas.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.pandas)": [[88, "kedro.extras.datasets.pandas.JSONDataSet"]], "__init__() (kedro.extras.datasets.pandas.jsondataset method)": [[88, "kedro.extras.datasets.pandas.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.jsondataset method)": [[88, "kedro.extras.datasets.pandas.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.jsondataset class method)": [[88, "kedro.extras.datasets.pandas.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.jsondataset method)": [[88, "kedro.extras.datasets.pandas.JSONDataSet.load"]], "release() (kedro.extras.datasets.pandas.jsondataset method)": [[88, "kedro.extras.datasets.pandas.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.jsondataset method)": [[88, "kedro.extras.datasets.pandas.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.jsondataset method)": [[88, "kedro.extras.datasets.pandas.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.jsondataset method)": [[88, "kedro.extras.datasets.pandas.JSONDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.parquetdataset attribute)": [[89, "kedro.extras.datasets.pandas.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.parquetdataset attribute)": [[89, "kedro.extras.datasets.pandas.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro.extras.datasets.pandas)": [[89, "kedro.extras.datasets.pandas.ParquetDataSet"]], "__init__() (kedro.extras.datasets.pandas.parquetdataset method)": [[89, "kedro.extras.datasets.pandas.ParquetDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.parquetdataset method)": [[89, "kedro.extras.datasets.pandas.ParquetDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.parquetdataset class method)": [[89, "kedro.extras.datasets.pandas.ParquetDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.parquetdataset method)": [[89, "kedro.extras.datasets.pandas.ParquetDataSet.load"]], "release() (kedro.extras.datasets.pandas.parquetdataset method)": [[89, "kedro.extras.datasets.pandas.ParquetDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.parquetdataset method)": [[89, "kedro.extras.datasets.pandas.ParquetDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.parquetdataset method)": [[89, "kedro.extras.datasets.pandas.ParquetDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.parquetdataset method)": [[89, "kedro.extras.datasets.pandas.ParquetDataSet.save"]], "sqlquerydataset (class in kedro.extras.datasets.pandas)": [[90, "kedro.extras.datasets.pandas.SQLQueryDataSet"]], "__init__() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[90, "kedro.extras.datasets.pandas.SQLQueryDataSet.__init__"]], "create_connection() (kedro.extras.datasets.pandas.sqlquerydataset class method)": [[90, "kedro.extras.datasets.pandas.SQLQueryDataSet.create_connection"]], "engines (kedro.extras.datasets.pandas.sqlquerydataset attribute)": [[90, "kedro.extras.datasets.pandas.SQLQueryDataSet.engines"]], "exists() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[90, "kedro.extras.datasets.pandas.SQLQueryDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.sqlquerydataset class method)": [[90, "kedro.extras.datasets.pandas.SQLQueryDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[90, "kedro.extras.datasets.pandas.SQLQueryDataSet.load"]], "release() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[90, "kedro.extras.datasets.pandas.SQLQueryDataSet.release"]], "save() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[90, "kedro.extras.datasets.pandas.SQLQueryDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.sqltabledataset attribute)": [[91, "kedro.extras.datasets.pandas.SQLTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.sqltabledataset attribute)": [[91, "kedro.extras.datasets.pandas.SQLTableDataSet.DEFAULT_SAVE_ARGS"]], "sqltabledataset (class in kedro.extras.datasets.pandas)": [[91, "kedro.extras.datasets.pandas.SQLTableDataSet"]], "__init__() (kedro.extras.datasets.pandas.sqltabledataset method)": [[91, "kedro.extras.datasets.pandas.SQLTableDataSet.__init__"]], "create_connection() (kedro.extras.datasets.pandas.sqltabledataset class method)": [[91, "kedro.extras.datasets.pandas.SQLTableDataSet.create_connection"]], "engines (kedro.extras.datasets.pandas.sqltabledataset attribute)": [[91, "kedro.extras.datasets.pandas.SQLTableDataSet.engines"]], "exists() (kedro.extras.datasets.pandas.sqltabledataset method)": [[91, "kedro.extras.datasets.pandas.SQLTableDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.sqltabledataset class method)": [[91, "kedro.extras.datasets.pandas.SQLTableDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.sqltabledataset method)": [[91, "kedro.extras.datasets.pandas.SQLTableDataSet.load"]], "release() (kedro.extras.datasets.pandas.sqltabledataset method)": [[91, "kedro.extras.datasets.pandas.SQLTableDataSet.release"]], "save() (kedro.extras.datasets.pandas.sqltabledataset method)": [[91, "kedro.extras.datasets.pandas.SQLTableDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.xmldataset attribute)": [[92, "kedro.extras.datasets.pandas.XMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.xmldataset attribute)": [[92, "kedro.extras.datasets.pandas.XMLDataSet.DEFAULT_SAVE_ARGS"]], "xmldataset (class in kedro.extras.datasets.pandas)": [[92, "kedro.extras.datasets.pandas.XMLDataSet"]], "__init__() (kedro.extras.datasets.pandas.xmldataset method)": [[92, "kedro.extras.datasets.pandas.XMLDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.xmldataset method)": [[92, "kedro.extras.datasets.pandas.XMLDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.xmldataset class method)": [[92, "kedro.extras.datasets.pandas.XMLDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.xmldataset method)": [[92, "kedro.extras.datasets.pandas.XMLDataSet.load"]], "release() (kedro.extras.datasets.pandas.xmldataset method)": [[92, "kedro.extras.datasets.pandas.XMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.xmldataset method)": [[92, "kedro.extras.datasets.pandas.XMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.xmldataset method)": [[92, "kedro.extras.datasets.pandas.XMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.xmldataset method)": [[92, "kedro.extras.datasets.pandas.XMLDataSet.save"]], "default_load_args (kedro.extras.datasets.pickle.pickledataset attribute)": [[93, "kedro.extras.datasets.pickle.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pickle.pickledataset attribute)": [[93, "kedro.extras.datasets.pickle.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro.extras.datasets.pickle)": [[93, "kedro.extras.datasets.pickle.PickleDataSet"]], "__init__() (kedro.extras.datasets.pickle.pickledataset method)": [[93, "kedro.extras.datasets.pickle.PickleDataSet.__init__"]], "exists() (kedro.extras.datasets.pickle.pickledataset method)": [[93, "kedro.extras.datasets.pickle.PickleDataSet.exists"]], "from_config() (kedro.extras.datasets.pickle.pickledataset class method)": [[93, "kedro.extras.datasets.pickle.PickleDataSet.from_config"]], "load() (kedro.extras.datasets.pickle.pickledataset method)": [[93, "kedro.extras.datasets.pickle.PickleDataSet.load"]], "release() (kedro.extras.datasets.pickle.pickledataset method)": [[93, "kedro.extras.datasets.pickle.PickleDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pickle.pickledataset method)": [[93, "kedro.extras.datasets.pickle.PickleDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pickle.pickledataset method)": [[93, "kedro.extras.datasets.pickle.PickleDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pickle.pickledataset method)": [[93, "kedro.extras.datasets.pickle.PickleDataSet.save"]], "default_save_args (kedro.extras.datasets.pillow.imagedataset attribute)": [[94, "kedro.extras.datasets.pillow.ImageDataSet.DEFAULT_SAVE_ARGS"]], "imagedataset (class in kedro.extras.datasets.pillow)": [[94, "kedro.extras.datasets.pillow.ImageDataSet"]], "__init__() (kedro.extras.datasets.pillow.imagedataset method)": [[94, "kedro.extras.datasets.pillow.ImageDataSet.__init__"]], "exists() (kedro.extras.datasets.pillow.imagedataset method)": [[94, "kedro.extras.datasets.pillow.ImageDataSet.exists"]], "from_config() (kedro.extras.datasets.pillow.imagedataset class method)": [[94, "kedro.extras.datasets.pillow.ImageDataSet.from_config"]], "load() (kedro.extras.datasets.pillow.imagedataset method)": [[94, "kedro.extras.datasets.pillow.ImageDataSet.load"]], "release() (kedro.extras.datasets.pillow.imagedataset method)": [[94, "kedro.extras.datasets.pillow.ImageDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pillow.imagedataset method)": [[94, "kedro.extras.datasets.pillow.ImageDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pillow.imagedataset method)": [[94, "kedro.extras.datasets.pillow.ImageDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pillow.imagedataset method)": [[94, "kedro.extras.datasets.pillow.ImageDataSet.save"]], "default_load_args (kedro.extras.datasets.plotly.jsondataset attribute)": [[95, "kedro.extras.datasets.plotly.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.plotly.jsondataset attribute)": [[95, "kedro.extras.datasets.plotly.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.plotly)": [[95, "kedro.extras.datasets.plotly.JSONDataSet"]], "__init__() (kedro.extras.datasets.plotly.jsondataset method)": [[95, "kedro.extras.datasets.plotly.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.plotly.jsondataset method)": [[95, "kedro.extras.datasets.plotly.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.plotly.jsondataset class method)": [[95, "kedro.extras.datasets.plotly.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.plotly.jsondataset method)": [[95, "kedro.extras.datasets.plotly.JSONDataSet.load"]], "release() (kedro.extras.datasets.plotly.jsondataset method)": [[95, "kedro.extras.datasets.plotly.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.plotly.jsondataset method)": [[95, "kedro.extras.datasets.plotly.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.plotly.jsondataset method)": [[95, "kedro.extras.datasets.plotly.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.plotly.jsondataset method)": [[95, "kedro.extras.datasets.plotly.JSONDataSet.save"]], "default_load_args (kedro.extras.datasets.plotly.plotlydataset attribute)": [[96, "kedro.extras.datasets.plotly.PlotlyDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.plotly.plotlydataset attribute)": [[96, "kedro.extras.datasets.plotly.PlotlyDataSet.DEFAULT_SAVE_ARGS"]], "plotlydataset (class in kedro.extras.datasets.plotly)": [[96, "kedro.extras.datasets.plotly.PlotlyDataSet"]], "__init__() (kedro.extras.datasets.plotly.plotlydataset method)": [[96, "kedro.extras.datasets.plotly.PlotlyDataSet.__init__"]], "exists() (kedro.extras.datasets.plotly.plotlydataset method)": [[96, "kedro.extras.datasets.plotly.PlotlyDataSet.exists"]], "from_config() (kedro.extras.datasets.plotly.plotlydataset class method)": [[96, "kedro.extras.datasets.plotly.PlotlyDataSet.from_config"]], "load() (kedro.extras.datasets.plotly.plotlydataset method)": [[96, "kedro.extras.datasets.plotly.PlotlyDataSet.load"]], "release() (kedro.extras.datasets.plotly.plotlydataset method)": [[96, "kedro.extras.datasets.plotly.PlotlyDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.plotly.plotlydataset method)": [[96, "kedro.extras.datasets.plotly.PlotlyDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.plotly.plotlydataset method)": [[96, "kedro.extras.datasets.plotly.PlotlyDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.plotly.plotlydataset method)": [[96, "kedro.extras.datasets.plotly.PlotlyDataSet.save"]], "default_load_args (kedro.extras.datasets.redis.pickledataset attribute)": [[97, "kedro.extras.datasets.redis.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_redis_url (kedro.extras.datasets.redis.pickledataset attribute)": [[97, "kedro.extras.datasets.redis.PickleDataSet.DEFAULT_REDIS_URL"]], "default_save_args (kedro.extras.datasets.redis.pickledataset attribute)": [[97, "kedro.extras.datasets.redis.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro.extras.datasets.redis)": [[97, "kedro.extras.datasets.redis.PickleDataSet"]], "__init__() (kedro.extras.datasets.redis.pickledataset method)": [[97, "kedro.extras.datasets.redis.PickleDataSet.__init__"]], "exists() (kedro.extras.datasets.redis.pickledataset method)": [[97, "kedro.extras.datasets.redis.PickleDataSet.exists"]], "from_config() (kedro.extras.datasets.redis.pickledataset class method)": [[97, "kedro.extras.datasets.redis.PickleDataSet.from_config"]], "load() (kedro.extras.datasets.redis.pickledataset method)": [[97, "kedro.extras.datasets.redis.PickleDataSet.load"]], "release() (kedro.extras.datasets.redis.pickledataset method)": [[97, "kedro.extras.datasets.redis.PickleDataSet.release"]], "save() (kedro.extras.datasets.redis.pickledataset method)": [[97, "kedro.extras.datasets.redis.PickleDataSet.save"]], "deltatabledataset (class in kedro.extras.datasets.spark)": [[98, "kedro.extras.datasets.spark.DeltaTableDataSet"]], "__init__() (kedro.extras.datasets.spark.deltatabledataset method)": [[98, "kedro.extras.datasets.spark.DeltaTableDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.deltatabledataset method)": [[98, "kedro.extras.datasets.spark.DeltaTableDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.deltatabledataset class method)": [[98, "kedro.extras.datasets.spark.DeltaTableDataSet.from_config"]], "load() (kedro.extras.datasets.spark.deltatabledataset method)": [[98, "kedro.extras.datasets.spark.DeltaTableDataSet.load"]], "release() (kedro.extras.datasets.spark.deltatabledataset method)": [[98, "kedro.extras.datasets.spark.DeltaTableDataSet.release"]], "save() (kedro.extras.datasets.spark.deltatabledataset method)": [[98, "kedro.extras.datasets.spark.DeltaTableDataSet.save"]], "default_load_args (kedro.extras.datasets.spark.sparkdataset attribute)": [[99, "kedro.extras.datasets.spark.SparkDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.spark.sparkdataset attribute)": [[99, "kedro.extras.datasets.spark.SparkDataSet.DEFAULT_SAVE_ARGS"]], "sparkdataset (class in kedro.extras.datasets.spark)": [[99, "kedro.extras.datasets.spark.SparkDataSet"]], "__init__() (kedro.extras.datasets.spark.sparkdataset method)": [[99, "kedro.extras.datasets.spark.SparkDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.sparkdataset method)": [[99, "kedro.extras.datasets.spark.SparkDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.sparkdataset class method)": [[99, "kedro.extras.datasets.spark.SparkDataSet.from_config"]], "load() (kedro.extras.datasets.spark.sparkdataset method)": [[99, "kedro.extras.datasets.spark.SparkDataSet.load"]], "release() (kedro.extras.datasets.spark.sparkdataset method)": [[99, "kedro.extras.datasets.spark.SparkDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.spark.sparkdataset method)": [[99, "kedro.extras.datasets.spark.SparkDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.spark.sparkdataset method)": [[99, "kedro.extras.datasets.spark.SparkDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.spark.sparkdataset method)": [[99, "kedro.extras.datasets.spark.SparkDataSet.save"]], "default_save_args (kedro.extras.datasets.spark.sparkhivedataset attribute)": [[100, "kedro.extras.datasets.spark.SparkHiveDataSet.DEFAULT_SAVE_ARGS"]], "sparkhivedataset (class in kedro.extras.datasets.spark)": [[100, "kedro.extras.datasets.spark.SparkHiveDataSet"]], "__init__() (kedro.extras.datasets.spark.sparkhivedataset method)": [[100, "kedro.extras.datasets.spark.SparkHiveDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.sparkhivedataset method)": [[100, "kedro.extras.datasets.spark.SparkHiveDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.sparkhivedataset class method)": [[100, "kedro.extras.datasets.spark.SparkHiveDataSet.from_config"]], "load() (kedro.extras.datasets.spark.sparkhivedataset method)": [[100, "kedro.extras.datasets.spark.SparkHiveDataSet.load"]], "release() (kedro.extras.datasets.spark.sparkhivedataset method)": [[100, "kedro.extras.datasets.spark.SparkHiveDataSet.release"]], "save() (kedro.extras.datasets.spark.sparkhivedataset method)": [[100, "kedro.extras.datasets.spark.SparkHiveDataSet.save"]], "default_load_args (kedro.extras.datasets.spark.sparkjdbcdataset attribute)": [[101, "kedro.extras.datasets.spark.SparkJDBCDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.spark.sparkjdbcdataset attribute)": [[101, "kedro.extras.datasets.spark.SparkJDBCDataSet.DEFAULT_SAVE_ARGS"]], "sparkjdbcdataset (class in kedro.extras.datasets.spark)": [[101, "kedro.extras.datasets.spark.SparkJDBCDataSet"]], "__init__() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[101, "kedro.extras.datasets.spark.SparkJDBCDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[101, "kedro.extras.datasets.spark.SparkJDBCDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.sparkjdbcdataset class method)": [[101, "kedro.extras.datasets.spark.SparkJDBCDataSet.from_config"]], "load() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[101, "kedro.extras.datasets.spark.SparkJDBCDataSet.load"]], "release() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[101, "kedro.extras.datasets.spark.SparkJDBCDataSet.release"]], "save() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[101, "kedro.extras.datasets.spark.SparkJDBCDataSet.save"]], "default_load_args (kedro.extras.datasets.svmlight.svmlightdataset attribute)": [[102, "kedro.extras.datasets.svmlight.SVMLightDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.svmlight.svmlightdataset attribute)": [[102, "kedro.extras.datasets.svmlight.SVMLightDataSet.DEFAULT_SAVE_ARGS"]], "svmlightdataset (class in kedro.extras.datasets.svmlight)": [[102, "kedro.extras.datasets.svmlight.SVMLightDataSet"]], "exists() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[102, "kedro.extras.datasets.svmlight.SVMLightDataSet.exists"]], "from_config() (kedro.extras.datasets.svmlight.svmlightdataset class method)": [[102, "kedro.extras.datasets.svmlight.SVMLightDataSet.from_config"]], "load() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[102, "kedro.extras.datasets.svmlight.SVMLightDataSet.load"]], "release() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[102, "kedro.extras.datasets.svmlight.SVMLightDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[102, "kedro.extras.datasets.svmlight.SVMLightDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[102, "kedro.extras.datasets.svmlight.SVMLightDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[102, "kedro.extras.datasets.svmlight.SVMLightDataSet.save"]], "default_load_args (kedro.extras.datasets.tensorflow.tensorflowmodeldataset attribute)": [[103, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.tensorflow.tensorflowmodeldataset attribute)": [[103, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.DEFAULT_SAVE_ARGS"]], "tensorflowmodeldataset (class in kedro.extras.datasets.tensorflow)": [[103, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset"]], "__init__() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[103, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.__init__"]], "exists() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[103, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.exists"]], "from_config() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset class method)": [[103, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.from_config"]], "load() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[103, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.load"]], "release() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[103, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.release"]], "resolve_load_version() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[103, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[103, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.resolve_save_version"]], "save() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[103, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.save"]], "textdataset (class in kedro.extras.datasets.text)": [[104, "kedro.extras.datasets.text.TextDataSet"]], "__init__() (kedro.extras.datasets.text.textdataset method)": [[104, "kedro.extras.datasets.text.TextDataSet.__init__"]], "exists() (kedro.extras.datasets.text.textdataset method)": [[104, "kedro.extras.datasets.text.TextDataSet.exists"]], "from_config() (kedro.extras.datasets.text.textdataset class method)": [[104, "kedro.extras.datasets.text.TextDataSet.from_config"]], "load() (kedro.extras.datasets.text.textdataset method)": [[104, "kedro.extras.datasets.text.TextDataSet.load"]], "release() (kedro.extras.datasets.text.textdataset method)": [[104, "kedro.extras.datasets.text.TextDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.text.textdataset method)": [[104, "kedro.extras.datasets.text.TextDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.text.textdataset method)": [[104, "kedro.extras.datasets.text.TextDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.text.textdataset method)": [[104, "kedro.extras.datasets.text.TextDataSet.save"]], "default_save_args (kedro.extras.datasets.tracking.jsondataset attribute)": [[105, "kedro.extras.datasets.tracking.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.tracking)": [[105, "kedro.extras.datasets.tracking.JSONDataSet"]], "__init__() (kedro.extras.datasets.tracking.jsondataset method)": [[105, "kedro.extras.datasets.tracking.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.tracking.jsondataset method)": [[105, "kedro.extras.datasets.tracking.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.tracking.jsondataset class method)": [[105, "kedro.extras.datasets.tracking.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.tracking.jsondataset method)": [[105, "kedro.extras.datasets.tracking.JSONDataSet.load"]], "release() (kedro.extras.datasets.tracking.jsondataset method)": [[105, "kedro.extras.datasets.tracking.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.tracking.jsondataset method)": [[105, "kedro.extras.datasets.tracking.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.tracking.jsondataset method)": [[105, "kedro.extras.datasets.tracking.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.tracking.jsondataset method)": [[105, "kedro.extras.datasets.tracking.JSONDataSet.save"]], "versioned (kedro.extras.datasets.tracking.jsondataset attribute)": [[105, "kedro.extras.datasets.tracking.JSONDataSet.versioned"]], "default_save_args (kedro.extras.datasets.tracking.metricsdataset attribute)": [[106, "kedro.extras.datasets.tracking.MetricsDataSet.DEFAULT_SAVE_ARGS"]], "metricsdataset (class in kedro.extras.datasets.tracking)": [[106, "kedro.extras.datasets.tracking.MetricsDataSet"]], "__init__() (kedro.extras.datasets.tracking.metricsdataset method)": [[106, "kedro.extras.datasets.tracking.MetricsDataSet.__init__"]], "exists() (kedro.extras.datasets.tracking.metricsdataset method)": [[106, "kedro.extras.datasets.tracking.MetricsDataSet.exists"]], "from_config() (kedro.extras.datasets.tracking.metricsdataset class method)": [[106, "kedro.extras.datasets.tracking.MetricsDataSet.from_config"]], "load() (kedro.extras.datasets.tracking.metricsdataset method)": [[106, "kedro.extras.datasets.tracking.MetricsDataSet.load"]], "release() (kedro.extras.datasets.tracking.metricsdataset method)": [[106, "kedro.extras.datasets.tracking.MetricsDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.tracking.metricsdataset method)": [[106, "kedro.extras.datasets.tracking.MetricsDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.tracking.metricsdataset method)": [[106, "kedro.extras.datasets.tracking.MetricsDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.tracking.metricsdataset method)": [[106, "kedro.extras.datasets.tracking.MetricsDataSet.save"]], "versioned (kedro.extras.datasets.tracking.metricsdataset attribute)": [[106, "kedro.extras.datasets.tracking.MetricsDataSet.versioned"]], "default_save_args (kedro.extras.datasets.yaml.yamldataset attribute)": [[107, "kedro.extras.datasets.yaml.YAMLDataSet.DEFAULT_SAVE_ARGS"]], "yamldataset (class in kedro.extras.datasets.yaml)": [[107, "kedro.extras.datasets.yaml.YAMLDataSet"]], "__init__() (kedro.extras.datasets.yaml.yamldataset method)": [[107, "kedro.extras.datasets.yaml.YAMLDataSet.__init__"]], "exists() (kedro.extras.datasets.yaml.yamldataset method)": [[107, "kedro.extras.datasets.yaml.YAMLDataSet.exists"]], "from_config() (kedro.extras.datasets.yaml.yamldataset class method)": [[107, "kedro.extras.datasets.yaml.YAMLDataSet.from_config"]], "load() (kedro.extras.datasets.yaml.yamldataset method)": [[107, "kedro.extras.datasets.yaml.YAMLDataSet.load"]], "release() (kedro.extras.datasets.yaml.yamldataset method)": [[107, "kedro.extras.datasets.yaml.YAMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.yaml.yamldataset method)": [[107, "kedro.extras.datasets.yaml.YAMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.yaml.yamldataset method)": [[107, "kedro.extras.datasets.yaml.YAMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.yaml.yamldataset method)": [[107, "kedro.extras.datasets.yaml.YAMLDataSet.save"]], "kedro.extras.extensions": [[108, "module-kedro.extras.extensions"]], "kedro.extras.extensions.ipython": [[109, "module-kedro.extras.extensions.ipython"]], "kedro.extras.logging": [[110, "module-kedro.extras.logging"]], "kedro.extras.logging.color_logger": [[111, "module-kedro.extras.logging.color_logger"]], "colorhandler (class in kedro.extras.logging.color_logger)": [[112, "kedro.extras.logging.color_logger.ColorHandler"]], "kedro.framework": [[113, "module-kedro.framework"]], "kedro.framework.cli": [[114, "module-kedro.framework.cli"]], "kedro.framework.cli.catalog": [[115, "module-kedro.framework.cli.catalog"]], "kedro.framework.cli.cli": [[116, "module-kedro.framework.cli.cli"]], "kedrocli (class in kedro.framework.cli.cli)": [[117, "kedro.framework.cli.cli.KedroCLI"]], "main() (in module kedro.framework.cli.cli)": [[118, "kedro.framework.cli.cli.main"]], "kedro.framework.cli.hooks": [[119, "module-kedro.framework.cli.hooks"]], "kedro.framework.cli.hooks.manager": [[120, "module-kedro.framework.cli.hooks.manager"]], "clihooksmanager (class in kedro.framework.cli.hooks.manager)": [[121, "kedro.framework.cli.hooks.manager.CLIHooksManager"]], "get_cli_hook_manager() (in module kedro.framework.cli.hooks.manager)": [[122, "kedro.framework.cli.hooks.manager.get_cli_hook_manager"]], "kedro.framework.cli.hooks.markers": [[123, "module-kedro.framework.cli.hooks.markers"]], "kedro.framework.cli.hooks.specs": [[124, "module-kedro.framework.cli.hooks.specs"]], "clicommandspecs (class in kedro.framework.cli.hooks.specs)": [[125, "kedro.framework.cli.hooks.specs.CLICommandSpecs"]], "after_command_run() (kedro.framework.cli.hooks.specs.clicommandspecs method)": [[125, "kedro.framework.cli.hooks.specs.CLICommandSpecs.after_command_run"]], "before_command_run() (kedro.framework.cli.hooks.specs.clicommandspecs method)": [[125, "kedro.framework.cli.hooks.specs.CLICommandSpecs.before_command_run"]], "kedro.framework.cli.jupyter": [[126, "module-kedro.framework.cli.jupyter"]], "jupytercommandgroup (class in kedro.framework.cli.jupyter)": [[127, "kedro.framework.cli.jupyter.JupyterCommandGroup"]], "list_commands() (kedro.framework.cli.jupyter.jupytercommandgroup method)": [[127, "kedro.framework.cli.jupyter.JupyterCommandGroup.list_commands"]], "kedro.framework.cli.micropkg": [[128, "module-kedro.framework.cli.micropkg"]], "safe_extract() (in module kedro.framework.cli.micropkg)": [[129, "kedro.framework.cli.micropkg.safe_extract"]], "kedro.framework.cli.pipeline": [[130, "module-kedro.framework.cli.pipeline"]], "pipelineartifacts (class in kedro.framework.cli.pipeline)": [[131, "kedro.framework.cli.pipeline.PipelineArtifacts"]], "count() (kedro.framework.cli.pipeline.pipelineartifacts method)": [[131, "kedro.framework.cli.pipeline.PipelineArtifacts.count"]], "index() (kedro.framework.cli.pipeline.pipelineartifacts method)": [[131, "kedro.framework.cli.pipeline.PipelineArtifacts.index"]], "pipeline_conf (kedro.framework.cli.pipeline.pipelineartifacts attribute)": [[131, "kedro.framework.cli.pipeline.PipelineArtifacts.pipeline_conf"]], "pipeline_dir (kedro.framework.cli.pipeline.pipelineartifacts attribute)": [[131, "kedro.framework.cli.pipeline.PipelineArtifacts.pipeline_dir"]], "pipeline_tests (kedro.framework.cli.pipeline.pipelineartifacts attribute)": [[131, "kedro.framework.cli.pipeline.PipelineArtifacts.pipeline_tests"]], "kedro.framework.cli.project": [[132, "module-kedro.framework.cli.project"]], "kedro.framework.cli.registry": [[133, "module-kedro.framework.cli.registry"]], "kedro.framework.cli.starters": [[134, "module-kedro.framework.cli.starters"]], "kedrostarterspec (class in kedro.framework.cli.starters)": [[135, "kedro.framework.cli.starters.KedroStarterSpec"]], "alias (kedro.framework.cli.starters.kedrostarterspec attribute)": [[135, "kedro.framework.cli.starters.KedroStarterSpec.alias"]], "directory (kedro.framework.cli.starters.kedrostarterspec attribute)": [[135, "kedro.framework.cli.starters.KedroStarterSpec.directory"]], "origin (kedro.framework.cli.starters.kedrostarterspec attribute)": [[135, "kedro.framework.cli.starters.KedroStarterSpec.origin"]], "template_path (kedro.framework.cli.starters.kedrostarterspec attribute)": [[135, "kedro.framework.cli.starters.KedroStarterSpec.template_path"]], "kedro.framework.cli.utils": [[136, "module-kedro.framework.cli.utils"]], "commandcollection (class in kedro.framework.cli.utils)": [[137, "kedro.framework.cli.utils.CommandCollection"]], "kedroclierror (class in kedro.framework.cli.utils)": [[138, "kedro.framework.cli.utils.KedroCliError"]], "verbose_error (kedro.framework.cli.utils.kedroclierror attribute)": [[138, "kedro.framework.cli.utils.KedroCliError.VERBOSE_ERROR"]], "args (kedro.framework.cli.utils.kedroclierror attribute)": [[138, "kedro.framework.cli.utils.KedroCliError.args"]], "exit_code (kedro.framework.cli.utils.kedroclierror attribute)": [[138, "kedro.framework.cli.utils.KedroCliError.exit_code"]], "format_message() (kedro.framework.cli.utils.kedroclierror method)": [[138, "kedro.framework.cli.utils.KedroCliError.format_message"]], "show() (kedro.framework.cli.utils.kedroclierror method)": [[138, "kedro.framework.cli.utils.KedroCliError.show"]], "with_traceback() (kedro.framework.cli.utils.kedroclierror method)": [[138, "kedro.framework.cli.utils.KedroCliError.with_traceback"]], "command_with_verbosity() (in module kedro.framework.cli.utils)": [[139, "kedro.framework.cli.utils.command_with_verbosity"]], "env_option() (in module kedro.framework.cli.utils)": [[140, "kedro.framework.cli.utils.env_option"]], "find_stylesheets() (in module kedro.framework.cli.utils)": [[141, "kedro.framework.cli.utils.find_stylesheets"]], "forward_command() (in module kedro.framework.cli.utils)": [[142, "kedro.framework.cli.utils.forward_command"]], "get_pkg_version() (in module kedro.framework.cli.utils)": [[143, "kedro.framework.cli.utils.get_pkg_version"]], "python_call() (in module kedro.framework.cli.utils)": [[144, "kedro.framework.cli.utils.python_call"]], "split_string() (in module kedro.framework.cli.utils)": [[145, "kedro.framework.cli.utils.split_string"]], "kedro.framework.context": [[146, "module-kedro.framework.context"]], "kedrocontext (class in kedro.framework.context)": [[147, "kedro.framework.context.KedroContext"]], "__init__() (kedro.framework.context.kedrocontext method)": [[147, "kedro.framework.context.KedroContext.__init__"]], "catalog (kedro.framework.context.kedrocontext property)": [[147, "kedro.framework.context.KedroContext.catalog"]], "config_loader (kedro.framework.context.kedrocontext property)": [[147, "kedro.framework.context.KedroContext.config_loader"]], "env (kedro.framework.context.kedrocontext property)": [[147, "kedro.framework.context.KedroContext.env"]], "params (kedro.framework.context.kedrocontext property)": [[147, "kedro.framework.context.KedroContext.params"]], "project_path (kedro.framework.context.kedrocontext property)": [[147, "kedro.framework.context.KedroContext.project_path"]], "kedrocontexterror (class in kedro.framework.context)": [[148, "kedro.framework.context.KedroContextError"]], "args (kedro.framework.context.kedrocontexterror attribute)": [[148, "kedro.framework.context.KedroContextError.args"]], "with_traceback() (kedro.framework.context.kedrocontexterror method)": [[148, "kedro.framework.context.KedroContextError.with_traceback"]], "kedro.framework.hooks": [[149, "module-kedro.framework.hooks"]], "kedro.framework.hooks.manager": [[150, "module-kedro.framework.hooks.manager"]], "kedro.framework.hooks.markers": [[151, "module-kedro.framework.hooks.markers"]], "kedro.framework.hooks.specs": [[152, "module-kedro.framework.hooks.specs"]], "datacatalogspecs (class in kedro.framework.hooks.specs)": [[153, "kedro.framework.hooks.specs.DataCatalogSpecs"]], "after_catalog_created() (kedro.framework.hooks.specs.datacatalogspecs method)": [[153, "kedro.framework.hooks.specs.DataCatalogSpecs.after_catalog_created"]], "datasetspecs (class in kedro.framework.hooks.specs)": [[154, "kedro.framework.hooks.specs.DatasetSpecs"]], "after_dataset_loaded() (kedro.framework.hooks.specs.datasetspecs method)": [[154, "kedro.framework.hooks.specs.DatasetSpecs.after_dataset_loaded"]], "after_dataset_saved() (kedro.framework.hooks.specs.datasetspecs method)": [[154, "kedro.framework.hooks.specs.DatasetSpecs.after_dataset_saved"]], "before_dataset_loaded() (kedro.framework.hooks.specs.datasetspecs method)": [[154, "kedro.framework.hooks.specs.DatasetSpecs.before_dataset_loaded"]], "before_dataset_saved() (kedro.framework.hooks.specs.datasetspecs method)": [[154, "kedro.framework.hooks.specs.DatasetSpecs.before_dataset_saved"]], "kedrocontextspecs (class in kedro.framework.hooks.specs)": [[155, "kedro.framework.hooks.specs.KedroContextSpecs"]], "after_context_created() (kedro.framework.hooks.specs.kedrocontextspecs method)": [[155, "kedro.framework.hooks.specs.KedroContextSpecs.after_context_created"]], "nodespecs (class in kedro.framework.hooks.specs)": [[156, "kedro.framework.hooks.specs.NodeSpecs"]], "after_node_run() (kedro.framework.hooks.specs.nodespecs method)": [[156, "kedro.framework.hooks.specs.NodeSpecs.after_node_run"]], "before_node_run() (kedro.framework.hooks.specs.nodespecs method)": [[156, "kedro.framework.hooks.specs.NodeSpecs.before_node_run"]], "on_node_error() (kedro.framework.hooks.specs.nodespecs method)": [[156, "kedro.framework.hooks.specs.NodeSpecs.on_node_error"]], "pipelinespecs (class in kedro.framework.hooks.specs)": [[157, "kedro.framework.hooks.specs.PipelineSpecs"]], "after_pipeline_run() (kedro.framework.hooks.specs.pipelinespecs method)": [[157, "kedro.framework.hooks.specs.PipelineSpecs.after_pipeline_run"]], "before_pipeline_run() (kedro.framework.hooks.specs.pipelinespecs method)": [[157, "kedro.framework.hooks.specs.PipelineSpecs.before_pipeline_run"]], "on_pipeline_error() (kedro.framework.hooks.specs.pipelinespecs method)": [[157, "kedro.framework.hooks.specs.PipelineSpecs.on_pipeline_error"]], "kedro.framework.project": [[158, "module-kedro.framework.project"]], "configure_logging() (in module kedro.framework.project)": [[159, "kedro.framework.project.configure_logging"]], "configure_project() (in module kedro.framework.project)": [[160, "kedro.framework.project.configure_project"]], "find_pipelines() (in module kedro.framework.project)": [[161, "kedro.framework.project.find_pipelines"]], "validate_settings() (in module kedro.framework.project)": [[162, "kedro.framework.project.validate_settings"]], "kedro.framework.session": [[163, "module-kedro.framework.session"]], "kedro.framework.session.session": [[164, "module-kedro.framework.session.session"]], "kedrosession (class in kedro.framework.session.session)": [[165, "kedro.framework.session.session.KedroSession"]], "close() (kedro.framework.session.session.kedrosession method)": [[165, "kedro.framework.session.session.KedroSession.close"]], "create() (kedro.framework.session.session.kedrosession class method)": [[165, "kedro.framework.session.session.KedroSession.create"]], "load_context() (kedro.framework.session.session.kedrosession method)": [[165, "kedro.framework.session.session.KedroSession.load_context"]], "run() (kedro.framework.session.session.kedrosession method)": [[165, "kedro.framework.session.session.KedroSession.run"]], "store (kedro.framework.session.session.kedrosession property)": [[165, "kedro.framework.session.session.KedroSession.store"]], "kedrosessionerror (class in kedro.framework.session.session)": [[166, "kedro.framework.session.session.KedroSessionError"]], "args (kedro.framework.session.session.kedrosessionerror attribute)": [[166, "kedro.framework.session.session.KedroSessionError.args"]], "with_traceback() (kedro.framework.session.session.kedrosessionerror method)": [[166, "kedro.framework.session.session.KedroSessionError.with_traceback"]], "kedro.framework.session.shelvestore": [[167, "module-kedro.framework.session.shelvestore"]], "shelvestore (class in kedro.framework.session.shelvestore)": [[168, "kedro.framework.session.shelvestore.ShelveStore"]], "kedro.framework.session.store": [[169, "module-kedro.framework.session.store"]], "basesessionstore (class in kedro.framework.session.store)": [[170, "kedro.framework.session.store.BaseSessionStore"]], "kedro.framework.startup": [[171, "module-kedro.framework.startup"]], "projectmetadata (class in kedro.framework.startup)": [[172, "kedro.framework.startup.ProjectMetadata"]], "config_file (kedro.framework.startup.projectmetadata attribute)": [[172, "kedro.framework.startup.ProjectMetadata.config_file"]], "count() (kedro.framework.startup.projectmetadata method)": [[172, "kedro.framework.startup.ProjectMetadata.count"]], "index() (kedro.framework.startup.projectmetadata method)": [[172, "kedro.framework.startup.ProjectMetadata.index"]], "kedro_init_version (kedro.framework.startup.projectmetadata attribute)": [[172, "kedro.framework.startup.ProjectMetadata.kedro_init_version"]], "package_name (kedro.framework.startup.projectmetadata attribute)": [[172, "kedro.framework.startup.ProjectMetadata.package_name"]], "project_name (kedro.framework.startup.projectmetadata attribute)": [[172, "kedro.framework.startup.ProjectMetadata.project_name"]], "project_path (kedro.framework.startup.projectmetadata attribute)": [[172, "kedro.framework.startup.ProjectMetadata.project_path"]], "project_version (kedro.framework.startup.projectmetadata attribute)": [[172, "kedro.framework.startup.ProjectMetadata.project_version"]], "source_dir (kedro.framework.startup.projectmetadata attribute)": [[172, "kedro.framework.startup.ProjectMetadata.source_dir"]], "bootstrap_project() (in module kedro.framework.startup)": [[173, "kedro.framework.startup.bootstrap_project"]], "kedro.io": [[174, "module-kedro.io"]], "abstractdataset (class in kedro.io)": [[175, "kedro.io.AbstractDataSet"]], "exists() (kedro.io.abstractdataset method)": [[175, "kedro.io.AbstractDataSet.exists"]], "from_config() (kedro.io.abstractdataset class method)": [[175, "kedro.io.AbstractDataSet.from_config"]], "load() (kedro.io.abstractdataset method)": [[175, "kedro.io.AbstractDataSet.load"]], "release() (kedro.io.abstractdataset method)": [[175, "kedro.io.AbstractDataSet.release"]], "save() (kedro.io.abstractdataset method)": [[175, "kedro.io.AbstractDataSet.save"]], "abstractversioneddataset (class in kedro.io)": [[176, "kedro.io.AbstractVersionedDataSet"]], "__init__() (kedro.io.abstractversioneddataset method)": [[176, "kedro.io.AbstractVersionedDataSet.__init__"]], "exists() (kedro.io.abstractversioneddataset method)": [[176, "kedro.io.AbstractVersionedDataSet.exists"]], "from_config() (kedro.io.abstractversioneddataset class method)": [[176, "kedro.io.AbstractVersionedDataSet.from_config"]], "load() (kedro.io.abstractversioneddataset method)": [[176, "kedro.io.AbstractVersionedDataSet.load"]], "release() (kedro.io.abstractversioneddataset method)": [[176, "kedro.io.AbstractVersionedDataSet.release"]], "resolve_load_version() (kedro.io.abstractversioneddataset method)": [[176, "kedro.io.AbstractVersionedDataSet.resolve_load_version"]], "resolve_save_version() (kedro.io.abstractversioneddataset method)": [[176, "kedro.io.AbstractVersionedDataSet.resolve_save_version"]], "save() (kedro.io.abstractversioneddataset method)": [[176, "kedro.io.AbstractVersionedDataSet.save"]], "cacheddataset (in module kedro.io)": [[177, "kedro.io.CachedDataSet"]], "datacatalog (class in kedro.io)": [[178, "kedro.io.DataCatalog"]], "__init__() (kedro.io.datacatalog method)": [[178, "kedro.io.DataCatalog.__init__"]], "add() (kedro.io.datacatalog method)": [[178, "kedro.io.DataCatalog.add"]], "add_all() (kedro.io.datacatalog method)": [[178, "kedro.io.DataCatalog.add_all"]], "add_feed_dict() (kedro.io.datacatalog method)": [[178, "kedro.io.DataCatalog.add_feed_dict"]], "confirm() (kedro.io.datacatalog method)": [[178, "kedro.io.DataCatalog.confirm"]], "exists() (kedro.io.datacatalog method)": [[178, "kedro.io.DataCatalog.exists"]], "from_config() (kedro.io.datacatalog class method)": [[178, "kedro.io.DataCatalog.from_config"]], "list() (kedro.io.datacatalog method)": [[178, "kedro.io.DataCatalog.list"]], "load() (kedro.io.datacatalog method)": [[178, "kedro.io.DataCatalog.load"]], "release() (kedro.io.datacatalog method)": [[178, "kedro.io.DataCatalog.release"]], "save() (kedro.io.datacatalog method)": [[178, "kedro.io.DataCatalog.save"]], "shallow_copy() (kedro.io.datacatalog method)": [[178, "kedro.io.DataCatalog.shallow_copy"]], "datasetalreadyexistserror (in module kedro.io)": [[179, "kedro.io.DataSetAlreadyExistsError"]], "dataseterror (in module kedro.io)": [[180, "kedro.io.DataSetError"]], "datasetnotfounderror (in module kedro.io)": [[181, "kedro.io.DataSetNotFoundError"]], "incrementaldataset (in module kedro.io)": [[182, "kedro.io.IncrementalDataSet"]], "lambdadataset (in module kedro.io)": [[183, "kedro.io.LambdaDataSet"]], "memorydataset (in module kedro.io)": [[184, "kedro.io.MemoryDataSet"]], "partitioneddataset (in module kedro.io)": [[185, "kedro.io.PartitionedDataSet"]], "version (class in kedro.io)": [[186, "kedro.io.Version"]], "count() (kedro.io.version method)": [[186, "kedro.io.Version.count"]], "index() (kedro.io.version method)": [[186, "kedro.io.Version.index"]], "load (kedro.io.version attribute)": [[186, "kedro.io.Version.load"]], "save (kedro.io.version attribute)": [[186, "kedro.io.Version.save"]], "kedro.ipython": [[187, "module-kedro.ipython"]], "load_ipython_extension() (in module kedro.ipython)": [[188, "kedro.ipython.load_ipython_extension"]], "magic_reload_kedro() (in module kedro.ipython)": [[189, "kedro.ipython.magic_reload_kedro"]], "reload_kedro() (in module kedro.ipython)": [[190, "kedro.ipython.reload_kedro"]], "kedro.logging": [[191, "module-kedro.logging"]], "richhandler (class in kedro.logging)": [[192, "kedro.logging.RichHandler"]], "kedro.pipeline": [[193, "module-kedro.pipeline"]], "pipeline (class in kedro.pipeline)": [[194, "kedro.pipeline.Pipeline"]], "__init__() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.__init__"]], "all_inputs() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.all_inputs"]], "all_outputs() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.all_outputs"]], "data_sets() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.data_sets"]], "describe() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.describe"]], "filter() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.filter"]], "from_inputs() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.from_inputs"]], "from_nodes() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.from_nodes"]], "grouped_nodes (kedro.pipeline.pipeline property)": [[194, "kedro.pipeline.Pipeline.grouped_nodes"]], "inputs() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.inputs"]], "node_dependencies (kedro.pipeline.pipeline property)": [[194, "kedro.pipeline.Pipeline.node_dependencies"]], "nodes (kedro.pipeline.pipeline property)": [[194, "kedro.pipeline.Pipeline.nodes"]], "only_nodes() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.only_nodes"]], "only_nodes_with_inputs() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.only_nodes_with_inputs"]], "only_nodes_with_namespace() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.only_nodes_with_namespace"]], "only_nodes_with_outputs() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.only_nodes_with_outputs"]], "only_nodes_with_tags() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.only_nodes_with_tags"]], "outputs() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.outputs"]], "tag() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.tag"]], "to_json() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.to_json"]], "to_nodes() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.to_nodes"]], "to_outputs() (kedro.pipeline.pipeline method)": [[194, "kedro.pipeline.Pipeline.to_outputs"]], "modularpipelineerror (class in kedro.pipeline.modular_pipeline)": [[195, "kedro.pipeline.modular_pipeline.ModularPipelineError"]], "args (kedro.pipeline.modular_pipeline.modularpipelineerror attribute)": [[195, "kedro.pipeline.modular_pipeline.ModularPipelineError.args"]], "with_traceback() (kedro.pipeline.modular_pipeline.modularpipelineerror method)": [[195, "kedro.pipeline.modular_pipeline.ModularPipelineError.with_traceback"]], "pipeline() (in module kedro.pipeline.modular_pipeline)": [[196, "kedro.pipeline.modular_pipeline.pipeline"]], "node() (in module kedro.pipeline)": [[197, "kedro.pipeline.node"]], "node (class in kedro.pipeline.node)": [[198, "kedro.pipeline.node.Node"]], "__init__() (kedro.pipeline.node.node method)": [[198, "kedro.pipeline.node.Node.__init__"]], "confirms (kedro.pipeline.node.node property)": [[198, "kedro.pipeline.node.Node.confirms"]], "func (kedro.pipeline.node.node property)": [[198, "kedro.pipeline.node.Node.func"]], "inputs (kedro.pipeline.node.node property)": [[198, "kedro.pipeline.node.Node.inputs"]], "name (kedro.pipeline.node.node property)": [[198, "kedro.pipeline.node.Node.name"]], "namespace (kedro.pipeline.node.node property)": [[198, "kedro.pipeline.node.Node.namespace"]], "outputs (kedro.pipeline.node.node property)": [[198, "kedro.pipeline.node.Node.outputs"]], "run() (kedro.pipeline.node.node method)": [[198, "kedro.pipeline.node.Node.run"]], "short_name (kedro.pipeline.node.node property)": [[198, "kedro.pipeline.node.Node.short_name"]], "tag() (kedro.pipeline.node.node method)": [[198, "kedro.pipeline.node.Node.tag"]], "tags (kedro.pipeline.node.node property)": [[198, "kedro.pipeline.node.Node.tags"]], "kedro.runner": [[199, "module-kedro.runner"]], "abstractrunner (class in kedro.runner)": [[200, "kedro.runner.AbstractRunner"]], "__init__() (kedro.runner.abstractrunner method)": [[200, "kedro.runner.AbstractRunner.__init__"]], "create_default_data_set() (kedro.runner.abstractrunner method)": [[200, "kedro.runner.AbstractRunner.create_default_data_set"]], "run() (kedro.runner.abstractrunner method)": [[200, "kedro.runner.AbstractRunner.run"]], "run_only_missing() (kedro.runner.abstractrunner method)": [[200, "kedro.runner.AbstractRunner.run_only_missing"]], "parallelrunner (class in kedro.runner)": [[201, "kedro.runner.ParallelRunner"]], "__init__() (kedro.runner.parallelrunner method)": [[201, "kedro.runner.ParallelRunner.__init__"]], "create_default_data_set() (kedro.runner.parallelrunner method)": [[201, "kedro.runner.ParallelRunner.create_default_data_set"]], "run() (kedro.runner.parallelrunner method)": [[201, "kedro.runner.ParallelRunner.run"]], "run_only_missing() (kedro.runner.parallelrunner method)": [[201, "kedro.runner.ParallelRunner.run_only_missing"]], "sequentialrunner (class in kedro.runner)": [[202, "kedro.runner.SequentialRunner"]], "__init__() (kedro.runner.sequentialrunner method)": [[202, "kedro.runner.SequentialRunner.__init__"]], "create_default_data_set() (kedro.runner.sequentialrunner method)": [[202, "kedro.runner.SequentialRunner.create_default_data_set"]], "run() (kedro.runner.sequentialrunner method)": [[202, "kedro.runner.SequentialRunner.run"]], "run_only_missing() (kedro.runner.sequentialrunner method)": [[202, "kedro.runner.SequentialRunner.run_only_missing"]], "threadrunner (class in kedro.runner)": [[203, "kedro.runner.ThreadRunner"]], "__init__() (kedro.runner.threadrunner method)": [[203, "kedro.runner.ThreadRunner.__init__"]], "create_default_data_set() (kedro.runner.threadrunner method)": [[203, "kedro.runner.ThreadRunner.create_default_data_set"]], "run() (kedro.runner.threadrunner method)": [[203, "kedro.runner.ThreadRunner.run"]], "run_only_missing() (kedro.runner.threadrunner method)": [[203, "kedro.runner.ThreadRunner.run_only_missing"]], "run_node() (in module kedro.runner)": [[204, "kedro.runner.run_node"]], "kedro.utils": [[205, "module-kedro.utils"]], "load_obj() (in module kedro.utils)": [[206, "kedro.utils.load_obj"]], "kedro_datasets": [[207, "module-kedro_datasets"]], "apidataset (class in kedro_datasets.api)": [[208, "kedro_datasets.api.APIDataSet"]], "default_save_args (kedro_datasets.api.apidataset attribute)": [[208, "kedro_datasets.api.APIDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.api.apidataset method)": [[208, "kedro_datasets.api.APIDataSet.__init__"]], "exists() (kedro_datasets.api.apidataset method)": [[208, "kedro_datasets.api.APIDataSet.exists"]], "from_config() (kedro_datasets.api.apidataset class method)": [[208, "kedro_datasets.api.APIDataSet.from_config"]], "load() (kedro_datasets.api.apidataset method)": [[208, "kedro_datasets.api.APIDataSet.load"]], "release() (kedro_datasets.api.apidataset method)": [[208, "kedro_datasets.api.APIDataSet.release"]], "save() (kedro_datasets.api.apidataset method)": [[208, "kedro_datasets.api.APIDataSet.save"]], "biosequencedataset (class in kedro_datasets.biosequence)": [[209, "kedro_datasets.biosequence.BioSequenceDataSet"]], "default_load_args (kedro_datasets.biosequence.biosequencedataset attribute)": [[209, "kedro_datasets.biosequence.BioSequenceDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.biosequence.biosequencedataset attribute)": [[209, "kedro_datasets.biosequence.BioSequenceDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.biosequence.biosequencedataset method)": [[209, "kedro_datasets.biosequence.BioSequenceDataSet.__init__"]], "exists() (kedro_datasets.biosequence.biosequencedataset method)": [[209, "kedro_datasets.biosequence.BioSequenceDataSet.exists"]], "from_config() (kedro_datasets.biosequence.biosequencedataset class method)": [[209, "kedro_datasets.biosequence.BioSequenceDataSet.from_config"]], "invalidate_cache() (kedro_datasets.biosequence.biosequencedataset method)": [[209, "kedro_datasets.biosequence.BioSequenceDataSet.invalidate_cache"]], "load() (kedro_datasets.biosequence.biosequencedataset method)": [[209, "kedro_datasets.biosequence.BioSequenceDataSet.load"]], "release() (kedro_datasets.biosequence.biosequencedataset method)": [[209, "kedro_datasets.biosequence.BioSequenceDataSet.release"]], "save() (kedro_datasets.biosequence.biosequencedataset method)": [[209, "kedro_datasets.biosequence.BioSequenceDataSet.save"]], "default_load_args (kedro_datasets.dask.parquetdataset attribute)": [[210, "kedro_datasets.dask.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.dask.parquetdataset attribute)": [[210, "kedro_datasets.dask.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro_datasets.dask)": [[210, "kedro_datasets.dask.ParquetDataSet"]], "__init__() (kedro_datasets.dask.parquetdataset method)": [[210, "kedro_datasets.dask.ParquetDataSet.__init__"]], "exists() (kedro_datasets.dask.parquetdataset method)": [[210, "kedro_datasets.dask.ParquetDataSet.exists"]], "from_config() (kedro_datasets.dask.parquetdataset class method)": [[210, "kedro_datasets.dask.ParquetDataSet.from_config"]], "fs_args (kedro_datasets.dask.parquetdataset property)": [[210, "kedro_datasets.dask.ParquetDataSet.fs_args"]], "load() (kedro_datasets.dask.parquetdataset method)": [[210, "kedro_datasets.dask.ParquetDataSet.load"]], "release() (kedro_datasets.dask.parquetdataset method)": [[210, "kedro_datasets.dask.ParquetDataSet.release"]], "save() (kedro_datasets.dask.parquetdataset method)": [[210, "kedro_datasets.dask.ParquetDataSet.save"]], "managedtabledataset (class in kedro_datasets.databricks)": [[211, "kedro_datasets.databricks.ManagedTableDataSet"]], "__init__() (kedro_datasets.databricks.managedtabledataset method)": [[211, "kedro_datasets.databricks.ManagedTableDataSet.__init__"]], "exists() (kedro_datasets.databricks.managedtabledataset method)": [[211, "kedro_datasets.databricks.ManagedTableDataSet.exists"]], "from_config() (kedro_datasets.databricks.managedtabledataset class method)": [[211, "kedro_datasets.databricks.ManagedTableDataSet.from_config"]], "load() (kedro_datasets.databricks.managedtabledataset method)": [[211, "kedro_datasets.databricks.ManagedTableDataSet.load"]], "release() (kedro_datasets.databricks.managedtabledataset method)": [[211, "kedro_datasets.databricks.ManagedTableDataSet.release"]], "resolve_load_version() (kedro_datasets.databricks.managedtabledataset method)": [[211, "kedro_datasets.databricks.ManagedTableDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.databricks.managedtabledataset method)": [[211, "kedro_datasets.databricks.ManagedTableDataSet.resolve_save_version"]], "save() (kedro_datasets.databricks.managedtabledataset method)": [[211, "kedro_datasets.databricks.ManagedTableDataSet.save"]], "default_load_args (kedro_datasets.email.emailmessagedataset attribute)": [[212, "kedro_datasets.email.EmailMessageDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.email.emailmessagedataset attribute)": [[212, "kedro_datasets.email.EmailMessageDataSet.DEFAULT_SAVE_ARGS"]], "emailmessagedataset (class in kedro_datasets.email)": [[212, "kedro_datasets.email.EmailMessageDataSet"]], "__init__() (kedro_datasets.email.emailmessagedataset method)": [[212, "kedro_datasets.email.EmailMessageDataSet.__init__"]], "exists() (kedro_datasets.email.emailmessagedataset method)": [[212, "kedro_datasets.email.EmailMessageDataSet.exists"]], "from_config() (kedro_datasets.email.emailmessagedataset class method)": [[212, "kedro_datasets.email.EmailMessageDataSet.from_config"]], "load() (kedro_datasets.email.emailmessagedataset method)": [[212, "kedro_datasets.email.EmailMessageDataSet.load"]], "release() (kedro_datasets.email.emailmessagedataset method)": [[212, "kedro_datasets.email.EmailMessageDataSet.release"]], "resolve_load_version() (kedro_datasets.email.emailmessagedataset method)": [[212, "kedro_datasets.email.EmailMessageDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.email.emailmessagedataset method)": [[212, "kedro_datasets.email.EmailMessageDataSet.resolve_save_version"]], "save() (kedro_datasets.email.emailmessagedataset method)": [[212, "kedro_datasets.email.EmailMessageDataSet.save"]], "default_load_args (kedro_datasets.geopandas.geojsondataset attribute)": [[213, "kedro_datasets.geopandas.GeoJSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.geopandas.geojsondataset attribute)": [[213, "kedro_datasets.geopandas.GeoJSONDataSet.DEFAULT_SAVE_ARGS"]], "geojsondataset (class in kedro_datasets.geopandas)": [[213, "kedro_datasets.geopandas.GeoJSONDataSet"]], "__init__() (kedro_datasets.geopandas.geojsondataset method)": [[213, "kedro_datasets.geopandas.GeoJSONDataSet.__init__"]], "exists() (kedro_datasets.geopandas.geojsondataset method)": [[213, "kedro_datasets.geopandas.GeoJSONDataSet.exists"]], "from_config() (kedro_datasets.geopandas.geojsondataset class method)": [[213, "kedro_datasets.geopandas.GeoJSONDataSet.from_config"]], "invalidate_cache() (kedro_datasets.geopandas.geojsondataset method)": [[213, "kedro_datasets.geopandas.GeoJSONDataSet.invalidate_cache"]], "load() (kedro_datasets.geopandas.geojsondataset method)": [[213, "kedro_datasets.geopandas.GeoJSONDataSet.load"]], "release() (kedro_datasets.geopandas.geojsondataset method)": [[213, "kedro_datasets.geopandas.GeoJSONDataSet.release"]], "resolve_load_version() (kedro_datasets.geopandas.geojsondataset method)": [[213, "kedro_datasets.geopandas.GeoJSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.geopandas.geojsondataset method)": [[213, "kedro_datasets.geopandas.GeoJSONDataSet.resolve_save_version"]], "save() (kedro_datasets.geopandas.geojsondataset method)": [[213, "kedro_datasets.geopandas.GeoJSONDataSet.save"]], "default_save_args (kedro_datasets.holoviews.holoviewswriter attribute)": [[214, "kedro_datasets.holoviews.HoloviewsWriter.DEFAULT_SAVE_ARGS"]], "holoviewswriter (class in kedro_datasets.holoviews)": [[214, "kedro_datasets.holoviews.HoloviewsWriter"]], "__init__() (kedro_datasets.holoviews.holoviewswriter method)": [[214, "kedro_datasets.holoviews.HoloviewsWriter.__init__"]], "exists() (kedro_datasets.holoviews.holoviewswriter method)": [[214, "kedro_datasets.holoviews.HoloviewsWriter.exists"]], "from_config() (kedro_datasets.holoviews.holoviewswriter class method)": [[214, "kedro_datasets.holoviews.HoloviewsWriter.from_config"]], "load() (kedro_datasets.holoviews.holoviewswriter method)": [[214, "kedro_datasets.holoviews.HoloviewsWriter.load"]], "release() (kedro_datasets.holoviews.holoviewswriter method)": [[214, "kedro_datasets.holoviews.HoloviewsWriter.release"]], "resolve_load_version() (kedro_datasets.holoviews.holoviewswriter method)": [[214, "kedro_datasets.holoviews.HoloviewsWriter.resolve_load_version"]], "resolve_save_version() (kedro_datasets.holoviews.holoviewswriter method)": [[214, "kedro_datasets.holoviews.HoloviewsWriter.resolve_save_version"]], "save() (kedro_datasets.holoviews.holoviewswriter method)": [[214, "kedro_datasets.holoviews.HoloviewsWriter.save"]], "default_save_args (kedro_datasets.json.jsondataset attribute)": [[215, "kedro_datasets.json.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.json)": [[215, "kedro_datasets.json.JSONDataSet"]], "__init__() (kedro_datasets.json.jsondataset method)": [[215, "kedro_datasets.json.JSONDataSet.__init__"]], "exists() (kedro_datasets.json.jsondataset method)": [[215, "kedro_datasets.json.JSONDataSet.exists"]], "from_config() (kedro_datasets.json.jsondataset class method)": [[215, "kedro_datasets.json.JSONDataSet.from_config"]], "load() (kedro_datasets.json.jsondataset method)": [[215, "kedro_datasets.json.JSONDataSet.load"]], "release() (kedro_datasets.json.jsondataset method)": [[215, "kedro_datasets.json.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.json.jsondataset method)": [[215, "kedro_datasets.json.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.json.jsondataset method)": [[215, "kedro_datasets.json.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.json.jsondataset method)": [[215, "kedro_datasets.json.JSONDataSet.save"]], "default_save_args (kedro_datasets.matplotlib.matplotlibwriter attribute)": [[216, "kedro_datasets.matplotlib.MatplotlibWriter.DEFAULT_SAVE_ARGS"]], "matplotlibwriter (class in kedro_datasets.matplotlib)": [[216, "kedro_datasets.matplotlib.MatplotlibWriter"]], "__init__() (kedro_datasets.matplotlib.matplotlibwriter method)": [[216, "kedro_datasets.matplotlib.MatplotlibWriter.__init__"]], "exists() (kedro_datasets.matplotlib.matplotlibwriter method)": [[216, "kedro_datasets.matplotlib.MatplotlibWriter.exists"]], "from_config() (kedro_datasets.matplotlib.matplotlibwriter class method)": [[216, "kedro_datasets.matplotlib.MatplotlibWriter.from_config"]], "load() (kedro_datasets.matplotlib.matplotlibwriter method)": [[216, "kedro_datasets.matplotlib.MatplotlibWriter.load"]], "release() (kedro_datasets.matplotlib.matplotlibwriter method)": [[216, "kedro_datasets.matplotlib.MatplotlibWriter.release"]], "resolve_load_version() (kedro_datasets.matplotlib.matplotlibwriter method)": [[216, "kedro_datasets.matplotlib.MatplotlibWriter.resolve_load_version"]], "resolve_save_version() (kedro_datasets.matplotlib.matplotlibwriter method)": [[216, "kedro_datasets.matplotlib.MatplotlibWriter.resolve_save_version"]], "save() (kedro_datasets.matplotlib.matplotlibwriter method)": [[216, "kedro_datasets.matplotlib.MatplotlibWriter.save"]], "default_load_args (kedro_datasets.networkx.gmldataset attribute)": [[217, "kedro_datasets.networkx.GMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.networkx.gmldataset attribute)": [[217, "kedro_datasets.networkx.GMLDataSet.DEFAULT_SAVE_ARGS"]], "gmldataset (class in kedro_datasets.networkx)": [[217, "kedro_datasets.networkx.GMLDataSet"]], "__init__() (kedro_datasets.networkx.gmldataset method)": [[217, "kedro_datasets.networkx.GMLDataSet.__init__"]], "exists() (kedro_datasets.networkx.gmldataset method)": [[217, "kedro_datasets.networkx.GMLDataSet.exists"]], "from_config() (kedro_datasets.networkx.gmldataset class method)": [[217, "kedro_datasets.networkx.GMLDataSet.from_config"]], "load() (kedro_datasets.networkx.gmldataset method)": [[217, "kedro_datasets.networkx.GMLDataSet.load"]], "release() (kedro_datasets.networkx.gmldataset method)": [[217, "kedro_datasets.networkx.GMLDataSet.release"]], "resolve_load_version() (kedro_datasets.networkx.gmldataset method)": [[217, "kedro_datasets.networkx.GMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.networkx.gmldataset method)": [[217, "kedro_datasets.networkx.GMLDataSet.resolve_save_version"]], "save() (kedro_datasets.networkx.gmldataset method)": [[217, "kedro_datasets.networkx.GMLDataSet.save"]], "default_load_args (kedro_datasets.networkx.graphmldataset attribute)": [[218, "kedro_datasets.networkx.GraphMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.networkx.graphmldataset attribute)": [[218, "kedro_datasets.networkx.GraphMLDataSet.DEFAULT_SAVE_ARGS"]], "graphmldataset (class in kedro_datasets.networkx)": [[218, "kedro_datasets.networkx.GraphMLDataSet"]], "__init__() (kedro_datasets.networkx.graphmldataset method)": [[218, "kedro_datasets.networkx.GraphMLDataSet.__init__"]], "exists() (kedro_datasets.networkx.graphmldataset method)": [[218, "kedro_datasets.networkx.GraphMLDataSet.exists"]], "from_config() (kedro_datasets.networkx.graphmldataset class method)": [[218, "kedro_datasets.networkx.GraphMLDataSet.from_config"]], "load() (kedro_datasets.networkx.graphmldataset method)": [[218, "kedro_datasets.networkx.GraphMLDataSet.load"]], "release() (kedro_datasets.networkx.graphmldataset method)": [[218, "kedro_datasets.networkx.GraphMLDataSet.release"]], "resolve_load_version() (kedro_datasets.networkx.graphmldataset method)": [[218, "kedro_datasets.networkx.GraphMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.networkx.graphmldataset method)": [[218, "kedro_datasets.networkx.GraphMLDataSet.resolve_save_version"]], "save() (kedro_datasets.networkx.graphmldataset method)": [[218, "kedro_datasets.networkx.GraphMLDataSet.save"]], "default_load_args (kedro_datasets.networkx.jsondataset attribute)": [[219, "kedro_datasets.networkx.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.networkx.jsondataset attribute)": [[219, "kedro_datasets.networkx.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.networkx)": [[219, "kedro_datasets.networkx.JSONDataSet"]], "__init__() (kedro_datasets.networkx.jsondataset method)": [[219, "kedro_datasets.networkx.JSONDataSet.__init__"]], "exists() (kedro_datasets.networkx.jsondataset method)": [[219, "kedro_datasets.networkx.JSONDataSet.exists"]], "from_config() (kedro_datasets.networkx.jsondataset class method)": [[219, "kedro_datasets.networkx.JSONDataSet.from_config"]], "load() (kedro_datasets.networkx.jsondataset method)": [[219, "kedro_datasets.networkx.JSONDataSet.load"]], "release() (kedro_datasets.networkx.jsondataset method)": [[219, "kedro_datasets.networkx.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.networkx.jsondataset method)": [[219, "kedro_datasets.networkx.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.networkx.jsondataset method)": [[219, "kedro_datasets.networkx.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.networkx.jsondataset method)": [[219, "kedro_datasets.networkx.JSONDataSet.save"]], "csvdataset (class in kedro_datasets.pandas)": [[220, "kedro_datasets.pandas.CSVDataSet"]], "default_load_args (kedro_datasets.pandas.csvdataset attribute)": [[220, "kedro_datasets.pandas.CSVDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.csvdataset attribute)": [[220, "kedro_datasets.pandas.CSVDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.pandas.csvdataset method)": [[220, "kedro_datasets.pandas.CSVDataSet.__init__"]], "exists() (kedro_datasets.pandas.csvdataset method)": [[220, "kedro_datasets.pandas.CSVDataSet.exists"]], "from_config() (kedro_datasets.pandas.csvdataset class method)": [[220, "kedro_datasets.pandas.CSVDataSet.from_config"]], "load() (kedro_datasets.pandas.csvdataset method)": [[220, "kedro_datasets.pandas.CSVDataSet.load"]], "release() (kedro_datasets.pandas.csvdataset method)": [[220, "kedro_datasets.pandas.CSVDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.csvdataset method)": [[220, "kedro_datasets.pandas.CSVDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.csvdataset method)": [[220, "kedro_datasets.pandas.CSVDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.csvdataset method)": [[220, "kedro_datasets.pandas.CSVDataSet.save"]], "accepted_write_modes (kedro_datasets.pandas.deltatabledataset attribute)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.ACCEPTED_WRITE_MODES"]], "default_load_args (kedro_datasets.pandas.deltatabledataset attribute)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.deltatabledataset attribute)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.DEFAULT_SAVE_ARGS"]], "default_write_mode (kedro_datasets.pandas.deltatabledataset attribute)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.DEFAULT_WRITE_MODE"]], "deltatabledataset (class in kedro_datasets.pandas)": [[221, "kedro_datasets.pandas.DeltaTableDataSet"]], "__init__() (kedro_datasets.pandas.deltatabledataset method)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.__init__"]], "exists() (kedro_datasets.pandas.deltatabledataset method)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.exists"]], "from_config() (kedro_datasets.pandas.deltatabledataset class method)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.from_config"]], "fs_args (kedro_datasets.pandas.deltatabledataset property)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.fs_args"]], "get_loaded_version() (kedro_datasets.pandas.deltatabledataset method)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.get_loaded_version"]], "history (kedro_datasets.pandas.deltatabledataset property)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.history"]], "load() (kedro_datasets.pandas.deltatabledataset method)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.load"]], "metadata (kedro_datasets.pandas.deltatabledataset property)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.metadata"]], "release() (kedro_datasets.pandas.deltatabledataset method)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.release"]], "save() (kedro_datasets.pandas.deltatabledataset method)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.save"]], "schema (kedro_datasets.pandas.deltatabledataset property)": [[221, "kedro_datasets.pandas.DeltaTableDataSet.schema"]], "default_load_args (kedro_datasets.pandas.exceldataset attribute)": [[222, "kedro_datasets.pandas.ExcelDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.exceldataset attribute)": [[222, "kedro_datasets.pandas.ExcelDataSet.DEFAULT_SAVE_ARGS"]], "exceldataset (class in kedro_datasets.pandas)": [[222, "kedro_datasets.pandas.ExcelDataSet"]], "__init__() (kedro_datasets.pandas.exceldataset method)": [[222, "kedro_datasets.pandas.ExcelDataSet.__init__"]], "exists() (kedro_datasets.pandas.exceldataset method)": [[222, "kedro_datasets.pandas.ExcelDataSet.exists"]], "from_config() (kedro_datasets.pandas.exceldataset class method)": [[222, "kedro_datasets.pandas.ExcelDataSet.from_config"]], "load() (kedro_datasets.pandas.exceldataset method)": [[222, "kedro_datasets.pandas.ExcelDataSet.load"]], "release() (kedro_datasets.pandas.exceldataset method)": [[222, "kedro_datasets.pandas.ExcelDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.exceldataset method)": [[222, "kedro_datasets.pandas.ExcelDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.exceldataset method)": [[222, "kedro_datasets.pandas.ExcelDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.exceldataset method)": [[222, "kedro_datasets.pandas.ExcelDataSet.save"]], "default_load_args (kedro_datasets.pandas.featherdataset attribute)": [[223, "kedro_datasets.pandas.FeatherDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.featherdataset attribute)": [[223, "kedro_datasets.pandas.FeatherDataSet.DEFAULT_SAVE_ARGS"]], "featherdataset (class in kedro_datasets.pandas)": [[223, "kedro_datasets.pandas.FeatherDataSet"]], "__init__() (kedro_datasets.pandas.featherdataset method)": [[223, "kedro_datasets.pandas.FeatherDataSet.__init__"]], "exists() (kedro_datasets.pandas.featherdataset method)": [[223, "kedro_datasets.pandas.FeatherDataSet.exists"]], "from_config() (kedro_datasets.pandas.featherdataset class method)": [[223, "kedro_datasets.pandas.FeatherDataSet.from_config"]], "load() (kedro_datasets.pandas.featherdataset method)": [[223, "kedro_datasets.pandas.FeatherDataSet.load"]], "release() (kedro_datasets.pandas.featherdataset method)": [[223, "kedro_datasets.pandas.FeatherDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.featherdataset method)": [[223, "kedro_datasets.pandas.FeatherDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.featherdataset method)": [[223, "kedro_datasets.pandas.FeatherDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.featherdataset method)": [[223, "kedro_datasets.pandas.FeatherDataSet.save"]], "default_load_args (kedro_datasets.pandas.gbqquerydataset attribute)": [[224, "kedro_datasets.pandas.GBQQueryDataSet.DEFAULT_LOAD_ARGS"]], "gbqquerydataset (class in kedro_datasets.pandas)": [[224, "kedro_datasets.pandas.GBQQueryDataSet"]], "__init__() (kedro_datasets.pandas.gbqquerydataset method)": [[224, "kedro_datasets.pandas.GBQQueryDataSet.__init__"]], "exists() (kedro_datasets.pandas.gbqquerydataset method)": [[224, "kedro_datasets.pandas.GBQQueryDataSet.exists"]], "from_config() (kedro_datasets.pandas.gbqquerydataset class method)": [[224, "kedro_datasets.pandas.GBQQueryDataSet.from_config"]], "load() (kedro_datasets.pandas.gbqquerydataset method)": [[224, "kedro_datasets.pandas.GBQQueryDataSet.load"]], "release() (kedro_datasets.pandas.gbqquerydataset method)": [[224, "kedro_datasets.pandas.GBQQueryDataSet.release"]], "save() (kedro_datasets.pandas.gbqquerydataset method)": [[224, "kedro_datasets.pandas.GBQQueryDataSet.save"]], "default_load_args (kedro_datasets.pandas.gbqtabledataset attribute)": [[225, "kedro_datasets.pandas.GBQTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.gbqtabledataset attribute)": [[225, "kedro_datasets.pandas.GBQTableDataSet.DEFAULT_SAVE_ARGS"]], "gbqtabledataset (class in kedro_datasets.pandas)": [[225, "kedro_datasets.pandas.GBQTableDataSet"]], "__init__() (kedro_datasets.pandas.gbqtabledataset method)": [[225, "kedro_datasets.pandas.GBQTableDataSet.__init__"]], "exists() (kedro_datasets.pandas.gbqtabledataset method)": [[225, "kedro_datasets.pandas.GBQTableDataSet.exists"]], "from_config() (kedro_datasets.pandas.gbqtabledataset class method)": [[225, "kedro_datasets.pandas.GBQTableDataSet.from_config"]], "load() (kedro_datasets.pandas.gbqtabledataset method)": [[225, "kedro_datasets.pandas.GBQTableDataSet.load"]], "release() (kedro_datasets.pandas.gbqtabledataset method)": [[225, "kedro_datasets.pandas.GBQTableDataSet.release"]], "save() (kedro_datasets.pandas.gbqtabledataset method)": [[225, "kedro_datasets.pandas.GBQTableDataSet.save"]], "default_load_args (kedro_datasets.pandas.genericdataset attribute)": [[226, "kedro_datasets.pandas.GenericDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.genericdataset attribute)": [[226, "kedro_datasets.pandas.GenericDataSet.DEFAULT_SAVE_ARGS"]], "genericdataset (class in kedro_datasets.pandas)": [[226, "kedro_datasets.pandas.GenericDataSet"]], "__init__() (kedro_datasets.pandas.genericdataset method)": [[226, "kedro_datasets.pandas.GenericDataSet.__init__"]], "exists() (kedro_datasets.pandas.genericdataset method)": [[226, "kedro_datasets.pandas.GenericDataSet.exists"]], "from_config() (kedro_datasets.pandas.genericdataset class method)": [[226, "kedro_datasets.pandas.GenericDataSet.from_config"]], "load() (kedro_datasets.pandas.genericdataset method)": [[226, "kedro_datasets.pandas.GenericDataSet.load"]], "release() (kedro_datasets.pandas.genericdataset method)": [[226, "kedro_datasets.pandas.GenericDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.genericdataset method)": [[226, "kedro_datasets.pandas.GenericDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.genericdataset method)": [[226, "kedro_datasets.pandas.GenericDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.genericdataset method)": [[226, "kedro_datasets.pandas.GenericDataSet.save"]], "default_load_args (kedro_datasets.pandas.hdfdataset attribute)": [[227, "kedro_datasets.pandas.HDFDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.hdfdataset attribute)": [[227, "kedro_datasets.pandas.HDFDataSet.DEFAULT_SAVE_ARGS"]], "hdfdataset (class in kedro_datasets.pandas)": [[227, "kedro_datasets.pandas.HDFDataSet"]], "__init__() (kedro_datasets.pandas.hdfdataset method)": [[227, "kedro_datasets.pandas.HDFDataSet.__init__"]], "exists() (kedro_datasets.pandas.hdfdataset method)": [[227, "kedro_datasets.pandas.HDFDataSet.exists"]], "from_config() (kedro_datasets.pandas.hdfdataset class method)": [[227, "kedro_datasets.pandas.HDFDataSet.from_config"]], "load() (kedro_datasets.pandas.hdfdataset method)": [[227, "kedro_datasets.pandas.HDFDataSet.load"]], "release() (kedro_datasets.pandas.hdfdataset method)": [[227, "kedro_datasets.pandas.HDFDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.hdfdataset method)": [[227, "kedro_datasets.pandas.HDFDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.hdfdataset method)": [[227, "kedro_datasets.pandas.HDFDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.hdfdataset method)": [[227, "kedro_datasets.pandas.HDFDataSet.save"]], "default_load_args (kedro_datasets.pandas.jsondataset attribute)": [[228, "kedro_datasets.pandas.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.jsondataset attribute)": [[228, "kedro_datasets.pandas.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.pandas)": [[228, "kedro_datasets.pandas.JSONDataSet"]], "__init__() (kedro_datasets.pandas.jsondataset method)": [[228, "kedro_datasets.pandas.JSONDataSet.__init__"]], "exists() (kedro_datasets.pandas.jsondataset method)": [[228, "kedro_datasets.pandas.JSONDataSet.exists"]], "from_config() (kedro_datasets.pandas.jsondataset class method)": [[228, "kedro_datasets.pandas.JSONDataSet.from_config"]], "load() (kedro_datasets.pandas.jsondataset method)": [[228, "kedro_datasets.pandas.JSONDataSet.load"]], "release() (kedro_datasets.pandas.jsondataset method)": [[228, "kedro_datasets.pandas.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.jsondataset method)": [[228, "kedro_datasets.pandas.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.jsondataset method)": [[228, "kedro_datasets.pandas.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.jsondataset method)": [[228, "kedro_datasets.pandas.JSONDataSet.save"]], "default_load_args (kedro_datasets.pandas.parquetdataset attribute)": [[229, "kedro_datasets.pandas.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.parquetdataset attribute)": [[229, "kedro_datasets.pandas.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro_datasets.pandas)": [[229, "kedro_datasets.pandas.ParquetDataSet"]], "__init__() (kedro_datasets.pandas.parquetdataset method)": [[229, "kedro_datasets.pandas.ParquetDataSet.__init__"]], "exists() (kedro_datasets.pandas.parquetdataset method)": [[229, "kedro_datasets.pandas.ParquetDataSet.exists"]], "from_config() (kedro_datasets.pandas.parquetdataset class method)": [[229, "kedro_datasets.pandas.ParquetDataSet.from_config"]], "load() (kedro_datasets.pandas.parquetdataset method)": [[229, "kedro_datasets.pandas.ParquetDataSet.load"]], "release() (kedro_datasets.pandas.parquetdataset method)": [[229, "kedro_datasets.pandas.ParquetDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.parquetdataset method)": [[229, "kedro_datasets.pandas.ParquetDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.parquetdataset method)": [[229, "kedro_datasets.pandas.ParquetDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.parquetdataset method)": [[229, "kedro_datasets.pandas.ParquetDataSet.save"]], "sqlquerydataset (class in kedro_datasets.pandas)": [[230, "kedro_datasets.pandas.SQLQueryDataSet"]], "__init__() (kedro_datasets.pandas.sqlquerydataset method)": [[230, "kedro_datasets.pandas.SQLQueryDataSet.__init__"]], "adapt_mssql_date_params() (kedro_datasets.pandas.sqlquerydataset method)": [[230, "kedro_datasets.pandas.SQLQueryDataSet.adapt_mssql_date_params"]], "create_connection() (kedro_datasets.pandas.sqlquerydataset class method)": [[230, "kedro_datasets.pandas.SQLQueryDataSet.create_connection"]], "engines (kedro_datasets.pandas.sqlquerydataset attribute)": [[230, "kedro_datasets.pandas.SQLQueryDataSet.engines"]], "exists() (kedro_datasets.pandas.sqlquerydataset method)": [[230, "kedro_datasets.pandas.SQLQueryDataSet.exists"]], "from_config() (kedro_datasets.pandas.sqlquerydataset class method)": [[230, "kedro_datasets.pandas.SQLQueryDataSet.from_config"]], "load() (kedro_datasets.pandas.sqlquerydataset method)": [[230, "kedro_datasets.pandas.SQLQueryDataSet.load"]], "release() (kedro_datasets.pandas.sqlquerydataset method)": [[230, "kedro_datasets.pandas.SQLQueryDataSet.release"]], "save() (kedro_datasets.pandas.sqlquerydataset method)": [[230, "kedro_datasets.pandas.SQLQueryDataSet.save"]], "default_load_args (kedro_datasets.pandas.sqltabledataset attribute)": [[231, "kedro_datasets.pandas.SQLTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.sqltabledataset attribute)": [[231, "kedro_datasets.pandas.SQLTableDataSet.DEFAULT_SAVE_ARGS"]], "sqltabledataset (class in kedro_datasets.pandas)": [[231, "kedro_datasets.pandas.SQLTableDataSet"]], "__init__() (kedro_datasets.pandas.sqltabledataset method)": [[231, "kedro_datasets.pandas.SQLTableDataSet.__init__"]], "create_connection() (kedro_datasets.pandas.sqltabledataset class method)": [[231, "kedro_datasets.pandas.SQLTableDataSet.create_connection"]], "engines (kedro_datasets.pandas.sqltabledataset attribute)": [[231, "kedro_datasets.pandas.SQLTableDataSet.engines"]], "exists() (kedro_datasets.pandas.sqltabledataset method)": [[231, "kedro_datasets.pandas.SQLTableDataSet.exists"]], "from_config() (kedro_datasets.pandas.sqltabledataset class method)": [[231, "kedro_datasets.pandas.SQLTableDataSet.from_config"]], "load() (kedro_datasets.pandas.sqltabledataset method)": [[231, "kedro_datasets.pandas.SQLTableDataSet.load"]], "release() (kedro_datasets.pandas.sqltabledataset method)": [[231, "kedro_datasets.pandas.SQLTableDataSet.release"]], "save() (kedro_datasets.pandas.sqltabledataset method)": [[231, "kedro_datasets.pandas.SQLTableDataSet.save"]], "default_load_args (kedro_datasets.pandas.xmldataset attribute)": [[232, "kedro_datasets.pandas.XMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.xmldataset attribute)": [[232, "kedro_datasets.pandas.XMLDataSet.DEFAULT_SAVE_ARGS"]], "xmldataset (class in kedro_datasets.pandas)": [[232, "kedro_datasets.pandas.XMLDataSet"]], "__init__() (kedro_datasets.pandas.xmldataset method)": [[232, "kedro_datasets.pandas.XMLDataSet.__init__"]], "exists() (kedro_datasets.pandas.xmldataset method)": [[232, "kedro_datasets.pandas.XMLDataSet.exists"]], "from_config() (kedro_datasets.pandas.xmldataset class method)": [[232, "kedro_datasets.pandas.XMLDataSet.from_config"]], "load() (kedro_datasets.pandas.xmldataset method)": [[232, "kedro_datasets.pandas.XMLDataSet.load"]], "release() (kedro_datasets.pandas.xmldataset method)": [[232, "kedro_datasets.pandas.XMLDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.xmldataset method)": [[232, "kedro_datasets.pandas.XMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.xmldataset method)": [[232, "kedro_datasets.pandas.XMLDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.xmldataset method)": [[232, "kedro_datasets.pandas.XMLDataSet.save"]], "default_load_args (kedro_datasets.pickle.pickledataset attribute)": [[233, "kedro_datasets.pickle.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pickle.pickledataset attribute)": [[233, "kedro_datasets.pickle.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro_datasets.pickle)": [[233, "kedro_datasets.pickle.PickleDataSet"]], "__init__() (kedro_datasets.pickle.pickledataset method)": [[233, "kedro_datasets.pickle.PickleDataSet.__init__"]], "exists() (kedro_datasets.pickle.pickledataset method)": [[233, "kedro_datasets.pickle.PickleDataSet.exists"]], "from_config() (kedro_datasets.pickle.pickledataset class method)": [[233, "kedro_datasets.pickle.PickleDataSet.from_config"]], "load() (kedro_datasets.pickle.pickledataset method)": [[233, "kedro_datasets.pickle.PickleDataSet.load"]], "release() (kedro_datasets.pickle.pickledataset method)": [[233, "kedro_datasets.pickle.PickleDataSet.release"]], "resolve_load_version() (kedro_datasets.pickle.pickledataset method)": [[233, "kedro_datasets.pickle.PickleDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pickle.pickledataset method)": [[233, "kedro_datasets.pickle.PickleDataSet.resolve_save_version"]], "save() (kedro_datasets.pickle.pickledataset method)": [[233, "kedro_datasets.pickle.PickleDataSet.save"]], "default_save_args (kedro_datasets.pillow.imagedataset attribute)": [[234, "kedro_datasets.pillow.ImageDataSet.DEFAULT_SAVE_ARGS"]], "imagedataset (class in kedro_datasets.pillow)": [[234, "kedro_datasets.pillow.ImageDataSet"]], "__init__() (kedro_datasets.pillow.imagedataset method)": [[234, "kedro_datasets.pillow.ImageDataSet.__init__"]], "exists() (kedro_datasets.pillow.imagedataset method)": [[234, "kedro_datasets.pillow.ImageDataSet.exists"]], "from_config() (kedro_datasets.pillow.imagedataset class method)": [[234, "kedro_datasets.pillow.ImageDataSet.from_config"]], "load() (kedro_datasets.pillow.imagedataset method)": [[234, "kedro_datasets.pillow.ImageDataSet.load"]], "release() (kedro_datasets.pillow.imagedataset method)": [[234, "kedro_datasets.pillow.ImageDataSet.release"]], "resolve_load_version() (kedro_datasets.pillow.imagedataset method)": [[234, "kedro_datasets.pillow.ImageDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pillow.imagedataset method)": [[234, "kedro_datasets.pillow.ImageDataSet.resolve_save_version"]], "save() (kedro_datasets.pillow.imagedataset method)": [[234, "kedro_datasets.pillow.ImageDataSet.save"]], "default_load_args (kedro_datasets.plotly.jsondataset attribute)": [[235, "kedro_datasets.plotly.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.plotly.jsondataset attribute)": [[235, "kedro_datasets.plotly.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.plotly)": [[235, "kedro_datasets.plotly.JSONDataSet"]], "__init__() (kedro_datasets.plotly.jsondataset method)": [[235, "kedro_datasets.plotly.JSONDataSet.__init__"]], "exists() (kedro_datasets.plotly.jsondataset method)": [[235, "kedro_datasets.plotly.JSONDataSet.exists"]], "from_config() (kedro_datasets.plotly.jsondataset class method)": [[235, "kedro_datasets.plotly.JSONDataSet.from_config"]], "load() (kedro_datasets.plotly.jsondataset method)": [[235, "kedro_datasets.plotly.JSONDataSet.load"]], "release() (kedro_datasets.plotly.jsondataset method)": [[235, "kedro_datasets.plotly.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.plotly.jsondataset method)": [[235, "kedro_datasets.plotly.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.plotly.jsondataset method)": [[235, "kedro_datasets.plotly.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.plotly.jsondataset method)": [[235, "kedro_datasets.plotly.JSONDataSet.save"]], "default_load_args (kedro_datasets.plotly.plotlydataset attribute)": [[236, "kedro_datasets.plotly.PlotlyDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.plotly.plotlydataset attribute)": [[236, "kedro_datasets.plotly.PlotlyDataSet.DEFAULT_SAVE_ARGS"]], "plotlydataset (class in kedro_datasets.plotly)": [[236, "kedro_datasets.plotly.PlotlyDataSet"]], "__init__() (kedro_datasets.plotly.plotlydataset method)": [[236, "kedro_datasets.plotly.PlotlyDataSet.__init__"]], "exists() (kedro_datasets.plotly.plotlydataset method)": [[236, "kedro_datasets.plotly.PlotlyDataSet.exists"]], "from_config() (kedro_datasets.plotly.plotlydataset class method)": [[236, "kedro_datasets.plotly.PlotlyDataSet.from_config"]], "load() (kedro_datasets.plotly.plotlydataset method)": [[236, "kedro_datasets.plotly.PlotlyDataSet.load"]], "release() (kedro_datasets.plotly.plotlydataset method)": [[236, "kedro_datasets.plotly.PlotlyDataSet.release"]], "resolve_load_version() (kedro_datasets.plotly.plotlydataset method)": [[236, "kedro_datasets.plotly.PlotlyDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.plotly.plotlydataset method)": [[236, "kedro_datasets.plotly.PlotlyDataSet.resolve_save_version"]], "save() (kedro_datasets.plotly.plotlydataset method)": [[236, "kedro_datasets.plotly.PlotlyDataSet.save"]], "csvdataset (class in kedro_datasets.polars)": [[237, "kedro_datasets.polars.CSVDataSet"]], "default_load_args (kedro_datasets.polars.csvdataset attribute)": [[237, "kedro_datasets.polars.CSVDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.polars.csvdataset attribute)": [[237, "kedro_datasets.polars.CSVDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.polars.csvdataset method)": [[237, "kedro_datasets.polars.CSVDataSet.__init__"]], "exists() (kedro_datasets.polars.csvdataset method)": [[237, "kedro_datasets.polars.CSVDataSet.exists"]], "from_config() (kedro_datasets.polars.csvdataset class method)": [[237, "kedro_datasets.polars.CSVDataSet.from_config"]], "load() (kedro_datasets.polars.csvdataset method)": [[237, "kedro_datasets.polars.CSVDataSet.load"]], "release() (kedro_datasets.polars.csvdataset method)": [[237, "kedro_datasets.polars.CSVDataSet.release"]], "resolve_load_version() (kedro_datasets.polars.csvdataset method)": [[237, "kedro_datasets.polars.CSVDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.polars.csvdataset method)": [[237, "kedro_datasets.polars.CSVDataSet.resolve_save_version"]], "save() (kedro_datasets.polars.csvdataset method)": [[237, "kedro_datasets.polars.CSVDataSet.save"]], "default_load_args (kedro_datasets.redis.pickledataset attribute)": [[238, "kedro_datasets.redis.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_redis_url (kedro_datasets.redis.pickledataset attribute)": [[238, "kedro_datasets.redis.PickleDataSet.DEFAULT_REDIS_URL"]], "default_save_args (kedro_datasets.redis.pickledataset attribute)": [[238, "kedro_datasets.redis.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro_datasets.redis)": [[238, "kedro_datasets.redis.PickleDataSet"]], "__init__() (kedro_datasets.redis.pickledataset method)": [[238, "kedro_datasets.redis.PickleDataSet.__init__"]], "exists() (kedro_datasets.redis.pickledataset method)": [[238, "kedro_datasets.redis.PickleDataSet.exists"]], "from_config() (kedro_datasets.redis.pickledataset class method)": [[238, "kedro_datasets.redis.PickleDataSet.from_config"]], "load() (kedro_datasets.redis.pickledataset method)": [[238, "kedro_datasets.redis.PickleDataSet.load"]], "release() (kedro_datasets.redis.pickledataset method)": [[238, "kedro_datasets.redis.PickleDataSet.release"]], "save() (kedro_datasets.redis.pickledataset method)": [[238, "kedro_datasets.redis.PickleDataSet.save"]], "default_load_args (kedro_datasets.snowflake.snowparktabledataset attribute)": [[239, "kedro_datasets.snowflake.SnowparkTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.snowflake.snowparktabledataset attribute)": [[239, "kedro_datasets.snowflake.SnowparkTableDataSet.DEFAULT_SAVE_ARGS"]], "snowparktabledataset (class in kedro_datasets.snowflake)": [[239, "kedro_datasets.snowflake.SnowparkTableDataSet"]], "__init__() (kedro_datasets.snowflake.snowparktabledataset method)": [[239, "kedro_datasets.snowflake.SnowparkTableDataSet.__init__"]], "exists() (kedro_datasets.snowflake.snowparktabledataset method)": [[239, "kedro_datasets.snowflake.SnowparkTableDataSet.exists"]], "from_config() (kedro_datasets.snowflake.snowparktabledataset class method)": [[239, "kedro_datasets.snowflake.SnowparkTableDataSet.from_config"]], "load() (kedro_datasets.snowflake.snowparktabledataset method)": [[239, "kedro_datasets.snowflake.SnowparkTableDataSet.load"]], "release() (kedro_datasets.snowflake.snowparktabledataset method)": [[239, "kedro_datasets.snowflake.SnowparkTableDataSet.release"]], "save() (kedro_datasets.snowflake.snowparktabledataset method)": [[239, "kedro_datasets.snowflake.SnowparkTableDataSet.save"]], "deltatabledataset (class in kedro_datasets.spark)": [[240, "kedro_datasets.spark.DeltaTableDataSet"]], "__init__() (kedro_datasets.spark.deltatabledataset method)": [[240, "kedro_datasets.spark.DeltaTableDataSet.__init__"]], "exists() (kedro_datasets.spark.deltatabledataset method)": [[240, "kedro_datasets.spark.DeltaTableDataSet.exists"]], "from_config() (kedro_datasets.spark.deltatabledataset class method)": [[240, "kedro_datasets.spark.DeltaTableDataSet.from_config"]], "load() (kedro_datasets.spark.deltatabledataset method)": [[240, "kedro_datasets.spark.DeltaTableDataSet.load"]], "release() (kedro_datasets.spark.deltatabledataset method)": [[240, "kedro_datasets.spark.DeltaTableDataSet.release"]], "save() (kedro_datasets.spark.deltatabledataset method)": [[240, "kedro_datasets.spark.DeltaTableDataSet.save"]], "default_load_args (kedro_datasets.spark.sparkdataset attribute)": [[241, "kedro_datasets.spark.SparkDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.spark.sparkdataset attribute)": [[241, "kedro_datasets.spark.SparkDataSet.DEFAULT_SAVE_ARGS"]], "sparkdataset (class in kedro_datasets.spark)": [[241, "kedro_datasets.spark.SparkDataSet"]], "__init__() (kedro_datasets.spark.sparkdataset method)": [[241, "kedro_datasets.spark.SparkDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkdataset method)": [[241, "kedro_datasets.spark.SparkDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkdataset class method)": [[241, "kedro_datasets.spark.SparkDataSet.from_config"]], "load() (kedro_datasets.spark.sparkdataset method)": [[241, "kedro_datasets.spark.SparkDataSet.load"]], "release() (kedro_datasets.spark.sparkdataset method)": [[241, "kedro_datasets.spark.SparkDataSet.release"]], "resolve_load_version() (kedro_datasets.spark.sparkdataset method)": [[241, "kedro_datasets.spark.SparkDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.spark.sparkdataset method)": [[241, "kedro_datasets.spark.SparkDataSet.resolve_save_version"]], "save() (kedro_datasets.spark.sparkdataset method)": [[241, "kedro_datasets.spark.SparkDataSet.save"]], "default_save_args (kedro_datasets.spark.sparkhivedataset attribute)": [[242, "kedro_datasets.spark.SparkHiveDataSet.DEFAULT_SAVE_ARGS"]], "sparkhivedataset (class in kedro_datasets.spark)": [[242, "kedro_datasets.spark.SparkHiveDataSet"]], "__init__() (kedro_datasets.spark.sparkhivedataset method)": [[242, "kedro_datasets.spark.SparkHiveDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkhivedataset method)": [[242, "kedro_datasets.spark.SparkHiveDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkhivedataset class method)": [[242, "kedro_datasets.spark.SparkHiveDataSet.from_config"]], "load() (kedro_datasets.spark.sparkhivedataset method)": [[242, "kedro_datasets.spark.SparkHiveDataSet.load"]], "release() (kedro_datasets.spark.sparkhivedataset method)": [[242, "kedro_datasets.spark.SparkHiveDataSet.release"]], "save() (kedro_datasets.spark.sparkhivedataset method)": [[242, "kedro_datasets.spark.SparkHiveDataSet.save"]], "default_load_args (kedro_datasets.spark.sparkjdbcdataset attribute)": [[243, "kedro_datasets.spark.SparkJDBCDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.spark.sparkjdbcdataset attribute)": [[243, "kedro_datasets.spark.SparkJDBCDataSet.DEFAULT_SAVE_ARGS"]], "sparkjdbcdataset (class in kedro_datasets.spark)": [[243, "kedro_datasets.spark.SparkJDBCDataSet"]], "__init__() (kedro_datasets.spark.sparkjdbcdataset method)": [[243, "kedro_datasets.spark.SparkJDBCDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkjdbcdataset method)": [[243, "kedro_datasets.spark.SparkJDBCDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkjdbcdataset class method)": [[243, "kedro_datasets.spark.SparkJDBCDataSet.from_config"]], "load() (kedro_datasets.spark.sparkjdbcdataset method)": [[243, "kedro_datasets.spark.SparkJDBCDataSet.load"]], "release() (kedro_datasets.spark.sparkjdbcdataset method)": [[243, "kedro_datasets.spark.SparkJDBCDataSet.release"]], "save() (kedro_datasets.spark.sparkjdbcdataset method)": [[243, "kedro_datasets.spark.SparkJDBCDataSet.save"]], "default_load_args (kedro_datasets.spark.sparkstreamingdataset attribute)": [[244, "kedro_datasets.spark.SparkStreamingDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.spark.sparkstreamingdataset attribute)": [[244, "kedro_datasets.spark.SparkStreamingDataSet.DEFAULT_SAVE_ARGS"]], "sparkstreamingdataset (class in kedro_datasets.spark)": [[244, "kedro_datasets.spark.SparkStreamingDataSet"]], "__init__() (kedro_datasets.spark.sparkstreamingdataset method)": [[244, "kedro_datasets.spark.SparkStreamingDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkstreamingdataset method)": [[244, "kedro_datasets.spark.SparkStreamingDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkstreamingdataset class method)": [[244, "kedro_datasets.spark.SparkStreamingDataSet.from_config"]], "load() (kedro_datasets.spark.sparkstreamingdataset method)": [[244, "kedro_datasets.spark.SparkStreamingDataSet.load"]], "release() (kedro_datasets.spark.sparkstreamingdataset method)": [[244, "kedro_datasets.spark.SparkStreamingDataSet.release"]], "save() (kedro_datasets.spark.sparkstreamingdataset method)": [[244, "kedro_datasets.spark.SparkStreamingDataSet.save"]], "default_load_args (kedro_datasets.svmlight.svmlightdataset attribute)": [[245, "kedro_datasets.svmlight.SVMLightDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.svmlight.svmlightdataset attribute)": [[245, "kedro_datasets.svmlight.SVMLightDataSet.DEFAULT_SAVE_ARGS"]], "svmlightdataset (class in kedro_datasets.svmlight)": [[245, "kedro_datasets.svmlight.SVMLightDataSet"]], "__init__() (kedro_datasets.svmlight.svmlightdataset method)": [[245, "kedro_datasets.svmlight.SVMLightDataSet.__init__"]], "exists() (kedro_datasets.svmlight.svmlightdataset method)": [[245, "kedro_datasets.svmlight.SVMLightDataSet.exists"]], "from_config() (kedro_datasets.svmlight.svmlightdataset class method)": [[245, "kedro_datasets.svmlight.SVMLightDataSet.from_config"]], "load() (kedro_datasets.svmlight.svmlightdataset method)": [[245, "kedro_datasets.svmlight.SVMLightDataSet.load"]], "release() (kedro_datasets.svmlight.svmlightdataset method)": [[245, "kedro_datasets.svmlight.SVMLightDataSet.release"]], "resolve_load_version() (kedro_datasets.svmlight.svmlightdataset method)": [[245, "kedro_datasets.svmlight.SVMLightDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.svmlight.svmlightdataset method)": [[245, "kedro_datasets.svmlight.SVMLightDataSet.resolve_save_version"]], "save() (kedro_datasets.svmlight.svmlightdataset method)": [[245, "kedro_datasets.svmlight.SVMLightDataSet.save"]], "default_load_args (kedro_datasets.tensorflow.tensorflowmodeldataset attribute)": [[246, "kedro_datasets.tensorflow.TensorFlowModelDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.tensorflow.tensorflowmodeldataset attribute)": [[246, "kedro_datasets.tensorflow.TensorFlowModelDataSet.DEFAULT_SAVE_ARGS"]], "tensorflowmodeldataset (class in kedro_datasets.tensorflow)": [[246, "kedro_datasets.tensorflow.TensorFlowModelDataSet"]], "__init__() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[246, "kedro_datasets.tensorflow.TensorFlowModelDataSet.__init__"]], "exists() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[246, "kedro_datasets.tensorflow.TensorFlowModelDataSet.exists"]], "from_config() (kedro_datasets.tensorflow.tensorflowmodeldataset class method)": [[246, "kedro_datasets.tensorflow.TensorFlowModelDataSet.from_config"]], "load() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[246, "kedro_datasets.tensorflow.TensorFlowModelDataSet.load"]], "release() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[246, "kedro_datasets.tensorflow.TensorFlowModelDataSet.release"]], "resolve_load_version() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[246, "kedro_datasets.tensorflow.TensorFlowModelDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[246, "kedro_datasets.tensorflow.TensorFlowModelDataSet.resolve_save_version"]], "save() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[246, "kedro_datasets.tensorflow.TensorFlowModelDataSet.save"]], "textdataset (class in kedro_datasets.text)": [[247, "kedro_datasets.text.TextDataSet"]], "__init__() (kedro_datasets.text.textdataset method)": [[247, "kedro_datasets.text.TextDataSet.__init__"]], "exists() (kedro_datasets.text.textdataset method)": [[247, "kedro_datasets.text.TextDataSet.exists"]], "from_config() (kedro_datasets.text.textdataset class method)": [[247, "kedro_datasets.text.TextDataSet.from_config"]], "load() (kedro_datasets.text.textdataset method)": [[247, "kedro_datasets.text.TextDataSet.load"]], "release() (kedro_datasets.text.textdataset method)": [[247, "kedro_datasets.text.TextDataSet.release"]], "resolve_load_version() (kedro_datasets.text.textdataset method)": [[247, "kedro_datasets.text.TextDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.text.textdataset method)": [[247, "kedro_datasets.text.TextDataSet.resolve_save_version"]], "save() (kedro_datasets.text.textdataset method)": [[247, "kedro_datasets.text.TextDataSet.save"]], "default_save_args (kedro_datasets.tracking.jsondataset attribute)": [[248, "kedro_datasets.tracking.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.tracking)": [[248, "kedro_datasets.tracking.JSONDataSet"]], "__init__() (kedro_datasets.tracking.jsondataset method)": [[248, "kedro_datasets.tracking.JSONDataSet.__init__"]], "exists() (kedro_datasets.tracking.jsondataset method)": [[248, "kedro_datasets.tracking.JSONDataSet.exists"]], "from_config() (kedro_datasets.tracking.jsondataset class method)": [[248, "kedro_datasets.tracking.JSONDataSet.from_config"]], "load() (kedro_datasets.tracking.jsondataset method)": [[248, "kedro_datasets.tracking.JSONDataSet.load"]], "release() (kedro_datasets.tracking.jsondataset method)": [[248, "kedro_datasets.tracking.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.tracking.jsondataset method)": [[248, "kedro_datasets.tracking.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.tracking.jsondataset method)": [[248, "kedro_datasets.tracking.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.tracking.jsondataset method)": [[248, "kedro_datasets.tracking.JSONDataSet.save"]], "versioned (kedro_datasets.tracking.jsondataset attribute)": [[248, "kedro_datasets.tracking.JSONDataSet.versioned"]], "default_save_args (kedro_datasets.tracking.metricsdataset attribute)": [[249, "kedro_datasets.tracking.MetricsDataSet.DEFAULT_SAVE_ARGS"]], "metricsdataset (class in kedro_datasets.tracking)": [[249, "kedro_datasets.tracking.MetricsDataSet"]], "__init__() (kedro_datasets.tracking.metricsdataset method)": [[249, "kedro_datasets.tracking.MetricsDataSet.__init__"]], "exists() (kedro_datasets.tracking.metricsdataset method)": [[249, "kedro_datasets.tracking.MetricsDataSet.exists"]], "from_config() (kedro_datasets.tracking.metricsdataset class method)": [[249, "kedro_datasets.tracking.MetricsDataSet.from_config"]], "load() (kedro_datasets.tracking.metricsdataset method)": [[249, "kedro_datasets.tracking.MetricsDataSet.load"]], "release() (kedro_datasets.tracking.metricsdataset method)": [[249, "kedro_datasets.tracking.MetricsDataSet.release"]], "resolve_load_version() (kedro_datasets.tracking.metricsdataset method)": [[249, "kedro_datasets.tracking.MetricsDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.tracking.metricsdataset method)": [[249, "kedro_datasets.tracking.MetricsDataSet.resolve_save_version"]], "save() (kedro_datasets.tracking.metricsdataset method)": [[249, "kedro_datasets.tracking.MetricsDataSet.save"]], "versioned (kedro_datasets.tracking.metricsdataset attribute)": [[249, "kedro_datasets.tracking.MetricsDataSet.versioned"]], "videodataset (class in kedro_datasets.video)": [[250, "kedro_datasets.video.VideoDataSet"]], "__init__() (kedro_datasets.video.videodataset method)": [[250, "kedro_datasets.video.VideoDataSet.__init__"]], "exists() (kedro_datasets.video.videodataset method)": [[250, "kedro_datasets.video.VideoDataSet.exists"]], "from_config() (kedro_datasets.video.videodataset class method)": [[250, "kedro_datasets.video.VideoDataSet.from_config"]], "load() (kedro_datasets.video.videodataset method)": [[250, "kedro_datasets.video.VideoDataSet.load"]], "release() (kedro_datasets.video.videodataset method)": [[250, "kedro_datasets.video.VideoDataSet.release"]], "save() (kedro_datasets.video.videodataset method)": [[250, "kedro_datasets.video.VideoDataSet.save"]], "default_save_args (kedro_datasets.yaml.yamldataset attribute)": [[251, "kedro_datasets.yaml.YAMLDataSet.DEFAULT_SAVE_ARGS"]], "yamldataset (class in kedro_datasets.yaml)": [[251, "kedro_datasets.yaml.YAMLDataSet"]], "__init__() (kedro_datasets.yaml.yamldataset method)": [[251, "kedro_datasets.yaml.YAMLDataSet.__init__"]], "exists() (kedro_datasets.yaml.yamldataset method)": [[251, "kedro_datasets.yaml.YAMLDataSet.exists"]], "from_config() (kedro_datasets.yaml.yamldataset class method)": [[251, "kedro_datasets.yaml.YAMLDataSet.from_config"]], "load() (kedro_datasets.yaml.yamldataset method)": [[251, "kedro_datasets.yaml.YAMLDataSet.load"]], "release() (kedro_datasets.yaml.yamldataset method)": [[251, "kedro_datasets.yaml.YAMLDataSet.release"]], "resolve_load_version() (kedro_datasets.yaml.yamldataset method)": [[251, "kedro_datasets.yaml.YAMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.yaml.yamldataset method)": [[251, "kedro_datasets.yaml.YAMLDataSet.resolve_save_version"]], "save() (kedro_datasets.yaml.yamldataset method)": [[251, "kedro_datasets.yaml.YAMLDataSet.save"]]}})