Search.setIndex({"docnames": ["configuration/advanced_configuration", "configuration/configuration_basics", "configuration/credentials", "configuration/index", "configuration/parameters", "contribution/backwards_compatibility", "contribution/developer_contributor_guidelines", "contribution/development_for_databricks", "contribution/documentation_contributor_guidelines", "contribution/index", "contribution/technical_steering_committee", "data/advanced_data_catalog_usage", "data/data_catalog", "data/data_catalog_basic_how_to", "data/data_catalog_yaml_examples", "data/how_to_create_a_custom_dataset", "data/index", "data/partitioned_and_incremental_datasets", "deployment/airflow_astronomer", "deployment/amazon_sagemaker", "deployment/argo", "deployment/aws_batch", "deployment/aws_step_functions", "deployment/azure", "deployment/dask", "deployment/databricks/databricks_deployment_workflow", "deployment/databricks/databricks_ide_development_workflow", "deployment/databricks/databricks_notebooks_development_workflow", "deployment/databricks/databricks_visualisation", "deployment/databricks/index", "deployment/distributed", "deployment/index", "deployment/kubeflow", "deployment/prefect", "deployment/single_machine", "deployment/vertexai", "development/automated_testing", "development/commands_reference", "development/debugging", "development/index", "development/linting", "development/set_up_pycharm", "development/set_up_vscode", "experiment_tracking/index", "extend_kedro/common_use_cases", "extend_kedro/index", "extend_kedro/plugins", "faq/faq", "get_started/index", "get_started/install", "get_started/kedro_concepts", "get_started/new_project", "hooks/common_use_cases", "hooks/examples", "hooks/index", "hooks/introduction", "index", "integrations/pyspark_integration", "introduction/index", "introduction/introduction", "kedro", "kedro.KedroPythonVersionWarning", "kedro.config", "kedro.config.ConfigLoader", "kedro.config.MissingConfigException", "kedro.config.OmegaConfigLoader", "kedro.config.TemplatedConfigLoader", "kedro.extras", "kedro.extras.datasets", "kedro.extras.datasets.api.APIDataSet", "kedro.extras.datasets.biosequence.BioSequenceDataSet", "kedro.extras.datasets.dask.ParquetDataSet", "kedro.extras.datasets.email.EmailMessageDataSet", "kedro.extras.datasets.geopandas.GeoJSONDataSet", "kedro.extras.datasets.holoviews.HoloviewsWriter", "kedro.extras.datasets.json.JSONDataSet", "kedro.extras.datasets.matplotlib.MatplotlibWriter", "kedro.extras.datasets.networkx.GMLDataSet", "kedro.extras.datasets.networkx.GraphMLDataSet", "kedro.extras.datasets.networkx.JSONDataSet", "kedro.extras.datasets.pandas.CSVDataSet", "kedro.extras.datasets.pandas.ExcelDataSet", "kedro.extras.datasets.pandas.FeatherDataSet", "kedro.extras.datasets.pandas.GBQQueryDataSet", "kedro.extras.datasets.pandas.GBQTableDataSet", "kedro.extras.datasets.pandas.GenericDataSet", "kedro.extras.datasets.pandas.HDFDataSet", "kedro.extras.datasets.pandas.JSONDataSet", "kedro.extras.datasets.pandas.ParquetDataSet", "kedro.extras.datasets.pandas.SQLQueryDataSet", "kedro.extras.datasets.pandas.SQLTableDataSet", "kedro.extras.datasets.pandas.XMLDataSet", "kedro.extras.datasets.pickle.PickleDataSet", "kedro.extras.datasets.pillow.ImageDataSet", "kedro.extras.datasets.plotly.JSONDataSet", "kedro.extras.datasets.plotly.PlotlyDataSet", "kedro.extras.datasets.redis.PickleDataSet", "kedro.extras.datasets.spark.DeltaTableDataSet", "kedro.extras.datasets.spark.SparkDataSet", "kedro.extras.datasets.spark.SparkHiveDataSet", "kedro.extras.datasets.spark.SparkJDBCDataSet", "kedro.extras.datasets.svmlight.SVMLightDataSet", "kedro.extras.datasets.tensorflow.TensorFlowModelDataset", "kedro.extras.datasets.text.TextDataSet", "kedro.extras.datasets.tracking.JSONDataSet", "kedro.extras.datasets.tracking.MetricsDataSet", "kedro.extras.datasets.yaml.YAMLDataSet", "kedro.extras.extensions", "kedro.extras.extensions.ipython", "kedro.extras.logging", "kedro.extras.logging.color_logger", "kedro.extras.logging.color_logger.ColorHandler", "kedro.framework", "kedro.framework.cli", "kedro.framework.cli.catalog", "kedro.framework.cli.cli", "kedro.framework.cli.cli.KedroCLI", "kedro.framework.cli.cli.main", "kedro.framework.cli.hooks", "kedro.framework.cli.hooks.manager", "kedro.framework.cli.hooks.manager.CLIHooksManager", "kedro.framework.cli.hooks.manager.get_cli_hook_manager", "kedro.framework.cli.hooks.markers", "kedro.framework.cli.hooks.specs", "kedro.framework.cli.hooks.specs.CLICommandSpecs", "kedro.framework.cli.jupyter", "kedro.framework.cli.jupyter.JupyterCommandGroup", "kedro.framework.cli.micropkg", "kedro.framework.cli.micropkg.safe_extract", "kedro.framework.cli.pipeline", "kedro.framework.cli.pipeline.PipelineArtifacts", "kedro.framework.cli.project", "kedro.framework.cli.registry", "kedro.framework.cli.starters", "kedro.framework.cli.starters.KedroStarterSpec", "kedro.framework.cli.utils", "kedro.framework.cli.utils.CommandCollection", "kedro.framework.cli.utils.KedroCliError", "kedro.framework.cli.utils.command_with_verbosity", "kedro.framework.cli.utils.env_option", "kedro.framework.cli.utils.find_stylesheets", "kedro.framework.cli.utils.forward_command", "kedro.framework.cli.utils.get_pkg_version", "kedro.framework.cli.utils.python_call", "kedro.framework.cli.utils.split_string", "kedro.framework.context", "kedro.framework.context.KedroContext", "kedro.framework.context.KedroContextError", "kedro.framework.hooks", "kedro.framework.hooks.manager", "kedro.framework.hooks.markers", "kedro.framework.hooks.specs", "kedro.framework.hooks.specs.DataCatalogSpecs", "kedro.framework.hooks.specs.DatasetSpecs", "kedro.framework.hooks.specs.KedroContextSpecs", "kedro.framework.hooks.specs.NodeSpecs", "kedro.framework.hooks.specs.PipelineSpecs", "kedro.framework.project", "kedro.framework.project.configure_logging", "kedro.framework.project.configure_project", "kedro.framework.project.find_pipelines", "kedro.framework.project.validate_settings", "kedro.framework.session", "kedro.framework.session.session", "kedro.framework.session.session.KedroSession", "kedro.framework.session.session.KedroSessionError", "kedro.framework.session.shelvestore", "kedro.framework.session.shelvestore.ShelveStore", "kedro.framework.session.store", "kedro.framework.session.store.BaseSessionStore", "kedro.framework.startup", "kedro.framework.startup.ProjectMetadata", "kedro.framework.startup.bootstrap_project", "kedro.io", "kedro.io.AbstractDataSet", "kedro.io.AbstractVersionedDataSet", "kedro.io.CachedDataSet", "kedro.io.DataCatalog", "kedro.io.DataSetAlreadyExistsError", "kedro.io.DataSetError", "kedro.io.DataSetNotFoundError", "kedro.io.IncrementalDataSet", "kedro.io.LambdaDataSet", "kedro.io.MemoryDataSet", "kedro.io.PartitionedDataSet", "kedro.io.Version", "kedro.ipython", "kedro.ipython.load_ipython_extension", "kedro.ipython.magic_reload_kedro", "kedro.ipython.reload_kedro", "kedro.logging", "kedro.logging.RichHandler", "kedro.pipeline", "kedro.pipeline.Pipeline", "kedro.pipeline.modular_pipeline.ModularPipelineError", "kedro.pipeline.modular_pipeline.pipeline", "kedro.pipeline.node", "kedro.pipeline.node.Node", "kedro.runner", "kedro.runner.AbstractRunner", "kedro.runner.ParallelRunner", "kedro.runner.SequentialRunner", "kedro.runner.ThreadRunner", "kedro.runner.run_node", "kedro.utils", "kedro.utils.load_obj", "kedro_datasets", "kedro_datasets.api.APIDataSet", "kedro_datasets.biosequence.BioSequenceDataSet", "kedro_datasets.dask.ParquetDataSet", "kedro_datasets.databricks.ManagedTableDataSet", "kedro_datasets.email.EmailMessageDataSet", "kedro_datasets.geopandas.GeoJSONDataSet", "kedro_datasets.holoviews.HoloviewsWriter", "kedro_datasets.json.JSONDataSet", "kedro_datasets.matplotlib.MatplotlibWriter", "kedro_datasets.networkx.GMLDataSet", "kedro_datasets.networkx.GraphMLDataSet", "kedro_datasets.networkx.JSONDataSet", "kedro_datasets.pandas.CSVDataSet", "kedro_datasets.pandas.DeltaTableDataSet", "kedro_datasets.pandas.ExcelDataSet", "kedro_datasets.pandas.FeatherDataSet", "kedro_datasets.pandas.GBQQueryDataSet", "kedro_datasets.pandas.GBQTableDataSet", "kedro_datasets.pandas.GenericDataSet", "kedro_datasets.pandas.HDFDataSet", "kedro_datasets.pandas.JSONDataSet", "kedro_datasets.pandas.ParquetDataSet", "kedro_datasets.pandas.SQLQueryDataSet", "kedro_datasets.pandas.SQLTableDataSet", "kedro_datasets.pandas.XMLDataSet", "kedro_datasets.pickle.PickleDataSet", "kedro_datasets.pillow.ImageDataSet", "kedro_datasets.plotly.JSONDataSet", "kedro_datasets.plotly.PlotlyDataSet", "kedro_datasets.polars.CSVDataSet", "kedro_datasets.redis.PickleDataSet", "kedro_datasets.snowflake.SnowparkTableDataSet", "kedro_datasets.spark.DeltaTableDataSet", "kedro_datasets.spark.SparkDataSet", "kedro_datasets.spark.SparkHiveDataSet", "kedro_datasets.spark.SparkJDBCDataSet", "kedro_datasets.spark.SparkStreamingDataSet", "kedro_datasets.svmlight.SVMLightDataSet", "kedro_datasets.tensorflow.TensorFlowModelDataSet", "kedro_datasets.text.TextDataSet", "kedro_datasets.tracking.JSONDataSet", "kedro_datasets.tracking.MetricsDataSet", "kedro_datasets.video.VideoDataSet", "kedro_datasets.yaml.YAMLDataSet", "kedro_project_setup/dependencies", "kedro_project_setup/index", "kedro_project_setup/session", "kedro_project_setup/settings", "kedro_project_setup/starters", "logging/index", "logging/logging", "nodes_and_pipelines/index", "nodes_and_pipelines/micro_packaging", "nodes_and_pipelines/modular_pipelines", "nodes_and_pipelines/nodes", "nodes_and_pipelines/pipeline_introduction", "nodes_and_pipelines/pipeline_registry", "nodes_and_pipelines/run_a_pipeline", "nodes_and_pipelines/slice_a_pipeline", "notebooks_and_ipython/index", "notebooks_and_ipython/kedro_and_notebooks", "notebooks_and_ipython/kedro_as_a_data_registry", "resources/glossary", "resources/index", "tutorial/add_another_pipeline", "tutorial/create_a_pipeline", "tutorial/package_a_project", "tutorial/set_up_data", "tutorial/spaceflights_tutorial", "tutorial/spaceflights_tutorial_faqs", "tutorial/tutorial_template", "visualisation/index", "visualisation/kedro-viz_visualisation", "visualisation/preview_datasets", "visualisation/visualise_charts_with_plotly"], "filenames": ["configuration/advanced_configuration.md", "configuration/configuration_basics.md", "configuration/credentials.md", "configuration/index.md", "configuration/parameters.md", "contribution/backwards_compatibility.md", "contribution/developer_contributor_guidelines.md", "contribution/development_for_databricks.md", "contribution/documentation_contributor_guidelines.md", "contribution/index.md", "contribution/technical_steering_committee.md", "data/advanced_data_catalog_usage.md", "data/data_catalog.md", "data/data_catalog_basic_how_to.md", "data/data_catalog_yaml_examples.md", "data/how_to_create_a_custom_dataset.md", "data/index.md", "data/partitioned_and_incremental_datasets.md", "deployment/airflow_astronomer.md", "deployment/amazon_sagemaker.md", "deployment/argo.md", "deployment/aws_batch.md", "deployment/aws_step_functions.md", "deployment/azure.md", "deployment/dask.md", "deployment/databricks/databricks_deployment_workflow.md", "deployment/databricks/databricks_ide_development_workflow.md", "deployment/databricks/databricks_notebooks_development_workflow.md", "deployment/databricks/databricks_visualisation.md", "deployment/databricks/index.md", "deployment/distributed.md", "deployment/index.md", "deployment/kubeflow.md", "deployment/prefect.md", "deployment/single_machine.md", "deployment/vertexai.md", "development/automated_testing.md", "development/commands_reference.md", "development/debugging.md", "development/index.md", "development/linting.md", "development/set_up_pycharm.md", "development/set_up_vscode.md", "experiment_tracking/index.md", "extend_kedro/common_use_cases.md", "extend_kedro/index.md", "extend_kedro/plugins.md", "faq/faq.md", "get_started/index.md", "get_started/install.md", "get_started/kedro_concepts.md", "get_started/new_project.md", "hooks/common_use_cases.md", "hooks/examples.md", "hooks/index.md", "hooks/introduction.md", "index.rst", "integrations/pyspark_integration.md", "introduction/index.md", "introduction/introduction.md", "kedro.rst", "kedro.KedroPythonVersionWarning.rst", "kedro.config.rst", "kedro.config.ConfigLoader.rst", "kedro.config.MissingConfigException.rst", "kedro.config.OmegaConfigLoader.rst", "kedro.config.TemplatedConfigLoader.rst", "kedro.extras.rst", "kedro.extras.datasets.rst", "kedro.extras.datasets.api.APIDataSet.rst", "kedro.extras.datasets.biosequence.BioSequenceDataSet.rst", "kedro.extras.datasets.dask.ParquetDataSet.rst", "kedro.extras.datasets.email.EmailMessageDataSet.rst", "kedro.extras.datasets.geopandas.GeoJSONDataSet.rst", "kedro.extras.datasets.holoviews.HoloviewsWriter.rst", "kedro.extras.datasets.json.JSONDataSet.rst", "kedro.extras.datasets.matplotlib.MatplotlibWriter.rst", "kedro.extras.datasets.networkx.GMLDataSet.rst", "kedro.extras.datasets.networkx.GraphMLDataSet.rst", "kedro.extras.datasets.networkx.JSONDataSet.rst", "kedro.extras.datasets.pandas.CSVDataSet.rst", "kedro.extras.datasets.pandas.ExcelDataSet.rst", "kedro.extras.datasets.pandas.FeatherDataSet.rst", "kedro.extras.datasets.pandas.GBQQueryDataSet.rst", "kedro.extras.datasets.pandas.GBQTableDataSet.rst", "kedro.extras.datasets.pandas.GenericDataSet.rst", "kedro.extras.datasets.pandas.HDFDataSet.rst", "kedro.extras.datasets.pandas.JSONDataSet.rst", "kedro.extras.datasets.pandas.ParquetDataSet.rst", "kedro.extras.datasets.pandas.SQLQueryDataSet.rst", "kedro.extras.datasets.pandas.SQLTableDataSet.rst", "kedro.extras.datasets.pandas.XMLDataSet.rst", "kedro.extras.datasets.pickle.PickleDataSet.rst", "kedro.extras.datasets.pillow.ImageDataSet.rst", "kedro.extras.datasets.plotly.JSONDataSet.rst", "kedro.extras.datasets.plotly.PlotlyDataSet.rst", "kedro.extras.datasets.redis.PickleDataSet.rst", "kedro.extras.datasets.spark.DeltaTableDataSet.rst", "kedro.extras.datasets.spark.SparkDataSet.rst", "kedro.extras.datasets.spark.SparkHiveDataSet.rst", "kedro.extras.datasets.spark.SparkJDBCDataSet.rst", "kedro.extras.datasets.svmlight.SVMLightDataSet.rst", "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.rst", "kedro.extras.datasets.text.TextDataSet.rst", "kedro.extras.datasets.tracking.JSONDataSet.rst", "kedro.extras.datasets.tracking.MetricsDataSet.rst", "kedro.extras.datasets.yaml.YAMLDataSet.rst", "kedro.extras.extensions.rst", "kedro.extras.extensions.ipython.rst", "kedro.extras.logging.rst", "kedro.extras.logging.color_logger.rst", "kedro.extras.logging.color_logger.ColorHandler.rst", "kedro.framework.rst", "kedro.framework.cli.rst", "kedro.framework.cli.catalog.rst", "kedro.framework.cli.cli.rst", "kedro.framework.cli.cli.KedroCLI.rst", "kedro.framework.cli.cli.main.rst", "kedro.framework.cli.hooks.rst", "kedro.framework.cli.hooks.manager.rst", "kedro.framework.cli.hooks.manager.CLIHooksManager.rst", "kedro.framework.cli.hooks.manager.get_cli_hook_manager.rst", "kedro.framework.cli.hooks.markers.rst", "kedro.framework.cli.hooks.specs.rst", "kedro.framework.cli.hooks.specs.CLICommandSpecs.rst", "kedro.framework.cli.jupyter.rst", "kedro.framework.cli.jupyter.JupyterCommandGroup.rst", "kedro.framework.cli.micropkg.rst", "kedro.framework.cli.micropkg.safe_extract.rst", "kedro.framework.cli.pipeline.rst", "kedro.framework.cli.pipeline.PipelineArtifacts.rst", "kedro.framework.cli.project.rst", "kedro.framework.cli.registry.rst", "kedro.framework.cli.starters.rst", "kedro.framework.cli.starters.KedroStarterSpec.rst", "kedro.framework.cli.utils.rst", "kedro.framework.cli.utils.CommandCollection.rst", "kedro.framework.cli.utils.KedroCliError.rst", "kedro.framework.cli.utils.command_with_verbosity.rst", "kedro.framework.cli.utils.env_option.rst", "kedro.framework.cli.utils.find_stylesheets.rst", "kedro.framework.cli.utils.forward_command.rst", "kedro.framework.cli.utils.get_pkg_version.rst", "kedro.framework.cli.utils.python_call.rst", "kedro.framework.cli.utils.split_string.rst", "kedro.framework.context.rst", "kedro.framework.context.KedroContext.rst", "kedro.framework.context.KedroContextError.rst", "kedro.framework.hooks.rst", "kedro.framework.hooks.manager.rst", "kedro.framework.hooks.markers.rst", "kedro.framework.hooks.specs.rst", "kedro.framework.hooks.specs.DataCatalogSpecs.rst", "kedro.framework.hooks.specs.DatasetSpecs.rst", "kedro.framework.hooks.specs.KedroContextSpecs.rst", "kedro.framework.hooks.specs.NodeSpecs.rst", "kedro.framework.hooks.specs.PipelineSpecs.rst", "kedro.framework.project.rst", "kedro.framework.project.configure_logging.rst", "kedro.framework.project.configure_project.rst", "kedro.framework.project.find_pipelines.rst", "kedro.framework.project.validate_settings.rst", "kedro.framework.session.rst", "kedro.framework.session.session.rst", "kedro.framework.session.session.KedroSession.rst", "kedro.framework.session.session.KedroSessionError.rst", "kedro.framework.session.shelvestore.rst", "kedro.framework.session.shelvestore.ShelveStore.rst", "kedro.framework.session.store.rst", "kedro.framework.session.store.BaseSessionStore.rst", "kedro.framework.startup.rst", "kedro.framework.startup.ProjectMetadata.rst", "kedro.framework.startup.bootstrap_project.rst", "kedro.io.rst", "kedro.io.AbstractDataSet.rst", "kedro.io.AbstractVersionedDataSet.rst", "kedro.io.CachedDataSet.rst", "kedro.io.DataCatalog.rst", "kedro.io.DataSetAlreadyExistsError.rst", "kedro.io.DataSetError.rst", "kedro.io.DataSetNotFoundError.rst", "kedro.io.IncrementalDataSet.rst", "kedro.io.LambdaDataSet.rst", "kedro.io.MemoryDataSet.rst", "kedro.io.PartitionedDataSet.rst", "kedro.io.Version.rst", "kedro.ipython.rst", "kedro.ipython.load_ipython_extension.rst", "kedro.ipython.magic_reload_kedro.rst", "kedro.ipython.reload_kedro.rst", "kedro.logging.rst", "kedro.logging.RichHandler.rst", "kedro.pipeline.rst", "kedro.pipeline.Pipeline.rst", "kedro.pipeline.modular_pipeline.ModularPipelineError.rst", "kedro.pipeline.modular_pipeline.pipeline.rst", "kedro.pipeline.node.rst", "kedro.pipeline.node.Node.rst", "kedro.runner.rst", "kedro.runner.AbstractRunner.rst", "kedro.runner.ParallelRunner.rst", "kedro.runner.SequentialRunner.rst", "kedro.runner.ThreadRunner.rst", "kedro.runner.run_node.rst", "kedro.utils.rst", "kedro.utils.load_obj.rst", "kedro_datasets.rst", "kedro_datasets.api.APIDataSet.rst", "kedro_datasets.biosequence.BioSequenceDataSet.rst", "kedro_datasets.dask.ParquetDataSet.rst", "kedro_datasets.databricks.ManagedTableDataSet.rst", "kedro_datasets.email.EmailMessageDataSet.rst", "kedro_datasets.geopandas.GeoJSONDataSet.rst", "kedro_datasets.holoviews.HoloviewsWriter.rst", "kedro_datasets.json.JSONDataSet.rst", "kedro_datasets.matplotlib.MatplotlibWriter.rst", "kedro_datasets.networkx.GMLDataSet.rst", "kedro_datasets.networkx.GraphMLDataSet.rst", "kedro_datasets.networkx.JSONDataSet.rst", "kedro_datasets.pandas.CSVDataSet.rst", "kedro_datasets.pandas.DeltaTableDataSet.rst", "kedro_datasets.pandas.ExcelDataSet.rst", "kedro_datasets.pandas.FeatherDataSet.rst", "kedro_datasets.pandas.GBQQueryDataSet.rst", "kedro_datasets.pandas.GBQTableDataSet.rst", "kedro_datasets.pandas.GenericDataSet.rst", "kedro_datasets.pandas.HDFDataSet.rst", "kedro_datasets.pandas.JSONDataSet.rst", "kedro_datasets.pandas.ParquetDataSet.rst", "kedro_datasets.pandas.SQLQueryDataSet.rst", "kedro_datasets.pandas.SQLTableDataSet.rst", "kedro_datasets.pandas.XMLDataSet.rst", "kedro_datasets.pickle.PickleDataSet.rst", "kedro_datasets.pillow.ImageDataSet.rst", "kedro_datasets.plotly.JSONDataSet.rst", "kedro_datasets.plotly.PlotlyDataSet.rst", "kedro_datasets.polars.CSVDataSet.rst", "kedro_datasets.redis.PickleDataSet.rst", "kedro_datasets.snowflake.SnowparkTableDataSet.rst", "kedro_datasets.spark.DeltaTableDataSet.rst", "kedro_datasets.spark.SparkDataSet.rst", "kedro_datasets.spark.SparkHiveDataSet.rst", "kedro_datasets.spark.SparkJDBCDataSet.rst", "kedro_datasets.spark.SparkStreamingDataSet.rst", "kedro_datasets.svmlight.SVMLightDataSet.rst", "kedro_datasets.tensorflow.TensorFlowModelDataSet.rst", "kedro_datasets.text.TextDataSet.rst", "kedro_datasets.tracking.JSONDataSet.rst", "kedro_datasets.tracking.MetricsDataSet.rst", "kedro_datasets.video.VideoDataSet.rst", "kedro_datasets.yaml.YAMLDataSet.rst", "kedro_project_setup/dependencies.md", "kedro_project_setup/index.md", "kedro_project_setup/session.md", "kedro_project_setup/settings.md", "kedro_project_setup/starters.md", "logging/index.md", "logging/logging.md", "nodes_and_pipelines/index.md", "nodes_and_pipelines/micro_packaging.md", "nodes_and_pipelines/modular_pipelines.md", "nodes_and_pipelines/nodes.md", "nodes_and_pipelines/pipeline_introduction.md", "nodes_and_pipelines/pipeline_registry.md", "nodes_and_pipelines/run_a_pipeline.md", "nodes_and_pipelines/slice_a_pipeline.md", "notebooks_and_ipython/index.md", "notebooks_and_ipython/kedro_and_notebooks.md", "notebooks_and_ipython/kedro_as_a_data_registry.md", "resources/glossary.md", "resources/index.md", "tutorial/add_another_pipeline.md", "tutorial/create_a_pipeline.md", "tutorial/package_a_project.md", "tutorial/set_up_data.md", "tutorial/spaceflights_tutorial.md", "tutorial/spaceflights_tutorial_faqs.md", "tutorial/tutorial_template.md", "visualisation/index.md", "visualisation/kedro-viz_visualisation.md", "visualisation/preview_datasets.md", "visualisation/visualise_charts_with_plotly.md"], "titles": ["Advanced configuration", "Configuration", "Credentials", "Configuration", "Parameters", "Backwards compatibility &amp; breaking changes", "Guidelines for contributing developers", "Contribute changes to Kedro that are tested on Databricks", "Contribute to the Kedro documentation", "Contribute to Kedro", "Join the Technical Steering Committee", "Advanced: Access the Data Catalog in code", "Introduction to the Kedro Data Catalog", "Data Catalog how to guide", "Data Catalog YAML examples", "Tutorial: How to create a custom dataset", "The Kedro Data Catalog", "Advanced: Partitioned and incremental datasets", "Apache Airflow", "Amazon SageMaker", "Argo Workflows (outdated documentation that needs review)", "AWS Batch (outdated documentation that needs review)", "AWS Step Functions", "Azure ML pipelines", "Dask", "Use a Databricks job to deploy a Kedro project", "Use an IDE, dbx and Databricks Repos to develop a Kedro project", "Use a Databricks workspace to develop a Kedro project", "Visualise a Kedro project in Databricks notebooks", "Databricks", "Distributed deployment", "Deployment", "Kubeflow Pipelines", "Prefect", "Single-machine deployment", "VertexAI", "Automated Testing", "Kedro\u2019s command line interface", "Debugging", "Development", "Code formatting and linting", "Set up PyCharm", "Set up Visual Studio Code", "Experiment tracking in Kedro-Viz", "Common use cases", "Extend Kedro", "Kedro plugins", "Frequently asked questions", "First steps", "Set up Kedro", "Kedro concepts", "Create a new Kedro project", "Common use cases", "Hooks examples", "Hooks", "Hooks", "Welcome to Kedro\u2019s documentation!", "PySpark integration", "Introduction to Kedro", "Learn how to use Kedro", "kedro", "kedro.KedroPythonVersionWarning", "kedro.config", "kedro.config.ConfigLoader", "kedro.config.MissingConfigException", "kedro.config.OmegaConfigLoader", "kedro.config.TemplatedConfigLoader", "kedro.extras", "kedro.extras.datasets", "kedro.extras.datasets.api.APIDataSet", "kedro.extras.datasets.biosequence.BioSequenceDataSet", "kedro.extras.datasets.dask.ParquetDataSet", "kedro.extras.datasets.email.EmailMessageDataSet", "kedro.extras.datasets.geopandas.GeoJSONDataSet", "kedro.extras.datasets.holoviews.HoloviewsWriter", "kedro.extras.datasets.json.JSONDataSet", "kedro.extras.datasets.matplotlib.MatplotlibWriter", "kedro.extras.datasets.networkx.GMLDataSet", "kedro.extras.datasets.networkx.GraphMLDataSet", "kedro.extras.datasets.networkx.JSONDataSet", "kedro.extras.datasets.pandas.CSVDataSet", "kedro.extras.datasets.pandas.ExcelDataSet", "kedro.extras.datasets.pandas.FeatherDataSet", "kedro.extras.datasets.pandas.GBQQueryDataSet", "kedro.extras.datasets.pandas.GBQTableDataSet", "kedro.extras.datasets.pandas.GenericDataSet", "kedro.extras.datasets.pandas.HDFDataSet", "kedro.extras.datasets.pandas.JSONDataSet", "kedro.extras.datasets.pandas.ParquetDataSet", "kedro.extras.datasets.pandas.SQLQueryDataSet", "kedro.extras.datasets.pandas.SQLTableDataSet", "kedro.extras.datasets.pandas.XMLDataSet", "kedro.extras.datasets.pickle.PickleDataSet", "kedro.extras.datasets.pillow.ImageDataSet", "kedro.extras.datasets.plotly.JSONDataSet", "kedro.extras.datasets.plotly.PlotlyDataSet", "kedro.extras.datasets.redis.PickleDataSet", "kedro.extras.datasets.spark.DeltaTableDataSet", "kedro.extras.datasets.spark.SparkDataSet", "kedro.extras.datasets.spark.SparkHiveDataSet", "kedro.extras.datasets.spark.SparkJDBCDataSet", "kedro.extras.datasets.svmlight.SVMLightDataSet", "kedro.extras.datasets.tensorflow.TensorFlowModelDataset", "kedro.extras.datasets.text.TextDataSet", "kedro.extras.datasets.tracking.JSONDataSet", "kedro.extras.datasets.tracking.MetricsDataSet", "kedro.extras.datasets.yaml.YAMLDataSet", "kedro.extras.extensions", "kedro.extras.extensions.ipython", "kedro.extras.logging", "kedro.extras.logging.color_logger", "kedro.extras.logging.color_logger.ColorHandler", "kedro.framework", "kedro.framework.cli", "kedro.framework.cli.catalog", "kedro.framework.cli.cli", "kedro.framework.cli.cli.KedroCLI", "kedro.framework.cli.cli.main", "kedro.framework.cli.hooks", "kedro.framework.cli.hooks.manager", "kedro.framework.cli.hooks.manager.CLIHooksManager", "kedro.framework.cli.hooks.manager.get_cli_hook_manager", "kedro.framework.cli.hooks.markers", "kedro.framework.cli.hooks.specs", "kedro.framework.cli.hooks.specs.CLICommandSpecs", "kedro.framework.cli.jupyter", "kedro.framework.cli.jupyter.JupyterCommandGroup", "kedro.framework.cli.micropkg", "kedro.framework.cli.micropkg.safe_extract", "kedro.framework.cli.pipeline", "kedro.framework.cli.pipeline.PipelineArtifacts", "kedro.framework.cli.project", "kedro.framework.cli.registry", "kedro.framework.cli.starters", "kedro.framework.cli.starters.KedroStarterSpec", "kedro.framework.cli.utils", "kedro.framework.cli.utils.CommandCollection", "kedro.framework.cli.utils.KedroCliError", "kedro.framework.cli.utils.command_with_verbosity", "kedro.framework.cli.utils.env_option", "kedro.framework.cli.utils.find_stylesheets", "kedro.framework.cli.utils.forward_command", "kedro.framework.cli.utils.get_pkg_version", "kedro.framework.cli.utils.python_call", "kedro.framework.cli.utils.split_string", "kedro.framework.context", "kedro.framework.context.KedroContext", "kedro.framework.context.KedroContextError", "kedro.framework.hooks", "kedro.framework.hooks.manager", "kedro.framework.hooks.markers", "kedro.framework.hooks.specs", "kedro.framework.hooks.specs.DataCatalogSpecs", "kedro.framework.hooks.specs.DatasetSpecs", "kedro.framework.hooks.specs.KedroContextSpecs", "kedro.framework.hooks.specs.NodeSpecs", "kedro.framework.hooks.specs.PipelineSpecs", "kedro.framework.project", "kedro.framework.project.configure_logging", "kedro.framework.project.configure_project", "kedro.framework.project.find_pipelines", "kedro.framework.project.validate_settings", "kedro.framework.session", "kedro.framework.session.session", "kedro.framework.session.session.KedroSession", "kedro.framework.session.session.KedroSessionError", "kedro.framework.session.shelvestore", "kedro.framework.session.shelvestore.ShelveStore", "kedro.framework.session.store", "kedro.framework.session.store.BaseSessionStore", "kedro.framework.startup", "kedro.framework.startup.ProjectMetadata", "kedro.framework.startup.bootstrap_project", "kedro.io", "kedro.io.AbstractDataSet", "kedro.io.AbstractVersionedDataSet", "kedro.io.CachedDataSet", "kedro.io.DataCatalog", "kedro.io.DataSetAlreadyExistsError", "kedro.io.DataSetError", "kedro.io.DataSetNotFoundError", "kedro.io.IncrementalDataSet", "kedro.io.LambdaDataSet", "kedro.io.MemoryDataSet", "kedro.io.PartitionedDataSet", "kedro.io.Version", "kedro.ipython", "kedro.ipython.load_ipython_extension", "kedro.ipython.magic_reload_kedro", "kedro.ipython.reload_kedro", "kedro.logging", "kedro.logging.RichHandler", "kedro.pipeline", "kedro.pipeline.Pipeline", "kedro.pipeline.modular_pipeline.ModularPipelineError", "kedro.pipeline.modular_pipeline.pipeline", "kedro.pipeline.node", "kedro.pipeline.node.Node", "kedro.runner", "kedro.runner.AbstractRunner", "kedro.runner.ParallelRunner", "kedro.runner.SequentialRunner", "kedro.runner.ThreadRunner", "kedro.runner.run_node", "kedro.utils", "kedro.utils.load_obj", "kedro_datasets", "kedro_datasets.api.APIDataSet", "kedro_datasets.biosequence.BioSequenceDataSet", "kedro_datasets.dask.ParquetDataSet", "kedro_datasets.databricks.ManagedTableDataSet", "kedro_datasets.email.EmailMessageDataSet", "kedro_datasets.geopandas.GeoJSONDataSet", "kedro_datasets.holoviews.HoloviewsWriter", "kedro_datasets.json.JSONDataSet", "kedro_datasets.matplotlib.MatplotlibWriter", "kedro_datasets.networkx.GMLDataSet", "kedro_datasets.networkx.GraphMLDataSet", "kedro_datasets.networkx.JSONDataSet", "kedro_datasets.pandas.CSVDataSet", "kedro_datasets.pandas.DeltaTableDataSet", "kedro_datasets.pandas.ExcelDataSet", "kedro_datasets.pandas.FeatherDataSet", "kedro_datasets.pandas.GBQQueryDataSet", "kedro_datasets.pandas.GBQTableDataSet", "kedro_datasets.pandas.GenericDataSet", "kedro_datasets.pandas.HDFDataSet", "kedro_datasets.pandas.JSONDataSet", "kedro_datasets.pandas.ParquetDataSet", "kedro_datasets.pandas.SQLQueryDataSet", "kedro_datasets.pandas.SQLTableDataSet", "kedro_datasets.pandas.XMLDataSet", "kedro_datasets.pickle.PickleDataSet", "kedro_datasets.pillow.ImageDataSet", "kedro_datasets.plotly.JSONDataSet", "kedro_datasets.plotly.PlotlyDataSet", "kedro_datasets.polars.CSVDataSet", "kedro_datasets.redis.PickleDataSet", "kedro_datasets.snowflake.SnowparkTableDataSet", "kedro_datasets.spark.DeltaTableDataSet", "kedro_datasets.spark.SparkDataSet", "kedro_datasets.spark.SparkHiveDataSet", "kedro_datasets.spark.SparkJDBCDataSet", "kedro_datasets.spark.SparkStreamingDataSet", "kedro_datasets.svmlight.SVMLightDataSet", "kedro_datasets.tensorflow.TensorFlowModelDataSet", "kedro_datasets.text.TextDataSet", "kedro_datasets.tracking.JSONDataSet", "kedro_datasets.tracking.MetricsDataSet", "kedro_datasets.video.VideoDataSet", "kedro_datasets.yaml.YAMLDataSet", "Dependencies", "Kedro project setup", "Lifecycle management with <code class=\"docutils literal notranslate\"><span class=\"pre\">KedroSession</span></code>", "Project settings", "Kedro starters", "Logging", "Default framework-side logging configuration", "Nodes and pipelines", "Micro-packaging", "Modular pipelines", "Nodes", "Pipelines", "The pipeline registry", "Run a pipeline", "Slice a pipeline", "Kedro for notebook users", "Kedro and Jupyter Notebooks", "Kedro as a data registry", "Kedro glossary", "Resources", "Create a data science pipeline", "Create a data processing pipeline", "Package an entire Kedro project", "Set up the data", "Next steps: Tutorial", "Spaceflights tutorial FAQs", "Set up the spaceflights project", "Visualisation with Kedro-Viz", "Visualise the spaceflights project", "Preview data in Kedro-Viz", "Visualise charts in Kedro-Viz"], "terms": {"The": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 36, 37, 38, 40, 42, 43, 44, 46, 49, 50, 51, 53, 55, 56, 57, 59, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 102, 103, 104, 105, 106, 108, 111, 124, 137, 146, 152, 153, 154, 155, 156, 164, 177, 188, 191, 193, 195, 196, 197, 199, 200, 201, 202, 203, 207, 208, 209, 211, 212, 213, 214, 215, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281], "document": [0, 1, 2, 6, 7, 9, 11, 12, 14, 15, 18, 19, 23, 24, 25, 26, 29, 31, 32, 33, 35, 36, 40, 42, 44, 46, 50, 51, 52, 53, 55, 57, 59, 68, 72, 77, 78, 79, 98, 122, 123, 140, 150, 151, 211, 216, 217, 218, 240, 243, 251, 254, 255, 257, 260, 261, 264, 265, 267, 269, 271, 272, 274, 275, 276, 277, 279, 280, 281], "describ": [0, 1, 2, 5, 6, 10, 12, 15, 18, 25, 34, 41, 42, 43, 46, 53, 55, 193, 255, 261, 262, 264, 265, 269, 271, 273, 279, 280, 281], "satisfi": [0, 17, 24, 65, 92, 96, 199, 200, 201, 202, 232, 237], "most": [0, 1, 6, 36, 44, 49, 50, 255, 257, 264, 276, 277], "common": [0, 1, 10, 13, 45, 54, 56, 255, 257, 269], "requir": [0, 1, 2, 6, 11, 12, 14, 15, 17, 18, 20, 22, 24, 25, 26, 27, 29, 30, 33, 34, 36, 37, 40, 41, 43, 44, 50, 51, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 106, 142, 160, 172, 174, 175, 193, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 257, 259, 260, 264, 265, 269, 271, 272, 276, 277, 279, 281], "standard": [0, 1, 6, 10, 17, 33, 40, 44, 49, 51, 72, 89, 211, 229, 254, 256, 257, 261, 272, 278], "project": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 22, 24, 29, 30, 31, 33, 36, 38, 40, 41, 42, 48, 55, 57, 59, 60, 63, 65, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 106, 111, 115, 124, 133, 145, 146, 147, 162, 163, 164, 170, 171, 172, 188, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 259, 260, 261, 263, 264, 266, 267, 268, 269, 276, 278, 280, 281], "By": [0, 1, 4, 13, 25, 26, 43, 50, 57, 160, 254, 255, 257, 259, 264, 271, 279], "i": [0, 1, 2, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 115, 130, 133, 134, 146, 152, 153, 154, 161, 164, 166, 167, 169, 171, 173, 174, 175, 177, 185, 187, 188, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 275, 278, 279, 280, 281], "set": [0, 2, 4, 13, 15, 16, 17, 18, 20, 22, 29, 33, 34, 37, 38, 39, 44, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 137, 147, 157, 159, 161, 165, 173, 174, 175, 177, 185, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 257, 260, 261, 262, 264, 265, 267, 268, 271, 272, 275, 279, 280, 281], "up": [0, 2, 11, 15, 18, 20, 22, 29, 30, 33, 34, 37, 38, 39, 46, 48, 50, 51, 55, 56, 57, 59, 134, 160, 193, 255, 260, 261, 267, 268, 269, 271, 272, 275, 279, 280, 281], "configload": [0, 1, 2, 4, 36, 66, 146, 161, 254], "class": [0, 1, 2, 4, 6, 14, 15, 16, 17, 21, 22, 24, 36, 38, 46, 50, 51, 52, 53, 55, 57, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 115, 116, 119, 120, 123, 124, 125, 126, 129, 130, 133, 134, 135, 136, 137, 145, 146, 147, 151, 152, 153, 154, 155, 156, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 185, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 260, 261, 264, 269, 272], "also": [0, 4, 6, 8, 11, 12, 13, 14, 15, 17, 18, 20, 22, 23, 24, 25, 27, 28, 31, 34, 37, 40, 41, 42, 43, 46, 49, 51, 52, 55, 57, 59, 63, 65, 66, 71, 88, 96, 99, 207, 209, 210, 220, 228, 229, 237, 241, 251, 254, 255, 256, 257, 259, 260, 261, 262, 264, 265, 267, 269, 271, 273, 274, 275, 277, 281], "two": [0, 1, 12, 14, 15, 17, 20, 25, 27, 37, 43, 46, 47, 50, 51, 65, 207, 220, 255, 256, 257, 260, 261, 262, 267, 271, 272, 273, 274, 280, 281], "addit": [0, 6, 10, 12, 13, 15, 24, 25, 36, 46, 47, 55, 71, 88, 146, 160, 177, 207, 209, 220, 228, 229, 251, 254, 257, 259, 273, 274, 275, 277], "loader": [0, 1, 2, 4, 11, 20, 52, 57], "more": [0, 1, 2, 4, 6, 7, 8, 11, 12, 13, 15, 17, 20, 21, 22, 24, 36, 37, 40, 41, 42, 46, 49, 50, 52, 55, 57, 59, 65, 66, 69, 76, 122, 123, 150, 151, 160, 161, 164, 177, 188, 193, 197, 207, 215, 249, 251, 255, 257, 260, 262, 264, 269, 271, 272, 273], "function": [0, 4, 5, 6, 11, 12, 15, 17, 21, 24, 31, 33, 35, 36, 37, 43, 44, 46, 47, 49, 50, 52, 57, 62, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 115, 119, 125, 127, 135, 136, 139, 145, 146, 149, 157, 160, 170, 173, 174, 175, 177, 186, 187, 189, 192, 193, 196, 197, 198, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 259, 260, 262, 263, 264, 268, 269, 271, 281], "each": [0, 4, 6, 11, 13, 17, 20, 21, 22, 24, 25, 29, 30, 32, 33, 34, 36, 37, 40, 43, 49, 50, 51, 52, 57, 98, 152, 188, 193, 207, 240, 243, 251, 255, 261, 262, 263, 267, 271, 272, 275, 280, 281], "altern": [0, 1, 4, 6, 11, 14, 15, 17, 20, 21, 34, 40, 160, 255, 257, 261, 264, 273], "have": [0, 1, 4, 6, 7, 8, 10, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 46, 49, 50, 51, 53, 55, 57, 59, 156, 160, 174, 177, 193, 196, 197, 205, 210, 220, 254, 255, 257, 260, 261, 262, 264, 265, 267, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281], "differ": [0, 1, 7, 11, 12, 16, 18, 25, 26, 27, 30, 31, 33, 34, 37, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 57, 62, 63, 65, 84, 177, 197, 204, 224, 238, 251, 256, 257, 259, 261, 264, 269, 271, 272, 273, 274, 277, 279, 280], "featur": [0, 6, 9, 10, 17, 19, 22, 26, 27, 36, 41, 43, 46, 57, 95, 101, 235, 244, 260, 261, 267, 268, 271, 273], "follow": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 31, 33, 34, 36, 37, 40, 41, 42, 43, 46, 49, 50, 51, 52, 53, 55, 57, 59, 63, 65, 66, 108, 156, 193, 197, 210, 220, 251, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281], "section": [0, 1, 6, 8, 10, 12, 14, 15, 16, 17, 21, 25, 26, 27, 31, 36, 40, 41, 42, 43, 48, 49, 50, 51, 57, 59, 254, 257, 259, 260, 261, 269, 271, 272, 273, 274, 277, 279, 280], "specif": [0, 1, 8, 11, 15, 17, 22, 24, 26, 33, 38, 40, 43, 44, 46, 49, 50, 53, 65, 71, 72, 73, 75, 80, 81, 85, 86, 87, 88, 91, 92, 93, 94, 95, 103, 104, 105, 106, 123, 124, 134, 151, 152, 153, 154, 155, 156, 174, 175, 187, 209, 211, 212, 214, 219, 220, 221, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 246, 247, 248, 250, 255, 259, 261, 263, 265, 267, 269, 273, 274, 275, 276, 277], "detail": [0, 1, 2, 6, 12, 14, 17, 18, 19, 20, 22, 27, 32, 35, 36, 41, 51, 77, 78, 79, 177, 216, 217, 218, 244, 253, 267, 272], "an": [0, 1, 4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 27, 29, 30, 32, 33, 34, 37, 38, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 130, 137, 149, 155, 156, 161, 164, 167, 169, 174, 175, 177, 186, 193, 197, 199, 200, 201, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 257, 259, 260, 261, 263, 264, 267, 268, 269, 271, 272, 275, 279], "extens": [0, 1, 26, 27, 28, 37, 41, 44, 46, 63, 65, 66, 67, 186, 187, 267, 273, 277], "allow": [0, 1, 4, 6, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 34, 36, 37, 41, 42, 46, 50, 57, 66, 69, 73, 82, 83, 89, 90, 92, 96, 99, 100, 155, 177, 188, 207, 210, 212, 222, 223, 229, 230, 232, 237, 241, 242, 253, 255, 259, 260, 261, 267, 269, 273, 281], "you": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 55, 57, 58, 59, 63, 65, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 102, 103, 104, 105, 106, 111, 164, 177, 188, 193, 195, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281], "To": [0, 1, 6, 7, 8, 11, 13, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 36, 37, 38, 40, 41, 42, 43, 44, 46, 49, 51, 53, 55, 57, 65, 72, 81, 89, 90, 100, 177, 188, 211, 221, 229, 230, 238, 242, 251, 255, 257, 259, 260, 261, 262, 264, 265, 267, 269, 271, 272, 273, 276, 277, 279, 280, 281], "appli": [0, 7, 11, 27, 33, 37, 52, 53, 57, 89, 193, 195, 196, 197, 229, 255, 259, 260, 264, 267, 269], "your": [0, 1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 18, 22, 23, 28, 29, 31, 32, 38, 40, 41, 42, 46, 50, 51, 52, 56, 57, 63, 71, 81, 98, 111, 164, 177, 209, 210, 220, 221, 240, 243, 251, 254, 255, 256, 259, 260, 261, 262, 264, 265, 267, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281], "config_loader_class": [0, 65, 66, 254], "constant": [0, 29, 65, 66], "src": [0, 1, 12, 14, 15, 18, 21, 22, 24, 25, 26, 27, 30, 34, 36, 37, 40, 41, 42, 43, 44, 49, 51, 52, 53, 55, 57, 251, 255, 259, 260, 261, 263, 264, 267, 271, 272, 273, 276, 277, 279, 281], "package_nam": [0, 1, 20, 25, 36, 37, 42, 49, 52, 53, 55, 57, 142, 146, 159, 164, 171, 254, 259, 263, 264, 267, 271, 273], "py": [0, 1, 6, 11, 14, 15, 20, 21, 22, 24, 25, 26, 33, 36, 37, 38, 41, 42, 43, 44, 46, 49, 51, 52, 53, 55, 57, 63, 65, 66, 96, 117, 159, 166, 236, 237, 251, 254, 255, 259, 260, 261, 263, 264, 267, 271, 272, 273, 279, 281], "from": [0, 2, 4, 5, 6, 8, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 55, 57, 62, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 113, 115, 133, 134, 136, 137, 142, 146, 152, 153, 160, 164, 166, 171, 174, 175, 177, 193, 195, 197, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 269, 271, 272, 274, 277, 279, 280, 281], "config": [0, 1, 2, 4, 11, 15, 25, 33, 34, 36, 37, 40, 42, 46, 51, 52, 53, 57, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 146, 152, 174, 175, 177, 187, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 264, 273], "import": [0, 1, 2, 4, 11, 14, 15, 17, 20, 21, 22, 24, 25, 26, 27, 33, 36, 37, 38, 40, 41, 42, 43, 44, 46, 50, 52, 53, 55, 57, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 160, 161, 164, 166, 174, 175, 177, 189, 193, 196, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 253, 257, 260, 261, 263, 264, 265, 271, 272, 273, 281], "new": [0, 1, 4, 6, 9, 10, 11, 15, 17, 21, 24, 28, 33, 34, 36, 41, 42, 43, 44, 46, 48, 53, 56, 59, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 134, 155, 164, 175, 177, 193, 195, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 259, 261, 264, 265, 267, 268, 271, 272, 275, 279, 280, 281], "when": [0, 1, 2, 4, 6, 7, 11, 12, 13, 14, 15, 17, 22, 24, 25, 26, 27, 29, 33, 34, 36, 37, 38, 40, 41, 44, 46, 49, 50, 55, 56, 57, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 147, 160, 164, 166, 172, 174, 175, 177, 187, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 279, 280, 281], "can": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 55, 57, 58, 59, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 106, 111, 160, 177, 191, 195, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 276, 277, 279, 280, 281], "dictionari": [0, 1, 4, 11, 13, 14, 15, 17, 24, 53, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 146, 155, 158, 164, 174, 175, 177, 188, 193, 197, 199, 200, 201, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 256, 261, 263, 264, 267], "let": [0, 8, 11, 13, 15, 17, 18, 21, 29, 36, 46, 164, 261, 264, 265], "": [0, 1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 29, 30, 33, 34, 36, 38, 39, 40, 41, 42, 43, 46, 49, 50, 51, 53, 54, 55, 59, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 117, 118, 122, 123, 124, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 164, 166, 174, 175, 191, 195, 197, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 274, 279], "assum": [0, 1, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24, 30, 34, 41, 42, 43, 51, 57, 267, 277, 279, 280, 281], "contain": [0, 1, 2, 4, 5, 6, 11, 13, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 31, 32, 37, 41, 42, 43, 46, 50, 53, 55, 63, 65, 88, 92, 96, 107, 109, 123, 146, 151, 155, 164, 177, 188, 190, 193, 197, 203, 207, 220, 228, 232, 237, 251, 253, 254, 255, 259, 261, 263, 264, 267, 268, 269, 271, 272, 273, 274, 275], "conf": [0, 1, 2, 4, 11, 12, 13, 14, 15, 17, 18, 21, 22, 24, 25, 27, 34, 37, 41, 42, 43, 56, 63, 65, 99, 111, 152, 241, 254, 255, 256, 257, 259, 260, 268, 271, 272, 273, 274, 277, 281], "base": [0, 2, 4, 7, 10, 12, 13, 14, 15, 17, 18, 22, 23, 26, 27, 29, 31, 33, 36, 37, 43, 46, 51, 52, 53, 56, 63, 65, 66, 101, 146, 169, 174, 175, 199, 200, 202, 244, 255, 256, 259, 260, 264, 268, 269, 271, 272, 274, 281], "yml": [0, 1, 4, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 24, 26, 27, 37, 41, 43, 50, 51, 56, 63, 65, 66, 69, 89, 90, 111, 146, 174, 175, 207, 229, 230, 238, 255, 256, 257, 259, 260, 261, 264, 268, 271, 272, 274, 276, 277, 279, 281], "content": [0, 4, 8, 9, 11, 13, 14, 15, 18, 21, 22, 24, 25, 26, 27, 50, 55, 57, 59, 66, 100, 242, 261, 271, 273, 274, 275], "bucket_nam": [0, 22, 71, 209], "my_s3_bucket": [0, 66], "key_prefix": 0, "my": [0, 6, 12, 14, 15, 17, 37, 43, 47, 51, 53, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 106, 174, 175, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 271], "kei": [0, 1, 2, 4, 11, 13, 14, 16, 20, 21, 24, 25, 26, 27, 34, 37, 41, 43, 46, 50, 55, 59, 63, 65, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 85, 86, 89, 92, 93, 94, 95, 96, 98, 99, 103, 104, 105, 106, 155, 164, 177, 188, 193, 197, 199, 200, 201, 202, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 225, 226, 229, 232, 233, 234, 235, 237, 240, 241, 246, 247, 248, 250, 254, 255, 256, 257, 259, 269, 271, 274, 278, 279], "prefix": [0, 1, 4, 14, 53, 70, 72, 73, 74, 75, 76, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 98, 102, 103, 104, 105, 106, 195, 208, 211, 212, 213, 214, 215, 219, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 250, 260, 271], "dataset": [0, 2, 6, 16, 18, 20, 21, 24, 33, 38, 44, 46, 50, 51, 53, 56, 66, 67, 152, 153, 155, 164, 174, 175, 177, 193, 195, 196, 197, 199, 200, 201, 202, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 250, 251, 255, 260, 261, 262, 264, 268, 269, 271, 272, 273, 275, 277, 279, 280, 281], "csv": [0, 11, 13, 15, 17, 18, 21, 22, 43, 52, 57, 66, 80, 82, 85, 98, 174, 175, 177, 219, 222, 225, 236, 240, 243, 261, 268, 272, 274, 276, 277, 279, 280], "panda": [0, 11, 13, 14, 15, 17, 18, 21, 22, 46, 52, 66, 71, 73, 92, 95, 96, 100, 174, 175, 177, 196, 209, 210, 212, 232, 235, 237, 242, 251, 255, 261, 265, 267, 268, 271, 272, 274, 276, 277, 279, 280, 281], "csvdataset": [0, 11, 13, 14, 15, 17, 18, 21, 22, 52, 53, 66, 177, 251, 261, 264, 267, 268, 271, 272, 274, 276, 277, 279, 280, 281], "spark": [0, 6, 13, 15, 17, 52, 56, 66, 210, 251, 268, 271], "sparkdataset": [0, 13, 14, 15, 17, 52, 57, 66, 97, 239, 264, 268], "folder": [0, 2, 4, 6, 8, 13, 14, 17, 21, 24, 25, 26, 34, 36, 37, 42, 43, 47, 50, 51, 57, 66, 71, 76, 99, 209, 215, 241, 254, 255, 259, 260, 267, 268, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281], "raw": [0, 15, 20, 22, 41, 42, 43, 50, 56, 66, 86, 177, 226, 243, 272, 276, 279, 280], "01_raw": [0, 11, 13, 14, 15, 18, 25, 26, 27, 43, 52, 57, 66, 80, 81, 82, 85, 87, 88, 98, 101, 103, 174, 175, 219, 220, 221, 222, 225, 227, 228, 236, 240, 243, 244, 246, 249, 261, 268, 274, 279, 280], "int": [0, 6, 21, 66, 69, 200, 202, 220], "02_intermedi": [0, 11, 13, 14, 25, 26, 27, 66, 80, 81, 82, 88, 97, 98, 219, 221, 222, 228, 236, 239, 240, 249, 272, 279], "pri": [0, 66], "03_primari": [0, 25, 26, 27, 57, 66, 272, 276, 279], "fea": [0, 66], "04_featur": [0, 25, 26, 27, 66], "point": [0, 11, 26, 27, 33, 37, 40, 43, 44, 46, 55, 70, 71, 72, 73, 75, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 98, 103, 104, 105, 106, 117, 164, 177, 187, 193, 195, 208, 209, 211, 212, 214, 219, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 239, 246, 247, 248, 250, 255, 257, 259, 260, 261, 267], "add": [0, 1, 4, 6, 9, 10, 11, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 33, 34, 37, 41, 42, 46, 50, 51, 52, 54, 55, 117, 139, 177, 207, 251, 255, 259, 260, 261, 263, 264, 267, 271, 272, 274, 275, 277, 279, 280], "config_loader_arg": [0, 1, 63, 65, 66, 254], "globals_pattern": [0, 66], "now": [0, 4, 7, 11, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 33, 36, 43, 44, 51, 108, 257, 260, 261, 264, 267, 279, 281], "here": [0, 14, 15, 17, 18, 20, 25, 29, 32, 37, 41, 42, 43, 44, 46, 50, 51, 52, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 102, 103, 104, 105, 106, 191, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 245, 246, 247, 248, 250, 255, 260, 261, 264, 271, 274, 276, 279], "exampl": [0, 1, 2, 4, 5, 6, 9, 11, 12, 16, 17, 18, 20, 21, 22, 30, 33, 34, 37, 38, 40, 41, 42, 43, 44, 49, 50, 52, 54, 55, 56, 57, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 164, 167, 174, 175, 177, 188, 193, 196, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 271, 275, 277, 279, 280, 281], "raw_boat_data": [0, 66], "type": [0, 1, 6, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 33, 34, 40, 42, 43, 46, 49, 50, 51, 52, 53, 57, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 134, 137, 140, 142, 146, 153, 154, 164, 172, 174, 175, 177, 193, 195, 196, 197, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 260, 261, 267, 268, 269, 271, 272, 274, 276, 277, 279, 280, 281], "nest": [0, 4, 14, 15, 37, 70, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 89, 92, 93, 94, 95, 96, 103, 104, 105, 106, 188, 208, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 229, 232, 233, 234, 235, 237, 246, 247, 248, 250, 260], "path": [0, 1, 6, 11, 12, 14, 15, 17, 20, 22, 27, 33, 34, 36, 37, 41, 42, 43, 46, 50, 51, 53, 63, 64, 65, 66, 71, 83, 88, 89, 92, 96, 97, 98, 99, 128, 130, 134, 142, 146, 164, 167, 169, 171, 174, 175, 188, 189, 205, 209, 220, 223, 228, 229, 232, 237, 239, 240, 241, 249, 253, 255, 257, 259, 261, 267, 268, 271, 273, 274], "dict": [0, 11, 15, 17, 21, 24, 33, 37, 43, 53, 55, 57, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 146, 156, 164, 166, 168, 174, 175, 177, 193, 195, 196, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 261, 263, 264, 265, 267, 271], "filepath": [0, 11, 12, 13, 14, 15, 17, 18, 21, 22, 43, 52, 53, 57, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 106, 174, 175, 177, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 261, 265, 268, 271, 272, 274, 276, 279, 280, 281], "s3a": [0, 14, 52, 57, 66, 98, 220, 240, 268], "boat": [0, 14, 66, 88, 177, 196, 220, 228], "file_format": [0, 13, 14, 52, 57, 66, 85, 97, 98, 225, 239, 240, 243, 268], "parquet": [0, 13, 17, 66, 71, 88, 97, 98, 99, 209, 228, 239, 240, 241, 243, 272, 277], "raw_car_data": [0, 66], "s3": [0, 11, 12, 15, 17, 20, 21, 22, 37, 43, 52, 57, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 105, 106, 177, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 249, 250, 259], "data": [0, 1, 4, 7, 10, 15, 17, 18, 20, 22, 24, 28, 34, 38, 46, 51, 52, 54, 55, 56, 58, 60, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 152, 153, 155, 164, 167, 169, 173, 174, 175, 177, 185, 192, 193, 196, 197, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 260, 261, 263, 264, 265, 266, 267, 273, 275, 278, 279], "filenam": [0, 1, 2, 4, 17, 43, 65, 177], "car": [0, 11, 12, 13, 14, 52, 66, 71, 75, 80, 82, 85, 101, 104, 105, 106, 177, 196, 209, 214, 219, 222, 225, 236, 244, 247, 248, 249, 250], "found": [0, 8, 11, 15, 21, 37, 41, 42, 49, 63, 64, 65, 66, 89, 90, 99, 117, 142, 191, 229, 230, 241, 257, 259, 261, 263, 264, 273, 275], "under": [0, 1, 4, 6, 10, 18, 21, 27, 34, 37, 42, 43, 57, 72, 81, 211, 221, 254, 255, 259, 263, 279, 280], "hood": [0, 1, 4, 57, 255, 263], "jmespath": [0, 66], "extract": [0, 22, 205, 269], "element": [0, 6, 40, 50, 255], "declar": [0, 14, 21, 24, 25, 46, 55, 122, 150, 260], "fill": [0, 26, 27, 41], "thi": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 28, 29, 30, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 63, 65, 66, 71, 85, 89, 90, 96, 98, 99, 101, 103, 107, 108, 109, 111, 115, 119, 122, 133, 134, 137, 146, 149, 150, 154, 155, 156, 160, 161, 163, 166, 167, 168, 170, 174, 175, 177, 185, 186, 187, 189, 190, 193, 195, 196, 197, 200, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281], "could": [0, 6, 9, 12, 14, 17, 22, 24, 38, 44, 57, 66, 89, 92, 96, 229, 232, 237, 251, 255, 260, 263, 267, 271], "look": [0, 6, 7, 10, 11, 13, 15, 17, 18, 19, 21, 24, 25, 26, 32, 35, 36, 41, 43, 53, 57, 63, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 117, 187, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 255, 260, 265, 271, 272, 273, 276], "like": [0, 6, 8, 11, 13, 14, 15, 17, 19, 21, 22, 24, 26, 34, 37, 40, 41, 42, 43, 46, 47, 49, 52, 54, 57, 63, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 166, 168, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 257, 259, 260, 264, 265, 267, 277], "another_bucket_nam": 0, "non_string_kei": 0, "10": [0, 22, 25, 26, 27, 33, 49, 57, 74, 81, 96, 213, 220, 221, 237, 261, 264, 271, 272, 276, 277, 280], "globals_dict": [0, 66], "If": [0, 1, 2, 4, 6, 7, 8, 11, 12, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 41, 42, 43, 44, 46, 49, 51, 52, 53, 57, 63, 65, 66, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 106, 142, 146, 155, 164, 174, 175, 185, 188, 193, 195, 199, 200, 201, 202, 203, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 240, 241, 244, 245, 246, 247, 248, 249, 250, 255, 257, 259, 260, 261, 263, 264, 267, 271, 272, 273, 275, 276, 279, 280, 281], "specifi": [0, 2, 8, 13, 15, 17, 20, 21, 25, 27, 33, 37, 41, 42, 43, 47, 51, 55, 57, 63, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 142, 146, 164, 175, 177, 188, 193, 195, 196, 197, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 253, 254, 255, 257, 259, 260, 261, 263, 264, 267, 269, 271, 273, 274, 277, 279, 280, 281], "both": [0, 1, 4, 12, 15, 17, 19, 22, 23, 24, 25, 28, 33, 40, 42, 43, 46, 57, 69, 83, 101, 195, 207, 223, 244, 251, 253, 254, 257, 260, 262, 263, 264, 265, 272, 273], "result": [0, 1, 8, 11, 13, 17, 21, 24, 26, 27, 34, 36, 37, 43, 57, 65, 66, 193, 195, 196, 197, 199, 200, 201, 202, 253, 260, 261, 263, 265, 267, 273, 281], "merg": [0, 1, 6, 46, 57, 65, 66, 272], "In": [0, 1, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 25, 26, 27, 31, 33, 36, 37, 42, 43, 46, 50, 52, 53, 57, 59, 63, 65, 66, 161, 193, 197, 229, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 273, 275, 277, 279, 281], "case": [0, 4, 5, 6, 7, 11, 12, 15, 17, 25, 29, 33, 43, 45, 54, 56, 63, 65, 66, 69, 89, 90, 100, 165, 177, 197, 207, 229, 230, 242, 255, 259, 260, 261, 262, 264], "conflict": [0, 40, 66, 251, 260], "take": [0, 1, 4, 6, 8, 12, 14, 18, 19, 22, 24, 25, 26, 27, 32, 35, 37, 40, 41, 43, 44, 52, 53, 57, 63, 65, 66, 85, 98, 99, 105, 146, 164, 210, 225, 238, 240, 241, 248, 253, 257, 260, 264, 265, 266, 269, 271, 272, 275, 276], "preced": [0, 1, 4, 12, 37, 63, 65, 66, 146, 164, 253, 264], "omegaconf": [0, 65], "python": [0, 6, 7, 8, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 33, 34, 36, 42, 46, 49, 50, 51, 57, 58, 59, 61, 66, 69, 71, 72, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 143, 191, 207, 209, 210, 211, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 260, 261, 264, 267, 269, 271, 272, 273, 275, 277, 279], "librari": [0, 6, 7, 12, 14, 19, 24, 25, 26, 27, 28, 36, 37, 42, 44, 46, 49, 50, 52, 69, 72, 75, 92, 96, 104, 105, 173, 207, 211, 214, 232, 237, 247, 248, 253, 254, 256, 261, 267, 271, 275], "design": [0, 1, 6, 10, 59, 90, 230, 260], "It": [0, 14, 15, 17, 18, 20, 21, 24, 27, 28, 29, 32, 36, 37, 40, 41, 42, 43, 46, 50, 51, 57, 58, 65, 69, 71, 72, 75, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 98, 100, 101, 104, 105, 106, 124, 152, 177, 200, 201, 202, 207, 209, 211, 214, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 240, 242, 243, 244, 247, 248, 250, 259, 260, 261, 264, 269, 274, 275, 278, 279], "yaml": [0, 1, 12, 15, 16, 18, 40, 42, 56, 57, 63, 65, 69, 71, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 207, 209, 210, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 259, 271, 272, 279], "hierarch": 0, "system": [0, 7, 12, 13, 16, 17, 25, 26, 27, 30, 32, 33, 43, 44, 49, 50, 71, 177, 209, 257, 274], "support": [0, 6, 10, 12, 15, 17, 19, 20, 23, 29, 37, 41, 42, 44, 49, 50, 56, 57, 65, 70, 72, 73, 74, 75, 76, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 134, 202, 207, 208, 211, 212, 213, 214, 215, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 255, 257, 261, 264, 267, 273, 279, 280, 281], "multipl": [0, 4, 15, 17, 21, 22, 30, 37, 38, 43, 46, 50, 76, 165, 193, 197, 215, 261, 264, 265, 267, 271], "sourc": [0, 6, 8, 12, 15, 16, 18, 20, 24, 25, 26, 33, 34, 37, 41, 42, 47, 49, 50, 57, 58, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 116, 117, 120, 121, 124, 126, 128, 130, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 167, 169, 171, 172, 174, 175, 177, 185, 187, 188, 189, 191, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 259, 264, 267, 269, 273, 274, 275, 277], "0": [0, 4, 6, 14, 18, 21, 22, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 46, 49, 51, 52, 53, 57, 68, 70, 95, 96, 101, 104, 105, 130, 160, 164, 171, 185, 208, 235, 237, 244, 247, 248, 249, 255, 259, 262, 263, 264, 265, 267, 271, 272, 273, 274, 277, 279, 280, 281], "18": [0, 14, 18, 26, 33, 37, 41, 42, 43, 46, 160, 263, 265, 271, 274, 277, 279], "5": [0, 11, 14, 22, 36, 43, 71, 73, 75, 76, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 100, 106, 171, 177, 197, 209, 212, 214, 215, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 242, 250, 261, 264, 267, 271, 277, 280], "activ": [0, 6, 7, 8, 10, 25, 26, 27, 36, 37, 41, 43, 49, 146, 199, 200, 201, 202, 203], "develop": [0, 1, 5, 8, 12, 22, 25, 29, 30, 34, 36, 40, 41, 42, 55, 56, 177, 238, 260, 266, 267, 269, 271], "wa": [0, 7, 10, 11, 15, 18, 20, 21, 24, 27, 34, 43, 46, 49, 51, 55, 57, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 124, 142, 152, 153, 154, 155, 156, 174, 175, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 265, 271, 276, 277, 279, 280], "first": [0, 4, 6, 8, 11, 13, 15, 17, 20, 21, 25, 26, 27, 28, 33, 37, 41, 42, 43, 50, 51, 55, 56, 63, 65, 85, 130, 171, 185, 188, 193, 225, 259, 261, 262, 265, 267, 271, 272, 273, 274], "avail": [0, 1, 4, 6, 10, 12, 14, 15, 17, 18, 22, 26, 27, 30, 36, 37, 38, 40, 42, 43, 46, 49, 59, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 113, 115, 133, 177, 185, 191, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 250, 254, 255, 257, 260, 264, 267, 269, 271, 274], "due": [0, 6, 11, 29, 193], "later": [0, 10, 18, 22, 29, 33, 49, 259, 263, 266, 267], "releas": [0, 17, 20, 21, 24, 31, 49, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 177, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 272], "u": [0, 8, 17, 20, 21, 49, 260, 262, 265], "know": [0, 8, 14, 37, 261, 262, 269], "ani": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 30, 32, 34, 37, 40, 42, 43, 44, 46, 49, 52, 53, 55, 57, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 111, 146, 153, 156, 161, 164, 174, 175, 177, 193, 195, 196, 197, 199, 200, 201, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 257, 259, 260, 261, 263, 264, 267, 268, 269, 271, 273, 274, 275], "feedback": 0, "about": [0, 1, 5, 6, 7, 8, 9, 10, 12, 15, 17, 20, 25, 36, 37, 41, 42, 46, 49, 50, 52, 55, 61, 123, 151, 255, 260, 264, 267, 269, 271, 273, 274], "json": [0, 1, 13, 14, 15, 17, 22, 25, 41, 42, 43, 46, 63, 65, 69, 79, 87, 94, 95, 98, 104, 105, 193, 207, 210, 218, 227, 234, 235, 240, 243, 247, 248, 255, 265, 279, 281], "accept": [0, 6, 10, 14, 15, 17, 20, 24, 33, 37, 50, 69, 92, 96, 220, 229, 232, 237, 259, 267, 277], "guidanc": [0, 1, 6, 10, 25], "want": [0, 1, 6, 10, 11, 12, 13, 17, 20, 21, 27, 29, 30, 31, 33, 37, 38, 40, 41, 42, 43, 44, 49, 52, 55, 57, 164, 188, 255, 257, 260, 264, 265, 267, 268, 271, 272, 273, 275, 277, 279, 280, 281], "pattern": [0, 14, 41, 46, 57, 63, 65, 66, 175, 177], "find": [0, 7, 8, 15, 17, 21, 25, 26, 30, 37, 41, 42, 46, 50, 58, 59, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 160, 164, 175, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 245, 246, 247, 248, 250, 255, 257, 262, 271, 274, 276, 277], "need": [0, 1, 5, 7, 8, 10, 12, 14, 15, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 41, 42, 43, 44, 46, 49, 50, 51, 55, 57, 89, 90, 134, 164, 177, 193, 195, 196, 197, 229, 230, 253, 254, 255, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 271, 272, 273, 276, 277, 278, 280, 281], "For": [0, 1, 2, 6, 9, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 27, 28, 30, 33, 34, 36, 37, 38, 40, 41, 43, 44, 46, 49, 51, 52, 53, 55, 57, 59, 63, 66, 71, 85, 98, 99, 122, 123, 150, 151, 160, 177, 207, 209, 225, 240, 241, 243, 251, 255, 257, 260, 261, 262, 263, 264, 265, 267, 271, 275, 277, 279], "param": [0, 4, 14, 21, 24, 37, 53, 69, 134, 144, 146, 156, 188, 195, 207, 229, 260, 267, 271], "name": [0, 2, 4, 7, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 33, 34, 36, 37, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 55, 57, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 126, 141, 146, 153, 155, 160, 164, 174, 175, 177, 188, 193, 195, 196, 197, 199, 200, 201, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 257, 259, 260, 261, 262, 263, 265, 267, 269, 271, 272, 273, 274, 277, 279, 280, 281], "convent": [0, 1, 15, 30, 50, 55, 63, 65, 66, 177, 255, 260, 279], "instead": [0, 2, 14, 17, 25, 26, 34, 37, 49, 53, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 161, 174, 175, 189, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 261, 271], "e": [0, 1, 6, 12, 14, 15, 17, 20, 21, 24, 25, 26, 30, 33, 34, 37, 40, 41, 42, 46, 54, 55, 57, 63, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 161, 164, 177, 188, 193, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 241, 244, 245, 246, 247, 248, 249, 250, 251, 255, 257, 260, 262, 264, 265, 267, 273, 279], "g": [0, 1, 6, 12, 14, 15, 17, 20, 21, 22, 25, 26, 34, 37, 41, 42, 46, 54, 55, 57, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 161, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 241, 244, 245, 246, 247, 248, 249, 250, 251, 255, 257, 262, 264, 267, 279], "updat": [0, 6, 7, 9, 10, 12, 14, 15, 17, 22, 37, 49, 53, 57, 63, 65, 66, 97, 100, 146, 155, 164, 239, 242, 251, 253, 254, 259, 261, 263, 267, 271, 273], "config_pattern": [0, 1, 63, 65, 66], "behaviour": [0, 4, 11, 30, 46, 54, 55, 118, 119, 148, 191, 254], "replac": [0, 14, 21, 25, 26, 27, 33, 37, 40, 41, 46, 53, 66, 90, 99, 177, 230, 241, 255, 267, 268, 271, 272, 281], "while": [0, 6, 7, 12, 13, 17, 18, 21, 26, 27, 29, 42, 50, 81, 96, 99, 221, 237, 241, 251, 260, 262, 264, 271], "remain": 0, "state": [0, 7, 14, 17, 21, 22, 69, 207, 264, 269], "match": [0, 1, 2, 4, 11, 14, 21, 26, 27, 33, 37, 41, 43, 46, 63, 65, 66, 85, 155, 156, 175, 177, 193, 196, 197, 210, 220, 225, 264], "than": [0, 17, 22, 25, 26, 27, 36, 43, 46, 55, 85, 108, 164, 200, 225, 254, 255, 257, 269], "log": [0, 1, 15, 21, 22, 25, 26, 27, 33, 34, 46, 50, 52, 53, 54, 55, 56, 63, 65, 158, 193, 196, 197, 261, 264, 271, 273, 275], "directli": [0, 1, 2, 12, 13, 27, 29, 36, 46, 52, 95, 99, 189, 193, 235, 241, 259, 264, 267, 273], "instanc": [0, 7, 12, 13, 15, 21, 24, 25, 26, 33, 37, 46, 52, 57, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 121, 146, 155, 161, 164, 174, 175, 177, 193, 196, 197, 198, 199, 200, 201, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 257, 260, 261, 264, 267, 271], "well": [0, 1, 15, 22, 23, 25, 57, 66, 70, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 89, 92, 93, 94, 95, 96, 103, 104, 105, 106, 124, 152, 155, 195, 208, 211, 212, 213, 214, 215, 216, 217, 218, 223, 225, 226, 229, 232, 233, 234, 235, 237, 246, 247, 248, 250, 262, 273], "framework": [0, 1, 2, 4, 19, 20, 22, 24, 25, 33, 36, 37, 38, 44, 46, 52, 53, 55, 57, 58, 60, 63, 65, 251, 253, 254, 256, 263, 266, 269, 273], "conf_path": [0, 1, 2, 4, 63, 65, 66], "str": [0, 1, 2, 4, 15, 17, 20, 21, 22, 24, 25, 33, 36, 37, 43, 52, 53, 55, 63, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 134, 137, 140, 142, 146, 153, 156, 164, 171, 174, 175, 177, 193, 195, 196, 197, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 261, 263, 264, 267, 272], "project_path": [0, 1, 2, 4, 20, 22, 33, 36, 46, 57, 63, 65, 116, 146, 156, 164, 171, 172, 253, 267], "conf_sourc": [0, 1, 2, 4, 25, 36, 37, 63, 65, 66, 164, 254], "conf_load": [0, 1, 2, 4, 63, 65], "catalog_config": [0, 11], "something_new": 0, "version": [0, 1, 2, 5, 6, 12, 14, 17, 18, 20, 21, 22, 25, 26, 27, 30, 33, 34, 40, 41, 42, 46, 50, 56, 57, 61, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 142, 146, 164, 174, 175, 177, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 261, 267, 269, 271, 273, 274, 276, 277, 279, 280, 281], "17": [0, 18, 26, 33, 37, 49, 263, 265, 272], "engin": [0, 7, 18, 20, 22, 25, 46, 50, 58, 81, 88, 89, 90, 94, 177, 221, 228, 229, 230, 234, 260, 263, 271, 274, 279], "alongsid": [0, 8, 29, 43, 255], "origin": [0, 10, 15, 22, 27, 134, 195, 197, 265], "below": [0, 1, 11, 14, 17, 20, 21, 24, 26, 27, 33, 36, 37, 40, 42, 43, 44, 49, 57, 89, 90, 111, 164, 177, 229, 230, 260, 261, 262, 264, 267, 271, 272, 275], "speed": [0, 26, 30, 46], "fast": [0, 40, 264], "slow": 0, "train": [0, 14, 15, 23, 43, 46, 50, 51, 53, 57, 81, 221, 260, 261, 271], "memorydataset": [0, 4, 11, 13, 20, 22, 33, 37, 46, 53, 56, 177, 202, 261, 264, 265, 267, 271, 272], "save_arg": [0, 11, 14, 17, 57, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 177, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 250, 261, 268, 274, 276], "index": [0, 8, 11, 14, 17, 41, 49, 53, 56, 80, 81, 85, 87, 88, 90, 91, 92, 96, 130, 171, 177, 185, 187, 219, 221, 225, 227, 228, 230, 231, 232, 237, 261, 273, 276], "true": [0, 1, 13, 14, 15, 17, 20, 21, 22, 24, 27, 33, 37, 42, 43, 53, 57, 76, 82, 83, 84, 87, 88, 89, 97, 98, 99, 102, 104, 105, 164, 174, 175, 177, 191, 193, 199, 200, 201, 202, 203, 207, 210, 215, 220, 222, 223, 224, 227, 228, 229, 236, 239, 240, 241, 243, 245, 247, 248, 256, 257, 261, 264, 265, 271, 273, 279, 281], "endfor": [0, 20], "pars": [0, 14, 15, 70, 72, 177, 208, 211, 229, 259, 264, 269], "read": [0, 6, 8, 10, 11, 12, 15, 16, 17, 18, 21, 22, 36, 40, 42, 47, 49, 50, 55, 57, 65, 83, 84, 85, 88, 89, 98, 146, 173, 223, 224, 225, 228, 229, 240, 243, 255, 257, 273, 274], "compil": [0, 30, 37, 102, 245, 251, 259, 262], "parser": [0, 25, 72, 211, 273, 276], "expand": [0, 15, 21, 22, 37, 43, 46, 49, 51, 193, 195, 261, 262, 264, 265, 271, 272, 274, 280, 281], "argument": [0, 1, 11, 12, 13, 15, 17, 20, 24, 33, 37, 42, 46, 63, 65, 66, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 124, 134, 143, 146, 152, 155, 164, 174, 175, 177, 188, 191, 195, 196, 197, 203, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 260, 261, 262, 267, 271, 273, 274], "previou": [0, 6, 17, 22, 24, 27, 36, 43, 51, 57], "output": [0, 4, 7, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 30, 36, 41, 43, 46, 50, 51, 53, 54, 57, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 155, 156, 164, 174, 175, 177, 193, 195, 196, 197, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 260, 267, 269, 271, 272, 273, 274, 277, 281], "although": [0, 13, 29, 50, 253, 274], "veri": [0, 22, 25, 30, 38, 255, 260], "power": [0, 26, 27, 36, 46, 260, 267], "extrem": 0, "flexibl": [0, 4, 24, 29], "come": [0, 6, 7, 17, 28, 43, 134, 210, 254, 261, 274], "wide": [0, 274], "rang": [0, 8, 15, 29, 31, 51, 74, 76, 213, 215, 249, 255, 261, 267, 271, 273], "we": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 20, 21, 22, 24, 25, 26, 30, 31, 33, 34, 37, 38, 40, 41, 42, 43, 46, 49, 50, 52, 53, 55, 57, 59, 207, 229, 236, 253, 255, 257, 260, 261, 262, 264, 265, 267, 271, 275, 277, 279, 280, 281], "recommend": [0, 1, 2, 11, 20, 21, 25, 26, 27, 30, 33, 34, 37, 40, 49, 50, 52, 55, 57, 59, 65, 253, 260, 264, 267, 271, 277], "unless": [0, 1, 11, 17, 27, 33, 42, 85, 225], "absolut": [0, 43], "necessari": [0, 8, 18, 21, 25, 26, 27, 29, 41, 43, 46, 193, 207], "dynam": [0, 21, 37, 85, 225, 253, 260, 271], "cost": [0, 17, 21], "significantli": [0, 17, 25], "reduc": [0, 5, 6, 14, 89, 229, 264], "readabl": [0, 36, 40, 43, 51, 254, 255], "much": [0, 17, 36, 42, 57, 267], "higher": [0, 43, 160], "mainten": [0, 10], "overhead": [0, 5, 27, 29], "believ": 0, "major": [0, 5, 10, 22, 36], "analyt": [0, 26, 27, 33, 51], "doe": [0, 1, 5, 7, 10, 11, 15, 17, 21, 24, 26, 36, 37, 41, 43, 50, 57, 63, 65, 66, 85, 89, 92, 96, 101, 142, 160, 177, 193, 205, 225, 229, 232, 237, 244, 257, 259, 261, 262, 265, 269, 271, 276], "harm": 0, "good": [0, 6, 22, 40, 255], "interpol": [0, 65], "call": [0, 1, 2, 4, 8, 11, 12, 13, 15, 17, 18, 21, 22, 34, 36, 37, 42, 46, 49, 50, 51, 55, 57, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 160, 174, 175, 177, 196, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 261, 263, 264, 265, 267, 276, 279], "work": [0, 6, 7, 8, 10, 12, 15, 17, 21, 22, 23, 25, 26, 29, 30, 33, 36, 37, 40, 41, 42, 43, 44, 49, 50, 51, 57, 59, 66, 97, 98, 99, 114, 125, 127, 129, 131, 132, 164, 177, 210, 238, 239, 241, 254, 259, 260, 264, 267, 275, 277, 279, 280, 281], "out": [0, 8, 15, 21, 22, 24, 25, 26, 27, 37, 40, 44, 46, 49, 53, 55, 57, 197, 251, 254, 255, 257, 261, 262, 264, 265, 271, 272, 274, 279], "box": [0, 15, 37, 44, 274], "within": [0, 8, 10, 11, 15, 17, 25, 26, 27, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 46, 55, 57, 64, 99, 154, 220, 241, 255, 259, 260, 261, 264, 266, 267, 269, 271, 272, 273, 276, 279, 280, 281], "same": [0, 1, 2, 4, 6, 7, 11, 12, 15, 17, 18, 20, 21, 22, 24, 25, 28, 30, 37, 38, 41, 42, 43, 44, 46, 47, 55, 57, 63, 65, 69, 89, 90, 155, 177, 193, 195, 197, 199, 200, 201, 202, 210, 229, 230, 238, 255, 257, 260, 262, 263, 271, 277], "suppos": [0, 1, 52, 57, 89, 90, 229, 230], "one": [0, 7, 10, 15, 17, 18, 20, 21, 26, 27, 29, 33, 34, 36, 37, 42, 43, 44, 46, 47, 50, 55, 72, 76, 85, 89, 90, 101, 136, 164, 165, 193, 196, 197, 207, 210, 211, 215, 220, 225, 229, 230, 238, 244, 257, 260, 264, 267, 268, 269, 271], "placehold": [0, 37], "model_opt": [0, 14, 271], "test_siz": [0, 271], "size": [0, 22, 27, 53, 207, 257], "random_st": [0, 261, 271], "3": [0, 6, 7, 10, 15, 17, 21, 25, 26, 27, 36, 42, 43, 49, 51, 53, 59, 72, 75, 76, 92, 94, 96, 101, 104, 105, 160, 171, 211, 214, 215, 220, 232, 234, 237, 238, 244, 247, 248, 249, 259, 261, 263, 264, 265, 267, 271, 272, 274, 276, 277, 280], "parameters_glob": 0, "2": [0, 4, 6, 10, 11, 15, 17, 21, 25, 27, 36, 37, 42, 43, 46, 53, 63, 65, 66, 71, 73, 75, 76, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 104, 105, 106, 130, 171, 177, 196, 197, 209, 212, 214, 215, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 242, 244, 245, 247, 248, 250, 261, 262, 263, 264, 265, 267, 271, 272, 274, 276, 277], "sinc": [0, 4, 7, 11, 15, 20, 22, 37, 38, 40, 43, 57, 85, 89, 90, 225, 229, 230, 260, 263, 274], "correctli": [0, 7, 8, 15, 21, 24, 26, 27, 36, 264], "enabl": [0, 1, 11, 13, 15, 17, 18, 19, 22, 23, 25, 28, 32, 35, 40, 41, 42, 43, 46, 55, 57, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 177, 191, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 262, 264, 267, 271, 273, 277, 280, 281], "addition": [0, 18, 37, 43], "start": [0, 1, 2, 4, 9, 10, 14, 17, 18, 21, 22, 24, 25, 26, 33, 36, 37, 38, 40, 41, 42, 44, 46, 49, 51, 52, 53, 66, 97, 98, 130, 164, 171, 177, 185, 193, 239, 240, 243, 260, 261, 265, 267, 269, 271, 272, 279, 280], "underscor": [0, 51, 197, 264], "_": [0, 1, 14, 21, 24, 37, 38, 55, 66], "becaus": [0, 17, 18, 24, 25, 26, 38, 40, 51, 57, 202, 260, 264, 265, 269, 272], "entri": [0, 4, 13, 14, 30, 40, 46, 55, 83, 89, 90, 117, 187, 223, 229, 230, 236, 238, 255, 272, 273], "valid": [0, 2, 4, 15, 17, 46, 49, 54, 65, 161, 200, 210, 220, 254, 255, 260, 263, 276], "neither": [0, 1, 34], "trigger": [0, 1, 17, 21, 22, 24, 33, 38, 57, 154, 255, 279], "duplic": [0, 1, 15, 33, 66], "error": [0, 1, 2, 4, 11, 14, 15, 21, 24, 25, 29, 37, 38, 40, 42, 43, 49, 53, 55, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 147, 155, 156, 161, 174, 175, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 267], "nor": [0, 1, 34, 279], "appear": [0, 1, 14, 15, 17, 21, 24, 25, 26, 27, 33, 41, 63, 65, 193], "compani": [0, 11, 13, 14, 21, 22, 43, 53, 80, 81, 82, 85, 219, 221, 222, 225, 236, 249, 271, 272, 274, 275, 276, 279, 280, 281], "_panda": 0, "catalog_glob": 0, "possibl": [0, 13, 17, 18, 36, 37, 42, 46, 53, 54, 193, 197, 256, 260, 261, 262, 264], "mlflow": [0, 23, 25, 43, 46, 53, 54], "wai": [0, 1, 2, 4, 6, 10, 12, 14, 15, 17, 18, 21, 24, 25, 26, 30, 36, 41, 43, 46, 49, 51, 66, 177, 238, 251, 254, 257, 260, 262, 265, 269, 271, 279], "still": [0, 1, 6, 8, 22, 37, 44, 52, 136, 160, 264, 272, 279, 280, 281], "mandatori": [0, 243, 254], "regist": [0, 12, 13, 22, 33, 38, 46, 51, 52, 53, 57, 132, 146, 177, 263, 264, 267, 271, 272, 274], "extend": [0, 7, 14, 15, 33, 37, 40, 44, 51, 56, 118, 119, 148, 174, 175, 255, 269], "illustr": [0, 21, 43, 51, 53, 57, 265, 267, 275, 277], "customomegaconfigload": 0, "def": [0, 4, 6, 14, 15, 17, 20, 21, 22, 24, 25, 33, 36, 37, 38, 43, 44, 46, 50, 52, 53, 55, 57, 174, 175, 193, 196, 229, 249, 261, 262, 263, 264, 265, 267, 271, 272, 281], "__init__": [0, 13, 15, 21, 22, 24, 26, 36, 52, 53, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 146, 174, 175, 177, 193, 197, 199, 200, 201, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 259, 260, 261, 271, 272], "self": [0, 15, 21, 22, 24, 33, 36, 38, 46, 52, 53, 55, 57, 61, 64, 137, 147, 165, 174, 175, 194, 261, 264], "env": [0, 1, 7, 13, 18, 20, 21, 22, 24, 25, 33, 37, 42, 63, 65, 66, 96, 139, 146, 154, 156, 164, 188, 189, 237, 253, 259, 264, 267], "none": [0, 7, 11, 15, 17, 18, 20, 21, 22, 24, 33, 37, 50, 52, 53, 55, 57, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 126, 134, 137, 139, 141, 146, 153, 154, 155, 164, 174, 175, 177, 185, 188, 189, 193, 195, 196, 197, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 259, 260, 261, 262, 264, 265, 267, 271], "runtime_param": [0, 63, 65, 66], "super": [0, 15, 21, 22, 24, 66, 175, 260, 261], "number": [0, 4, 5, 6, 14, 15, 21, 27, 41, 49, 50, 130, 171, 173, 185, 196, 197, 200, 202, 261, 262, 265, 280], "register_custom_resolv": 0, "lambda": [0, 15, 17, 33, 261, 262], "sum": [0, 6, 249, 260, 261, 262, 263, 264, 265], "staticmethod": [0, 24], "helper": [0, 20, 21, 24, 125, 194, 204, 261], "method": [0, 4, 6, 11, 12, 14, 17, 21, 22, 24, 25, 27, 31, 34, 36, 37, 51, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 124, 130, 134, 146, 152, 153, 154, 155, 156, 164, 171, 174, 175, 177, 185, 193, 196, 197, 199, 200, 201, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 260, 261, 264, 265, 267, 271, 273, 274], "check": [0, 6, 17, 20, 21, 26, 27, 33, 36, 40, 41, 43, 49, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 177, 200, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 262, 264, 265, 275, 276, 277, 279], "ha": [0, 1, 4, 6, 7, 11, 12, 14, 15, 17, 20, 21, 22, 25, 26, 27, 33, 36, 37, 43, 44, 46, 50, 51, 54, 55, 57, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 177, 193, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 259, 260, 261, 262, 264, 265, 267, 269, 271, 273, 274, 276, 277, 279], "alreadi": [0, 8, 10, 11, 14, 15, 17, 21, 24, 25, 27, 28, 43, 49, 51, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 177, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 259, 265, 267, 272, 274, 275, 276, 277], "been": [0, 7, 11, 17, 20, 21, 22, 24, 25, 31, 33, 36, 43, 51, 57, 177, 255, 264, 265, 275, 279], "throw": [0, 2, 4, 15, 55, 155, 156], "twice": [0, 11, 260, 271], "register_new_resolv": 0, "has_resolv": 0, "order": [0, 6, 11, 13, 14, 15, 20, 21, 22, 25, 26, 33, 37, 50, 55, 57, 63, 65, 126, 130, 177, 193, 197, 229, 262, 263, 264, 265, 272], "custom_configload": 0, "1": [0, 4, 6, 10, 11, 14, 15, 17, 20, 21, 24, 25, 26, 27, 33, 36, 37, 42, 43, 51, 53, 69, 71, 73, 75, 76, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 100, 101, 104, 105, 106, 130, 137, 171, 177, 185, 197, 207, 209, 212, 214, 215, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 242, 244, 247, 248, 249, 250, 255, 259, 261, 262, 264, 265, 267, 271, 272, 274, 277, 279, 281], "achiev": [0, 27, 36, 44, 251, 263], "oc": 0, "access": [0, 4, 7, 12, 14, 15, 16, 21, 25, 26, 37, 38, 42, 47, 50, 52, 56, 63, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 157, 162, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 240, 242, 244, 245, 246, 247, 248, 249, 250, 253, 262, 263, 267, 268, 277], "demonstr": [0, 10, 25, 26, 27, 36, 260, 261, 265, 280], "dev_s3": [0, 11, 13, 14, 80, 82, 219, 222, 236, 249, 268], "client_kwarg": [0, 11, 13, 14, 71, 177, 209, 259], "aws_access_key_id": [0, 2, 11, 13, 20, 43, 71, 177, 209], "aws_secret_access_kei": [0, 2, 11, 13, 20, 43, 71, 177, 209], "note": [0, 1, 7, 14, 15, 17, 21, 22, 33, 37, 38, 42, 43, 44, 49, 52, 66, 70, 72, 73, 74, 75, 80, 81, 82, 86, 87, 88, 89, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 200, 208, 211, 212, 213, 214, 219, 221, 222, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 243, 245, 246, 247, 248, 249, 250, 262, 265, 272], "onli": [0, 6, 11, 12, 13, 14, 15, 17, 18, 24, 25, 26, 27, 34, 37, 41, 43, 46, 47, 52, 53, 66, 76, 89, 104, 105, 146, 164, 166, 177, 193, 195, 197, 199, 200, 201, 202, 207, 215, 229, 238, 247, 248, 254, 255, 257, 260, 264, 265, 267, 271, 273, 277, 281], "encourag": [0, 7, 30, 260], "usag": [0, 20, 33, 34, 51, 55, 59, 65, 69, 71, 75, 76, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 207, 209, 210, 214, 215, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 274], "anyth": [0, 5, 11, 37, 49, 57, 69, 264, 279, 280, 281], "inform": [1, 6, 7, 12, 15, 17, 22, 24, 25, 29, 31, 38, 41, 42, 46, 50, 52, 57, 66, 122, 123, 150, 151, 154, 160, 251, 255, 257, 260, 261, 264, 269, 271, 273, 275, 277], "which": [1, 4, 5, 6, 7, 8, 12, 14, 15, 17, 18, 20, 21, 22, 24, 25, 27, 29, 30, 33, 34, 36, 37, 41, 42, 43, 44, 46, 47, 49, 50, 51, 53, 55, 57, 65, 66, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 106, 109, 110, 134, 146, 152, 155, 164, 175, 177, 190, 193, 197, 199, 200, 201, 202, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 241, 245, 246, 247, 248, 250, 251, 253, 254, 255, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 279, 280, 281], "store": [1, 2, 11, 12, 13, 15, 17, 20, 21, 22, 25, 26, 27, 28, 30, 33, 34, 40, 50, 51, 52, 56, 57, 86, 90, 99, 101, 154, 164, 166, 167, 177, 226, 230, 241, 244, 254, 255, 261, 264, 267, 271, 272, 273, 274, 276, 277, 279, 280, 281], "paramet": [1, 3, 11, 14, 15, 20, 21, 24, 25, 26, 27, 33, 37, 41, 43, 46, 47, 50, 53, 55, 56, 57, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 124, 142, 146, 152, 153, 154, 155, 156, 164, 174, 175, 177, 188, 193, 195, 196, 197, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 259, 261, 265, 267, 269, 272, 274], "credenti": [1, 3, 12, 22, 26, 27, 43, 47, 50, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 152, 154, 177, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 261, 268, 275, 277], "catalog": [1, 4, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 33, 43, 46, 51, 52, 53, 54, 55, 56, 57, 63, 65, 66, 83, 125, 146, 152, 153, 155, 156, 174, 175, 177, 199, 200, 201, 202, 203, 210, 220, 223, 229, 236, 238, 254, 259, 260, 261, 264, 265, 268, 271, 272, 274, 279], "make": [1, 4, 6, 9, 10, 12, 13, 15, 21, 22, 24, 25, 26, 27, 29, 30, 33, 36, 37, 40, 42, 43, 49, 50, 51, 53, 54, 57, 60, 90, 230, 251, 255, 257, 259, 260, 261, 264, 267, 269, 271, 273, 274, 275, 279, 281], "ar": [1, 2, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 30, 32, 33, 34, 36, 37, 40, 41, 42, 43, 46, 47, 50, 51, 53, 54, 55, 57, 59, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 106, 111, 155, 164, 165, 177, 188, 191, 193, 195, 197, 198, 199, 200, 201, 202, 203, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 267, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281], "templatedconfigload": [1, 2, 4], "omegaconfigload": [1, 2, 4, 37, 47, 273], "otherwis": [1, 4, 6, 15, 57, 63, 65, 66, 98, 193, 207, 240, 262, 276], "advanc": [1, 2, 3, 12, 16, 21, 29, 40, 50, 59, 89, 229, 261, 273, 274], "cover": [1, 6, 19, 36, 274], "keep": [1, 4, 5, 17, 26, 27, 50, 51, 207, 257, 260, 262, 269, 271], "all": [1, 2, 4, 5, 6, 8, 9, 12, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 34, 36, 40, 43, 46, 50, 51, 52, 53, 55, 57, 63, 65, 66, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 123, 124, 140, 151, 152, 153, 154, 155, 156, 169, 174, 175, 177, 191, 193, 195, 197, 199, 200, 201, 202, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 250, 251, 254, 255, 259, 260, 261, 262, 263, 264, 265, 267, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281], "A": [1, 5, 6, 7, 8, 15, 17, 20, 21, 22, 24, 25, 26, 27, 30, 33, 34, 37, 38, 43, 46, 50, 51, 52, 55, 66, 71, 83, 89, 90, 100, 110, 111, 114, 116, 123, 125, 126, 127, 129, 131, 132, 141, 151, 155, 160, 164, 177, 193, 195, 196, 197, 203, 209, 220, 223, 229, 230, 238, 242, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 271, 272], "organis": [1, 10, 18, 44, 49, 50, 259, 260, 262, 269], "stage": [1, 22, 27, 29, 40, 42, 50, 269, 277, 279], "pipelin": [1, 4, 12, 13, 14, 15, 17, 19, 25, 26, 27, 28, 31, 34, 35, 36, 42, 44, 46, 51, 52, 54, 55, 56, 57, 58, 60, 99, 132, 146, 147, 156, 160, 161, 164, 198, 199, 200, 201, 202, 203, 241, 251, 253, 255, 257, 259, 261, 273, 275, 277, 278], "might": [1, 6, 11, 14, 17, 29, 44, 54, 57, 65, 249, 251, 257, 260, 261, 265, 267, 277], "test": [1, 6, 10, 11, 14, 15, 20, 21, 25, 29, 31, 33, 39, 41, 42, 43, 50, 51, 56, 57, 72, 73, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 106, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 242, 244, 245, 246, 247, 248, 250, 254, 255, 259, 260, 261, 269, 276, 277], "product": [1, 12, 18, 22, 25, 29, 34, 36, 49, 58, 261, 266], "refer": [1, 2, 4, 6, 11, 12, 13, 14, 20, 21, 25, 26, 30, 37, 44, 46, 55, 59, 68, 73, 77, 78, 79, 81, 82, 83, 84, 85, 88, 91, 93, 94, 95, 98, 100, 146, 177, 191, 195, 210, 212, 216, 217, 218, 220, 221, 222, 223, 224, 225, 228, 231, 233, 234, 235, 236, 238, 240, 242, 243, 259, 260, 261, 272, 273, 275], "foundat": [1, 58], "other": [1, 2, 4, 6, 8, 9, 12, 15, 17, 22, 25, 26, 29, 33, 34, 36, 40, 41, 42, 43, 44, 46, 47, 49, 50, 54, 57, 73, 99, 193, 195, 196, 197, 212, 241, 251, 254, 257, 261, 263, 264, 265, 268, 269, 275], "across": [1, 4, 14, 21, 24, 29, 31, 36, 43, 44, 50, 89, 90, 204, 229, 230, 259, 260, 261, 271, 273, 274, 277], "thei": [1, 4, 5, 6, 10, 15, 17, 21, 25, 37, 46, 50, 53, 55, 57, 63, 65, 66, 85, 160, 195, 225, 229, 254, 255, 257, 260, 261, 262, 264, 267, 269, 271, 272, 277, 279], "overridden": [1, 14, 17, 65, 260], "do": [1, 2, 6, 10, 11, 13, 14, 16, 17, 21, 25, 26, 27, 30, 33, 34, 37, 42, 43, 46, 47, 49, 50, 51, 53, 55, 57, 72, 85, 99, 134, 193, 195, 196, 197, 211, 225, 241, 255, 257, 261, 264, 267, 272, 273, 277], "put": [1, 11, 14, 17, 22, 26, 33, 36, 50, 57, 69, 207], "privat": [1, 15, 27, 34, 41], "control": [1, 2, 11, 25, 34, 43, 50, 51, 160, 210, 255, 257, 264, 267, 272, 277, 279], "should": [1, 6, 7, 8, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 36, 37, 41, 42, 44, 46, 49, 50, 51, 53, 55, 56, 57, 59, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 105, 106, 108, 137, 155, 156, 164, 174, 175, 189, 193, 196, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 249, 250, 254, 255, 257, 260, 261, 262, 263, 265, 267, 271, 272, 274, 277, 279], "either": [1, 15, 17, 21, 28, 33, 36, 37, 43, 52, 63, 65, 66, 69, 83, 84, 85, 89, 90, 100, 155, 187, 223, 224, 225, 229, 230, 242, 259, 273], "user": [1, 5, 6, 7, 8, 10, 12, 18, 25, 26, 27, 34, 42, 43, 46, 50, 51, 55, 56, 59, 69, 89, 90, 99, 100, 134, 137, 159, 161, 174, 197, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 255, 257, 259, 260, 267], "id": [1, 7, 15, 17, 21, 22, 24, 25, 27, 29, 33, 34, 38, 40, 41, 42, 50, 70, 74, 76, 83, 84, 155, 177, 199, 200, 201, 202, 203, 208, 213, 215, 220, 223, 224, 253, 264, 272, 274, 275], "protect": 1, "secur": [1, 2, 10], "datacatalog": [1, 2, 4, 11, 13, 16, 21, 24, 33, 37, 44, 50, 53, 55, 57, 146, 155, 156, 164, 199, 200, 201, 202, 203, 220, 254, 255, 264, 265, 267, 268, 271], "o": [1, 11, 41, 42, 44, 46, 52, 261, 264, 265, 273], "interact": [1, 14, 21, 25, 26, 56, 251, 255, 264, 267, 268, 273, 281], "through": [1, 4, 6, 10, 12, 15, 20, 21, 22, 29, 30, 34, 37, 40, 41, 43, 46, 47, 50, 51, 52, 57, 65, 70, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 89, 90, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 177, 187, 189, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 225, 226, 229, 230, 232, 233, 234, 235, 237, 245, 246, 247, 248, 250, 255, 256, 257, 261, 264, 271, 279, 280, 281], "command": [1, 4, 6, 7, 8, 13, 14, 20, 21, 22, 24, 25, 26, 27, 28, 33, 39, 40, 41, 42, 43, 49, 51, 55, 56, 101, 113, 114, 115, 116, 117, 124, 125, 126, 127, 129, 131, 132, 133, 138, 141, 143, 244, 251, 253, 255, 256, 257, 259, 260, 264, 265, 267, 269, 271, 272, 273, 274, 276, 279, 280, 281], "line": [1, 4, 6, 11, 25, 26, 27, 28, 36, 39, 40, 41, 42, 43, 56, 87, 95, 101, 108, 124, 141, 188, 189, 227, 235, 244, 257, 264, 272, 273, 274, 276], "run": [1, 4, 6, 7, 11, 12, 13, 14, 17, 19, 23, 24, 28, 29, 31, 32, 35, 38, 42, 44, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 63, 65, 66, 68, 98, 99, 124, 136, 143, 146, 147, 153, 154, 155, 156, 164, 165, 172, 189, 193, 197, 199, 200, 201, 202, 203, 240, 241, 243, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 267, 269, 271, 272, 275, 277, 279, 280], "recurs": [1, 17, 25, 26, 27, 63, 65], "scan": [1, 63, 65], "insid": [1, 2, 4, 15, 17, 21, 24, 26, 27, 28, 33, 34, 37, 41, 46, 57, 63, 65, 134, 253, 255, 257, 259, 260, 273], "firstli": [1, 30, 41], "being": [1, 7, 15, 17, 25, 30, 33, 37, 57, 99, 164, 193, 204, 241, 260], "return": [1, 4, 6, 11, 14, 15, 17, 20, 21, 22, 24, 26, 27, 33, 36, 37, 43, 49, 50, 52, 53, 55, 57, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 121, 130, 137, 140, 142, 146, 147, 153, 154, 155, 160, 164, 165, 171, 172, 174, 175, 177, 185, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 261, 262, 263, 264, 265, 267, 271, 272, 275, 281], "accord": [1, 6, 14, 50, 126, 158, 177, 256, 267, 269, 279], "rule": [1, 40, 47, 255, 260], "locat": [1, 2, 4, 6, 8, 11, 13, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 37, 57, 63, 65, 84, 85, 101, 224, 225, 244, 249, 257, 259, 264, 273], "top": [1, 4, 6, 13, 14, 17, 21, 25, 26, 27, 41, 42, 46, 57, 63, 65, 229, 255, 260, 263, 274, 275], "level": [1, 4, 9, 13, 14, 17, 21, 24, 29, 44, 46, 57, 63, 65, 111, 193, 255, 257, 259, 260, 263, 273, 274, 275], "rais": [1, 9, 11, 17, 21, 24, 38, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 124, 130, 142, 146, 155, 156, 164, 165, 171, 174, 175, 177, 185, 193, 194, 195, 197, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 263, 264, 276], "valueerror": [1, 21, 24, 63, 65, 66, 69, 92, 96, 130, 164, 171, 185, 193, 195, 197, 199, 200, 201, 202, 203, 207, 232, 237], "indic": [1, 11, 25, 36, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253], "anoth": [1, 21, 22, 24, 25, 36, 46, 50, 255, 260, 265, 269, 272], "last": [1, 11, 17, 21, 55, 63, 65, 276], "valu": [1, 4, 5, 11, 13, 14, 15, 17, 18, 20, 24, 25, 33, 36, 37, 43, 51, 52, 53, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 130, 144, 155, 159, 171, 174, 175, 177, 185, 188, 193, 200, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 257, 259, 260, 261, 263, 264, 269, 274], "get": [1, 4, 7, 15, 18, 20, 21, 22, 24, 25, 33, 34, 36, 38, 41, 42, 43, 47, 51, 56, 57, 59, 63, 65, 66, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 142, 161, 177, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 244, 245, 246, 247, 248, 249, 250, 255, 261, 264, 267, 269, 271, 273, 276, 279, 280, 281], "debug": [1, 24, 33, 39, 40, 56, 111, 257], "messag": [1, 6, 7, 37, 42, 49, 72, 111, 137, 161, 211, 243, 257, 267, 276], "emit": [1, 11, 17, 257], "consid": [1, 5, 6, 13, 14, 15, 17, 18, 20, 21, 27, 29, 43, 46, 261], "hidden": [1, 50], "reserv": [1, 6, 134], "ignor": [1, 2, 17, 40, 50, 66, 98, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250], "those": [1, 15, 25, 26, 29, 30, 37, 43, 49, 51, 59, 155, 193, 195, 238, 251, 255, 259, 267, 272, 273, 274], "howev": [1, 5, 13, 15, 17, 22, 27, 34, 51, 55, 255, 257, 259, 271], "anchor": [1, 65], "alias": 1, "templat": [1, 14, 18, 20, 21, 24, 25, 26, 27, 37, 44, 46, 47, 50, 51, 53, 60, 66, 134, 251, 255, 269, 271, 273, 275, 279], "fetch": [1, 24, 52, 65, 69, 140, 199, 200, 201, 202, 207, 264], "search": [1, 42, 142, 269, 275, 279], "subfold": [1, 2, 15, 34, 43, 50, 146, 255, 273], "whose": [1, 2, 177, 269], "And": [1, 22, 28, 43, 264], "ini": [1, 63], "pickl": [1, 13, 18, 21, 22, 63, 96, 237, 251, 261, 264, 271, 279], "xml": [1, 63, 91, 231], "properti": [1, 42, 52, 55, 63, 65, 66, 71, 100, 146, 164, 193, 197, 209, 220, 242, 253], "regex": [1, 63, 65, 66, 177, 255], "These": [1, 4, 10, 13, 14, 15, 17, 24, 25, 37, 40, 46, 52, 57, 68, 98, 164, 199, 200, 201, 202, 240, 243, 259, 260, 275], "customis": [1, 17, 51, 63, 65, 66, 254, 255, 259, 267, 273], "bypass": [1, 47], "chapter": [1, 2, 59], "time": [1, 5, 7, 10, 14, 15, 17, 21, 26, 27, 30, 36, 38, 40, 41, 42, 43, 47, 51, 52, 53, 55, 69, 254, 264, 265, 271], "variabl": [1, 2, 7, 20, 26, 27, 37, 42, 43, 47, 52, 53, 57, 65, 66, 96, 186, 193, 196, 197, 237, 253, 262, 263, 264, 267, 269, 271, 274], "new_conf": 1, "cli": [1, 4, 6, 18, 20, 31, 38, 41, 42, 251, 253, 256, 259, 260, 263, 264, 265, 269, 271], "flag": [1, 6, 13, 17, 25, 26, 30, 37, 40, 43, 46, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 138, 164, 174, 175, 193, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 264, 269, 271, 279], "tar": [1, 34, 37, 128, 259, 273], "gz": [1, 14, 34, 37, 259, 273], "zip": [1, 22, 37], "format": [1, 11, 13, 14, 15, 22, 34, 37, 39, 46, 56, 62, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 111, 175, 185, 193, 197, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 257, 262, 264, 272, 273, 274, 277], "packag": [1, 6, 15, 20, 21, 24, 28, 29, 31, 36, 41, 42, 46, 49, 51, 56, 72, 127, 142, 146, 164, 167, 204, 207, 211, 251, 254, 255, 258, 260, 264, 269, 271, 272, 275, 277, 278], "build": [1, 6, 10, 20, 21, 22, 25, 30, 33, 34, 41, 42, 50, 57, 58, 60, 254, 255, 261, 264, 269, 271, 272, 275], "dist": [1, 18, 22, 25, 34, 37, 259, 273], "creat": [1, 5, 7, 12, 16, 17, 32, 33, 34, 38, 40, 41, 42, 43, 44, 46, 47, 48, 50, 53, 55, 56, 57, 58, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 121, 133, 146, 152, 154, 160, 164, 174, 175, 177, 186, 193, 195, 196, 197, 199, 200, 201, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 263, 264, 265, 267, 268, 269, 273, 274, 275], "whl": [1, 7, 18, 22, 25, 34, 37, 273], "exclud": [1, 6, 34, 273], "czf": 1, "my_conf_nam": 1, "directori": [1, 4, 6, 7, 15, 17, 18, 20, 21, 22, 24, 25, 27, 33, 34, 37, 40, 41, 42, 43, 44, 46, 49, 51, 63, 65, 66, 71, 88, 99, 102, 108, 134, 146, 164, 188, 209, 228, 241, 245, 251, 253, 254, 255, 259, 263, 267, 268, 273, 274, 276, 277, 279, 280, 281], "dir": [1, 18, 22, 50, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 267], "Or": [1, 52, 57], "x": [1, 15, 53, 81, 94, 95, 102, 221, 234, 235, 245, 261, 262, 264, 265, 271, 272, 281], "r": [1, 15, 18, 20, 22, 26, 27, 34, 37, 40, 42, 43, 51, 70, 72, 75, 77, 78, 79, 85, 89, 93, 103, 104, 105, 106, 208, 211, 214, 216, 217, 218, 220, 225, 229, 233, 236, 246, 247, 248, 250, 251, 271, 276, 277, 279, 281], "structur": [1, 4, 15, 17, 18, 22, 25, 27, 29, 30, 46, 171, 195, 243, 255, 260, 271, 279], "expect": [1, 27, 36, 46, 53, 54, 161, 193, 195, 207, 229, 255, 260, 261, 274], "conf_dir": 1, "mai": [1, 8, 11, 15, 17, 18, 27, 29, 30, 31, 41, 42, 43, 46, 50, 51, 57, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 255, 264, 267, 268, 271, 273, 275, 276, 277], "distribut": [1, 12, 17, 18, 22, 23, 25, 31, 34, 37, 259, 273, 275], "readm": [1, 6, 15, 18, 20, 21, 30, 34, 46, 50, 63, 255, 260], "md": [1, 6, 15, 18, 20, 21, 30, 34, 37, 46, 50, 63, 103, 246, 255, 260], "option": [1, 2, 4, 6, 15, 17, 20, 25, 26, 27, 33, 34, 41, 46, 50, 53, 57, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 111, 134, 139, 146, 156, 164, 177, 188, 191, 193, 195, 196, 197, 200, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 259, 260, 261, 263, 264, 265, 267, 273, 279], "includ": [1, 5, 6, 8, 10, 12, 15, 17, 18, 21, 22, 24, 25, 26, 27, 33, 37, 40, 43, 44, 46, 49, 54, 57, 71, 72, 81, 98, 124, 191, 193, 205, 207, 209, 211, 220, 221, 240, 243, 251, 254, 256, 257, 259, 260, 263, 265, 267, 269, 271, 273, 274, 277, 279], "so": [1, 2, 5, 6, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 31, 37, 40, 41, 46, 50, 51, 55, 63, 65, 66, 73, 82, 89, 90, 92, 96, 100, 188, 193, 212, 222, 229, 230, 232, 237, 242, 251, 255, 257, 260, 261, 263, 264, 265, 267, 268, 269, 271, 272, 277], "instanti": [1, 4, 11, 13, 14, 17, 21, 24, 33, 38, 41, 63, 65, 66, 83, 84, 89, 90, 96, 177, 199, 200, 201, 202, 223, 224, 229, 230, 237, 253, 260, 261, 264, 268, 271], "show": [1, 10, 15, 18, 25, 40, 41, 42, 43, 47, 52, 93, 134, 137, 233, 255, 257, 261, 267, 268, 274, 277, 278], "conf_catalog": [1, 55, 63, 65, 152], "built": [1, 8, 11, 12, 14, 15, 16, 17, 20, 21, 22, 25, 27, 30, 34, 44, 46, 49, 50, 56, 59, 65, 256, 264, 269, 271, 273], "own": [1, 2, 4, 9, 15, 17, 20, 21, 22, 25, 30, 36, 43, 47, 174, 175, 255, 257, 264, 267, 271], "bottom": [1, 26, 41, 280, 281], "overwrit": [1, 4, 11, 12, 44, 53, 57, 76, 89, 90, 98, 99, 102, 155, 210, 215, 220, 229, 230, 238, 240, 241, 243, 245, 256], "server": [1, 12, 14, 22, 30, 31, 33, 34, 89, 96, 207, 229, 237], "kedro_env": 1, "ipython": [1, 15, 26, 27, 28, 37, 41, 107, 125, 191, 274, 276, 277], "jupyt": [1, 37, 44, 50, 51, 56, 59, 164, 187, 191, 255, 266, 268, 275, 277], "notebook": [1, 11, 18, 25, 29, 44, 47, 50, 51, 56, 59, 187, 255, 257, 268, 275, 277], "lab": [1, 37, 187, 267], "session": [1, 15, 21, 22, 24, 25, 26, 27, 33, 36, 37, 38, 41, 42, 46, 49, 52, 56, 57, 146, 155, 199, 200, 201, 202, 203, 254, 264, 274, 276], "export": [1, 6, 7, 43, 166, 257, 267], "provid": [1, 4, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 31, 37, 38, 46, 50, 52, 55, 57, 60, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 112, 118, 122, 134, 145, 146, 148, 149, 150, 157, 162, 164, 170, 173, 174, 175, 177, 185, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 261, 262, 264, 267, 268, 269, 271, 272, 273], "default_run_env": [1, 63, 65, 66], "custom": [1, 12, 16, 17, 22, 30, 37, 44, 46, 47, 50, 55, 56, 61, 69, 92, 96, 126, 134, 138, 232, 237, 255, 261, 262, 271, 275, 280], "prod": [1, 267], "some": [1, 6, 14, 17, 22, 24, 25, 43, 53, 54, 57, 63, 65, 66, 85, 99, 193, 225, 241, 257, 259, 262, 265, 267, 268, 273, 274, 275, 277], "reason": [1, 2, 17, 20, 21, 25, 32], "apart": 1, "must": [1, 6, 7, 11, 14, 15, 17, 20, 21, 22, 25, 26, 27, 28, 34, 42, 43, 44, 46, 49, 51, 53, 55, 92, 96, 99, 177, 188, 193, 195, 197, 229, 232, 237, 241, 255, 257, 259, 260, 261, 262, 263, 264, 265, 267, 273, 274, 276, 279, 281], "strongli": [2, 11, 49], "commit": [2, 5, 10, 26, 27, 34, 37, 50, 255, 277], "secret": [2, 11, 13, 14, 17, 20, 52, 69, 71, 74, 76, 98, 177, 207, 209, 213, 215, 240], "kedro": [2, 4, 6, 11, 13, 14, 15, 17, 29, 31, 36, 38, 39, 40, 48, 52, 53, 54, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 259, 261, 262, 263, 265, 270, 272, 275, 276, 277, 279], "default": [2, 4, 6, 12, 13, 15, 17, 18, 20, 21, 24, 25, 26, 27, 33, 34, 37, 42, 43, 46, 47, 50, 51, 55, 57, 63, 65, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 111, 146, 160, 164, 174, 175, 177, 188, 199, 200, 201, 202, 203, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 244, 245, 246, 247, 248, 250, 254, 255, 256, 259, 261, 263, 264, 267, 271, 273, 274, 277], "file": [2, 4, 6, 7, 8, 11, 12, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 33, 34, 36, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 55, 57, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 137, 142, 174, 175, 177, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 259, 260, 261, 267, 268, 271, 272, 274, 275, 276, 277, 279, 281], "its": [2, 11, 13, 15, 17, 19, 20, 21, 22, 25, 26, 27, 29, 36, 37, 43, 44, 46, 49, 50, 51, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 117, 142, 157, 159, 164, 174, 175, 177, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 261, 262, 264, 265, 266, 267, 269, 271, 272], "git": [2, 6, 7, 8, 26, 27, 34, 37, 43, 46, 49, 50], "configur": [2, 4, 6, 20, 26, 27, 33, 34, 43, 46, 50, 56, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 146, 157, 158, 159, 164, 174, 175, 177, 188, 200, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 259, 260, 267, 268, 269, 273, 275], "us": [2, 6, 8, 10, 15, 16, 17, 19, 22, 29, 30, 31, 37, 38, 40, 41, 45, 46, 47, 50, 51, 54, 55, 56, 58, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 118, 124, 134, 135, 140, 146, 148, 152, 154, 155, 156, 160, 164, 166, 167, 168, 174, 175, 177, 185, 188, 193, 194, 196, 197, 199, 200, 201, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 259, 262, 263, 264, 265, 268, 269, 271, 272, 273, 274, 275, 277, 279, 280, 281], "fed": [2, 4, 207], "would": [2, 11, 12, 13, 14, 15, 18, 30, 36, 44, 52, 72, 73, 81, 161, 211, 212, 221, 255, 257, 260, 263, 264, 274], "rather": [2, 17, 26, 27, 36, 46, 108, 257], "environ": [2, 6, 7, 8, 12, 20, 24, 29, 30, 34, 36, 37, 41, 42, 43, 47, 51, 52, 63, 65, 66, 83, 84, 146, 164, 188, 223, 224, 251, 253, 254, 256, 259, 266, 267, 269, 272], "local": [2, 6, 7, 11, 12, 13, 15, 17, 20, 21, 22, 24, 25, 27, 28, 29, 30, 33, 34, 37, 38, 41, 42, 51, 63, 65, 66, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 106, 146, 186, 188, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 250, 255, 257, 259, 260, 264, 273, 274, 277], "abov": [2, 4, 6, 11, 13, 14, 17, 21, 22, 24, 25, 34, 37, 41, 42, 43, 44, 50, 53, 57, 220, 251, 257, 259, 260, 261, 262, 263, 264, 272, 276, 281], "missingconfigexcept": [2, 4, 65], "given": [2, 4, 14, 15, 17, 20, 21, 29, 33, 37, 57, 63, 65, 66, 89, 90, 175, 177, 188, 193, 197, 205, 207, 229, 230, 249, 274], "But": [2, 4], "workflow": [2, 4, 7, 13, 17, 18, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 43, 46, 57, 172, 261, 262, 277], "applic": [2, 4, 21, 22, 28, 30, 37, 41, 57, 124], "handl": [2, 4, 17, 21, 24, 71, 72, 75, 80, 81, 86, 87, 88, 89, 91, 93, 99, 104, 105, 106, 191, 209, 211, 214, 219, 220, 221, 226, 227, 228, 229, 231, 233, 236, 241, 247, 248, 250, 254, 256, 261, 264, 267], "try": [2, 4, 6, 11, 14, 15, 21, 24, 49, 85, 207, 225, 262, 264, 265, 267, 276], "except": [2, 4, 11, 14, 15, 17, 21, 24, 38, 60, 61, 62, 64, 70, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 89, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 135, 137, 145, 147, 155, 156, 163, 164, 165, 173, 192, 194, 195, 197, 208, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 229, 232, 233, 234, 235, 237, 238, 245, 246, 247, 248, 250, 257, 261, 262, 264, 265], "context": [2, 4, 15, 21, 22, 24, 26, 27, 33, 36, 37, 41, 52, 57, 154, 164, 188, 253, 254], "kedrocontext": [2, 4, 36, 37, 44, 148, 152, 154, 164, 253, 254, 267], "approach": [2, 4, 17, 18, 22, 25, 26, 27, 29, 34, 46, 49, 52], "them": [2, 4, 6, 7, 8, 10, 15, 17, 18, 24, 27, 31, 37, 38, 40, 43, 46, 49, 55, 57, 63, 65, 72, 81, 197, 211, 221, 259, 260, 261, 264, 265, 267, 272, 273, 276, 277, 278, 281], "aws_session_token": 2, "pleas": [2, 6, 8, 15, 20, 22, 37, 38, 44, 46, 49, 57, 98, 122, 123, 150, 151, 200, 240, 243, 264, 273, 276], "offici": [2, 19, 22, 24, 27, 46, 49, 59, 140], "defin": [4, 12, 13, 14, 17, 20, 21, 22, 24, 25, 26, 27, 36, 37, 42, 44, 46, 50, 53, 55, 57, 99, 111, 119, 124, 146, 152, 153, 154, 155, 156, 159, 160, 164, 174, 192, 193, 197, 199, 200, 201, 202, 207, 238, 241, 255, 257, 260, 261, 263, 264, 267, 269, 271, 272, 279], "pair": [4, 43, 63, 65, 66, 262, 272, 281], "where": [4, 5, 6, 8, 10, 11, 13, 14, 15, 17, 21, 22, 24, 25, 26, 27, 28, 30, 37, 38, 41, 42, 43, 46, 52, 55, 68, 81, 134, 164, 177, 193, 197, 199, 200, 201, 202, 206, 221, 229, 238, 259, 261, 262, 264], "correspond": [4, 11, 13, 15, 17, 21, 22, 27, 30, 44, 53, 55, 63, 65, 66, 71, 100, 177, 196, 197, 209, 242, 253, 255, 257, 261, 262, 273, 275], "serv": [4, 14, 43, 46, 51, 265, 272, 279], "input": [4, 13, 14, 15, 16, 17, 20, 21, 22, 24, 30, 37, 43, 50, 54, 57, 63, 65, 102, 155, 164, 193, 195, 196, 197, 199, 200, 201, 202, 203, 207, 245, 251, 255, 260, 264, 269, 276, 281], "node": [4, 13, 14, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 33, 36, 37, 44, 46, 51, 54, 55, 56, 57, 153, 155, 164, 193, 195, 199, 200, 201, 202, 203, 257, 260, 263, 264, 275, 276, 278, 280], "easier": [4, 7, 21, 36, 40, 59, 251, 257, 260, 269, 271, 279], "chang": [4, 6, 10, 25, 30, 34, 36, 37, 42, 43, 47, 49, 53, 65, 99, 229, 241, 254, 257, 260, 261, 267, 269, 273, 276, 279], "modifi": [4, 5, 7, 15, 18, 42, 55, 56, 57, 90, 99, 136, 160, 230, 241, 251, 261, 263, 273], "group": [4, 10, 14, 21, 22, 33, 37, 42, 44, 46, 52, 53, 55, 86, 126, 136, 138, 141, 177, 193, 200, 202, 226], "determin": [4, 7, 17, 43, 50, 51, 134, 175, 207, 262, 269, 271, 272], "hyperparamet": [4, 32, 271], "model": [4, 12, 15, 18, 25, 26, 27, 29, 32, 43, 51, 57, 102, 177, 245, 260, 275, 277, 279], "singl": [4, 8, 15, 17, 19, 22, 24, 25, 30, 31, 43, 46, 51, 52, 88, 164, 177, 200, 203, 207, 228, 260, 261, 262, 267, 269, 271, 272], "modif": [4, 108], "centralis": [4, 56], "avoid": [4, 6, 14, 17, 26, 27, 29, 33, 40, 68, 251, 265, 268], "part": [4, 7, 11, 14, 15, 17, 18, 19, 21, 23, 30, 32, 35, 36, 43, 46, 51, 104, 105, 193, 195, 197, 210, 220, 238, 247, 248, 255, 259, 261, 262, 263, 271, 278, 281], "step_siz": 4, "learning_r": 4, "01": [4, 17, 53, 264, 267, 272], "definit": [4, 12, 15, 22, 25, 43, 196, 197, 238, 262, 264, 267, 271, 279], "increase_volum": 4, "volum": [4, 17, 41], "step": [4, 11, 17, 20, 21, 25, 26, 27, 30, 31, 34, 36, 41, 43, 46, 49, 51, 56, 260, 263, 264, 272, 279], "func": [4, 13, 14, 17, 22, 43, 50, 52, 57, 193, 196, 197, 260, 261, 264, 271, 272, 281], "input_volum": 4, "output_volum": 4, "model_param": 4, "test_data_ratio": 4, "number_of_train_iter": 4, "10000": [4, 267], "train_model": [4, 14, 53, 57, 271], "lr": 4, "iter": [4, 10, 25, 26, 29, 50, 63, 65, 66, 69, 140, 193, 195, 196, 197, 261, 267], "input_data": 4, "output_data": 4, "pass": [4, 6, 11, 13, 14, 15, 17, 22, 24, 33, 36, 37, 42, 46, 50, 51, 53, 55, 63, 65, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 106, 137, 146, 164, 188, 191, 193, 200, 202, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 255, 257, 260, 261, 262, 264, 265, 269, 271, 273, 274], "entir": [4, 14, 18, 21, 22, 25, 26, 27, 30, 34, 36, 52, 56, 251, 256, 261, 262, 271, 275], "collect": [4, 10, 21, 24, 36, 46, 50, 53, 55, 57, 71, 114, 125, 127, 129, 130, 131, 132, 193, 195, 209, 251, 262, 269], "ad": [4, 6, 14, 17, 36, 37, 40, 42, 43, 44, 52, 54, 65, 83, 138, 152, 177, 193, 197, 223, 236, 255, 260, 263, 265, 269, 271, 274, 281], "add_feed_dict": [4, 177], "live": [4, 46, 238], "what": [4, 5, 8, 11, 14, 17, 24, 36, 55, 72, 211, 255, 262, 269, 272], "inject": [4, 37, 44, 46, 52, 55, 254], "per": [4, 10, 43, 101, 244, 259, 267, 274], "subdirectori": [4, 36, 51, 63, 65, 273], "comma": [4, 37, 42, 144, 188], "separ": [4, 13, 14, 15, 31, 33, 34, 37, 40, 46, 51, 166, 188, 260, 269, 271, 272, 273, 278], "list": [4, 6, 7, 9, 10, 11, 14, 17, 24, 25, 26, 27, 33, 42, 43, 46, 51, 53, 55, 59, 65, 69, 76, 98, 99, 126, 134, 156, 164, 175, 177, 191, 193, 195, 196, 197, 207, 210, 215, 220, 229, 240, 241, 243, 251, 257, 259, 260, 261, 262, 264, 265, 267, 273, 275], "made": [4, 8, 10, 26, 36, 108, 193, 195, 271, 272], "split": [4, 37, 40, 50, 51, 53, 144, 188, 261, 267, 271], "colon": [4, 188], "equal": [4, 11, 43, 57, 71, 73, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 96, 100, 177, 188, 209, 212, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 237, 242], "sign": [4, 6, 188], "param_key1": [4, 37], "value1": [4, 17, 37, 188], "param_key2": [4, 37], "alwai": [4, 8, 11, 14, 17, 20, 43, 49, 108, 177, 260, 267], "treat": [4, 14, 15, 40, 46, 63, 65, 193, 260], "string": [4, 7, 11, 13, 14, 15, 17, 53, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 144, 174, 175, 177, 193, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255], "convert": [4, 15, 20, 22, 37, 43, 46, 47, 255, 261, 272, 273, 281], "float": [4, 43, 53, 272], "integ": 4, "convers": [4, 9, 13, 30], "succe": 4, "extra": [4, 8, 15, 17, 25, 52, 54, 55, 63, 65, 66, 146, 164, 177, 188, 191, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 244, 245, 246, 247, 248, 249, 250, 253, 257, 261], "space": [4, 8, 51, 274, 275], "wrap": [4, 15, 24, 33, 66, 203, 257, 260, 271], "whole": [4, 14, 17, 18, 22, 36, 37, 193], "quot": [4, 14, 259], "key1": [4, 261], "key2": [4, 261], "cannot": [4, 8, 17, 20, 24, 26, 27, 31, 42, 57, 164, 174, 199, 200, 201, 202, 256, 260, 262, 276], "endpoint_url": [4, 14], "http": [4, 12, 13, 14, 15, 22, 25, 26, 27, 33, 40, 41, 42, 43, 46, 49, 51, 52, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 122, 123, 150, 151, 160, 161, 177, 187, 188, 191, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 259, 272, 276, 279], "endpoint": [4, 25, 69, 207, 259], "com": [4, 22, 25, 27, 34, 40, 41, 42, 46, 49, 66, 83, 84, 94, 95, 161, 223, 224, 234, 235, 238], "page": [5, 6, 7, 10, 15, 16, 20, 21, 24, 31, 33, 36, 43, 50, 51, 53, 57, 254, 265, 267, 280, 281], "explain": [5, 6, 7, 15, 20, 22, 24, 25, 30, 33, 34, 44, 48, 49, 51, 57, 254, 255, 267, 271, 272, 273, 275], "principl": [5, 6, 18, 22], "public": [5, 34, 42], "api": [5, 12, 13, 15, 33, 57, 59, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 261, 264, 267, 269], "signatur": [5, 55, 155, 156], "remov": [5, 11, 20, 53, 63, 65, 66, 68, 76, 164, 215, 220, 251, 257, 260, 264, 265, 267, 272, 273], "modul": [5, 6, 11, 25, 37, 40, 42, 46, 49, 55, 56, 60, 67, 92, 96, 107, 109, 112, 113, 115, 118, 119, 122, 123, 133, 143, 148, 149, 150, 151, 157, 160, 161, 162, 163, 166, 168, 170, 177, 190, 191, 192, 204, 232, 237, 244, 251, 260, 263, 264, 271, 273], "upgrad": [5, 26, 42, 251, 254], "without": [5, 14, 17, 18, 22, 24, 25, 26, 92, 99, 160, 161, 177, 195, 232, 241, 253, 257, 261, 263, 264, 267, 268, 269, 276], "aim": [5, 6, 35], "minimis": 5, "softwar": [5, 6, 25, 26, 30, 36, 58, 266, 269], "stabl": [5, 49, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 93, 96, 122, 123, 150, 151, 177, 187, 188, 191, 212, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 233, 237, 244, 276], "migrat": [5, 49], "bring": 5, "consider": [5, 15], "increas": [5, 17, 57, 260, 266, 269, 271], "maintain": [5, 21, 22, 36, 37, 40, 58, 255, 260, 269, 271], "codebas": [5, 6, 15, 31, 34, 43, 259, 260, 261, 271], "sens": 5, "befor": [5, 7, 8, 11, 13, 15, 17, 20, 21, 24, 26, 27, 33, 37, 40, 42, 44, 50, 52, 54, 55, 57, 117, 124, 153, 155, 156, 193, 255, 257, 259, 263, 273, 274], "contribut": [5, 10], "github": [5, 6, 8, 9, 10, 15, 18, 19, 20, 21, 32, 35, 40, 46, 49, 51, 58, 66, 92, 96, 161, 220, 232, 236, 237, 255, 257], "issu": [5, 6, 8, 9, 26, 40, 49, 161, 191, 257, 260, 267, 275], "justifi": 5, "gain": [5, 29], "non": [5, 6, 15, 18, 46, 47, 55, 56, 89, 92, 96, 229, 232, 237, 264], "go": [5, 6, 17, 20, 21, 22, 25, 29, 30, 34, 41, 42, 43, 46, 51, 103, 246, 255, 281], "main": [5, 6, 7, 15, 20, 25, 26, 27, 32, 46, 50, 54, 146, 187, 220, 253, 260, 261, 269, 271, 273], "minor": 5, "deploi": [5, 18, 20, 29, 30, 31, 32, 33, 34, 42, 255, 273], "branch": [5, 6, 8, 15, 22, 43, 46, 49, 255, 264, 271], "until": [5, 17, 21, 42], "next": [5, 6, 7, 12, 17, 21, 22, 24, 26, 27, 41, 43, 49, 50, 56, 255, 261, 264, 267, 271, 272, 279], "got": [5, 53, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 161, 174, 175, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "question": [5, 6, 10, 22, 51, 55, 56, 270, 273, 275, 279], "process": [5, 7, 8, 11, 14, 15, 17, 20, 21, 24, 25, 26, 27, 30, 34, 36, 40, 42, 43, 50, 56, 57, 63, 65, 66, 71, 149, 164, 199, 200, 201, 202, 209, 260, 261, 263, 264, 269, 271, 273, 275, 279], "ask": [5, 6, 8, 10, 25, 27, 33, 49, 51, 56, 255, 270, 273, 275, 276, 279], "commun": [5, 9, 20, 275, 276, 279], "slack": [5, 6, 9, 10, 20, 21, 49, 51, 275, 279], "apach": [6, 15, 46, 88, 98, 99, 100, 228, 240, 241, 242, 243], "licens": [6, 46], "short": [6, 36, 51, 197], "submit": [6, 8, 15, 24, 25, 33, 46, 57], "code": [6, 9, 10, 12, 15, 16, 18, 22, 23, 24, 25, 27, 29, 30, 34, 36, 37, 39, 43, 44, 46, 47, 50, 56, 57, 58, 89, 90, 124, 137, 229, 230, 253, 254, 255, 257, 259, 260, 261, 262, 263, 266, 267, 268, 269, 271, 272, 273, 277, 279, 280], "submiss": 6, "understood": 6, "permiss": [6, 17, 27], "share": [6, 14, 15, 18, 22, 24, 34, 43, 50, 57, 259, 260, 262, 268, 271, 273], "don": [6, 8, 16, 17, 21, 27, 37, 38, 41, 44, 49, 50, 57, 255, 260, 264, 267, 273, 277, 279], "t": [6, 8, 15, 16, 17, 20, 21, 22, 24, 27, 37, 38, 40, 41, 44, 49, 50, 57, 63, 65, 72, 73, 74, 75, 80, 81, 82, 86, 87, 88, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 169, 177, 202, 211, 212, 213, 214, 219, 221, 222, 226, 227, 228, 231, 232, 233, 234, 235, 236, 245, 246, 247, 248, 250, 255, 259, 260, 263, 264, 267, 272, 273, 274, 276, 277, 279, 280, 281], "see": [6, 7, 11, 12, 14, 15, 17, 18, 21, 22, 24, 25, 26, 27, 30, 33, 36, 37, 41, 42, 43, 44, 46, 49, 51, 55, 66, 74, 76, 77, 78, 79, 89, 90, 100, 122, 146, 150, 160, 164, 177, 187, 188, 213, 215, 216, 217, 218, 229, 230, 238, 242, 243, 244, 253, 255, 257, 260, 262, 264, 265, 267, 269, 271, 272, 273, 274, 275, 276, 279, 280, 281], "our": [6, 8, 10, 15, 18, 22, 24, 26, 30, 31, 44, 46, 49, 55, 57, 207, 264, 275, 279], "guid": [6, 7, 10, 12, 15, 16, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 38, 40, 41, 43, 44, 49, 51, 55, 56, 98, 238, 240, 243, 255, 261, 264, 273], "practic": [6, 40, 57, 58, 262, 264, 266, 269], "descript": [6, 17, 22, 36, 37, 42, 51, 60, 62, 67, 68, 107, 108, 109, 110, 112, 113, 114, 115, 118, 119, 122, 123, 125, 127, 129, 131, 132, 133, 135, 145, 148, 149, 150, 151, 157, 162, 163, 166, 168, 170, 173, 186, 190, 192, 193, 198, 204, 206, 220, 255, 260, 261, 267, 271], "how": [6, 10, 11, 12, 14, 16, 17, 22, 26, 27, 30, 36, 38, 40, 41, 42, 43, 47, 51, 52, 53, 55, 56, 57, 71, 167, 207, 209, 249, 254, 257, 264, 267, 268, 269, 272, 273, 274, 275, 277, 279, 280, 281], "prepar": [6, 272], "against": [6, 10, 15, 20, 21, 31, 36, 37, 63, 65, 66], "repositori": [6, 7, 15, 18, 19, 21, 22, 26, 32, 34, 35, 37, 40, 41, 42, 46, 49, 51, 134, 255, 259, 269], "window": [6, 7, 8, 17, 27, 37, 41, 42, 49, 51, 52, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 200, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 259, 265, 267, 272, 277, 279, 280, 281], "win_setup_conda": 6, "win_setup_env": 6, "circl": 6, "ci": [6, 10, 25, 29, 44, 255, 257], "correct": [6, 21, 22, 25, 46, 49, 267], "virtual": [6, 7, 8, 24, 36, 42, 51, 251, 272], "unfamiliar": 6, "requisit": 6, "ll": [6, 13, 21, 24, 26, 27, 42, 49, 267, 273, 280, 281], "fork": [6, 8], "click": [6, 15, 20, 21, 22, 25, 26, 27, 28, 33, 37, 41, 42, 43, 44, 49, 124, 135, 136, 260, 261, 262, 264, 265, 271, 272, 274, 280, 281], "right": [6, 10, 21, 25, 26, 27, 41], "corner": [6, 21, 25, 41], "choos": [6, 21, 24, 27, 29, 41, 42, 46, 49, 51, 59, 254, 264, 267, 275], "target": [6, 7, 18, 22, 31, 37, 41, 85, 99, 225, 241, 255, 259, 261, 271], "account": [6, 15, 21, 22, 24, 25, 27, 34, 42, 52, 83, 84, 223, 224, 238, 259], "further": [6, 15, 18, 19, 24, 26, 32, 35, 37, 50, 51, 57, 251, 257, 264, 269, 275], "consult": [6, 7, 15, 18, 19, 22, 23, 31, 32, 35, 52, 254, 267, 272, 273], "repo": [6, 8, 9, 28, 29, 40, 46, 257], "almost": [6, 34, 267], "readi": [6, 20, 21, 22, 24, 29, 46, 51, 58, 177, 279, 280, 281], "termin": [6, 7, 25, 26, 27, 33, 37, 41, 42, 43, 49, 51, 261, 265, 267, 271, 272, 274, 275, 277, 279, 280, 281], "navig": [6, 7, 8, 25, 26, 27, 33, 34, 40, 41, 43, 49, 51, 251, 267, 273, 277, 279, 280, 281], "instal": [6, 8, 14, 15, 18, 20, 22, 24, 28, 33, 41, 42, 46, 50, 51, 53, 55, 68, 191, 249, 255, 257, 259, 260, 267, 272, 273, 275, 276, 278, 279, 280, 281], "everyth": [6, 238], "onc": [6, 7, 18, 21, 24, 25, 26, 27, 34, 36, 37, 43, 46, 49, 51, 53, 76, 215, 261, 271, 272, 273], "execut": [6, 7, 13, 18, 21, 22, 24, 25, 26, 27, 30, 33, 34, 36, 37, 40, 41, 42, 43, 46, 49, 50, 52, 53, 54, 55, 57, 89, 99, 123, 149, 151, 164, 187, 192, 193, 197, 198, 207, 229, 241, 254, 259, 261, 262, 263, 264, 265, 267, 271, 272], "successfulli": [6, 17, 20, 21, 24, 25, 26, 27, 36, 271, 272, 276], "saniti": 6, "ensur": [6, 10, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 33, 40, 42, 43, 47, 57, 166, 257, 267, 271, 272, 273, 276, 277], "fail": [6, 11, 21, 53, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 160, 174, 175, 177, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 263], "plan": [6, 10, 21, 44, 99, 241, 259], "relat": [6, 26, 37, 43, 50, 55, 186, 255], "suit": [6, 25, 53], "place": [6, 8, 20, 21, 25, 33, 36, 37, 40, 57, 256, 259, 260, 272, 273, 279, 280, 281], "focu": [6, 22, 24], "three": [6, 14, 29, 34, 43, 50, 51, 210, 255, 271, 272, 274, 276], "plugin": [6, 15, 18, 21, 30, 34, 36, 37, 42, 43, 44, 45, 56, 57, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 263, 272, 273], "primari": [6, 21, 87, 99, 210, 227, 241, 279], "introduc": [6, 12, 14, 27, 36, 43, 44, 50, 51, 251, 261, 262, 271, 272, 275, 280], "too": [6, 21, 37, 40, 57, 188, 257, 267], "mani": [6, 7, 15, 17, 21, 24, 27, 36, 37, 52, 57, 59, 260, 269, 271], "depend": [6, 8, 18, 20, 21, 22, 24, 25, 26, 27, 30, 31, 33, 34, 40, 46, 49, 50, 51, 53, 56, 57, 98, 161, 193, 240, 243, 249, 252, 261, 264, 267, 272, 276, 279], "airflow": [6, 31, 46, 255], "typic": [6, 12, 25, 30, 197, 255, 256, 257, 260, 269, 271, 275], "small": [6, 40, 55, 280, 281], "push": [6, 21, 22, 34], "break": [6, 8, 21, 29, 36, 40, 41, 49, 260, 261, 267], "backward": [6, 108], "compat": [6, 11, 12, 25, 43, 46, 49, 89, 90, 92, 96, 108, 229, 230, 232, 237, 257], "off": [6, 40], "intend": [6, 14, 36, 37, 44, 271], "pr": [6, 8, 9], "unit": [6, 30, 37, 50, 259], "end": [6, 17, 21, 22, 32, 37, 43, 44, 52, 53, 57, 164, 177, 193, 229, 261, 265, 267], "e2": [6, 22, 32, 261], "linter": [6, 26, 40], "lint": [6, 26, 39, 50, 56], "open": [6, 8, 14, 15, 18, 20, 24, 25, 26, 27, 28, 33, 41, 42, 43, 44, 51, 57, 58, 70, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 89, 92, 93, 94, 95, 103, 104, 105, 106, 208, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 229, 232, 233, 234, 235, 246, 247, 248, 250, 261, 264, 267, 269, 272, 274, 279], "org": [6, 41, 42, 46, 49, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 98, 99, 100, 102, 104, 105, 106, 177, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 237, 240, 241, 242, 243, 244, 245, 247, 248, 250], "NOT": [6, 15, 99, 241], "await": 6, "review": [6, 8, 9, 10, 11, 14, 22, 24, 33, 40, 49, 51, 59, 255, 271, 272, 274, 275, 276, 279, 280], "comment": [6, 27, 254, 279], "team": [6, 7, 10, 20, 255, 260, 269], "address": [6, 17, 24, 27, 37, 42, 259], "complet": [6, 7, 17, 21, 22, 24, 25, 26, 27, 37, 40, 43, 51, 53, 57, 99, 124, 241, 261, 263, 271, 272, 273, 275, 277, 279], "over": [6, 8, 10, 11, 14, 37, 43, 63, 65, 66, 146, 164, 238, 253, 261, 271], "abandon": 6, "instruct": [6, 8, 17, 20, 21, 24, 26, 30, 33, 34, 49, 210, 271, 273], "resolv": [6, 13, 47, 50, 65, 66, 99, 193, 241, 262, 269], "give": [6, 21, 33, 36, 37, 51, 57, 193, 195, 257, 260, 261, 262, 267, 271], "cross": 6, "platform": [6, 7, 17, 18, 22, 35], "maco": [6, 7, 8, 37, 41, 42, 49], "linux": [6, 7, 37, 41, 42, 49, 51, 272, 279], "semant": [6, 30, 50], "7": [6, 11, 25, 26, 27, 36, 37, 41, 49, 59, 71, 101, 209, 220, 244, 262, 267, 271, 277], "onward": [6, 279], "style": [6, 40, 46], "cascad": 6, "pep": [6, 40, 261], "8": [6, 7, 11, 14, 22, 26, 27, 36, 40, 57, 71, 209, 220, 238, 262, 267, 271, 277], "googl": [6, 12, 35, 83, 84, 223, 224], "docstr": 6, "484": 6, "face": [6, 10], "count_truthi": 6, "elem": 6, "cleanli": 6, "cd": [6, 10, 18, 20, 25, 26, 27, 29, 36, 43, 49, 51, 255, 277], "ruff": 6, "black": [6, 37, 40, 111, 255, 277], "100": [6, 36, 77, 78, 79, 84, 207, 216, 217, 218, 224, 257, 261, 272, 274], "coverag": [6, 15, 37], "pytest": [6, 37, 46, 50, 55, 254, 255, 277], "cov": [6, 277], "behav": [6, 46, 264], "pyspark": [6, 13, 17, 56, 97, 98, 99, 100, 210, 239, 240, 241, 242, 251, 255, 264], "hive": [6, 14, 88, 99, 228, 241], "lack": [6, 63, 65, 66], "java": 6, "java_hom": 6, "usr": [6, 22], "libexec": 6, "v": [6, 26, 27, 28, 37, 42, 49, 63, 65, 66, 262, 264, 265, 277], "workaround": 6, "conftest": 6, "fixtur": [6, 36], "reusabl": [6, 255, 260, 271], "squash": 6, "clariti": 6, "suggest": [6, 8, 26, 197], "chri": 6, "beam": 6, "hi": 6, "post": [6, 38, 49, 69, 207, 255], "write": [6, 10, 16, 17, 21, 26, 36, 41, 42, 47, 50, 57, 70, 81, 84, 85, 98, 104, 105, 173, 208, 210, 220, 221, 224, 225, 240, 243, 247, 248, 249, 257, 261, 264, 267, 272], "particular": [6, 13, 15, 21, 37, 55, 161, 164, 177, 267], "limit": [6, 11, 20, 177, 251, 263, 264], "length": [6, 14, 40, 51, 249], "50": [6, 51], "charact": [6, 14, 51, 255, 259, 260, 264], "capitalis": 6, "letter": [6, 197], "word": [6, 57], "omit": [6, 40, 177], "period": [6, 10, 34], "imper": 6, "tens": 6, "hook": [6, 17, 24, 33, 36, 37, 38, 44, 56, 146, 164, 199, 200, 201, 202, 203, 210, 254, 255, 272], "automat": [6, 11, 15, 17, 21, 26, 27, 33, 36, 40, 42, 46, 51, 66, 160, 187, 195, 200, 202, 253, 255, 257, 259, 262, 263, 265, 267, 271, 272, 273], "skip": [6, 50, 238, 263, 271], "verifi": [6, 7, 8, 15, 22, 25, 26, 27, 33, 34], "n": [6, 20, 21, 24, 26, 27, 37, 70, 208, 262, 264, 265, 273], "dure": [6, 14, 17, 22, 24, 26, 27, 36, 38, 43, 98, 99, 155, 156, 164, 197, 207, 240, 241, 243, 260], "uninstal": [6, 7, 49], "compli": [6, 22], "dco": 6, "certifi": 6, "contributor": [6, 7, 8, 9, 10, 15], "wrote": 6, "random": [6, 57], "j": [6, 46], "m": [6, 14, 22, 27, 34, 37, 42, 49, 53, 80, 85, 219, 225, 229, 262, 265, 273], "rememb": [6, 25, 26, 27, 29, 267], "everi": [6, 10, 18, 22, 26, 36, 40, 44, 55, 57, 254, 255, 256, 261, 262, 271], "alia": [6, 46, 130, 134, 171, 176, 178, 179, 180, 181, 182, 183, 184, 185, 255, 259, 268], "setup": [6, 7, 8, 14, 25, 29, 34, 40, 42, 43, 46, 50, 56, 57, 172, 210, 251, 255, 268], "msg": [6, 72, 211], "block": [6, 8, 14, 50, 261, 262, 269], "unsign": 6, "rebas": 6, "retroact": 6, "learn": [6, 10, 13, 19, 25, 27, 29, 32, 42, 43, 46, 50, 51, 54, 55, 244, 260, 261, 269, 271, 275, 277], "resourc": [6, 12, 22, 30, 36, 56, 57, 59, 83, 84, 177, 223, 224, 264], "timer": [6, 53], "q": 6, "discuss": [6, 8, 9, 10, 18, 22, 49, 275, 279], "searchabl": [6, 49, 275, 279], "archiv": [6, 49, 275, 279], "cloud": [7, 12, 20, 22, 30, 32, 35, 37, 43, 83, 84, 223, 224, 259, 274], "scienc": [7, 28, 37, 43, 56, 58, 263, 272, 275, 277], "improv": [7, 8, 22, 26, 43], "experi": [7, 15, 25, 28, 32, 46, 50, 56, 59, 104, 105, 247, 248], "effici": [7, 26, 271], "cycl": 7, "individu": [7, 17, 30, 40, 52, 275], "authent": [7, 27, 34, 52, 238], "workspac": [7, 26, 28, 29, 42, 210], "exist": [7, 10, 11, 12, 14, 15, 17, 24, 26, 27, 36, 37, 41, 42, 43, 46, 49, 51, 55, 57, 63, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 142, 174, 175, 177, 193, 195, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 259, 260, 261, 262, 264, 265, 267, 271, 276, 281], "cluster": [7, 12, 20, 24, 26, 27, 28, 32, 46, 57], "gnu": 7, "clone": [7, 8, 26, 27, 31, 34], "similar": [7, 11, 25, 26, 27, 30, 37, 51, 53, 98, 240, 243, 255, 260, 262, 267, 271, 272, 276], "gener": [7, 11, 12, 15, 17, 18, 22, 25, 27, 28, 34, 36, 37, 46, 47, 49, 51, 56, 57, 71, 72, 77, 78, 79, 80, 81, 87, 88, 89, 90, 92, 94, 95, 137, 160, 203, 209, 211, 216, 217, 218, 219, 221, 227, 228, 229, 230, 232, 234, 235, 244, 249, 251, 255, 256, 259, 260, 263, 265, 269, 271, 273, 276, 277, 279, 280, 281], "manual": [7, 25, 26, 33, 34, 36, 42, 51, 187, 251, 260, 271], "wheel": [7, 18, 25, 34, 273], "makefil": 7, "autom": [7, 25, 29, 39, 56, 254], "save": [7, 12, 13, 15, 16, 20, 24, 26, 27, 30, 34, 37, 40, 43, 44, 50, 53, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 152, 153, 164, 174, 175, 177, 185, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 259, 261, 265, 267, 268, 269, 271, 272, 273, 279], "left": [7, 21, 26, 41, 42, 43, 59], "chosen": [7, 27], "1234": 7, "567890": 7, "abcd1234": 7, "0987": 7, "654321": 7, "9876xywz": 7, "databricks_cluster_id": 7, "powershel": [7, 37], "With": [7, 25, 26, 27, 41, 257, 267], "parent": [7, 37, 43, 50, 193, 255, 275], "stream": [7, 57, 111, 243], "written": [7, 8, 15, 17, 20, 30, 36, 97, 98, 239, 264, 267, 273], "behind": [7, 89, 90, 229, 230, 261], "scene": [7, 89, 90, 229, 230, 261], "upload": [7, 14, 23], "dbf": [7, 97, 98, 239, 240, 243], "queue": [7, 33], "restart": [7, 267, 276], "unavail": 7, "poll": [7, 21], "statu": [7, 21, 25], "grep": 7, "select": [7, 10, 11, 14, 25, 26, 27, 30, 40, 41, 42, 43, 44, 49, 83, 85, 89, 98, 193, 223, 225, 229, 240, 243, 267, 273], "success": [7, 8, 10, 21, 25, 34, 124, 267], "cluster_id": 7, "library_status": 7, "tmp": [7, 74, 213], "py3": [7, 18, 22, 259], "is_library_for_all_clust": 7, "fals": [7, 11, 14, 17, 21, 24, 33, 37, 65, 71, 75, 76, 80, 81, 84, 85, 87, 88, 90, 91, 101, 102, 104, 105, 106, 137, 141, 164, 177, 199, 200, 201, 202, 203, 209, 214, 215, 219, 221, 224, 225, 227, 228, 230, 231, 236, 244, 245, 247, 248, 250, 257, 261, 265, 276], "reflect": [7, 26, 279], "latest": [7, 10, 11, 13, 15, 22, 25, 27, 33, 34, 49, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 160, 175, 177, 185, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 255], "welcom": [8, 9], "someth": [8, 17, 42, 55, 269, 276], "incorrect": [8, 146], "miss": [8, 13, 24, 36, 37, 40, 66, 161, 199, 200, 201, 202, 264, 267, 276], "tell": [8, 20, 21, 42], "yourself": [8, 30], "guidelin": [8, 40], "wiki": [8, 70, 106, 208, 250], "markdown": [8, 273], "sphinx": [8, 37], "coordin": [8, 13, 43], "script": [8, 20, 21, 24, 25, 30, 33, 34, 41, 42, 43, 44, 49, 186, 255], "unix": [8, 41, 42, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "pandoc": 8, "fine": [8, 27, 160], "As": [8, 14, 17, 20, 22, 25, 27, 30, 36, 40, 57, 238, 253, 255, 259, 263, 265, 271], "long": [8, 10, 30, 38, 40, 51, 188, 207, 255, 265], "effort": [8, 85, 225], "render": [8, 20, 257, 260, 271, 279], "basic": [8, 15, 27, 30, 36, 40, 50, 51, 57, 255, 273, 279], "happi": [8, 10], "final": [8, 11, 20, 22, 25, 34, 41, 43, 52, 193, 264, 267, 269, 273], "draft": 8, "peopl": [8, 24, 36], "who": [8, 10, 27, 29, 269], "comfort": [8, 29, 274], "probabl": 8, "jump": 8, "doc": [8, 18, 33, 36, 37, 41, 50, 71, 72, 73, 75, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 96, 98, 99, 100, 104, 105, 177, 209, 211, 212, 214, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 237, 238, 240, 241, 242, 243, 247, 248, 255, 273], "few": [8, 22, 36, 38, 40, 43, 44, 51, 191], "minut": [8, 22, 25, 69, 275], "finish": [8, 21, 22, 24, 25, 26, 27, 41, 53, 265, 274], "html": [8, 25, 46, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 103, 104, 105, 106, 160, 177, 187, 188, 191, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 250, 276], "collat": 8, "rst": [8, 15, 273], "tabl": [8, 57, 59, 83, 84, 86, 90, 99, 100, 210, 220, 223, 224, 226, 230, 238, 241, 242, 271, 273, 280], "rest": [8, 17, 22, 25, 26, 27, 51, 141, 207, 277], "relev": [8, 17, 34, 37, 55, 76, 215, 261, 267, 276], "via": [8, 10, 17, 36, 37, 43, 55, 57, 85, 100, 225, 238, 242, 255, 259, 260, 271, 273], "There": [8, 15, 25, 26, 36, 40, 42, 43, 50, 51, 59, 85, 225, 271, 273, 275, 276, 281], "shame": 8, "incredibli": 8, "fussi": 8, "even": [8, 14, 17, 24, 26, 40, 43, 44, 257, 259, 260, 280, 281], "wrong": 8, "sometim": [8, 17, 44, 57, 257, 260, 261, 265], "caus": [8, 260, 276], "problem": [8, 15, 22, 36, 49], "crop": 8, "whether": [8, 12, 15, 17, 29, 30, 31, 33, 51, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 155, 164, 174, 175, 177, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 257, 276, 279], "re": [8, 11, 14, 15, 20, 21, 22, 24, 29, 30, 32, 34, 38, 42, 53, 164, 251, 260, 261, 264, 265, 267, 276, 279], "technic": 8, "experienc": 8, "less": [8, 40, 85, 225, 249, 263], "familiar": [8, 51, 275, 279], "conda": [8, 25, 26, 27, 34, 41, 42, 251, 267], "lightweight": [8, 24, 43, 268], "whatev": [9, 267], "manag": [9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 33, 35, 43, 46, 49, 50, 52, 56, 72, 83, 84, 115, 133, 164, 200, 210, 211, 223, 224, 252, 254, 269], "join": [9, 41, 42, 210, 260, 272], "report": [9, 10, 32, 37, 51, 53, 260, 261], "bug": [9, 10, 15, 41, 49], "request": [9, 10, 14, 15, 17, 21, 42, 46, 69, 207, 273], "pull": [9, 10, 15, 30, 33, 34], "awesom": 9, "curat": [9, 59], "propos": 9, "fix": [9, 11, 260], "incub": 10, "lf": [10, 58], "ai": [10, 31, 35, 46, 58], "term": [10, 30, 36, 260], "tsc": 10, "current": [10, 13, 15, 17, 24, 46, 49, 51, 55, 146, 164, 177, 185, 193, 195, 197, 220, 238, 253, 260, 263, 273, 280], "past": [10, 14, 17, 25, 41, 42, 271], "futur": [10, 21, 24, 33, 43, 46, 65, 251], "duti": 10, "charter": 10, "member": [10, 269], "fuel": 10, "continu": [10, 21, 53, 263], "On": [10, 21, 26, 27, 43, 49, 200, 207, 263], "Be": [10, 33], "least": [10, 30, 51, 85, 100, 196, 197, 225, 242, 255, 261], "full": [10, 15, 22, 24, 36, 42, 46, 55, 255, 260, 267, 271, 273, 279], "dai": [10, 17, 72, 211], "week": 10, "help": [10, 13, 18, 20, 21, 26, 29, 36, 38, 40, 44, 49, 56, 58, 251, 260, 265, 273, 276, 279], "attend": 10, "meet": [10, 193, 264], "roadmap": 10, "proactiv": 10, "infrastructur": [10, 22, 33, 255], "prioritis": 10, "move": [10, 21, 22, 27, 50, 51, 255], "forward": 10, "ongo": 10, "pace": 10, "close": [10, 24, 26, 27, 51, 76, 164, 215, 253, 272, 274, 279], "variou": [10, 24, 40, 44, 50, 273], "channel": [10, 51, 275, 279], "just": [10, 15, 22, 25, 37, 41, 55, 193, 257, 267, 271], "marker": 10, "high": [10, 17, 29, 36, 46], "qualiti": [10, 36, 40, 277], "collabor": [10, 50, 56, 269, 279], "understand": [10, 13, 22, 30, 36, 51, 57, 269, 275], "intern": [10, 15, 83, 89, 90, 100, 134, 164, 223, 229, 230, 242, 260], "backlog": 10, "toward": [10, 32, 36], "goal": 10, "evid": 10, "excit": 10, "relationship": [10, 262], "ari": 10, "valtazano": 10, "nikolao": 10, "tsaousi": 10, "quantumblack": 10, "solv": [10, 44, 260, 261], "challeng": 10, "Their": [10, 24], "turn": [10, 57, 263, 269, 271], "peteri": 10, "erin": 10, "ivan": [10, 275], "danov": 10, "kaltsa": 10, "meisam": 10, "emamjom": 10, "core": [10, 15, 22, 36, 52, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 102, 103, 104, 105, 106, 173, 175, 200, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 250, 251, 255, 261, 271, 276], "consist": [10, 15, 17, 22, 25, 26, 27, 40, 54, 55, 262, 271, 277], "ahdra": 10, "merali": 10, "andrew": 10, "mackai": 10, "ankita": 10, "katiyar": 10, "antoni": 10, "miln": 10, "deepyaman": [10, 46], "datta": [10, 46], "dmitri": 10, "sorokin": 10, "huong": 10, "nguyen": [10, 46], "jitendra": 10, "gundaniya": 10, "jo": 10, "stichburi": 10, "joel": 10, "schwarzmann": 10, "juan": 10, "lui": 10, "cano": 10, "laura": 10, "couto": 10, "marcin": 10, "zab\u0142ocki": 10, "merel": 10, "theisen": 10, "nero": 10, "okwa": 10, "nok": 10, "lam": 10, "chan": 10, "rashida": 10, "kanchwala": 10, "ravi": 10, "kumar": 10, "pilla": 10, "sajid": 10, "alam": 10, "stephani": 10, "kaiser": 10, "tynan": 10, "debold": 10, "vladimir": 10, "nikol": 10, "yetund": 10, "dada": 10, "former": 10, "signific": [10, 263, 264], "andrii": 10, "ivaniuk": 10, "anton": 10, "kirilenko": 10, "cvetanka": 10, "nechevska": 10, "dmitrii": 10, "deriabin": 10, "gabriel": [10, 46], "comym": 10, "gordon": 10, "wriglei": 10, "hamza": 10, "oza": 10, "ignacio": 10, "paricio": 10, "jannic": 10, "holzer": 10, "jiri": 10, "klein": 10, "kiyohito": 10, "kunii": 10, "la\u00ed": 10, "carvalho": 10, "liam": 10, "brummitt": 10, "lim": 10, "hoang": 10, "lorena": 10, "b\u0103lan": 10, "nasef": 10, "khan": 10, "richard": 10, "westenra": 10, "susanna": 10, "wong": 10, "zain": [10, 46], "patel": [10, 46], "quarter": 10, "year": [10, 14, 22, 69, 207], "shown": [10, 43, 50, 177, 257, 262, 267, 280, 281], "regular": [10, 17, 177, 261], "prior": [10, 46], "month": [10, 17], "candid": [10, 271], "decid": [10, 14, 31, 33, 255, 271], "lead": [10, 11, 14], "host": [10, 14, 33, 42, 46, 58], "affect": [10, 17, 53, 260], "amend": [10, 15], "decis": [10, 29, 33, 51], "act": [10, 22, 46, 51, 177], "onto": [10, 31, 34, 49], "shareabl": [12, 260], "registri": [12, 16, 20, 21, 22, 30, 37, 43, 50, 56, 160, 258, 266, 267, 269, 274], "connector": [12, 46, 68, 206, 238], "reproduc": [12, 25, 29, 37, 46, 58, 269], "copi": [12, 14, 18, 21, 22, 24, 25, 26, 42, 57, 63, 65, 66, 164, 177, 193, 197, 260, 261, 269, 271, 279, 280, 281], "second": [11, 12, 13, 22, 26, 27, 36, 50, 52, 69, 85, 193, 225, 238, 259, 262, 267, 271], "sampl": [12, 40, 51, 89, 90, 101, 229, 230, 244, 261, 267, 276], "prototyp": [11, 12], "mean": [12, 13, 14, 15, 17, 21, 22, 26, 28, 34, 36, 43, 46, 55, 57, 256, 261, 262, 263, 265, 269, 271, 273, 281], "detect": [12, 46, 257, 263], "usernam": [12, 14, 22, 27, 43, 207, 267, 277], "password": [12, 14, 22, 27, 41, 69, 96, 100, 207, 229, 237, 238, 242, 277], "certain": [12, 260, 269], "programmat": [11, 12, 17, 20, 21, 25, 30, 33, 265], "fsspec": [12, 17, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 250, 261, 274], "reli": [12, 15, 36, 46, 55], "varieti": [12, 40, 269, 274], "network": [12, 30, 274], "object": [11, 12, 17, 24, 25, 36, 51, 56, 63, 65, 66, 69, 74, 76, 83, 84, 92, 96, 97, 146, 160, 164, 166, 168, 177, 193, 195, 196, 197, 199, 200, 201, 202, 205, 213, 215, 220, 223, 224, 232, 237, 239, 243, 249, 253, 260, 261, 263, 264, 271, 272, 274, 276, 281], "hadoop": 12, "url": [12, 14, 25, 26, 27, 41, 69, 89, 90, 96, 100, 134, 207, 229, 230, 237, 242, 259], "form": [12, 24, 63, 65, 100, 200, 202, 210, 242, 255, 261, 262, 271, 272], "protocol": [12, 15, 17, 25, 26, 70, 72, 73, 74, 75, 76, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 208, 211, 212, 213, 214, 215, 219, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 250, 261], "prepend": 12, "absenc": 12, "permit": 12, "rel": [12, 29], "port": [12, 14, 42, 229, 238], "resili": 12, "replic": 12, "amazon": [12, 21, 22, 31, 46], "often": [12, 24, 30, 36], "ec2": [12, 21], "s3f": [12, 22], "_to": 12, "comput": [12, 20, 22, 24, 30, 34, 41, 42, 43, 44, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 105, 106, 155, 175, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 250, 262, 265, 269, 273], "gcsf": 12, "lake": [12, 56, 220], "gen2": 12, "abf": [12, 14, 87, 88, 220, 227, 228], "web": [12, 28, 43], "ftp": 12, "webhdf": 12, "purpos": [14, 15, 18, 20, 21, 26, 27, 30, 34, 36, 38, 44, 260, 269, 271], "fs_arg": [14, 15, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 106, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 261], "load_arg": [11, 14, 17, 57, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 100, 101, 102, 177, 207, 208, 209, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 261, 274], "open_args_load": [14, 70, 72, 73, 75, 77, 78, 79, 85, 86, 89, 92, 93, 94, 95, 103, 104, 105, 106, 208, 211, 212, 214, 216, 217, 218, 225, 226, 229, 232, 233, 234, 235, 246, 247, 248, 250], "open_args_sav": [14, 70, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 89, 92, 93, 94, 95, 103, 104, 105, 106, 208, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 229, 232, 233, 234, 235, 246, 247, 248, 250], "test_dataset": 14, "test_project": 14, "oper": [11, 14, 17, 27, 30, 57, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 124, 152, 174, 175, 177, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 259, 260, 264], "respect": [14, 15, 21, 24, 37, 43, 53, 98, 220, 240, 243, 254, 257, 260], "mode": [14, 15, 57, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 85, 86, 89, 92, 93, 94, 95, 98, 103, 104, 105, 106, 155, 172, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 225, 226, 229, 232, 233, 234, 235, 238, 240, 243, 246, 247, 248, 250, 251, 255, 261, 264], "rb": [14, 264], "third": [14, 26, 27, 42, 263, 273], "parti": [14, 42, 273], "bike": [11, 14], "sep": [11, 14, 57, 80, 85, 98, 219, 225, 236, 240], "date_format": [14, 80, 85, 219, 225], "y": [14, 22, 26, 27, 49, 53, 80, 81, 85, 94, 95, 219, 221, 225, 229, 234, 235, 261, 262, 265, 271, 273, 281], "d": [14, 21, 24, 37, 53, 63, 65, 66, 80, 85, 193, 197, 219, 225, 229, 259, 261, 263, 264, 265], "h": [14, 22, 37, 53, 80, 95, 219, 229, 235, 281], "decim": [14, 80, 219], "gzip": [14, 71, 88, 209, 228], "motorbik": [11, 13, 14, 80, 82, 219, 222, 236, 249], "your_bucket": [14, 52, 57, 75, 80, 81, 82, 92, 98, 101, 214, 219, 221, 222, 232, 236, 240, 244, 249, 268], "skiprow": [11, 14], "skipfoot": [11, 14], "na_valu": [11, 14, 80, 85, 219, 225], "na": [11, 14, 80, 85, 219, 225], "airplan": [14, 85, 225], "pickledataset": [13, 14, 18, 21, 22, 271, 279], "06_model": [14, 18, 25, 26, 27, 102, 245, 271, 279], "pkl": [14, 18, 92, 232], "backend": [14, 33, 71, 92, 96, 209, 232, 237], "rocket": [13, 14, 81, 221], "exceldataset": [13, 14, 21, 22, 251, 271, 272, 274, 277, 279, 280, 281], "xlsx": [14, 21, 22, 81, 221, 272, 274, 279, 280], "my_gcp_credenti": [11, 13, 14, 75, 81, 101, 214, 221, 244], "sheet_nam": [14, 81, 221], "sheet1": [14, 81, 221], "sheet2": [14, 81, 221], "sheet3": [14, 81, 221], "results_plot": 14, "matplotlibwrit": [13, 14, 43, 281], "08_result": 14, "plot": [14, 56, 76, 95, 215, 235, 281], "output_1": 14, "jpeg": 14, "skateboard": 14, "hdfdataset": [13, 14], "column": [14, 43, 71, 82, 88, 95, 99, 209, 210, 222, 228, 235, 241, 257, 261, 271, 272, 281], "brand": [11, 14], "w": [14, 40, 70, 72, 75, 77, 78, 79, 85, 93, 94, 95, 103, 104, 105, 106, 208, 211, 214, 216, 217, 218, 225, 233, 234, 235, 246, 247, 248, 250], "dropna": [14, 196, 272], "truck": [14, 88, 228], "parquetdataset": [11, 13, 14, 177, 251, 271, 272, 276, 277, 279, 281], "gear": [11, 14, 88, 228], "disp": [14, 88, 228], "wt": [14, 88, 228], "categori": [14, 251, 259, 274], "file_schem": [14, 88, 228], "has_nul": [14, 88, 228], "partition_on": [14, 88, 228], "weather": [14, 52, 57, 97, 98, 100, 238, 239, 240, 242], "header": [14, 57, 69, 98, 207, 240, 243, 259], "inferschema": [14, 57, 98, 240], "scooter": [11, 13, 14], "sqltabledataset": [11, 14, 89, 229], "scooters_credenti": [11, 13, 14], "table_nam": [11, 14, 84, 90, 99, 224, 230, 238, 241], "index_col": [14, 229], "if_exist": [14, 90, 230, 268], "scooters_queri": [11, 14], "sqlquerydataset": [11, 14], "con": [11, 13, 14, 89, 90, 229, 230], "sqlalchemi": [11, 14, 89, 90, 229, 230], "explicitli": [14, 17, 46, 71, 166, 195, 209, 253, 256, 260, 264, 267], "us_corn_yield_data": 14, "apidataset": [13, 14], "quickstat": [14, 69, 207], "nass": [14, 69, 207], "gov": [14, 69, 207], "usda_credenti": 14, "some_token": [14, 69, 207], "commodity_desc": [14, 69, 207], "statisticcat_d": [14, 69, 207], "agg_level_desc": [14, 69, 207], "2000": [14, 69, 207], "usda_credienti": 14, "auth": [14, 69, 83, 84, 207, 223, 224], "dev_minio": 14, "token": [11, 14, 15, 25, 26, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 208, 209, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 259], "localhost": [14, 33, 89, 90, 100, 229, 230, 242], "9000": 14, "easiest": [14, 15, 18, 66], "docker": [14, 20, 21, 23, 30, 31, 32, 34, 46, 255], "after": [11, 14, 17, 18, 20, 21, 22, 26, 27, 30, 34, 36, 43, 44, 46, 52, 53, 54, 55, 57, 63, 65, 124, 152, 153, 154, 155, 156, 164, 193, 207, 253, 255, 257, 259, 263, 273, 280], "p": [14, 15, 20, 22, 33, 37, 42], "minio_access_kei": 14, "minio_secret_kei": 14, "ml_model": 14, "dev_ab": [14, 88, 228], "account_nam": 14, "account_kei": 14, "accountnam": 14, "paramiko": 14, "pip": [14, 15, 18, 20, 22, 25, 26, 27, 28, 30, 34, 36, 37, 40, 42, 43, 51, 53, 68, 251, 255, 259, 272, 273, 276, 277, 278, 279, 281], "cool_dataset": 14, "sftp": 14, "remote_clust": 14, "cool_data": 14, "cluster_credenti": 14, "establish": 14, "my_usernam": 14, "host_address": 14, "22": [14, 27, 40, 271, 272, 277], "conf_root": [13, 37], "pipeline_nam": [13, 14, 20, 21, 24, 33, 37, 42, 156, 164, 259, 260, 263, 267, 272], "metadata": [20, 22, 33, 43, 46, 124, 170, 171, 172, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 267, 269, 279, 280, 281], "wish": [46, 51, 220, 254, 257, 267, 273], "attempt": [11, 13, 17, 46, 164, 165, 193], "from_config": [11, 13, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 177, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "sqlite": [11, 13, 43], "db": [11, 13, 43, 63, 96, 237], "id_token": [11, 13], "receiv": [13, 17, 22, 124, 141, 152, 155, 261], "essenti": [], "equival": [40, 46, 85, 225, 267, 273, 274], "test_bucket": 11, "syntax": [14, 37, 47, 65, 161, 259, 264], "factoris": 14, "spend": 14, "_csv": 14, "insert": [14, 38, 63, 65, 99, 220, 241], "overrid": [11, 14, 15, 24, 46, 47, 63, 65, 257, 271], "ones": [14, 55, 197, 249], "seen": [14, 260, 272, 281], "reuseabl": 14, "csv_load_arg": 14, "normal": [14, 17, 22, 30, 69, 99, 100, 241, 242], "factory_data": 14, "process_data": 14, "_data": 14, "enclos": 14, "combin": [14, 29, 37, 43, 51, 66, 261, 262, 263, 264, 267, 269, 271, 272], "plane": [14, 177], "shuttl": [14, 21, 22, 81, 83, 89, 90, 221, 223, 229, 230, 271, 272, 274, 275, 276, 279, 280, 281], "dataset_nam": [14, 37, 52, 53, 153], "project_nam": [14, 22, 33, 34, 44, 51, 171, 254, 255, 267], "suffix": [14, 17], "create_model_input_t": [14, 271, 272], "preprocess_compani": [14, 43, 271, 272], "preprocess_shuttl": [14, 271, 272], "create_pipelin": [14, 57, 160, 263, 271, 272, 281], "kwarg": [14, 22, 46, 57, 69, 95, 99, 138, 139, 143, 191, 235, 241, 271, 272, 281], "preprocess_boat": 14, "preprocessed_boat": 14, "preprocess_boats_nod": 14, "preprocess_car": 14, "preprocessed_car": 14, "preprocess_cars_nod": 14, "preprocess_plan": 14, "preprocessed_plan": 14, "preprocess_planes_nod": 14, "model_input_t": [14, 21, 22, 271, 272, 276, 279], "create_model_input_table_nod": [14, 271, 272, 279], "belong": 14, "modular": [14, 46, 47, 50, 56, 58, 160, 194, 251, 258, 259, 262, 267, 272], "regressor": [14, 21, 22, 43, 271, 279], "active_modelling_pipelin": [14, 271], "candidate_modelling_pipelin": [14, 271], "modular_pipelin": [14, 260, 271], "evaluate_model": [14, 43, 271], "split_data": [14, 51, 53, 261, 267, 271], "pipeline_inst": [14, 271], "x_train": [14, 21, 22, 53, 261, 267, 271], "y_train": [14, 21, 22, 53, 261, 267, 271], "split_data_nod": [14, 271], "train_model_nod": [14, 271], "ds_pipeline_1": [14, 271], "pipe": [14, 195, 260, 271], "ds_pipeline_2": [14, 271], "regressor_": 14, "pq": [14, 272, 279], "metric": [14, 25, 28, 46, 54, 56, 105, 248, 271], "bodi": 14, "situat": [14, 17], "overcom": 14, "sort": [14, 17, 40, 177, 193, 201], "potenti": [14, 26, 40], "pick": [14, 46], "best": [14, 29, 30, 37, 49, 51, 57, 58, 85, 210, 225, 266, 267, 269], "rank": [11, 14], "criteria": [14, 177], "exact": [11, 14, 15, 27, 63, 65, 197, 229, 251], "between": [11, 14, 15, 17, 20, 21, 22, 27, 46, 146, 177, 260, 267, 269, 271, 272, 278], "preprocess": [14, 43], "alphabet": [14, 40], "creation": [14, 18, 25, 27, 43, 46, 51, 152, 160, 197], "default_dataset": 14, "mention": 14, "explicit": [14, 17], "implement": [17, 22, 25, 36, 38, 44, 46, 47, 52, 53, 57, 68, 113, 115, 122, 133, 150, 163, 166, 168, 169, 174, 175, 177, 199, 200, 201, 202, 264, 271], "etc": [13, 15, 17, 30, 34, 37, 41, 42, 69], "my_datafram": 13, "my_func1": 13, "spark_input": 13, "my_func2": 13, "pipeline_output": 13, "datafram": [11, 13, 17, 43, 46, 56, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 174, 175, 177, 196, 197, 207, 209, 210, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 261, 271, 272, 274, 281], "simpl": [13, 25, 50, 51, 55, 92, 96, 111, 232, 237, 261, 262, 264, 281], "perform": [13, 25, 27, 30, 43, 44, 51, 57, 99, 241, 251, 264, 271], "machin": [13, 19, 20, 22, 24, 25, 26, 28, 30, 31, 32, 33, 41, 43, 46, 49, 50, 51, 54, 200, 259, 261, 269, 272, 273, 279], "actual": [13, 17, 24, 38, 43, 153, 155, 257, 260, 264, 281], "global": [13, 22, 26, 27, 34, 57, 66, 121, 149, 275], "yyyi": [13, 15, 37, 185], "mm": [13, 15, 37, 185], "ddthh": [13, 15, 37, 185], "ss": [13, 15, 37, 185], "sssz": [13, 15, 37, 185], "timestamp": [13, 17, 37, 43, 164, 185, 267], "io": [11, 15, 17, 18, 20, 21, 24, 33, 53, 55, 57, 65, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 102, 103, 104, 105, 106, 122, 123, 150, 151, 160, 187, 188, 191, 193, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 240, 244, 245, 246, 247, 248, 250, 254, 261, 265, 276], "construct": [11, 22, 46, 63, 65, 164, 261, 262, 263, 267, 271, 272, 275], "sever": [11, 17, 25, 26, 272, 273], "pre": [11, 25, 57, 193, 254, 255, 260, 265, 269, 273], "kedro_dataset": [11, 13, 15, 17, 57, 68, 265, 276], "cars_tabl": 11, "happen": [11, 25, 57, 257, 269, 279], "abstractdataset": [11, 17, 24, 46, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 173, 175, 177, 199, 201, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 264], "retriev": [11, 63, 65, 146, 149, 164, 253, 264], "deleg": [11, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "read_csv": [11, 80, 85, 174, 175, 219, 225, 236, 261], "forget": 11, "assign": [11, 21, 56, 197, 263], "cars_cach": 11, "mpg": 11, "clean": [11, 20, 21, 25, 269, 279], "filenotfounderror": [11, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 264, 265, 276], "tutori": [12, 16, 21, 22, 25, 26, 27, 43, 46, 51, 59, 77, 78, 79, 216, 217, 218, 255, 263, 267, 274, 277, 279, 280, 281], "underli": [11, 14, 15, 17, 22, 24, 53, 55, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 164, 174, 175, 177, 189, 195, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 260, 261, 262, 271, 274], "dataseterror": [11, 17, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 177, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "deal": [17, 29, 38], "failur": [], "data_set": [24, 33, 69, 70, 71, 72, 73, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 177, 193, 207, 208, 209, 210, 211, 212, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250], "empti": [17, 21, 26, 63, 65, 66, 83, 89, 90, 100, 193, 223, 229, 230, 242, 255], "cars_df": 196, "print": [15, 25, 26, 38, 41, 42, 46, 52, 191, 193, 261, 262, 265, 267], "studi": [], "interfac": [15, 22, 25, 39, 44, 46, 56, 92, 96, 232, 237, 264, 273], "subclass": [15, 17, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257], "_load": [24, 174, 175, 261], "_save": [24, 174, 175, 207, 261], "enrich": 15, "uniform": [15, 17, 60], "_describ": [24, 174, 175, 261], "direct": [20, 49, 193, 276], "parts_df": [], "attribut": [15, 17, 20, 21, 36, 42, 63, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 130, 134, 146, 164, 171, 174, 175, 185, 193, 197, 200, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 267, 269, 274, 279, 280], "abstractversioneddataset": [15, 261], "AND": [15, 229, 265], "posit": [15, 17, 34, 43, 188], "glob": [15, 65, 66, 261], "filesystem": [14, 17, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 106, 175, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 261, 274], "mid": [], "extern": [17, 20, 21, 99, 100, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 260], "interfer": [], "stai": [195, 260], "throughout": [54, 279, 280, 281], "subsequ": [17, 43, 51, 256, 257, 267], "pathlib": [15, 20, 22, 33, 43, 46, 164, 174, 175, 253, 261], "pureposixpath": [15, 174, 175, 261], "pd": [11, 17, 43, 71, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 100, 174, 175, 177, 196, 209, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 237, 242, 261, 271, 272, 274, 281], "myowndataset": [174, 175], "param1": [174, 175, 188], "param2": [174, 175, 188], "_param1": [174, 175], "_param2": [174, 175], "load_path": [15, 175, 261], "_get_load_path": [15, 175, 261], "df": [43, 57, 174, 175, 177, 229, 268, 281], "save_path": [15, 175, 261], "_get_save_path": [15, 175, 261], "to_csv": [80, 85, 174, 175, 219, 225, 261], "_exist": [24, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "bool": [21, 24, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 164, 174, 175, 177, 193, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "_version": [15, 175, 261], "my_dataset": [174, 175], "my_data": [96, 174, 175, 237], "Its": [15, 46], "repres": [15, 17, 43, 197, 255, 260, 261, 262], "generate_timestamp": 15, "car_data": 11, "propag": [17, 257], "deliber": 17, "runtim": [22, 25, 26, 27, 52, 193, 253, 260, 269], "pin": [43, 251], "load_vers": [11, 21, 24, 37, 55, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 152, 156, 164, 174, 175, 177, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 267], "2019": [11, 17, 276], "02": [11, 15, 261, 271], "13t14": 11, "35": 11, "36": [11, 276], "518z": 11, "row": [11, 14, 43, 101, 207, 244, 261, 274, 280], "effect": [11, 21, 26, 27, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 177, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 260, 269], "save_vers": [11, 55, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 152, 174, 175, 177, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "inconsist": [11, 40], "therefor": [11, 15, 20, 21, 25, 26, 44, 57, 83, 146, 164, 223, 253], "some_data": 11, "tri": [11, 66], "mitig": 11, "reload": [11, 37, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 103, 106, 188, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 246, 250, 267, 276], "reload_kedro": [11, 26, 27, 28, 37, 108, 188], "magic": [11, 26, 27, 28, 37, 108, 188, 189], "initialis": [11, 18, 27, 56, 188, 193, 207, 255], "data1": 11, "col1": [11, 71, 73, 75, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 100, 104, 105, 106, 177, 207, 209, 212, 214, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 242, 247, 248, 250], "col2": [11, 71, 73, 75, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 100, 104, 105, 106, 177, 207, 209, 212, 214, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 242, 247, 248, 250], "4": [11, 14, 17, 20, 36, 37, 43, 71, 73, 75, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 98, 99, 100, 106, 171, 177, 197, 209, 210, 212, 214, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 240, 241, 242, 250, 267, 271, 274, 277], "col3": [11, 71, 73, 75, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 100, 104, 105, 106, 177, 209, 212, 214, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 242, 247, 248, 250], "6": [11, 43, 71, 73, 75, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 100, 102, 106, 171, 177, 209, 212, 214, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 242, 245, 250, 267, 271, 274, 277, 280], "data2": 11, "9": [11, 40, 79, 218, 220, 267, 271, 277, 279], "test_data_set": 11, "assert": [11, 21, 36, 57, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 100, 101, 103, 106, 177, 208, 209, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 242, 244, 246, 250], "did": 11, "becom": [11, 25, 38, 40, 57, 193, 195, 260], "slightli": [11, 40, 260, 267, 277], "my_exact_vers": 11, "userwarn": [11, 17, 160], "exact_load_vers": 11, "exact_save_vers": 11, "matplotlib": [13, 43, 251], "holoview": 13, "holoviewswrit": 13, "networkx": 13, "networkxdataset": 13, "featherdataset": 13, "jsondataset": [13, 43, 95, 105, 235, 248, 265, 281], "pillow": [13, 15, 251], "imagedataset": [13, 15], "text": [13, 25, 43, 72, 74, 101, 211, 213, 244, 255, 257, 275], "textdataset": 13, "yamldataset": 13, "tensorflow": [13, 19, 23], "tensorflowmodeldataset": 13, "plai": [17, 30, 42, 43], "increasingli": [17, 36], "role": 17, "etl": [17, 25], "throughput": 17, "larger": [17, 36, 43, 200, 280, 281], "benefit": [17, 22, 30, 46, 262, 266], "encount": [17, 42, 49], "tool": [17, 18, 28, 32, 36, 37, 42, 43, 46, 54, 251, 254, 255, 259, 261, 277], "cater": 17, "feasibl": 17, "why": [17, 267], "partitioneddataset": 17, "agnost": [17, 20, 32], "gc": [12, 14, 17, 57, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 101, 103, 104, 105, 106, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 244, 246, 247, 248, 250], "callabl": [17, 33, 123, 151, 175, 196, 197], "my_partitioned_dataset": 17, "bucket": [12, 15, 17, 20, 21, 22, 37, 43, 52, 66, 98, 177, 220, 240], "my_credenti": [17, 52], "load_arg1": 17, "load_arg2": 17, "value2": [17, 37, 188], "granular": 17, "delimit": 17, "filepath_arg": 17, "filename_suffix": [15, 17], "exhaust": [17, 92, 96, 232, 237], "ye": [17, 229], "concret": [17, 55, 70, 71, 72, 73, 75, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 103, 104, 105, 106, 177, 208, 209, 211, 212, 214, 219, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 246, 247, 248, 250, 261], "No": [17, 41, 261, 276], "filesystemcal": 17, "keyword": [15, 17, 66, 98, 240, 254, 260, 261, 267, 271, 274], "initi": [15, 17, 33, 146], "fulli": [15, 17, 19, 23, 29, 35, 177, 193, 256], "qualifi": [17, 177, 193], "dataset_credenti": 17, "deprec": [17, 37, 68, 273], "somewhat": 17, "itself": [17, 57, 83, 223, 260], "around": [17, 43, 55], "never": 17, "scenario": [17, 57, 193], "undefin": [17, 37, 42], "constructor": [15, 17, 24, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 137, 177, 191, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 244, 245, 246, 247, 248, 249, 250, 254, 260], "dataset_secret": 17, "stop": [17, 25, 26, 41, 42, 53, 130, 171, 185], "concat_partit": 17, "concatenated_result": 17, "partitioned_input": 17, "concaten": 17, "arg": [15, 17, 20, 22, 24, 25, 33, 42, 43, 61, 64, 74, 76, 92, 96, 98, 137, 138, 141, 147, 165, 174, 191, 194, 207, 213, 215, 232, 237, 240, 243, 259, 261, 264, 271, 272], "partition_kei": 17, "partition_load_func": 17, "item": [17, 20, 36, 52, 53, 57, 63, 65, 66, 188, 261, 262], "partition_data": 17, "concat": [17, 261], "ignore_index": 17, "consum": [17, 36, 38, 40, 53, 193, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 260, 264], "logic": [16, 17, 22, 50, 196, 197, 260, 261, 269, 271], "uniqu": [17, 21, 43, 177, 193, 197, 220], "12": [14, 17, 25, 27, 37, 43, 46, 89, 97, 98, 99, 210, 220, 239, 240, 241, 261, 264, 267, 276, 281], "04": [17, 26, 276], "cach": [17, 22, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 177, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "were": [17, 21, 57, 72, 124, 197, 211, 261, 279], "done": [17, 21, 22, 26, 34, 42, 46, 277], "guarante": [17, 20, 31, 49, 197, 265], "race": 17, "condit": [17, 193, 210], "reset": 17, "new_partitioned_dataset": 17, "create_partit": 17, "foo": [17, 37], "bar": [17, 21, 25, 26, 27, 37, 94, 95, 234, 235, 281], "overwritten": 17, "lost": [17, 46], "simplest": [17, 36, 51, 257], "safeti": 17, "mechan": [17, 44, 46, 54, 55, 256, 264, 269], "chanc": [17, 57], "materialis": 17, "simpli": [17, 36, 41, 46, 49, 57, 259, 261, 267, 269, 273], "after_node_run": [17, 52, 53, 55, 155], "persist": [17, 18, 22, 166, 167, 168, 169, 253, 264, 269, 272], "similarli": [15, 17, 265, 267, 271, 272, 274], "eagerli": [17, 161], "pointer": 17, "comparison": [17, 43, 51], "ident": [17, 34, 52, 191, 264, 267, 268], "downstream": [17, 57, 195, 251, 260, 265], "process_partit": 17, "my_processed_dataset": 17, "defer": 17, "els": [17, 21, 24, 37, 42, 53, 259], "confirm_partit": 17, "do_something_else_with_partit": 17, "though": [17, 27], "won": [17, 21], "deviat": 17, "sai": [17, 52, 267, 276], "undesir": 17, "elsewher": [17, 34, 273], "partial": 17, "kept": 17, "unchang": [17, 207], "k1": 17, "v1": [17, 20], "along": [17, 40, 43, 89, 90, 100, 155, 156, 196, 197, 229, 230, 242, 273], "comparison_func": 17, "gt": 17, "compar": [17, 32, 36, 46, 51, 56, 264], "Such": 17, "filtrat": 17, "calendar": 17, "my_modul": 17, "custom_comparison_funct": 17, "force_checkpoint": 17, "roll": [17, 49], "back": [15, 17, 24, 49, 57, 199, 200, 201, 202, 269, 273, 274, 275], "reprocess": 17, "forc": 17, "2020": [15, 17, 22, 264], "popular": [18, 27, 36], "suitabl": [18, 101, 244, 257], "orchestr": [18, 20, 22, 32, 33, 37, 267], "author": [18, 52, 259], "k8": [18, 46], "getindata": [18, 19, 23, 32, 35, 46], "xebia": [18, 19, 23, 32, 35], "togeth": [18, 37, 38, 40, 53, 193, 220, 262, 263, 272, 275], "At": [15, 18, 26, 27, 42, 44, 173, 255], "present": [18, 28, 41, 53, 63, 65, 66, 99, 130, 171, 177, 185, 196, 197, 241, 255, 259, 265], "spin": 18, "easili": [18, 20, 40, 259, 277], "iri": [18, 25, 26, 27, 28, 46, 255, 261, 268], "classif": [18, 51, 57], "astro": [18, 255], "starter": [18, 22, 25, 26, 27, 36, 40, 43, 44, 47, 51, 56, 210, 252, 261, 263, 267, 268, 271, 272, 274, 276, 277, 279, 280, 281], "boilerpl": [18, 255, 260, 269], "task": [13, 18, 20, 22, 24, 25, 26, 27, 30, 33, 53, 251, 261, 262, 271, 272, 275], "mirror": [18, 22, 36], "quickstart": [18, 69, 273], "mkdir": [15, 18, 22, 36, 49], "dev": [18, 22, 66], "init": [18, 27, 33, 46], "root": [18, 20, 22, 24, 25, 27, 33, 34, 36, 37, 40, 41, 42, 49, 50, 63, 65, 66, 111, 146, 164, 188, 251, 253, 254, 257, 273, 274, 277, 279, 280, 281], "cp": [18, 25, 26, 27], "rm": 18, "dockerfil": [18, 22], "airflow_set": 18, "txt": [18, 22, 26, 27, 30, 34, 37, 40, 43, 51, 103, 142, 246, 251, 255, 259, 260, 276, 277, 279, 281], "pyproject": [18, 34, 36, 37, 40, 49, 50, 171, 254, 259], "toml": [18, 34, 36, 37, 40, 49, 50, 171, 254, 259], "cfg": [18, 40, 50, 255], "example_iris_data": [18, 53, 261, 264, 267], "example_train_x": [18, 267], "05_model_input": [18, 25, 26, 27], "example_train_i": 18, "example_test_x": 18, "example_test_i": 18, "example_model": [18, 53], "example_predict": [18, 57], "07_model_output": [18, 25, 26, 27, 92, 232, 264, 265], "memori": [18, 21, 22, 38, 89, 177, 229, 261, 264, 272], "disk": [18, 164, 167, 253, 264, 265], "produc": [18, 25, 26, 27, 36, 38, 109, 110, 190, 193, 197, 263, 265], "new_kedro_project": 18, "dockerignor": 18, "bundl": [18, 22, 37, 273], "echo": [18, 20, 37], "quai": 18, "ap": 18, "buster": [18, 22], "onbuild": 18, "visit": [18, 22, 38, 42, 44, 46, 57, 123, 151, 193, 264], "ui": [18, 26, 27, 33], "compon": [19, 20, 32, 37, 44, 46, 55, 112, 204, 253, 254, 255, 267, 271], "toolset": 19, "classic": 19, "scikit": [19, 244, 271, 275, 277], "xgboost": 19, "deep": [19, 57], "pytorch": [19, 23], "servic": [19, 21, 22, 25, 35, 46, 71, 209], "recent": [20, 21, 22, 26, 27, 31, 276, 277], "took": [15, 20, 21], "nativ": [20, 21, 22, 23, 43, 75, 104, 105, 214, 247, 248], "parallel": [15, 20, 21, 22, 24, 43, 46, 200, 202, 264, 269, 271, 275], "job": [20, 26, 29, 30, 57], "interest": 20, "intens": [20, 30], "acycl": 20, "graph": [20, 43, 77, 78, 79, 193, 216, 217, 218, 281], "dag": [20, 30, 57], "aw": [20, 30, 31, 34, 43, 177, 220, 259, 273], "prefer": [20, 21, 24, 26, 27, 29, 30, 33, 34, 41, 49, 50, 51, 55], "solut": [20, 21, 22, 30, 32, 34, 36, 43, 268], "imag": [15, 20, 21, 26, 27, 30, 34, 41, 74, 76, 93, 213, 215, 233, 249, 279, 281], "walk": [20, 21, 30, 34, 41], "streamlin": [20, 21, 30, 34], "ve": [20, 21, 30, 34, 51, 254, 267, 279, 280], "transfer": [20, 21, 30, 34, 210, 266], "project_root": [20, 25, 26, 27, 28, 30, 33, 36, 40, 42, 164, 251, 267], "build_argo_spec": 20, "jinja2": [20, 47], "filesystemload": 20, "startup": [20, 22, 33, 46, 164, 253], "bootstrap_project": [20, 22, 33, 164, 253], "template_fil": 20, "argo_spec": 20, "tmpl": 20, "search_path": 20, "generate_argo_config": 20, "searchpath": 20, "template_env": 20, "trim_block": 20, "lstrip_block": 20, "get_templ": 20, "cwd": [20, 22, 33, 36, 46, 164, 253], "__default__": [20, 22, 33, 37, 46, 164, 263, 264, 267, 271, 273, 279], "get_depend": 20, "node_depend": [20, 21, 24, 30, 193], "f": [15, 20, 21, 22, 25, 26, 27, 40, 50, 52, 53, 63, 65, 66, 76, 215, 229, 259, 261, 264, 274], "write_text": 20, "deps_dict": 20, "clean_nam": 20, "dep": [20, 21], "val": 20, "parent_nod": 20, "sub": [20, 22, 63, 65, 269], "w_": [20, 22], "strip": [20, 22, 197, 257], "__name__": [20, 25, 33, 43, 52, 53, 55, 193, 257, 271], "__main__": [20, 25, 33, 36, 41, 42, 255, 273], "apivers": 20, "argoproj": 20, "v1alpha1": 20, "kind": [20, 42, 261, 268], "generatenam": 20, "entrypoint": [20, 22], "label": [20, 42, 46, 101, 244, 255, 261, 271, 279], "abil": [20, 22, 46], "pod": 20, "app": [20, 22, 37, 43, 96, 237], "retrystrategi": 20, "kedro_nod": 20, "imagepullpolici": 20, "valuefrom": 20, "secretkeyref": 20, "access_key_id": 20, "secret_access_kei": 20, "endraw": 20, "endif": 20, "jinja": 20, "languag": [20, 30, 42, 59, 273], "project_imag": 20, "encod": [14, 20], "base64": 20, "opaqu": 20, "original_kei": 20, "namespac": [20, 37, 52, 53, 55, 66, 124, 152, 153, 154, 155, 156, 164, 193, 195, 196, 197, 260, 263], "kubectl": 20, "watch": [20, 26, 49], "delet": [20, 57, 69, 220, 256, 257, 260, 277], "selector": 20, "workabl": 20, "optimis": [21, 29, 57], "scale": [21, 32, 43, 260, 266], "optim": [21, 57, 267], "quantiti": 21, "assist": 21, "schedul": [21, 24, 25, 29, 32, 46, 57], "workload": 21, "demand": 21, "spot": 21, "integr": [21, 23, 25, 26, 27, 29, 31, 34, 38, 43, 46, 54, 56, 125, 194, 281], "cloudwatch": 21, "massiv": 21, "parallelis": [21, 271], "isol": [21, 49, 260, 269, 271], "spaceflight": [21, 22, 36, 43, 51, 56, 59, 83, 89, 223, 229, 255, 263, 267, 271, 272, 274, 275, 278, 280, 281], "sensibl": [21, 254, 255], "node_nam": [21, 22, 24, 30, 37, 156, 164, 193, 267], "aws_batch": 21, "appropri": [21, 41, 42, 52, 85, 137, 177, 194, 220, 225, 260, 263, 267], "preprocessed_compani": [21, 22, 43, 53, 271, 272, 276, 279], "preprocessed_shuttl": [21, 22, 271, 272, 279, 281], "x_test": [21, 22, 43, 53, 261, 267, 271], "y_test": [21, 22, 43, 53, 261, 267, 271], "ecr": [21, 22, 34], "view": [21, 25, 27, 41, 42, 56, 63, 65, 66, 267, 279, 280, 281], "button": [21, 25, 27, 33, 41, 42, 43, 280, 281], "dashboard": [21, 24], "abl": [21, 22, 25, 30, 41, 42, 55, 85, 198, 225, 264, 271, 273, 275], "four": [21, 26, 27], "grant": 21, "polici": [21, 72, 211], "amazons3fullaccess": 21, "newli": [21, 24, 25, 26, 42], "batchjobrol": 21, "kedro_run": 21, "timeout": [21, 22, 69, 207], "300": 21, "2000mb": 21, "leav": [21, 25, 26, 33, 42], "field": [21, 25, 26, 27, 41, 42, 71, 130, 134, 171, 185, 209, 210, 220], "spaceflights_env": 21, "yet": [21, 22, 27, 177, 279, 280, 281], "incur": 21, "immedi": 21, "bridg": 21, "spaceflights_queu": 21, "connect": [11, 21, 24, 27, 43, 47, 50, 71, 89, 90, 96, 100, 195, 209, 229, 230, 237, 238, 242, 260, 262, 267, 269, 278], "prioriti": [21, 37, 238], "region": [21, 22], "leverag": [15, 21, 53, 99, 241], "kedro_tutori": [21, 24, 272], "sure": [21, 24, 25, 29, 30, 33, 36, 42, 43, 49, 255, 259, 264, 273], "batch_runn": 21, "awsbatchrunn": 21, "monitor": [21, 24, 33, 43, 255], "asynchron": [21, 24, 37, 199, 200, 201, 202, 203], "surfac": [21, 24, 161], "occur": [21, 24, 38, 46, 57, 147], "__all__": [21, 24], "concurr": [21, 56, 264, 269], "threadpoolexecutor": 21, "sleep": 21, "boto3": 21, "threadrunn": [15, 21, 56, 264, 271], "max_work": [21, 200, 202], "job_queu": 21, "job_definit": 21, "is_async": [21, 24, 37, 155, 199, 200, 201, 202, 203], "_job_queu": 21, "_job_definit": 21, "_client": [21, 53], "client": [21, 22, 24, 47, 52, 96, 98, 237, 240], "create_default_data_set": [21, 24, 199, 200, 201, 202, 264], "ds_name": [21, 24, 33, 199, 200, 201, 202, 264], "notimplementederror": 21, "_get_required_workers_count": 21, "_max_work": 21, "_run": [21, 24, 264], "pylint": [21, 26, 37, 40, 46], "disabl": [21, 37, 40, 46, 254], "useless": 21, "suppress": 21, "hook_manag": [21, 24, 36, 146, 149, 199, 200, 201, 202, 203, 264], "pluginmanag": [21, 24, 146, 199, 200, 201, 202, 203, 264], "session_id": [21, 24, 33, 53, 155, 156, 164, 167, 169, 199, 200, 201, 202, 203, 264], "todo_nod": 21, "node_to_job": 21, "done_nod": 21, "_logger": [21, 24, 52, 55, 264], "info": [21, 24, 25, 26, 27, 33, 37, 43, 46, 49, 52, 53, 55, 111, 161, 193, 257, 261, 264, 267, 271, 272, 274, 276], "max": [21, 40, 43, 46], "worker": [21, 24, 200, 202], "pool": [21, 33], "reach": [21, 46, 260, 272], "succeed": [21, 25], "fut": 21, "_suggest_resume_scenario": 21, "len": [15, 21, 24, 262, 264, 265], "upstream": [21, 24, 27, 195], "_submit_job": 21, "referenc": 21, "track": [21, 24, 25, 27, 32, 37, 46, 54, 56, 257], "progress": [21, 25, 257, 272], "job_nam": 21, "kedro_": [21, 267], "depends_on": 21, "jobid": 21, "respons": [21, 51, 69, 162, 163, 164, 207, 260], "submit_job": 21, "jobnam": 21, "jobqueu": 21, "jobdefinit": 21, "dependson": [21, 42], "containeroverrid": 21, "job_id": 21, "_track_batch_job": 21, "bombard": 21, "throttl": 21, "describe_job": 21, "statusreason": 21, "prerequist": 21, "nearli": [21, 24], "tag": [21, 22, 24, 30, 34, 46, 52, 156, 164, 193, 195, 196, 197, 255, 264, 267], "sequentialrunn": [15, 21, 24, 37, 265, 271], "_get_values_as_tupl": [21, 24, 37], "kedrosess": [21, 22, 24, 25, 33, 37, 46, 56, 162, 165, 252, 267], "extra_param": [21, 24, 37, 146, 156, 164, 189, 253], "load_context": [21, 24, 33, 46, 164, 253], "runner_inst": [21, 24], "_instantiate_runn": [21, 24], "from_nod": [21, 24, 37, 156, 164, 193, 264, 265, 267, 269], "to_nod": [21, 24, 37, 156, 164, 193, 265, 267, 269], "from_input": [21, 24, 37, 156, 164, 193, 265, 267, 269], "to_output": [21, 24, 37, 156, 164, 193, 267], "project_context": [21, 24, 36], "runner_class": [21, 24], "load_obj": [21, 24, 37], "runner_kwarg": [21, 24], "endswith": [21, 24], "batch_kwarg": 21, "runnabl": [21, 193], "tab": [21, 25, 26, 27, 28, 43, 51, 272, 279], "soon": 21, "pop": [21, 25, 63, 65, 66], "panel": [21, 26, 43, 279, 280, 281], "side": [21, 26, 27, 37, 41, 42, 43, 256, 269], "serverless": 22, "hand": [13, 22, 41, 42, 43, 50, 51, 59, 263], "provis": [22, 25], "scientist": [22, 46, 269], "busi": [22, 261], "azur": [12, 22, 27, 31, 46, 52, 220], "offer": [22, 24, 25, 26, 29, 36, 267, 275, 280], "capabl": [22, 29, 43, 177, 257], "easi": [22, 30, 33, 40, 50, 54, 60, 269], "sequenc": [22, 25, 44, 70, 208, 249], "critic": [22, 111], "perspect": 22, "retain": [22, 50], "reliabl": [22, 269], "concern": [22, 269], "advantag": [22, 26, 27, 29, 44, 50, 52, 57, 257, 260, 266, 271], "sagemak": [22, 31, 46], "kit": 22, "cdk": 22, "npm": 22, "associ": [22, 37, 177, 275], "laid": 22, "visualis": [22, 29, 43, 46, 53, 56, 59, 196, 197, 260, 262, 267, 269, 275, 277], "consol": [15, 22, 42, 111, 267, 276], "decemb": 22, "announc": 22, "gb": 22, "besid": [22, 23], "properli": [22, 197, 210, 264], "lambda_handl": 22, "unittest": 22, "mock": [22, 277], "patch": 22, "handler": [22, 109, 110, 111, 190, 191], "event": [22, 43], "configure_project": [22, 25], "spaceflights_step_funct": 22, "node_to_run": 22, "_multiprocess": 22, "semlock": 22, "impact": [22, 40], "henc": [22, 43, 101, 244], "lock": [22, 37, 251], "stackoverflow": 22, "34005930": 22, "multiprocess": [15, 22, 269, 271], "accordingli": 22, "function_dir": 22, "home": [22, 36, 42, 51], "runtime_vers": 22, "grab": 22, "fresh": 22, "gcc": 22, "cpp": 22, "apt": 22, "cmake": 22, "unzip": [15, 22], "libcurl4": 22, "openssl": 22, "awslambdar": 22, "workdir": 22, "bin": [22, 49], "cmd": [22, 25, 37, 41, 42], "adapt": [15, 22, 50, 51, 57, 194, 255, 257, 269], "elast": [22, 30], "dkr": 22, "amazonaw": 22, "login": [22, 25, 69, 207], "stdin": 22, "deploy_requir": 22, "aws_cdk": 22, "aws_s3": 22, "aws_ecr": 22, "aws_lambda": 22, "stepfunct": 22, "Then": [15, 22, 27, 33, 41, 42, 52, 53, 177, 261, 264, 274, 276, 279, 280, 281], "aws_stepfunct": 22, "sfn": 22, "ifunct": 22, "aws_stepfunctions_task": 22, "lambdainvok": 22, "_clean_nam": 22, "reformat": [22, 40], "63": 22, "kedrostepfunctionsstack": 22, "stack": [22, 24, 38, 255], "erc_repository_nam": 22, "s3_data_bucket_nam": 22, "scope": [22, 28, 33, 38, 186, 197, 271], "_parse_kedro_pipelin": 22, "_set_ecr_repositori": 22, "_set_ecr_imag": 22, "_set_s3_data_bucket": 22, "_convert_kedro_pipeline_to_step_functions_state_machin": 22, "ecr_repositori": 22, "from_repository_nam": 22, "repository_nam": 22, "ecr_imag": 22, "ecrimagecod": 22, "s3_bucket": 22, "rawdatabucket": 22, "_convert_kedro_node_to_lambda_funct": 22, "_fn": 22, "from_imag": 22, "function_nam": 22, "memory_s": 22, "256": 22, "reserved_concurrent_execut": 22, "durat": [22, 99, 241], "15": [22, 265, 271, 274, 280], "60": [22, 69, 207, 271], "grant_read_writ": 22, "_convert_kedro_node_to_sfn_task": 22, "lambda_funct": 22, "payload": [22, 69], "taskinput": 22, "from_object": 22, "enumer": [22, 24], "grouped_nod": [22, 33, 193], "group_nam": 22, "sfn_state": 22, "sfn_task": 22, "statemachin": 22, "synth": 22, "python3": [22, 40, 49], "straightforward": [22, 50], "speak": 22, "dramat": 22, "worth": 22, "10gb": 22, "maximum": 22, "longer": [22, 25, 279], "switch": [22, 29, 257, 267], "batch": [22, 30, 31, 53, 57, 273], "ec": 22, "deploy": [23, 24, 26, 27, 29, 32, 33, 41, 46, 56, 59, 255], "fashion": [23, 35], "mpi": 23, "compos": [24, 255], "sophist": 24, "newer": [24, 49, 254], "workstat": 24, "vari": [24, 27, 254], "hardwar": 24, "complement": 24, "pydata": [24, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231], "analysi": [24, 266], "basi": [24, 85, 225], "pure": [24, 50, 108, 264, 269], "eas": [24, 38, 46], "simplifi": [24, 30, 46, 260, 261], "motiv": 24, "adopt": 24, "beyond": [24, 259, 260, 273], "dask_runn": 24, "daskrunn": 24, "abstractrunn": [24, 200, 201, 202, 264, 267], "inter": 24, "counter": 24, "itertool": 24, "chain": [24, 38, 193, 262], "as_complet": 24, "worker_cli": 24, "_create_hook_manag": [24, 33, 36], "_register_hook": 24, "_register_hooks_setuptool": 24, "run_nod": [24, 33, 155], "pluggi": [24, 46, 55, 122, 123, 150, 151, 264], "_daskdataset": 24, "publish": [24, 259], "_name": 24, "get_dataset": 24, "upon": [24, 160, 275], "load": [12, 13, 15, 16, 24, 25, 26, 27, 28, 33, 34, 37, 41, 42, 44, 46, 47, 50, 53, 54, 56, 62, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 116, 145, 147, 152, 153, 155, 164, 174, 175, 177, 185, 186, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 256, 261, 267, 268, 269, 271, 272, 273, 279], "free": [15, 24, 29, 30, 43, 49, 59, 193, 195, 260], "oppos": [24, 253, 257], "publish_dataset": 24, "list_dataset": 24, "_releas": 24, "unpublish_dataset": 24, "client_arg": 24, "thread": [24, 37, 57, 199, 200, 201, 202, 203, 264, 269], "__del__": 24, "factori": [24, 177, 199, 200, 201, 202, 264], "unregist": [24, 199, 200, 201, 202, 264], "_run_nod": 24, "serialis": [15, 24, 57, 92, 96, 232, 237, 264], "disable_hooks_for_plugin": [24, 55, 254], "load_count": 24, "from_iter": 24, "node_futur": 24, "_is_async": 24, "with_result": 24, "decrement": 24, "count": [24, 130, 171, 185, 200, 202, 274], "particularli": [15, 24, 25, 38], "run_only_miss": [24, 199, 200, 201, 202, 265], "free_output": 24, "to_build": 24, "to_rerun": 24, "only_nodes_with_output": [24, 193], "unregistered_d": [24, 33], "recreat": 24, "missing_unregistered_d": 24, "output_to_unregist": 24, "input_from_unregist": 24, "previous": [24, 51, 188, 262, 265, 273, 279], "think": [24, 260], "shallow_copi": [24, 177], "dask_client": 24, "localclust": 24, "background": [24, 46, 66], "127": [24, 33, 42, 43, 51, 96, 237, 272, 279], "8786": 24, "pythonpath": [24, 42], "pwd": [24, 229], "snippet": [24, 26, 27, 44, 89, 90, 229, 230, 260, 261, 271], "again": [24, 25, 26, 27, 43, 51, 63, 65, 264, 265, 276], "diagnost": 24, "ml": [12, 25, 46, 57, 269], "slower": 25, "unsuit": 25, "rapid": [25, 46], "loop": [25, 26, 261], "remaind": [25, 26], "browser": [25, 26, 28, 43, 51, 267, 272, 279], "slash": [25, 26], "adb": [25, 26], "123456789123456": [25, 26], "azuredatabrick": [25, 26], "net": [25, 26, 52], "person": [25, 26, 50, 275], "enter": [25, 26, 27, 41, 42, 51, 255, 272, 273, 279, 280, 281], "prompt": [25, 26, 27, 41, 42, 255, 274, 277, 279, 280, 281], "l": [15, 25, 26, 27], "iris_databrick": [25, 26, 27], "databricks_run": 25, "argpars": 25, "argumentpars": 25, "add_argu": 25, "dest": [25, 26], "parse_arg": 25, "kb": 25, "c": [25, 34, 37, 41, 42, 49, 51, 94, 193, 197, 234, 251, 264, 272, 279], "p0": 25, "getlogg": [25, 43, 52, 53, 55, 193, 257, 271], "py4j": 25, "java_gatewai": 25, "setlevel": 25, "clientserv": 25, "editor": [25, 26, 27, 42, 50, 275], "entry_point": [25, 46], "tupl": [25, 43, 53, 63, 65, 66, 69, 101, 207, 244, 254, 261, 271], "usual": [25, 36, 44, 262, 269], "binari": [12, 14, 25, 34, 273], "somewher": [25, 259], "dbutil": 25, "conveni": [15, 25, 26, 95, 235, 260], "filestor": [25, 26, 27], "destin": [25, 26, 27, 259], "08_report": [25, 26, 27, 76, 94, 95, 215, 234, 235, 281], "dedic": [25, 119], "drop": [25, 26, 38, 261], "down": [25, 26, 29, 259, 261], "menu": [25, 26, 27, 41, 42, 267], "job_clust": 25, "kedro_deployment_demo": 25, "radio": 25, "lt": 25, "dropdown": [25, 27, 41, 267], "confirm": [25, 43, 49, 177, 193, 196, 197, 264], "overview": [25, 27, 36], "pend": 25, "wait": [25, 41, 42, 69, 207], "thing": [25, 260], "roughli": [25, 57], "six": 25, "seven": 25, "link": [25, 27, 28, 37, 43, 269], "2023": [25, 26, 27, 238], "06": [25, 26, 27], "56": [25, 27, 53, 271], "14": [25, 26, 27, 264, 271], "399": [25, 27], "accuraci": [25, 26, 27, 51], "972": [25, 26, 27], "403": [25, 27], "runner": [25, 26, 27, 33, 37, 57, 155, 156, 164, 261, 265, 267, 272, 276], "sequential_runn": [25, 26, 27, 53, 261, 264, 271, 272, 276], "404": [25, 27], "ran": [25, 36, 153, 155, 271], "outlin": [25, 43, 57], "auto": [26, 46, 94, 234, 254], "flake8": [26, 37, 277], "catch": [26, 40], "static": [15, 26, 37, 41, 42, 46, 253, 260, 271, 281], "checker": 26, "mypi": 26, "identifi": [26, 50, 85, 86, 99, 225, 226, 241], "earli": [26, 29, 161], "11": [26, 27, 49, 220, 264, 271, 272, 277], "program": [26, 42, 59, 98, 101, 177, 207, 240, 243, 244, 269], "remot": [12, 26, 27, 30, 34, 43, 71, 134, 207, 209, 271], "uncheck": 26, "13": [26, 89, 90, 264, 271], "21": [26, 53], "59": 26, "48": 26, "148": [26, 267], "databricks_usernam": [26, 27], "168": 26, "test_pipelin": [26, 260], "189": 26, "test_run": [26, 36], "928": 26, "aliv": 26, "traceabl": [26, 27], "attach": [26, 27, 37, 42, 261, 265, 267], "cell": [26, 27, 267, 277], "load_ext": [26, 27, 28, 41, 108, 187, 267], "fourth": [26, 27], "consent": [26, 27, 33], "press": [26, 27, 42], "53": 26, "221": 26, "960": 26, "222": 26, "224": 26, "80": [26, 27, 257], "20": [26, 27, 36, 81, 221, 264, 271], "classifi": [15, 26, 27, 51, 57], "70": [26, 27], "30": [26, 27, 36, 275], "edit": [26, 27, 41, 42, 43, 251, 254], "observ": [26, 238, 269], "train_fract": [26, 27, 261], "29": [26, 97, 98, 99, 210, 239, 240, 241, 272], "39": 26, "235": 26, "40": [26, 36], "820": [26, 274], "23": [26, 53, 104, 105, 247, 248, 261], "19": [26, 37, 68, 164, 271, 273, 279], "561": 26, "562": 26, "564": 26, "ephemer": [26, 27, 169], "repeat": [26, 27, 36, 43], "exclus": 26, "ideal": [27, 29, 260], "sync": [27, 29, 42], "gitlab": [27, 34], "devop": 27, "venv": [27, 49], "virtualenv": 27, "choic": [27, 29, 31, 43, 51, 277], "synchronis": 27, "email": [27, 34], "profil": [27, 40, 42, 44, 46, 260], "photo": [27, 272, 275], "grain": [27, 160], "expir": 27, "area": 27, "ssh": [12, 27, 34, 42], "popup": 27, "popul": [27, 51, 159, 210, 254, 263, 273, 277], "underneath": 27, "displai": [27, 43, 46, 49, 196, 197, 257, 262, 267, 274], "fileinfo": 27, "unnecessarili": 27, "55": [27, 36, 261, 271], "705": 27, "953": 27, "709": 27, "doubl": 27, "untrack": 27, "visibl": [27, 34, 41, 279], "viz": [28, 44, 46, 47, 51, 56, 59, 260, 267, 271, 272, 275, 277, 279], "standalon": [28, 44, 255, 268], "launch": [15, 28, 42, 255, 267], "run_viz": 28, "princip": [29, 274], "spectrum": 29, "fit": [11, 29, 30, 57, 260, 269, 271, 275], "quick": [29, 33, 36, 41], "transit": [29, 193, 267], "hybrid": 29, "dbx": 29, "adjust": [29, 273], "faster": 29, "complex": [15, 29, 69, 207, 255, 260, 264, 266, 269, 271], "degre": 29, "bet": 29, "rigid": 29, "natur": 29, "flowchart": 29, "align": 29, "factor": [29, 31], "topic": [30, 34], "unlik": [30, 49, 281], "tradit": [30, 255, 268], "simultan": 30, "scalabl": [30, 60, 271], "strategi": [30, 36], "seri": [30, 43, 261, 271, 272, 273], "better": [30, 275], "date": [30, 49, 229], "dockerhub": 30, "translat": 30, "map": [16, 30, 41, 50, 53, 63, 65, 66, 71, 99, 155, 160, 177, 191, 195, 196, 197, 209, 220, 241, 260, 261, 263, 264, 267, 269], "kubeflow": [30, 31, 35, 46], "programm": 30, "friendli": [30, 197], "fairli": 30, "That": [30, 92, 96, 210, 232, 237, 238], "sizeabl": 31, "dask": [31, 251, 271], "databrick": [31, 43, 97, 98, 220, 239, 240, 243, 257, 267], "prefect": [31, 273], "vertex": [31, 35, 46], "legaci": 31, "argo": 31, "examin": 32, "kubernet": [32, 46], "tailor": [32, 44], "tune": [32, 271], "agent": 33, "dequeu": 33, "earlier": [15, 33, 193, 279], "prefect_api_url": 33, "4200": 33, "opt": [33, 49, 51], "record": [33, 43, 51, 70, 85, 208, 225, 251], "telemetri": [33, 51, 55, 277], "hang": 33, "declin": 33, "organ": [33, 46], "work_pool_nam": 33, "work_queue_nam": 33, "subscrib": 33, "register_prefect_flow": 33, "union": [33, 69, 83, 84, 207, 210, 223, 224], "get_run_logg": 33, "deployment_nam": 33, "prefect_deploi": 33, "ref": 33, "build_from_flow": 33, "my_flow": 33, "infra_overrid": 33, "prefect_logging_level": 33, "logger": [33, 43, 193, 257, 271], "execution_config": 33, "kedro_init": 33, "layer": [33, 47, 177, 280], "execution_lay": 33, "init_kedro_tasks_by_execution_lay": 33, "node_task": 33, "bootstrap": [33, 255], "noqa": [33, 188, 229], "sess_id": 33, "topolog": [33, 193, 201, 262], "impli": 33, "b": [33, 42, 94, 177, 193, 197, 234, 261, 264, 271, 276], "instantiate_task": 33, "append": [15, 33, 41, 70, 76, 81, 208, 210, 215, 220, 221, 243, 249, 259, 261], "kedro_task": 33, "task_dict": 33, "with_opt": 33, "hub": 34, "dockerid": 34, "websit": [34, 49, 59], "procedur": 34, "containeris": 34, "compress": [34, 37, 47, 71, 88, 92, 101, 209, 228, 232, 244, 273], "recipi": 34, "viabl": 34, "bitbucket": 34, "accomplish": 34, "forg": [34, 49, 251], "bash": [34, 37], "deliv": 35, "fulfil": 36, "grow": [36, 40, 43], "interdepend": [36, 272], "unexpectedli": 36, "disadvantag": 36, "impract": 36, "old": [36, 269], "discov": [36, 46, 55, 59, 262], "One": [15, 36, 50, 193, 265, 268], "test_": 36, "file_being_test": 36, "dataprocess": 36, "test_nod": 36, "special": [15, 36, 81, 221, 261], "config_load": [36, 52, 57, 146, 154], "testprojectcontext": 36, "test_project_path": 36, "redund": 36, "layout": [36, 40, 63, 65, 95, 235, 255, 281], "begin": [36, 172, 229, 265], "statement": [36, 38, 54, 83, 89, 193, 223, 229, 261, 272], "especi": [36, 37, 38], "test_node_passes_with_valid_input": 36, "test_pass": 36, "shell": [15, 36, 37, 40, 42, 49, 267], "38": [36, 53], "ini_opt": 36, "addopt": 36, "ra": 36, "stmt": 36, "47": 36, "pipeline_registri": [36, 159, 160, 255, 263, 264, 267, 271], "16": [36, 265, 271, 272, 277], "data_process": [36, 43, 263, 271, 272, 276], "25": [36, 53, 249, 257, 272], "67": [36, 53, 274], "data_sci": [36, 43, 263, 271, 276], "total": 36, "98": 36, "ex": [37, 96, 237], "bashrc": 37, "eval": 37, "_kedro_complet": 37, "z": [37, 229, 265], "zsh": 37, "zshrc": 37, "source_zsh": 37, "fish": 37, "source_fish": 37, "shortcut": [37, 267], "anywher": [37, 57, 177], "nbstripout": [37, 277], "req": 37, "micropkg": [37, 259], "OR": [37, 265], "_____": 37, "__": 37, "___": 37, "v0": [37, 40], "kedro_viz": [37, 43], "line_mag": 37, "manipul": [15, 37], "async_arg_help": 37, "config_file_help": 37, "conf_source_help": 37, "from_inputs_help": 37, "from_nodes_help": 37, "load_version_help": 37, "node_arg_help": 37, "params_arg_help": 37, "pipeline_arg_help": 37, "runner_arg_help": 37, "tag_arg_help": 37, "to_nodes_help": 37, "to_outputs_help": 37, "project_group": 37, "util": [37, 50, 74, 149, 213, 259], "context_set": 37, "_config_file_callback": 37, "_reformat_load_vers": 37, "_split_param": 37, "env_opt": [37, 44], "split_str": 37, "split_node_nam": 37, "__file__": [37, 43], "callback": [37, 46], "async": [37, 155, 264], "is_flag": 37, "lv": 37, "dir_okai": 37, "resolve_path": 37, "file_okai": 37, "unprocess": 37, "unus": [37, 46], "hash": [37, 251], "context_path": 37, "angular": 37, "bracket": [37, 40, 66], "dataset_name1": 37, "dataset_name2": 37, "node_name1": 37, "node_name2": 37, "runner_nam": 37, "env_nam": [37, 259], "tag_name1": 37, "tag_name2": 37, "config_file_nam": 37, "path_to_config_directori": 37, "path_to_compress": 37, "parametris": 37, "dot": 37, "child": 37, "predict": [37, 43, 51, 57, 102, 245, 271, 272, 275, 281], "parameteris": [37, 271], "methodologi": [37, 99, 241], "sdist": 37, "pypi": [37, 49, 259], "storag": [12, 16, 37, 50, 52, 57, 99, 241, 259, 269], "isort": [37, 40, 50, 277], "coveragerc": 37, "package_module_path": 37, "aren": [37, 57], "filter": [37, 46, 164, 177, 193, 269], "de": 37, "jupyterlab": [37, 47, 257, 277], "sensit": [37, 50, 275, 277], "clear": [37, 63, 65, 66, 269, 272], "hard": [38, 260, 268], "frustrat": [38, 40], "quickli": 38, "outsid": [38, 46, 57, 164, 259, 264, 267, 271], "isn": [38, 63, 65, 259, 260, 263], "larg": [38, 89, 229, 261], "mortem": 38, "pdb": 38, "uncaught": [38, 155, 156, 164], "ipdb": 38, "manner": [38, 54, 57, 201], "vscode": [38, 42], "pycharm": [38, 39, 42, 56], "on_node_error": [38, 55, 155], "sy": [38, 41, 42, 53, 111], "traceback": [38, 190, 191, 253, 257, 276], "hook_impl": [38, 46, 52, 53, 55, 57], "pdbnodedebughook": 38, "debugg": [38, 41, 42], "whenev": [38, 263], "traceback_object": 38, "exc_info": 38, "print_tb": 38, "post_mortem": 38, "on_pipeline_error": [38, 55, 156, 164], "pdbpipelinedebughook": 38, "frame": [38, 249], "visual": [39, 46, 56, 57], "studio": [39, 56], "stylist": 40, "whitespac": 40, "doesn": [15, 40, 57, 65, 72, 73, 74, 75, 80, 81, 82, 86, 87, 88, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 169, 177, 202, 211, 212, 213, 214, 219, 221, 222, 226, 227, 228, 231, 232, 233, 234, 235, 236, 245, 246, 247, 248, 250, 255, 259, 260, 264, 279], "reus": [40, 44, 238, 255, 260, 261, 269, 271, 273], "indent": [40, 75, 104, 105, 214, 247, 248], "goe": [40, 264], "compliant": 40, "opinion": [40, 266], "formatt": [40, 111], "pyupgrad": 40, "pep8": 40, "pyflak": 40, "pycodestyl": 40, "pl": [40, 236], "e501": 40, "care": 40, "screen": [40, 43, 257], "88": 40, "e203": 40, "invok": [40, 83, 117, 124, 143, 152, 153, 154, 155, 156, 189, 223], "astral": 40, "sh": 40, "rev": 40, "270": 40, "psf": 40, "language_vers": 40, "cog": 41, "picker": 41, "ok": 41, "explor": [41, 43, 48, 59, 267, 272], "mark": [41, 122, 150, 174, 175], "preconfigur": [41, 50], "rapidli": 41, "dirnam": [41, 42], "lib": 41, "site": [41, 46], "obtain": [15, 41, 57, 66, 193, 267], "emul": 41, "rich": [41, 191], "toolbar": [41, 267], "green": [41, 42, 76, 111, 215], "triangl": [41, 42], "breakpoint": [41, 42], "jetbrain": 41, "profession": 41, "proce": [41, 43], "mount": [41, 97, 98, 239], "real": [41, 42, 260], "autocomplet": [41, 42], "githubusercont": [41, 42], "jsonschema": [15, 41, 42], "palett": 42, "shift": 42, "venvpath": 42, "anaconda": 42, "microsoft": 42, "fwlink": 42, "linkid": 42, "733558": 42, "isdefault": 42, "Will": [42, 85, 225], "environment": 42, "openconfigfil": 42, "intellisens": 42, "hover": [42, 271], "830387": 42, "integratedtermin": 42, "seper": 42, "pane": 42, "ptvsd": 42, "arrai": [15, 42, 101, 244], "pathmap": 42, "localroot": 42, "workspacefold": 42, "remoteroot": 42, "3000": 42, "ip": 42, "enable_attach": 42, "redirect_output": 42, "paus": 42, "wait_for_attach": 42, "scp": 42, "your_usernam": 42, "remote_serv": 42, "tunnel": 42, "vnl": 42, "experiment": [43, 50, 255, 266, 267], "evalu": [43, 53, 57, 66, 260, 271], "weight": 43, "demo": 43, "snapshot": 43, "captur": [43, 262], "discoveri": [43, 55], "plotli": 43, "timeseri": 43, "parellel": 43, "coord": 43, "central": [43, 238], "complementari": 43, "neptun": [43, 46], "ecosystem": [43, 46], "feel": [15, 43], "domain": [43, 269], "databas": [43, 89, 90, 96, 99, 100, 210, 220, 229, 230, 237, 238, 241, 242, 264], "sqlite_stor": 43, "sqlitestor": 43, "session_store_class": [43, 254], "session_store_arg": [43, 254], "crucial": 43, "front": [43, 160], "interchang": 43, "kedro_sqlite_store_usernam": 43, "your_unique__usernam": 43, "remote_path": 43, "your_access_key_id": 43, "your_secret_access_kei": 43, "aws_region": 43, "your_aws_region": 43, "metricsdataset": 43, "numer": [16, 43, 50, 105, 248, 264, 274], "boolean": [43, 253, 272], "companies_column": 43, "coeffici": [43, 271], "r2": 43, "score": [43, 271], "me": 43, "mae": 43, "09_track": [43, 104, 105, 247, 248], "r2_score": [43, 271], "sklearn": [43, 53, 101, 244, 271], "mean_absolute_error": 43, "max_error": 43, "linearregress": [43, 271], "calcul": [43, 200, 202, 262, 265, 271], "independ": [43, 193, 271], "price": [43, 271, 272, 274, 275], "y_pred": [43, 267, 271], "3f": [43, 271], "exactli": 43, "evaluate_model_nod": [43, 271], "company_r": [43, 271, 272, 274], "iata_approv": [43, 271, 272, 274], "_is_tru": [43, 272], "_parse_percentag": [43, 272], "tolist": 43, "data_typ": 43, "preprocess_companies_nod": [43, 271, 272], "beauti": 43, "session_stor": 43, "expos": [43, 160, 195, 197, 263, 273], "fun": 43, "icon": 43, "4141": [43, 51, 272, 279], "toggl": 43, "seaborn": [43, 236, 281], "pyplot": [43, 76, 215, 281], "plt": [43, 76, 215, 281], "sn": [43, 281], "create_confusion_matrix": [43, 281], "y_actual": [43, 281], "y_predict": [43, 281], "confusion_matrix": [43, 281], "crosstab": [43, 281], "rownam": [43, 281], "colnam": [43, 281], "heatmap": [43, 281], "annot": [43, 47, 281], "png": [15, 43, 74, 76, 93, 213, 215, 233, 281], "chart": [43, 46, 56, 278, 279], "vertic": 43, "axi": 43, "highlight": [43, 96, 237, 260], "multitud": 43, "graphic": [43, 49, 267], "taken": [43, 259], "emploi": 44, "thought": 44, "action": [44, 57, 220, 257, 267, 271], "lifecycl": [44, 56, 124, 152, 153, 154, 155, 156, 162, 163, 164, 252, 269], "notebook_run": 44, "proprietari": [15, 274], "perhap": 15, "kaggl": 15, "pok\u00e9mon": 15, "water": 15, "fire": 15, "numpi": [15, 93, 101, 102, 196, 233, 244, 245, 249, 251], "pokemon": 15, "download": [15, 49], "compris": [15, 16, 50, 51, 265, 268], "plu": 15, "minimum": [15, 255], "abstract": [15, 60, 174, 175, 199, 251], "skeleton": [15, 272], "np": [15, 101, 102, 196, 244, 245, 249], "ndarrai": 15, "img": [15, 249], "_filepath": [15, 53, 174, 261], "kedro_pokemon": 15, "image_dataset": 15, "mimic": 15, "conjunct": [15, 174], "flexibli": 15, "pil": [15, 93, 233, 249], "get_filepath_str": [15, 261], "get_protocol_and_path": [15, 261], "_protocol": [15, 261], "_f": [15, 261], "rgba": 15, "asarrai": [15, 249], "pikachu": 15, "preview": [15, 56, 278, 281], "fromarrai": [15, 249], "wb": [15, 73, 74, 76, 86, 92, 212, 213, 215, 226, 232, 264], "721": 15, "la": 15, "wc": 15, "datetim": [15, 229], "exists_funct": [15, 175, 261], "glob_funct": [15, 175, 261], "22t00": 15, "00": 15, "000z": 15, "mv": 15, "backup": 15, "inspect": [15, 255, 274, 275], "depth": [], "parallelrunn": [15, 174, 267, 271], "closur": 15, "decor": [15, 52, 55, 138], "functool": 15, "explan": [13, 15], "dump": [15, 75, 92, 96, 104, 105, 106, 207, 214, 232, 237, 247, 248, 250, 264], "reduct": 15, "forkingpickl": 15, "_data_set": 15, "shouldn": 15, "sit": 15, "your_credenti": 15, "arg_1": 15, "gcsfilesystem": [14, 15, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250], "accompani": 15, "solid": 46, "importlib": 46, "kedrojson": 46, "pass_obj": 46, "to_json": [46, 87, 193, 227], "project_command": 46, "kedrostarterspec": 46, "test_plugin_start": 46, "template_path": [46, 134], "your_local_directori": 46, "starter_fold": 46, "checkout": [46, 255], "_get_project_metadata": 46, "proof": 46, "global_command": 46, "bit": 46, "plugin_nam": [46, 55], "myhook": 46, "after_catalog_cr": [46, 55, 152, 272], "cli_hook": 46, "cli_hook_impl": 46, "myclihook": 46, "before_command_run": [46, 55, 124], "project_metadata": [46, 124], "command_arg": [46, 124], "ship": [46, 273], "justin": 46, "malloi": 46, "waylon": 46, "walker": 46, "css": 46, "steel": 46, "toe": 46, "prevent": [46, 50, 57, 262], "wing": 46, "tam": 46, "sanh": 46, "great": [46, 53, 54], "acceler": [46, 260], "dropin": 46, "swap": [46, 257], "modin": 46, "specialis": [16, 46, 50, 269], "gpu": 46, "yolan": 46, "honor\u00e9": 46, "roug\u00e9": 46, "takieddin": 46, "kadiri": 46, "facilit": [46, 197], "synchron": 46, "infer": [46, 195], "jakub": 46, "czakon": 46, "rafa\u0142": 46, "jankowski": 46, "nice": [46, 260], "brows": 46, "curv": [46, 59, 74, 213], "video": [46, 49], "dolt": 46, "hoffman": 46, "oscar": 46, "batori": 46, "vertexai": 46, "azureml": 46, "partit": [12, 16, 46, 56, 88, 98, 99, 210, 220, 228, 240, 241, 243], "daiha": 46, "alv": 46, "nickola": 46, "da": 46, "rocha": 46, "machado": 46, "kernel": 47, "concept": [48, 51, 56, 59, 261, 275, 279], "exit": [49, 51, 124, 137, 253, 272, 274, 276, 279], "deactiv": 49, "pipenv": 49, "ascii": 49, "art": 49, "queri": [49, 63, 65, 83, 89, 223, 229], "safe": [49, 264], "notabl": 49, "kedro_init_vers": [49, 171, 254], "projectcontext": 49, "caution": 49, "unreleas": 49, "glossari": [50, 56, 59, 177, 270, 275], "wrapper": [50, 95, 235, 269], "inbuilt": 50, "return_greet": 50, "hello": [50, 52, 81, 221], "return_greeting_nod": 50, "my_salut": 50, "join_stat": 50, "greet": 50, "join_statements_nod": 50, "my_messag": 50, "necessarili": [50, 196, 197, 262, 269], "assembl": 50, "greeting_pipelin": 50, "advis": [50, 257, 259], "gitignor": 50, "unnecessari": 50, "inclus": 50, "commonli": 50, "human": [51, 254, 255], "alphanumer": [51, 255], "symbol": 51, "hyphen": [51, 197], "repo_nam": [51, 255], "python_packag": [51, 255], "get_start": 51, "lowercas": 51, "output_dir": 51, "test_kedro": 51, "swiftli": 51, "regain": [51, 272, 279], "mac": [51, 272, 279], "ctrl": [51, 272, 279], "fundament": 51, "unsur": 51, "1936": 51, "british": 51, "statistician": [51, 269], "biologist": 51, "ronald": 51, "fisher": 51, "150": 51, "speci": [51, 267], "plant": 51, "setosa": [51, 267], "versicolour": 51, "virginica": [51, 267], "flower": 51, "measur": 51, "sepal": 51, "width": [51, 257], "petal": 51, "categoris": 51, "known": [51, 255, 268, 275], "nearest": 51, "neighbour": 51, "algorithm": 51, "make_predict": [51, 267], "report_accuraci": [51, 267], "before_node_run": [52, 55, 155], "behavior": [52, 255], "furthermor": 52, "subset": [52, 55, 193, 260, 265, 269], "say_hello": 52, "projecthook": [52, 55], "retri": 52, "tenac": 52, "my_flaky_node_funct": 52, "flaki": 52, "before_dataset_load": [52, 53, 55, 153], "after_dataset_load": [52, 53, 55, 153], "before_dataset_sav": [52, 55, 57, 153], "after_dataset_sav": [52, 55, 57, 153], "logginghook": 52, "_timer": [52, 53], "2f": 52, "after_context_cr": [52, 55, 57, 154], "keyvault": 52, "s3_cred": 52, "your_data_stor": 52, "blob": [12, 52], "abs_cr": 52, "secretcli": 52, "defaultazurecredenti": 52, "azuresecretshook": 52, "keyvaultnam": 52, "0542abb": 52, "key_vault_nam": 52, "kvuri": 52, "vault": 52, "vault_url": 52, "cred": [52, 83, 84, 223, 224], "azure_cr": 52, "cred_nam": 52, "get_secret": 52, "secret_nam": 52, "my_project": [52, 259, 260], "authoris": 52, "memory_profil": 53, "memory_usag": 53, "_normalise_mem_usag": 53, "mem_usag": 53, "isinst": [53, 57], "memoryprofilinghook": 53, "_mem_usag": 53, "before_mem_usag": 53, "interv": 53, "max_usag": 53, "retval": 53, "include_children": 53, "after_mem_usag": 53, "2fmib": 53, "data_catalog": [53, 261, 264, 271, 272, 276], "343": [53, 261, 271, 272], "99mib": 53, "48mib": 53, "327": [53, 271, 272], "382": [53, 261, 271, 272, 276], "85": [53, 261, 271, 272], "49mib": 53, "great_expect": 53, "ge": [53, 261], "datavalidationhook": 53, "dataset_expectation_map": 53, "raw_companies_dataset_expect": 53, "preprocessed_companies_dataset_expect": 53, "_run_valid": 53, "dataset_valu": 53, "_get_dataset": [53, 264], "dataset_path": 53, "expectation_suit": 53, "expectation_context": 53, "data_context": 53, "datacontext": 53, "get_batch": 53, "datasourc": 53, "files_datasourc": 53, "run_validation_oper": 53, "action_list_oper": 53, "assets_to_valid": 53, "checkpoint": [53, 99, 241, 243], "raw_companies_dataset_checkpoint": 53, "data_connector_queri": 53, "batch_request": 53, "yaml_config": 53, "my_checkpoint_nam": 53, "config_vers": 53, "class_nam": 53, "simplecheckpoint": 53, "run_name_templ": 53, "datasource_nam": 53, "my_datasource_nam": 53, "data_connector_nam": 53, "default_runtime_data_connector_nam": 53, "data_asset_nam": 53, "my_runtime_asset_nam": 53, "expectation_suite_nam": 53, "my_expectation_suite_nam": 53, "dataset_checkpoint_map": 53, "run_checkpoint": 53, "checkpoint_nam": 53, "runtime_paramet": 53, "batch_data": 53, "batch_identifi": 53, "runtime_batch_identifier_nam": 53, "run_nam": 53, "statsd": 53, "grafana": 53, "pipelinemonitoringhook": 53, "statsclient": 53, "node_tim": 53, "short_nam": [53, 197], "gaug": 53, "_size": 53, "getsizeof": 53, "after_pipeline_run": [53, 55, 156], "incr": 53, "before_pipeline_run": [53, 55, 156], "modeltrackinghook": 53, "run_param": [53, 156], "start_run": 53, "log_param": 53, "_func_nam": 53, "split_data_ratio": 53, "example_test_data_ratio": [53, 267], "elif": 53, "log_model": 53, "end_run": 53, "my_nod": 53, "first_input": 53, "second_input": 53, "nodeinputreplacementhook": 53, "expected_input": 53, "actual_input": 53, "noun": 55, "past_participl": 55, "timelin": [55, 123, 151, 254], "on_": 55, "_error": 55, "lastli": 55, "after_command_run": [55, 124], "statist": [55, 269], "after_data_catalog_cr": 55, "hook_spec": 55, "conf_cr": [55, 152], "datacataloghook": 55, "__class__": 55, "arbitrari": [55, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250], "restrict": 55, "lifo": 55, "introduct": [16, 56, 265, 269, 273], "faq": [56, 275], "terminologi": 56, "frequent": [56, 270], "micro": [56, 127, 254, 258, 260, 271, 273], "slice": [56, 258], "sparksess": [56, 97, 98, 99, 100, 210, 239, 240, 241, 242], "delta": [56, 97, 98, 210, 220, 239, 240, 243], "intermediari": 56, "copy_mod": 56, "tip": 56, "maximis": [56, 264], "maxresults": 57, "driver": [57, 71, 73, 100, 209, 212, 229, 242], "fair": 57, "3g": 57, "sparkconf": 57, "sql": [13, 57, 83, 89, 90, 97, 98, 99, 100, 210, 223, 229, 230, 239, 240, 241, 242], "sparkhook": 57, "spark_conf": 57, "setal": 57, "spark_session_conf": 57, "builder": [57, 97, 98, 99, 100, 210, 239, 240, 241, 242], "appnam": 57, "enablehivesupport": 57, "_spark_sess": 57, "getorcr": [57, 97, 98, 99, 100, 210, 239, 240, 241, 242], "sparkcontext": [57, 98, 99, 240, 241, 243], "setloglevel": 57, "warn": [57, 61, 111, 160, 177, 191, 257, 263, 276], "master": 57, "yarn": 57, "singleton": [57, 89, 90, 121, 149, 229, 230], "deltatabledataset": 57, "sparkjdbcdataset": 57, "sparkhivedataset": 57, "spark_d": 57, "lakehous": 57, "architectur": 57, "acid": 57, "transact": 57, "unifi": 57, "adl": [57, 220], "hdf": [12, 57, 86, 98, 226, 240, 274], "transcod": [57, 193], "temperatur": 57, "my_bucket": [57, 86, 226, 259], "versionasof": 57, "deltat": [57, 97, 220, 239], "process_barometer_data": 57, "update_meterological_st": 57, "first_operation_complet": 57, "estimate_weather_trend": 57, "second_operation_complet": 57, "signal": 57, "preserv": [57, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 197, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 245, 246, 247, 248, 250], "shape": [57, 73, 212], "diagram": 57, "represent": [57, 193], "dummi": [57, 273], "flow": [57, 255, 267], "hold": [57, 146, 171, 254, 255, 269], "lazi": [57, 261], "randomforrestclassifi": 57, "randomforestclassifi": 57, "training_data": 57, "forest": 57, "numtre": 57, "testing_data": 57, "transform": [57, 272], "example_classifi": 57, "fifo": 57, "intermedi": [59, 193, 195, 260, 264, 265, 279], "comprehens": [59, 257], "preliminari": 59, "anyon": 59, "knowledg": [59, 269], "excel": [59, 81, 221, 272, 274, 277], "onlin": 59, "book": 59, "robust": 60, "assembli": 60, "incompat": [61, 92, 96, 99, 197, 232, 237, 241], "with_traceback": [61, 64, 137, 147, 165, 194], "tb": [61, 64, 137, 147, 165, 194], "__traceback__": [61, 64, 137, 147, 165, 194], "base_env": [63, 65, 66], "experiment1": 63, "model_paramet": 63, "experiment2": 63, "conf_log": [63, 65], "dictconfig": [63, 65, 256], "conf_param": [63, 65], "suppli": [63, 65, 66, 99, 146, 210, 220, 241, 254, 255, 264, 272], "overriden": 63, "dedupl": [63, 66], "classmethod": [63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 164, 174, 175, 177, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "fromkei": [63, 65, 66], "k": [63, 65, 66, 261], "keyerror": [63, 65, 66, 264], "popitem": [63, 65, 66], "setdefault": [63, 65, 66, 261], "readthedoc": [65, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 89, 92, 93, 94, 95, 96, 103, 104, 105, 106, 122, 123, 150, 151, 160, 187, 188, 191, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 223, 224, 225, 226, 229, 232, 233, 234, 235, 237, 246, 247, 248, 250, 276], "en": [65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 89, 90, 92, 93, 94, 95, 96, 103, 104, 105, 106, 122, 123, 150, 151, 160, 177, 187, 188, 191, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 223, 224, 225, 226, 229, 232, 233, 234, 235, 237, 238, 246, 247, 248, 250, 276], "2_branch": 65, "load_and_merge_dir_config": 65, "processed_fil": 65, "read_environment_vari": 65, "parsererror": 65, "invalid": [65, 70, 73, 99, 177, 193, 208, 210, 212, 220, 241, 262], "express": [66, 94, 95, 177, 234, 235, 281], "malform": [66, 267], "breakag": 68, "usda": [69, 207], "corn": [69, 207], "yield": [69, 207, 249, 261], "head": [69, 274], "complic": [69, 262], "authbas": [69, 207], "httpbasicauth": 69, "cast": 69, "typevar": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "_do": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "_di": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "notadirectoryerror": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "stringio": [70, 208], "bio": [70, 208], "seqio": [70, 208], "alpha": [70, 208, 260, 264], "naccggatgta": [70, 208], "beta": [70, 208, 260], "naggctcggtta": [70, 208], "raw_data": [70, 177, 208], "fasta": [70, 208], "ls_orchid": [70, 208], "sequence_list": [70, 208], "seq": [70, 208], "default_load_arg": [70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 100, 101, 102, 208, 209, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 261], "default_save_arg": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 250, 261], "posix": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 98, 102, 103, 104, 105, 106, 175, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 239, 240, 243, 244, 245, 246, 247, 248, 250, 259], "biopython": [70, 208], "spec": [70, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 89, 92, 93, 94, 95, 103, 104, 105, 106, 122, 150, 208, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 229, 232, 233, 234, 235, 246, 247, 248, 250], "abstractfilesystem": [70, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 89, 92, 93, 94, 95, 103, 104, 105, 106, 208, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 229, 232, 233, 234, 235, 246, 247, 248, 250], "invalidate_cach": [70, 73, 208, 212], "your_kei": [71, 209], "your_secret": [71, 209], "dd": [71, 209], "ddf": [71, 209], "from_panda": [71, 209], "npartit": [71, 209], "schema": [71, 90, 97, 98, 99, 156, 209, 210, 220, 230, 238, 239, 240, 241, 243, 256], "triad": [71, 209], "pyarrow": [71, 88, 209, 228], "parquet_dataset": [71, 209], "int32": [71, 209], "write_index": [71, 209], "multipart": [71, 209], "read_parquet": [71, 88, 209, 228], "to_parquet": [71, 88, 209, 228], "send": [72, 207, 211, 257], "emailmessag": [72, 211], "string_to_writ": [72, 103, 211, 246], "invis": [72, 211], "plain": [72, 211, 229], "set_cont": [72, 211], "subject": [72, 211], "sin": [72, 211], "studly17": [72, 211], "strong": [72, 211], "bad": [72, 200, 202, 211], "__dict__": [72, 211], "mime": [72, 211], "flatten": [72, 211], "autogener": [72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 98, 102, 103, 104, 105, 106, 175, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 250], "resolve_load_vers": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 105, 106, 175, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 250], "resolve_save_vers": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 105, 106, 175, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 240, 244, 245, 246, 247, 248, 250], "geojson": [73, 212], "eg": [73, 212], "gpd": [73, 212], "geometri": [73, 212], "geodatafram": [73, 212], "read_fil": [73, 212], "to_fil": [73, 212], "gcfilesystem": [73, 212], "hv": [74, 213], "holoviews_writ": [74, 213], "fmt": [74, 213], "s3filesystem": [74, 76, 213, 215], "reference_manu": [74, 213], "default_flow_styl": [75, 104, 105, 106, 214, 247, 248, 250], "output_plot": [76, 215], "fig": [76, 94, 95, 215, 234, 235, 281], "figur": [76, 94, 95, 215, 234, 235, 267, 281], "plot_writ": [76, 215], "pdf": [76, 215], "pdf_plot_writ": [76, 215], "plots_dict": [76, 215], "colour": [76, 109, 110, 190, 215], "blue": [76, 111, 215], "red": [76, 111, 215, 257], "color": [76, 111, 215], "dict_plot_writ": [76, 215], "plots_list": [76, 215], "list_plot_writ": [76, 215], "savefig": [76, 215], "_as_gen": [76, 215], "gml": [77, 216], "nx": [77, 78, 79, 216, 217, 218], "complete_graph": [77, 78, 79, 216, 217, 218], "graph_dataset": [77, 78, 79, 216, 217, 218], "is_isomorph": [77, 78, 79, 216, 217, 218], "read_gml": [77, 216], "readwrit": [77, 78, 79, 216, 217, 218], "write_gml": [77, 216], "graphml": [78, 217], "read_graphml": [78, 217], "write_graphml": [78, 217], "node_link_graph": [79, 218], "json_graph": [79, 218], "node_link_data": [79, 218], "openpyxl": [81, 221, 274], "multi": [81, 221], "sheet": [81, 221], "another_datafram": [81, 221], "world": [81, 221, 260, 264], "multifram": [81, 221], "read_excel": [81, 221, 274], "to_excel": [81, 221, 274], "excelwrit": [81, 221], "writer": [81, 221], "feather": [82, 222], "use_thread": [82, 222], "read_feath": [82, 222], "to_feath": [82, 222], "bigqueri": [83, 84, 223, 224], "read_gbq": [83, 84, 223, 224], "gbq": [83, 84, 223, 224], "vehicl": [83, 84, 223, 224], "shuttle_id": [83, 89, 223, 229, 272], "reauth": [83, 84, 223, 224], "dataset_1": [83, 223], "table_a": [83, 89, 90, 100, 223, 229, 230, 242], "sql_data": [83, 89, 223, 229], "oauth2": [83, 84, 223, 224], "big_query_dataset": [84, 224], "big_query_t": [84, 224], "chunk_siz": [84, 207, 224], "progress_bar": [84, 224], "to_gbq": [84, 224], "sas7bdat": [85, 225], "read_sa": [85, 225], "to_sa": [85, 225], "flight": [85, 225, 275], "sa": [85, 225, 229], "assumpt": [85, 99, 225, 241], "buffer": [85, 225], "clipboard": [85, 225], "read_": [85, 225], "to_": [85, 225], "hdfstore": [86, 226], "hdf_dataset": [86, 226], "sensor_read": [86, 226], "h5": [86, 102, 226, 245], "aws_s3_cr": [86, 226], "pytabl": [86, 226], "www": [86, 102, 226, 245, 259], "usersguid": [86, 226], "libref": [86, 226], "top_level": [86, 226], "open_fil": [86, 226], "clickstream_dataset": [87, 227], "landing_area": [87, 227], "click_stream": [87, 227], "abfs_cr": [87, 227], "json_dataset": [87, 227], "video_gam": [87, 227], "read_json": [87, 227], "use_nullable_dtyp": [88, 228], "arrow": [88, 228], "partition_col": [88, 228], "execution_opt": [89, 229], "read_sql_queri": [89, 229], "shuttle_id_dataset": [89, 229], "db_credenti": [89, 90, 100, 229, 230, 238, 242], "stream_result": [89, 229], "chunksiz": [89, 229, 261], "1000": [89, 229], "postgresql": [89, 90, 100, 229, 230, 242], "scott": [89, 90, 100, 229, 230, 242], "tiger": [89, 90, 100, 229, 230, 242], "create_connect": [89, 90, 229, 230], "connection_str": [89, 90, 229, 230], "read_sql_tabl": [90, 230], "to_sql": [90, 230], "symmetr": [90, 230], "shuttles_table_dataset": [90, 230], "dwschema": [90, 230], "read_xml": [91, 231], "to_xml": [91, 231], "test_model": [92, 232], "final_model": [92, 232], "lz4": [92, 232], "joblib": [92, 232], "s3_credenti": [92, 232], "compress_pickl": [92, 96, 232, 237], "deserialis": [92, 96, 232, 237], "dill": [92, 96, 232, 237], "torch": [92, 96, 232, 237], "lucianopaz": [92, 96, 232, 237], "importerror": [92, 96, 232, 237], "scatter_plot": [94, 95, 234, 235], "px": [94, 95, 234, 235, 281], "from_json": [94, 95, 234, 235], "write_json": [94, 95, 234, 235], "plotly_arg": [95, 235, 281], "bar_plot": [95, 235], "orient": [95, 235, 281], "xaxis_titl": [95, 235, 281], "yaxis_titl": [95, 235, 281], "titl": [95, 235, 255, 281], "df_data": [95, 235], "x1": [95, 235], "x2": [95, 235], "scatter": [95, 235], "theme": [95, 235], "redis_arg": [96, 237], "from_url": [96, 237], "my_python_object": [96, 237], "my_object": [96, 237], "from_url_arg": [96, 237], "6379": [96, 237], "final_python_object": [96, 237], "my_final_object": [96, 237], "default_redis_url": [96, 237], "strictredi": [96, 237], "socket_timeout": [96, 237], "set_arg": [96, 237], "redis_url": [96, 237], "structfield": [97, 98, 99, 210, 239, 240, 241], "stringtyp": [97, 98, 99, 210, 239, 240, 241], "integertyp": [97, 98, 99, 210, 239, 240, 241], "structtyp": [97, 98, 99, 210, 239, 240, 241], "ag": [97, 98, 99, 210, 239, 240, 241], "alex": [97, 98, 99, 210, 239, 240, 241], "31": [97, 98, 99, 210, 239, 240, 241, 277], "bob": [97, 98, 99, 210, 239, 240, 241], "clark": [97, 98, 99, 210, 239, 240, 241], "65": [97, 98, 99, 210, 239, 240, 241], "dave": [97, 98, 99, 210, 239, 240, 241], "spark_df": [97, 98, 99, 210, 239, 240, 241], "createdatafram": [97, 98, 99, 100, 210, 239, 240, 241, 242], "test_data": [97, 98, 239, 240], "deltatable_dataset": [97, 239], "delta_t": [97, 239], "mnt": [97, 98, 239], "weather_with_schema": [98, 240], "weather_clean": [98, 240], "dataframeread": [98, 100, 240, 242, 243], "getting_start": [98, 240], "quickstart_df": [98, 240], "partitionbi": [98, 99, 240, 241, 243], "s3n": [98, 240], "insecurecli": [98, 240], "write_mod": [99, 210, 241], "errorifexist": [99, 241], "table_pk": [99, 241], "upsert": [99, 210, 241], "pk": [99, 241], "atom": [99, 241], "hive_dataset": [99, 241], "hive_databas": [99, 241], "test_databas": [99, 241], "test_tabl": [99, 241], "preexist": [99, 241], "dataframewrit": [99, 100, 238, 241, 242], "saveast": [99, 238, 241], "hiveopt": [99, 241], "setcheckpointdir": [99, 241], "jdbc": [100, 242], "weather_t": [100, 242], "connection_properti": [100, 242], "topanda": [100, 242], "subprotocol": [100, 242], "subnam": [100, 242], "libsvm": [101, 244], "dump_svmlight_fil": [101, 244], "load_svmlight_fil": [101, 244], "spars": [101, 244], "matrix": [101, 244], "zero": [101, 244], "svm_dataset": [101, 244], "svm": [101, 244], "zero_bas": [101, 244], "14159": [101, 244], "reloaded_featur": [101, 244], "reloaded_label": [101, 244], "load_model": [102, 245], "save_model": [102, 245], "tensorflow_model": [102, 245], "include_optim": [102, 245], "tf_cred": [102, 245], "tf": [102, 245], "kera": [102, 245], "loaded_model": [102, 245], "new_predict": [102, 245], "assert_allclos": [102, 245], "rtol": [102, 245], "1e": [102, 245], "atol": [102, 245], "save_format": [102, 245], "api_doc": [102, 245], "alice_book": [103, 246], "alic": [103, 246], "002": [104, 105, 247, 248], "pyyaml": [106, 250], "pyyamldocument": [106, 250], "incorpor": 111, "asctim": 111, "levelnam": 111, "ext": [111, 267, 273], "stdout": 111, "white": 111, "magenta": 111, "yellow": 111, "ansi": 111, "cyan": 111, "commandcollect": 116, "encapsul": [116, 260, 271], "primit": [118, 148], "kedrocli": 118, "_hook_manag": 121, "exit_cod": [124, 137], "subcommand": 124, "themselv": 124, "attr": 126, "list_command": 126, "ctx": [126, 144], "pipeline_dir": 130, "pipeline_test": 130, "pipeline_conf": 130, "source_path": 130, "tests_path": 130, "config_path": 130, "occurr": [130, 171, 185], "9223372036854775807": [130, 171, 185], "vc": [134, 255], "cookiecutt": [134, 255, 269], "resid": 134, "verbose_error": 137, "format_messag": 137, "verbos": 138, "func_": 139, "stylesheet": 140, "forward_help": 141, "reqs_path": 142, "kedroclierror": 142, "subprocess": 143, "kedrocontexterror": 146, "mismatch": 146, "feed_dict": [152, 177], "_create_catalog": 152, "earliest": 154, "thrown": [155, 156, 197], "run_result": 156, "kedro_vers": [156, 254], "utitl": 157, "logging_config": 158, "autoregist": 160, "autodiscoveri": 160, "nodes_and_pipelin": 160, "desir": [161, 257, 265], "dynaconf": 161, "silenc": 161, "mislabel": 161, "cryptic": 161, "nonetyp": 161, "rochacbruno": 161, "460": 161, "save_on_clos": [164, 253], "register_pipelin": [164, 263, 264, 267, 271], "kedrosessionerror": 164, "shelv": 167, "config_fil": 171, "project_vers": 171, "source_dir": 171, "deriv": 171, "projectmetadata": 172, "kwd": 174, "_single_process": [174, 200], "as_posix": [174, 175], "dataset_pattern": 177, "relai": 177, "feed": [14, 177], "insensit": 177, "conform": [177, 197], "lexicograph": 177, "data_set_nam": 177, "datasetalreadyexistserror": 177, "add_al": 177, "parq": 177, "datasetnotfounderror": 177, "boats_credenti": 177, "regex_search": 177, "syntaxerror": 177, "substr": 177, "prm": 177, "feat": 177, "feat_eng_data": 177, "time_seri": 177, "shallow": 177, "namedtupl": 185, "local_n": 188, "notebooks_and_ipython": 188, "kedro_and_notebook": 188, "setproject": 188, "param_group": 188, "local_namespac": 189, "redirect": 191, "pretti": 191, "repl": 191, "rich_traceback": [191, 257], "driven": 192, "among": [193, 195, 262], "circulardependencyerror": 193, "circular": 193, "outputnotuniqueerror": 193, "confirmnotuniqueerror": 193, "first_d": 193, "second_d": 193, "first_nod": 193, "second_nod": 193, "third_d": 193, "fourth_d": 193, "all_input": 193, "all_output": [193, 267], "names_onli": 193, "loggabl": 193, "invoc": 193, "func1": 193, "func2": 193, "func3": 193, "node_namespac": 193, "intersect": 193, "distinct": [193, 254], "lookup": 193, "node1": [193, 262, 264], "node2": [193, 262, 264], "node3": [193, 264], "inner": [193, 197], "only_nod": [193, 265, 269], "only_nodes_with_input": 193, "only_nodes_with_namespac": 193, "only_nodes_with_tag": [193, 265, 269], "modularpipelineerror": 195, "incorrectli": 195, "clean_data": 196, "boats_df": 196, "halve_datafram": 196, "array_split": 196, "cars2017": 196, "boats2017": 196, "clean_cars2017": 196, "clean_boats2017": 196, "train_cars2017": 196, "test_cars2017": 196, "train_boats2017": 196, "test_boats2017": 196, "auxiliari": 197, "hint": 197, "violat": 197, "digit": 197, "fullstop": 197, "bind": 197, "outer": 197, "wherea": 197, "toposort": [200, 202], "_validate_catalog": 200, "spawn": [200, 202], "cpu": [200, 202, 264, 271], "61": 200, "min": 200, "_sharedmemorydataset": 200, "sequenti": [201, 264, 267, 269, 271, 275], "classs": 201, "obj_path": 205, "default_obj_path": 205, "attributeerror": 205, "example_t": 207, "val1": 207, "val2": 207, "val3": 207, "val4": 207, "url_of_remote_serv": 207, "mind": 207, "divid": 207, "chunk": [207, 261], "sent": 207, "unsupport": 207, "dataframe_typ": 210, "primary_kei": 210, "partition_column": [210, 220], "owner_group": 210, "primary_column": 210, "names_and_ag": 210, "uniti": [210, 220], "truncat": 210, "ownership": 210, "owner": 210, "managedt": 210, "catalog_typ": 220, "catalog_nam": 220, "glue": 220, "alter": [220, 256, 257], "overwrite_schema": 220, "partition_filt": 220, "boats_filesystem": 220, "dev_cr": 220, "boats_databricks_unity_catalog": 220, "simple_databas": 220, "simple_t": 220, "trucks_aws_glue_catalog": 220, "db_schema": 220, "db_tabl": 220, "new_data": 220, "get_loaded_vers": 220, "accepted_write_mod": 220, "default_write_mod": 220, "az": 220, "api_refer": 220, "histori": [220, 271], "created_tim": 220, "appendonli": 220, "meant": 220, "mssql": 229, "1433": 229, "testdb": 229, "strongpassword": 229, "_make_mssql_connection_str": 229, "pyodbc": 229, "encrypt": 229, "uid": 229, "trustservercertif": 229, "odbc_connect": 229, "testtabl": 229, "mssql_dataset": 229, "mssql_credenti": 229, "datet": 229, "BY": 229, "parse_d": [229, 236], "f0": 229, "adapt_mssql_date_param": 229, "dt": 229, "has_head": 236, "null_valu": 236, "somenullstr": 236, "frame_equ": 236, "rechunk": 236, "pola": 236, "explic": 236, "compabl": 236, "write_csv": 236, "snowpark": 238, "mar": 238, "weather_data": 238, "meteorologi": 238, "column_ord": 238, "table_typ": 238, "shorter": 238, "polygon": 238, "externalbrows": 238, "snowflake_cli": 238, "geopolygon": 238, "geodata": 238, "ab12345": 238, "eu": 238, "443": 238, "warehous": 238, "datascience_wh": 238, "detailed_data": 238, "service_account_abc": 238, "supersecret": 238, "john_do": 238, "wdomain": 238, "save_as_t": 238, "sparkjbdcdataset": 242, "new_inventori": 243, "inventori": 243, "output_mod": 243, "04_checkpoint": 243, "raw_new_inventori": 243, "inventory_schema": 243, "broker": 243, "kafka": 243, "schemainfer": 243, "fourcc": 249, "mp4v": 249, "opencv": 249, "mp4": 249, "video_dataset": 249, "sequencevideo": 249, "640": 249, "480": 249, "dtype": 249, "uint8": 249, "255": [249, 261], "my_video": 249, "fp": 249, "generatorvideo": 249, "gen": 249, "codec": 249, "avaiabl": 249, "strict": 251, "broken": [251, 269], "decoupl": 253, "registr": 254, "basesessionstor": 254, "context_class": 254, "data_catalog_class": 254, "metaphor": 255, "minim": [255, 268], "astronom": 255, "exploratori": [255, 266], "phase": 255, "formerli": [255, 268], "mini": [255, 268], "my_kedro_pyspark_project": 255, "creator": 255, "custom_prompt": 255, "regex_valid": 255, "__init": 255, "py__": 255, "your_start": 255, "increment": [12, 16, 56, 256], "info_file_handl": 257, "default_log": 257, "richhandl": 257, "aid": 257, "tracebacks_show_loc": 257, "richli": 257, "circleci": 257, "narrow": 257, "120": 257, "jupyter_column": 257, "jupyter_lin": 257, "115": 257, "markup": 257, "bold": 257, "blink": 257, "micropkg_nam": 259, "clash": [259, 264], "renam": [259, 260], "new_package_nam": 259, "bulk": 259, "manifest": 259, "cleaning_util": 259, "aliased_util": 259, "uat": 259, "second_pipelin": 259, "first_pipelin": 259, "fall": 259, "unpack": 259, "embed": [259, 267], "pypi_package_nam": 259, "micropkg_pull_arg": 259, "aliased_pipelin": 259, "pipeline_pull_arg": 259, "package_path": 259, "za": 259, "z0": 259, "9_": 259, "evolv": [260, 269, 271], "modern": [260, 274], "ingest": 260, "unlock": 260, "mental": 260, "collaps": 260, "adher": 260, "revers": 260, "coupl": 260, "scoop": 260, "realli": 260, "lunch_pipelin": 260, "lunch": 260, "verb": 260, "defrost": 260, "eat": 260, "food": 260, "frozen": [260, 271], "thaw": 260, "cook_pipelin": 260, "frozen_veg": 260, "veg": 260, "grill": 260, "grilled_veg": 260, "prep_pipelin": 260, "meal_pipelin": 260, "imagin": 260, "meal": 260, "defrost_nod": 260, "eat_breakfast_pipelin": 260, "eat_breakfast": 260, "breakfast_food": 260, "eat_lunch_pipelin": 260, "eat_lunch": 260, "lunch_food": 260, "disjoint": 260, "cook_breakfast_pipelin": 260, "breakfast": 260, "cook_lunch_pipelin": 260, "final_pipelin": 260, "freez": 260, "remap": 260, "confus": 260, "arbitrarili": 260, "template_pipelin": [260, 271], "input1": 260, "input2": 260, "thu": [260, 265], "override_m": 260, "node_func1": 260, "intermediary_output": 260, "node_func2": 260, "alpha_pipelin": 260, "beta_pipelin": 260, "adder_nod": 261, "adding_a_and_b": 261, "bound": 261, "resolut": [261, 262], "arg1": 261, "arg2": 261, "example_report": 261, "combined_report": 261, "uk_reporting_nod": 261, "uk_input1": 261, "uk_input2": 261, "uk": 261, "ge_reporting_nod": 261, "ge_input1": 261, "ge_input2": 261, "node_tag": [261, 262], "moreov": 261, "pipeline_tag": [261, 262], "chunkwisecsvdataset": 261, "your_project_nam": 261, "chunkwise_dataset": 261, "deepcopi": 261, "bytesio": 261, "_fs_arg": 261, "_credenti": 261, "auto_mkdir": 261, "_storage_opt": 261, "_load_arg": 261, "_save_arg": 261, "buf": 261, "path_or_buf": 261, "fs_file": 261, "getvalu": 261, "repurpos": 261, "wise": 261, "full_data": 261, "textfileread": 261, "data_train": 261, "frac": 261, "data_test": 261, "target_column": 261, "42": 261, "329": 261, "varianc": [262, 264, 265], "mean_so": [262, 265], "m2": [262, 265], "variance_pipelin": 262, "mean_nod": [262, 265], "variance_nod": [262, 265], "pipeline_d": 262, "last_nod": 262, "pipeline_al": 262, "readili": 262, "co": 262, "aforement": 263, "dp": 263, "data_processing_pipelin": 263, "data_science_pipelin": 263, "remind": 263, "centric": 263, "find_pipelin": [263, 264], "travers": 263, "data_engin": 263, "inherit": 264, "scarc": 264, "ram": 264, "dry": 264, "dryrunn": 264, "neccessari": 264, "dry_runn": 264, "input_nam": 264, "missing_input": 264, "03": 264, "24": 264, "09": [264, 267, 271, 272], "482": 264, "483": 264, "my_pipelin": 264, "tackl": 264, "outsourc": 264, "ultim": 264, "666666666666667": [264, 265], "lambdadataset": 264, "pickler": 264, "ouput": [264, 265], "tag1": 264, "tag2": 264, "tag3": 264, "pipeline1": 264, "nodes_nam": 264, "env1": 264, "dash": 264, "full_pipelin": 265, "recomput": 265, "sliced_pipelin": 265, "n_json": 265, "liber": 266, "example_num_train_it": 267, "example_learning_r": 267, "sepal_length": 267, "sepal_width": 267, "petal_length": 267, "petal_width": 267, "145": 267, "146": 267, "147": 267, "149": 267, "2021": 267, "13t15": 267, "08": [267, 271, 272], "255z": 267, "posixpath": 267, "kedro_project": 267, "refresh": [267, 279], "some_act": 267, "came": 267, "my_notebook": 267, "ipynb": 267, "kernelspec": 267, "kernel_nam": 267, "unabl": 267, "saw": 267, "qt": 267, "kedro_iri": 267, "qtconsol": 267, "noth": 267, "trick": 267, "vanilla": 267, "example_dataset_1": 268, "example_dataset_2": 268, "df_2": 268, "wrangl": 269, "messi": 269, "unrefin": 269, "insight": 269, "expertis": 269, "skill": 269, "mathemat": 269, "joke": 269, "someon": 269, "trace": 269, "pictur": 269, "lot": 269, "everyon": 269, "idea": 269, "portabl": [269, 271], "sole": 269, "mutabl": 269, "chonki": 269, "anim": 269, "plump": 269, "round": 269, "heavier": 269, "averag": [269, 281], "likewis": [269, 274], "bulki": 269, "linear_model": 271, "model_select": 271, "train_test_split": 271, "linear": 271, "regress": 271, "passenger_capac": [271, 281], "crew": 271, "d_check_complet": [271, 272, 274], "moon_clearance_complet": [271, 272, 274], "review_scores_r": 271, "preprocess_shuttles_nod": [271, 272], "462": 271, "89": [271, 272], "occas": 271, "portion": 271, "regressor_act": 271, "regressor_candid": 271, "41": 271, "y_t": 271, "rain": 271, "candidate_modelling_pip": 271, "elin": 271, "active_model": 271, "ling_pipelin": 271, "ate_modelling_pipelin": 271, "449": 271, "multithread": 271, "scratch": 272, "astyp": 272, "_parse_monei": 272, "43": 272, "46": 272, "temporari": 272, "garbag": 272, "collector": 272, "rated_shuttl": 272, "left_on": 272, "right_on": 272, "company_id": [272, 274], "28": 272, "leisur": 272, "breath": 272, "summaris": [16, 272], "far": 272, "malt": 272, "helmhold": 272, "unsplash": [272, 275], "proceed": 273, "_build": 273, "english": 273, "restor": 273, "myst": 273, "autodoc": 273, "autosummari": 273, "autosummary_gener": 273, "apidoc": 273, "toctre": 273, "touch": 273, "fiction": 274, "moon": [274, 275], "travel": 274, "fleet": 274, "rate": 274, "spacecraft": 274, "passeng": [274, 281], "capac": [274, 281], "five": 274, "company_loc": 274, "total_fleet_count": 274, "35029": 274, "niue": 274, "30292": 274, "anguilla": 274, "19032": 274, "russian": 274, "feder": 274, "8238": 274, "91": 274, "barbado": 274, "30342": 274, "nan": 274, "sao": 274, "tome": 274, "shuttle_loc": 274, "shuttle_typ": [274, 281], "engine_typ": 274, "63561": 274, "v5": 274, "quantum": 274, "325": 274, "36260": 274, "780": 274, "57015": 274, "715": 274, "14035": 274, "plasma": 274, "770": 274, "10036": 274, "v2": 274, "approxim": 275, "2160": 275, "tourism": 275, "industri": 275, "boom": 275, "thousand": 275, "tourist": 275, "amen": 275, "trip": 275, "diaz": 275, "hit": 275, "answer": [275, 276], "reader": 275, "errno": 276, "kedro_reload": 276, "kedro_project_setup": 276, "158": 276, "resum": 276, "_lib": 276, "pyx": 276, "textread": 276, "__cinit__": 276, "689": 276, "_setup_parser_sourc": 276, "exc": 276, "sharabl": 277, "jupyterlab_serv": 277, "sneak": 277, "haven": [279, 280, 281], "autoreload": 279, "my_shareable_pipelin": 279, "preview_arg": 280, "nrow": 280, "plotlydataset": 281, "shuttle_passenger_capacity_plot_exp": 281, "shuttle_passenger_capacity_plot_go": 281, "graph_obj": 281, "compare_passenger_capacity_exp": 281, "groupbi": 281, "numeric_onli": 281, "reset_index": 281, "graph_object": 281, "compare_passenger_capacity_go": 281, "data_fram": 281, "dummy_confusion_matrix": 281, "THE": [11, 15], "WITH": 11, "TO": [13, 16], "revis": 13, "_arg": 14, "utf": 14, "minio": 12, "ON": 15}, "objects": {"": [[60, 0, 0, "-", "kedro"], [206, 0, 0, "-", "kedro_datasets"]], "kedro": [[61, 1, 1, "", "KedroPythonVersionWarning"], [62, 0, 0, "-", "config"], [67, 0, 0, "-", "extras"], [112, 0, 0, "-", "framework"], [173, 0, 0, "-", "io"], [186, 0, 0, "-", "ipython"], [190, 0, 0, "-", "logging"], [192, 0, 0, "-", "pipeline"], [198, 0, 0, "-", "runner"], [204, 0, 0, "-", "utils"]], "kedro.KedroPythonVersionWarning": [[61, 2, 1, "", "args"], [61, 3, 1, "", "with_traceback"]], "kedro.config": [[63, 1, 1, "", "ConfigLoader"], [64, 1, 1, "", "MissingConfigException"], [65, 1, 1, "", "OmegaConfigLoader"], [66, 1, 1, "", "TemplatedConfigLoader"]], "kedro.config.ConfigLoader": [[63, 3, 1, "", "__init__"], [63, 3, 1, "", "clear"], [63, 4, 1, "", "conf_paths"], [63, 3, 1, "", "copy"], [63, 3, 1, "", "fromkeys"], [63, 3, 1, "", "get"], [63, 3, 1, "", "items"], [63, 3, 1, "", "keys"], [63, 3, 1, "", "pop"], [63, 3, 1, "", "popitem"], [63, 3, 1, "", "setdefault"], [63, 3, 1, "", "update"], [63, 3, 1, "", "values"]], "kedro.config.MissingConfigException": [[64, 2, 1, "", "args"], [64, 3, 1, "", "with_traceback"]], "kedro.config.OmegaConfigLoader": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "clear"], [65, 3, 1, "", "copy"], [65, 3, 1, "", "fromkeys"], [65, 3, 1, "", "get"], [65, 3, 1, "", "items"], [65, 3, 1, "", "keys"], [65, 3, 1, "", "load_and_merge_dir_config"], [65, 3, 1, "", "pop"], [65, 3, 1, "", "popitem"], [65, 3, 1, "", "setdefault"], [65, 3, 1, "", "update"], [65, 3, 1, "", "values"]], "kedro.config.TemplatedConfigLoader": [[66, 3, 1, "", "__init__"], [66, 3, 1, "", "clear"], [66, 4, 1, "", "conf_paths"], [66, 3, 1, "", "copy"], [66, 3, 1, "", "fromkeys"], [66, 3, 1, "", "get"], [66, 3, 1, "", "items"], [66, 3, 1, "", "keys"], [66, 3, 1, "", "pop"], [66, 3, 1, "", "popitem"], [66, 3, 1, "", "setdefault"], [66, 3, 1, "", "update"], [66, 3, 1, "", "values"]], "kedro.extras": [[68, 0, 0, "-", "datasets"], [107, 0, 0, "-", "extensions"], [109, 0, 0, "-", "logging"]], "kedro.extras.datasets.api": [[69, 1, 1, "", "APIDataSet"]], "kedro.extras.datasets.api.APIDataSet": [[69, 3, 1, "", "__init__"], [69, 3, 1, "", "exists"], [69, 3, 1, "", "from_config"], [69, 3, 1, "", "load"], [69, 3, 1, "", "release"], [69, 3, 1, "", "save"]], "kedro.extras.datasets.biosequence": [[70, 1, 1, "", "BioSequenceDataSet"]], "kedro.extras.datasets.biosequence.BioSequenceDataSet": [[70, 2, 1, "", "DEFAULT_LOAD_ARGS"], [70, 2, 1, "", "DEFAULT_SAVE_ARGS"], [70, 3, 1, "", "__init__"], [70, 3, 1, "", "exists"], [70, 3, 1, "", "from_config"], [70, 3, 1, "", "invalidate_cache"], [70, 3, 1, "", "load"], [70, 3, 1, "", "release"], [70, 3, 1, "", "save"]], "kedro.extras.datasets.dask": [[71, 1, 1, "", "ParquetDataSet"]], "kedro.extras.datasets.dask.ParquetDataSet": [[71, 2, 1, "", "DEFAULT_LOAD_ARGS"], [71, 2, 1, "", "DEFAULT_SAVE_ARGS"], [71, 3, 1, "", "__init__"], [71, 3, 1, "", "exists"], [71, 3, 1, "", "from_config"], [71, 4, 1, "", "fs_args"], [71, 3, 1, "", "load"], [71, 3, 1, "", "release"], [71, 3, 1, "", "save"]], "kedro.extras.datasets.email": [[72, 1, 1, "", "EmailMessageDataSet"]], "kedro.extras.datasets.email.EmailMessageDataSet": [[72, 2, 1, "", "DEFAULT_LOAD_ARGS"], [72, 2, 1, "", "DEFAULT_SAVE_ARGS"], [72, 3, 1, "", "__init__"], [72, 3, 1, "", "exists"], [72, 3, 1, "", "from_config"], [72, 3, 1, "", "load"], [72, 3, 1, "", "release"], [72, 3, 1, "", "resolve_load_version"], [72, 3, 1, "", "resolve_save_version"], [72, 3, 1, "", "save"]], "kedro.extras.datasets.geopandas": [[73, 1, 1, "", "GeoJSONDataSet"]], "kedro.extras.datasets.geopandas.GeoJSONDataSet": [[73, 2, 1, "", "DEFAULT_LOAD_ARGS"], [73, 2, 1, "", "DEFAULT_SAVE_ARGS"], [73, 3, 1, "", "__init__"], [73, 3, 1, "", "exists"], [73, 3, 1, "", "from_config"], [73, 3, 1, "", "invalidate_cache"], [73, 3, 1, "", "load"], [73, 3, 1, "", "release"], [73, 3, 1, "", "resolve_load_version"], [73, 3, 1, "", "resolve_save_version"], [73, 3, 1, "", "save"]], "kedro.extras.datasets.holoviews": [[74, 1, 1, "", "HoloviewsWriter"]], "kedro.extras.datasets.holoviews.HoloviewsWriter": [[74, 2, 1, "", "DEFAULT_SAVE_ARGS"], [74, 3, 1, "", "__init__"], [74, 3, 1, "", "exists"], [74, 3, 1, "", "from_config"], [74, 3, 1, "", "load"], [74, 3, 1, "", "release"], [74, 3, 1, "", "resolve_load_version"], [74, 3, 1, "", "resolve_save_version"], [74, 3, 1, "", "save"]], "kedro.extras.datasets.json": [[75, 1, 1, "", "JSONDataSet"]], "kedro.extras.datasets.json.JSONDataSet": [[75, 2, 1, "", "DEFAULT_SAVE_ARGS"], [75, 3, 1, "", "__init__"], [75, 3, 1, "", "exists"], [75, 3, 1, "", "from_config"], [75, 3, 1, "", "load"], [75, 3, 1, "", "release"], [75, 3, 1, "", "resolve_load_version"], [75, 3, 1, "", "resolve_save_version"], [75, 3, 1, "", "save"]], "kedro.extras.datasets.matplotlib": [[76, 1, 1, "", "MatplotlibWriter"]], "kedro.extras.datasets.matplotlib.MatplotlibWriter": [[76, 2, 1, "", "DEFAULT_SAVE_ARGS"], [76, 3, 1, "", "__init__"], [76, 3, 1, "", "exists"], [76, 3, 1, "", "from_config"], [76, 3, 1, "", "load"], [76, 3, 1, "", "release"], [76, 3, 1, "", "resolve_load_version"], [76, 3, 1, "", "resolve_save_version"], [76, 3, 1, "", "save"]], "kedro.extras.datasets.networkx": [[77, 1, 1, "", "GMLDataSet"], [78, 1, 1, "", "GraphMLDataSet"], [79, 1, 1, "", "JSONDataSet"]], "kedro.extras.datasets.networkx.GMLDataSet": [[77, 2, 1, "", "DEFAULT_LOAD_ARGS"], [77, 2, 1, "", "DEFAULT_SAVE_ARGS"], [77, 3, 1, "", "__init__"], [77, 3, 1, "", "exists"], [77, 3, 1, "", "from_config"], [77, 3, 1, "", "load"], [77, 3, 1, "", "release"], [77, 3, 1, "", "resolve_load_version"], [77, 3, 1, "", "resolve_save_version"], [77, 3, 1, "", "save"]], "kedro.extras.datasets.networkx.GraphMLDataSet": [[78, 2, 1, "", "DEFAULT_LOAD_ARGS"], [78, 2, 1, "", "DEFAULT_SAVE_ARGS"], [78, 3, 1, "", "__init__"], [78, 3, 1, "", "exists"], [78, 3, 1, "", "from_config"], [78, 3, 1, "", "load"], [78, 3, 1, "", "release"], [78, 3, 1, "", "resolve_load_version"], [78, 3, 1, "", "resolve_save_version"], [78, 3, 1, "", "save"]], "kedro.extras.datasets.networkx.JSONDataSet": [[79, 2, 1, "", "DEFAULT_LOAD_ARGS"], [79, 2, 1, "", "DEFAULT_SAVE_ARGS"], [79, 3, 1, "", "__init__"], [79, 3, 1, "", "exists"], [79, 3, 1, "", "from_config"], [79, 3, 1, "", "load"], [79, 3, 1, "", "release"], [79, 3, 1, "", "resolve_load_version"], [79, 3, 1, "", "resolve_save_version"], [79, 3, 1, "", "save"]], "kedro.extras.datasets.pandas": [[80, 1, 1, "", "CSVDataSet"], [81, 1, 1, "", "ExcelDataSet"], [82, 1, 1, "", "FeatherDataSet"], [83, 1, 1, "", "GBQQueryDataSet"], [84, 1, 1, "", "GBQTableDataSet"], [85, 1, 1, "", "GenericDataSet"], [86, 1, 1, "", "HDFDataSet"], [87, 1, 1, "", "JSONDataSet"], [88, 1, 1, "", "ParquetDataSet"], [89, 1, 1, "", "SQLQueryDataSet"], [90, 1, 1, "", "SQLTableDataSet"], [91, 1, 1, "", "XMLDataSet"]], "kedro.extras.datasets.pandas.CSVDataSet": [[80, 2, 1, "", "DEFAULT_LOAD_ARGS"], [80, 2, 1, "", "DEFAULT_SAVE_ARGS"], [80, 3, 1, "", "__init__"], [80, 3, 1, "", "exists"], [80, 3, 1, "", "from_config"], [80, 3, 1, "", "load"], [80, 3, 1, "", "release"], [80, 3, 1, "", "resolve_load_version"], [80, 3, 1, "", "resolve_save_version"], [80, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.ExcelDataSet": [[81, 2, 1, "", "DEFAULT_LOAD_ARGS"], [81, 2, 1, "", "DEFAULT_SAVE_ARGS"], [81, 3, 1, "", "__init__"], [81, 3, 1, "", "exists"], [81, 3, 1, "", "from_config"], [81, 3, 1, "", "load"], [81, 3, 1, "", "release"], [81, 3, 1, "", "resolve_load_version"], [81, 3, 1, "", "resolve_save_version"], [81, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.FeatherDataSet": [[82, 2, 1, "", "DEFAULT_LOAD_ARGS"], [82, 2, 1, "", "DEFAULT_SAVE_ARGS"], [82, 3, 1, "", "__init__"], [82, 3, 1, "", "exists"], [82, 3, 1, "", "from_config"], [82, 3, 1, "", "load"], [82, 3, 1, "", "release"], [82, 3, 1, "", "resolve_load_version"], [82, 3, 1, "", "resolve_save_version"], [82, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.GBQQueryDataSet": [[83, 2, 1, "", "DEFAULT_LOAD_ARGS"], [83, 3, 1, "", "__init__"], [83, 3, 1, "", "exists"], [83, 3, 1, "", "from_config"], [83, 3, 1, "", "load"], [83, 3, 1, "", "release"], [83, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.GBQTableDataSet": [[84, 2, 1, "", "DEFAULT_LOAD_ARGS"], [84, 2, 1, "", "DEFAULT_SAVE_ARGS"], [84, 3, 1, "", "__init__"], [84, 3, 1, "", "exists"], [84, 3, 1, "", "from_config"], [84, 3, 1, "", "load"], [84, 3, 1, "", "release"], [84, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.GenericDataSet": [[85, 2, 1, "", "DEFAULT_LOAD_ARGS"], [85, 2, 1, "", "DEFAULT_SAVE_ARGS"], [85, 3, 1, "", "__init__"], [85, 3, 1, "", "exists"], [85, 3, 1, "", "from_config"], [85, 3, 1, "", "load"], [85, 3, 1, "", "release"], [85, 3, 1, "", "resolve_load_version"], [85, 3, 1, "", "resolve_save_version"], [85, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.HDFDataSet": [[86, 2, 1, "", "DEFAULT_LOAD_ARGS"], [86, 2, 1, "", "DEFAULT_SAVE_ARGS"], [86, 3, 1, "", "__init__"], [86, 3, 1, "", "exists"], [86, 3, 1, "", "from_config"], [86, 3, 1, "", "load"], [86, 3, 1, "", "release"], [86, 3, 1, "", "resolve_load_version"], [86, 3, 1, "", "resolve_save_version"], [86, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.JSONDataSet": [[87, 2, 1, "", "DEFAULT_LOAD_ARGS"], [87, 2, 1, "", "DEFAULT_SAVE_ARGS"], [87, 3, 1, "", "__init__"], [87, 3, 1, "", "exists"], [87, 3, 1, "", "from_config"], [87, 3, 1, "", "load"], [87, 3, 1, "", "release"], [87, 3, 1, "", "resolve_load_version"], [87, 3, 1, "", "resolve_save_version"], [87, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.ParquetDataSet": [[88, 2, 1, "", "DEFAULT_LOAD_ARGS"], [88, 2, 1, "", "DEFAULT_SAVE_ARGS"], [88, 3, 1, "", "__init__"], [88, 3, 1, "", "exists"], [88, 3, 1, "", "from_config"], [88, 3, 1, "", "load"], [88, 3, 1, "", "release"], [88, 3, 1, "", "resolve_load_version"], [88, 3, 1, "", "resolve_save_version"], [88, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.SQLQueryDataSet": [[89, 3, 1, "", "__init__"], [89, 3, 1, "", "create_connection"], [89, 2, 1, "", "engines"], [89, 3, 1, "", "exists"], [89, 3, 1, "", "from_config"], [89, 3, 1, "", "load"], [89, 3, 1, "", "release"], [89, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.SQLTableDataSet": [[90, 2, 1, "", "DEFAULT_LOAD_ARGS"], [90, 2, 1, "", "DEFAULT_SAVE_ARGS"], [90, 3, 1, "", "__init__"], [90, 3, 1, "", "create_connection"], [90, 2, 1, "", "engines"], [90, 3, 1, "", "exists"], [90, 3, 1, "", "from_config"], [90, 3, 1, "", "load"], [90, 3, 1, "", "release"], [90, 3, 1, "", "save"]], "kedro.extras.datasets.pandas.XMLDataSet": [[91, 2, 1, "", "DEFAULT_LOAD_ARGS"], [91, 2, 1, "", "DEFAULT_SAVE_ARGS"], [91, 3, 1, "", "__init__"], [91, 3, 1, "", "exists"], [91, 3, 1, "", "from_config"], [91, 3, 1, "", "load"], [91, 3, 1, "", "release"], [91, 3, 1, "", "resolve_load_version"], [91, 3, 1, "", "resolve_save_version"], [91, 3, 1, "", "save"]], "kedro.extras.datasets.pickle": [[92, 1, 1, "", "PickleDataSet"]], "kedro.extras.datasets.pickle.PickleDataSet": [[92, 2, 1, "", "DEFAULT_LOAD_ARGS"], [92, 2, 1, "", "DEFAULT_SAVE_ARGS"], [92, 3, 1, "", "__init__"], [92, 3, 1, "", "exists"], [92, 3, 1, "", "from_config"], [92, 3, 1, "", "load"], [92, 3, 1, "", "release"], [92, 3, 1, "", "resolve_load_version"], [92, 3, 1, "", "resolve_save_version"], [92, 3, 1, "", "save"]], "kedro.extras.datasets.pillow": [[93, 1, 1, "", "ImageDataSet"]], "kedro.extras.datasets.pillow.ImageDataSet": [[93, 2, 1, "", "DEFAULT_SAVE_ARGS"], [93, 3, 1, "", "__init__"], [93, 3, 1, "", "exists"], [93, 3, 1, "", "from_config"], [93, 3, 1, "", "load"], [93, 3, 1, "", "release"], [93, 3, 1, "", "resolve_load_version"], [93, 3, 1, "", "resolve_save_version"], [93, 3, 1, "", "save"]], "kedro.extras.datasets.plotly": [[94, 1, 1, "", "JSONDataSet"], [95, 1, 1, "", "PlotlyDataSet"]], "kedro.extras.datasets.plotly.JSONDataSet": [[94, 2, 1, "", "DEFAULT_LOAD_ARGS"], [94, 2, 1, "", "DEFAULT_SAVE_ARGS"], [94, 3, 1, "", "__init__"], [94, 3, 1, "", "exists"], [94, 3, 1, "", "from_config"], [94, 3, 1, "", "load"], [94, 3, 1, "", "release"], [94, 3, 1, "", "resolve_load_version"], [94, 3, 1, "", "resolve_save_version"], [94, 3, 1, "", "save"]], "kedro.extras.datasets.plotly.PlotlyDataSet": [[95, 2, 1, "", "DEFAULT_LOAD_ARGS"], [95, 2, 1, "", "DEFAULT_SAVE_ARGS"], [95, 3, 1, "", "__init__"], [95, 3, 1, "", "exists"], [95, 3, 1, "", "from_config"], [95, 3, 1, "", "load"], [95, 3, 1, "", "release"], [95, 3, 1, "", "resolve_load_version"], [95, 3, 1, "", "resolve_save_version"], [95, 3, 1, "", "save"]], "kedro.extras.datasets.redis": [[96, 1, 1, "", "PickleDataSet"]], "kedro.extras.datasets.redis.PickleDataSet": [[96, 2, 1, "", "DEFAULT_LOAD_ARGS"], [96, 2, 1, "", "DEFAULT_REDIS_URL"], [96, 2, 1, "", "DEFAULT_SAVE_ARGS"], [96, 3, 1, "", "__init__"], [96, 3, 1, "", "exists"], [96, 3, 1, "", "from_config"], [96, 3, 1, "", "load"], [96, 3, 1, "", "release"], [96, 3, 1, "", "save"]], "kedro.extras.datasets.spark": [[97, 1, 1, "", "DeltaTableDataSet"], [98, 1, 1, "", "SparkDataSet"], [99, 1, 1, "", "SparkHiveDataSet"], [100, 1, 1, "", "SparkJDBCDataSet"]], "kedro.extras.datasets.spark.DeltaTableDataSet": [[97, 3, 1, "", "__init__"], [97, 3, 1, "", "exists"], [97, 3, 1, "", "from_config"], [97, 3, 1, "", "load"], [97, 3, 1, "", "release"], [97, 3, 1, "", "save"]], "kedro.extras.datasets.spark.SparkDataSet": [[98, 2, 1, "", "DEFAULT_LOAD_ARGS"], [98, 2, 1, "", "DEFAULT_SAVE_ARGS"], [98, 3, 1, "", "__init__"], [98, 3, 1, "", "exists"], [98, 3, 1, "", "from_config"], [98, 3, 1, "", "load"], [98, 3, 1, "", "release"], [98, 3, 1, "", "resolve_load_version"], [98, 3, 1, "", "resolve_save_version"], [98, 3, 1, "", "save"]], "kedro.extras.datasets.spark.SparkHiveDataSet": [[99, 2, 1, "", "DEFAULT_SAVE_ARGS"], [99, 3, 1, "", "__init__"], [99, 3, 1, "", "exists"], [99, 3, 1, "", "from_config"], [99, 3, 1, "", "load"], [99, 3, 1, "", "release"], [99, 3, 1, "", "save"]], "kedro.extras.datasets.spark.SparkJDBCDataSet": [[100, 2, 1, "", "DEFAULT_LOAD_ARGS"], [100, 2, 1, "", "DEFAULT_SAVE_ARGS"], [100, 3, 1, "", "__init__"], [100, 3, 1, "", "exists"], [100, 3, 1, "", "from_config"], [100, 3, 1, "", "load"], [100, 3, 1, "", "release"], [100, 3, 1, "", "save"]], "kedro.extras.datasets.svmlight": [[101, 1, 1, "", "SVMLightDataSet"]], "kedro.extras.datasets.svmlight.SVMLightDataSet": [[101, 2, 1, "", "DEFAULT_LOAD_ARGS"], [101, 2, 1, "", "DEFAULT_SAVE_ARGS"], [101, 3, 1, "", "exists"], [101, 3, 1, "", "from_config"], [101, 3, 1, "", "load"], [101, 3, 1, "", "release"], [101, 3, 1, "", "resolve_load_version"], [101, 3, 1, "", "resolve_save_version"], [101, 3, 1, "", "save"]], "kedro.extras.datasets.tensorflow": [[102, 1, 1, "", "TensorFlowModelDataset"]], "kedro.extras.datasets.tensorflow.TensorFlowModelDataset": [[102, 2, 1, "", "DEFAULT_LOAD_ARGS"], [102, 2, 1, "", "DEFAULT_SAVE_ARGS"], [102, 3, 1, "", "__init__"], [102, 3, 1, "", "exists"], [102, 3, 1, "", "from_config"], [102, 3, 1, "", "load"], [102, 3, 1, "", "release"], [102, 3, 1, "", "resolve_load_version"], [102, 3, 1, "", "resolve_save_version"], [102, 3, 1, "", "save"]], "kedro.extras.datasets.text": [[103, 1, 1, "", "TextDataSet"]], "kedro.extras.datasets.text.TextDataSet": [[103, 3, 1, "", "__init__"], [103, 3, 1, "", "exists"], [103, 3, 1, "", "from_config"], [103, 3, 1, "", "load"], [103, 3, 1, "", "release"], [103, 3, 1, "", "resolve_load_version"], [103, 3, 1, "", "resolve_save_version"], [103, 3, 1, "", "save"]], "kedro.extras.datasets.tracking": [[104, 1, 1, "", "JSONDataSet"], [105, 1, 1, "", "MetricsDataSet"]], "kedro.extras.datasets.tracking.JSONDataSet": [[104, 2, 1, "", "DEFAULT_SAVE_ARGS"], [104, 3, 1, "", "__init__"], [104, 3, 1, "", "exists"], [104, 3, 1, "", "from_config"], [104, 3, 1, "", "load"], [104, 3, 1, "", "release"], [104, 3, 1, "", "resolve_load_version"], [104, 3, 1, "", "resolve_save_version"], [104, 3, 1, "", "save"], [104, 2, 1, "", "versioned"]], "kedro.extras.datasets.tracking.MetricsDataSet": [[105, 2, 1, "", "DEFAULT_SAVE_ARGS"], [105, 3, 1, "", "__init__"], [105, 3, 1, "", "exists"], [105, 3, 1, "", "from_config"], [105, 3, 1, "", "load"], [105, 3, 1, "", "release"], [105, 3, 1, "", "resolve_load_version"], [105, 3, 1, "", "resolve_save_version"], [105, 3, 1, "", "save"], [105, 2, 1, "", "versioned"]], "kedro.extras.datasets.yaml": [[106, 1, 1, "", "YAMLDataSet"]], "kedro.extras.datasets.yaml.YAMLDataSet": [[106, 2, 1, "", "DEFAULT_SAVE_ARGS"], [106, 3, 1, "", "__init__"], [106, 3, 1, "", "exists"], [106, 3, 1, "", "from_config"], [106, 3, 1, "", "load"], [106, 3, 1, "", "release"], [106, 3, 1, "", "resolve_load_version"], [106, 3, 1, "", "resolve_save_version"], [106, 3, 1, "", "save"]], "kedro.extras.extensions": [[108, 0, 0, "-", "ipython"]], "kedro.extras.logging": [[110, 0, 0, "-", "color_logger"]], "kedro.extras.logging.color_logger": [[111, 1, 1, "", "ColorHandler"]], "kedro.framework": [[113, 0, 0, "-", "cli"], [145, 0, 0, "-", "context"], [148, 0, 0, "-", "hooks"], [157, 0, 0, "-", "project"], [162, 0, 0, "-", "session"], [170, 0, 0, "-", "startup"]], "kedro.framework.cli": [[114, 0, 0, "-", "catalog"], [115, 0, 0, "-", "cli"], [118, 0, 0, "-", "hooks"], [125, 0, 0, "-", "jupyter"], [127, 0, 0, "-", "micropkg"], [129, 0, 0, "-", "pipeline"], [131, 0, 0, "-", "project"], [132, 0, 0, "-", "registry"], [133, 0, 0, "-", "starters"], [135, 0, 0, "-", "utils"]], "kedro.framework.cli.cli": [[116, 1, 1, "", "KedroCLI"], [117, 5, 1, "", "main"]], "kedro.framework.cli.hooks": [[119, 0, 0, "-", "manager"], [122, 0, 0, "-", "markers"], [123, 0, 0, "-", "specs"]], "kedro.framework.cli.hooks.manager": [[120, 1, 1, "", "CLIHooksManager"], [121, 5, 1, "", "get_cli_hook_manager"]], "kedro.framework.cli.hooks.specs": [[124, 1, 1, "", "CLICommandSpecs"]], "kedro.framework.cli.hooks.specs.CLICommandSpecs": [[124, 3, 1, "", "after_command_run"], [124, 3, 1, "", "before_command_run"]], "kedro.framework.cli.jupyter": [[126, 1, 1, "", "JupyterCommandGroup"]], "kedro.framework.cli.jupyter.JupyterCommandGroup": [[126, 3, 1, "", "list_commands"]], "kedro.framework.cli.micropkg": [[128, 5, 1, "", "safe_extract"]], "kedro.framework.cli.pipeline": [[130, 1, 1, "", "PipelineArtifacts"]], "kedro.framework.cli.pipeline.PipelineArtifacts": [[130, 3, 1, "", "count"], [130, 3, 1, "", "index"], [130, 2, 1, "", "pipeline_conf"], [130, 2, 1, "", "pipeline_dir"], [130, 2, 1, "", "pipeline_tests"]], "kedro.framework.cli.starters": [[134, 1, 1, "", "KedroStarterSpec"]], "kedro.framework.cli.starters.KedroStarterSpec": [[134, 2, 1, "", "alias"], [134, 2, 1, "", "directory"], [134, 2, 1, "", "origin"], [134, 2, 1, "", "template_path"]], "kedro.framework.cli.utils": [[136, 1, 1, "", "CommandCollection"], [137, 1, 1, "", "KedroCliError"], [138, 5, 1, "", "command_with_verbosity"], [139, 5, 1, "", "env_option"], [140, 5, 1, "", "find_stylesheets"], [141, 5, 1, "", "forward_command"], [142, 5, 1, "", "get_pkg_version"], [143, 5, 1, "", "python_call"], [144, 5, 1, "", "split_string"]], "kedro.framework.cli.utils.KedroCliError": [[137, 2, 1, "", "VERBOSE_ERROR"], [137, 2, 1, "", "args"], [137, 2, 1, "", "exit_code"], [137, 3, 1, "", "format_message"], [137, 3, 1, "", "show"], [137, 3, 1, "", "with_traceback"]], "kedro.framework.context": [[146, 1, 1, "", "KedroContext"], [147, 1, 1, "", "KedroContextError"]], "kedro.framework.context.KedroContext": [[146, 3, 1, "", "__init__"], [146, 4, 1, "", "catalog"], [146, 4, 1, "", "config_loader"], [146, 4, 1, "", "env"], [146, 4, 1, "", "params"], [146, 4, 1, "", "project_path"]], "kedro.framework.context.KedroContextError": [[147, 2, 1, "", "args"], [147, 3, 1, "", "with_traceback"]], "kedro.framework.hooks": [[149, 0, 0, "-", "manager"], [150, 0, 0, "-", "markers"], [151, 0, 0, "-", "specs"]], "kedro.framework.hooks.specs": [[152, 1, 1, "", "DataCatalogSpecs"], [153, 1, 1, "", "DatasetSpecs"], [154, 1, 1, "", "KedroContextSpecs"], [155, 1, 1, "", "NodeSpecs"], [156, 1, 1, "", "PipelineSpecs"]], "kedro.framework.hooks.specs.DataCatalogSpecs": [[152, 3, 1, "", "after_catalog_created"]], "kedro.framework.hooks.specs.DatasetSpecs": [[153, 3, 1, "", "after_dataset_loaded"], [153, 3, 1, "", "after_dataset_saved"], [153, 3, 1, "", "before_dataset_loaded"], [153, 3, 1, "", "before_dataset_saved"]], "kedro.framework.hooks.specs.KedroContextSpecs": [[154, 3, 1, "", "after_context_created"]], "kedro.framework.hooks.specs.NodeSpecs": [[155, 3, 1, "", "after_node_run"], [155, 3, 1, "", "before_node_run"], [155, 3, 1, "", "on_node_error"]], "kedro.framework.hooks.specs.PipelineSpecs": [[156, 3, 1, "", "after_pipeline_run"], [156, 3, 1, "", "before_pipeline_run"], [156, 3, 1, "", "on_pipeline_error"]], "kedro.framework.project": [[158, 5, 1, "", "configure_logging"], [159, 5, 1, "", "configure_project"], [160, 5, 1, "", "find_pipelines"], [161, 5, 1, "", "validate_settings"]], "kedro.framework.session": [[163, 0, 0, "-", "session"], [166, 0, 0, "-", "shelvestore"], [168, 0, 0, "-", "store"]], "kedro.framework.session.session": [[164, 1, 1, "", "KedroSession"], [165, 1, 1, "", "KedroSessionError"]], "kedro.framework.session.session.KedroSession": [[164, 3, 1, "", "close"], [164, 3, 1, "", "create"], [164, 3, 1, "", "load_context"], [164, 3, 1, "", "run"], [164, 4, 1, "", "store"]], "kedro.framework.session.session.KedroSessionError": [[165, 2, 1, "", "args"], [165, 3, 1, "", "with_traceback"]], "kedro.framework.session.shelvestore": [[167, 1, 1, "", "ShelveStore"]], "kedro.framework.session.store": [[169, 1, 1, "", "BaseSessionStore"]], "kedro.framework.startup": [[171, 1, 1, "", "ProjectMetadata"], [172, 5, 1, "", "bootstrap_project"]], "kedro.framework.startup.ProjectMetadata": [[171, 2, 1, "", "config_file"], [171, 3, 1, "", "count"], [171, 3, 1, "", "index"], [171, 2, 1, "", "kedro_init_version"], [171, 2, 1, "", "package_name"], [171, 2, 1, "", "project_name"], [171, 2, 1, "", "project_path"], [171, 2, 1, "", "project_version"], [171, 2, 1, "", "source_dir"]], "kedro.io": [[174, 1, 1, "", "AbstractDataSet"], [175, 1, 1, "", "AbstractVersionedDataSet"], [176, 2, 1, "", "CachedDataSet"], [177, 1, 1, "", "DataCatalog"], [178, 2, 1, "", "DataSetAlreadyExistsError"], [179, 2, 1, "", "DataSetError"], [180, 2, 1, "", "DataSetNotFoundError"], [181, 2, 1, "", "IncrementalDataSet"], [182, 2, 1, "", "LambdaDataSet"], [183, 2, 1, "", "MemoryDataSet"], [184, 2, 1, "", "PartitionedDataSet"], [185, 1, 1, "", "Version"]], "kedro.io.AbstractDataSet": [[174, 3, 1, "", "exists"], [174, 3, 1, "", "from_config"], [174, 3, 1, "", "load"], [174, 3, 1, "", "release"], [174, 3, 1, "", "save"]], "kedro.io.AbstractVersionedDataSet": [[175, 3, 1, "", "__init__"], [175, 3, 1, "", "exists"], [175, 3, 1, "", "from_config"], [175, 3, 1, "", "load"], [175, 3, 1, "", "release"], [175, 3, 1, "", "resolve_load_version"], [175, 3, 1, "", "resolve_save_version"], [175, 3, 1, "", "save"]], "kedro.io.DataCatalog": [[177, 3, 1, "", "__init__"], [177, 3, 1, "", "add"], [177, 3, 1, "", "add_all"], [177, 3, 1, "", "add_feed_dict"], [177, 3, 1, "", "confirm"], [177, 3, 1, "", "exists"], [177, 3, 1, "", "from_config"], [177, 3, 1, "", "list"], [177, 3, 1, "", "load"], [177, 3, 1, "", "release"], [177, 3, 1, "", "save"], [177, 3, 1, "", "shallow_copy"]], "kedro.io.Version": [[185, 3, 1, "", "count"], [185, 3, 1, "", "index"], [185, 2, 1, "", "load"], [185, 2, 1, "", "save"]], "kedro.ipython": [[187, 5, 1, "", "load_ipython_extension"], [188, 5, 1, "", "magic_reload_kedro"], [189, 5, 1, "", "reload_kedro"]], "kedro.logging": [[191, 1, 1, "", "RichHandler"]], "kedro.pipeline": [[193, 1, 1, "", "Pipeline"], [196, 5, 1, "", "node"]], "kedro.pipeline.Pipeline": [[193, 3, 1, "", "__init__"], [193, 3, 1, "", "all_inputs"], [193, 3, 1, "", "all_outputs"], [193, 3, 1, "", "data_sets"], [193, 3, 1, "", "describe"], [193, 3, 1, "", "filter"], [193, 3, 1, "", "from_inputs"], [193, 3, 1, "", "from_nodes"], [193, 4, 1, "", "grouped_nodes"], [193, 3, 1, "", "inputs"], [193, 4, 1, "", "node_dependencies"], [193, 4, 1, "", "nodes"], [193, 3, 1, "", "only_nodes"], [193, 3, 1, "", "only_nodes_with_inputs"], [193, 3, 1, "", "only_nodes_with_namespace"], [193, 3, 1, "", "only_nodes_with_outputs"], [193, 3, 1, "", "only_nodes_with_tags"], [193, 3, 1, "", "outputs"], [193, 3, 1, "", "tag"], [193, 3, 1, "", "to_json"], [193, 3, 1, "", "to_nodes"], [193, 3, 1, "", "to_outputs"]], "kedro.pipeline.modular_pipeline": [[194, 1, 1, "", "ModularPipelineError"], [195, 5, 1, "", "pipeline"]], "kedro.pipeline.modular_pipeline.ModularPipelineError": [[194, 2, 1, "", "args"], [194, 3, 1, "", "with_traceback"]], "kedro.pipeline.node": [[197, 1, 1, "", "Node"]], "kedro.pipeline.node.Node": [[197, 3, 1, "", "__init__"], [197, 4, 1, "", "confirms"], [197, 4, 1, "", "func"], [197, 4, 1, "", "inputs"], [197, 4, 1, "", "name"], [197, 4, 1, "", "namespace"], [197, 4, 1, "", "outputs"], [197, 3, 1, "", "run"], [197, 4, 1, "", "short_name"], [197, 3, 1, "", "tag"], [197, 4, 1, "", "tags"]], "kedro.runner": [[199, 1, 1, "", "AbstractRunner"], [200, 1, 1, "", "ParallelRunner"], [201, 1, 1, "", "SequentialRunner"], [202, 1, 1, "", "ThreadRunner"], [203, 5, 1, "", "run_node"]], "kedro.runner.AbstractRunner": [[199, 3, 1, "", "__init__"], [199, 3, 1, "", "create_default_data_set"], [199, 3, 1, "", "run"], [199, 3, 1, "", "run_only_missing"]], "kedro.runner.ParallelRunner": [[200, 3, 1, "", "__init__"], [200, 3, 1, "", "create_default_data_set"], [200, 3, 1, "", "run"], [200, 3, 1, "", "run_only_missing"]], "kedro.runner.SequentialRunner": [[201, 3, 1, "", "__init__"], [201, 3, 1, "", "create_default_data_set"], [201, 3, 1, "", "run"], [201, 3, 1, "", "run_only_missing"]], "kedro.runner.ThreadRunner": [[202, 3, 1, "", "__init__"], [202, 3, 1, "", "create_default_data_set"], [202, 3, 1, "", "run"], [202, 3, 1, "", "run_only_missing"]], "kedro.utils": [[205, 5, 1, "", "load_obj"]], "kedro_datasets.api": [[207, 1, 1, "", "APIDataSet"]], "kedro_datasets.api.APIDataSet": [[207, 2, 1, "", "DEFAULT_SAVE_ARGS"], [207, 3, 1, "", "__init__"], [207, 3, 1, "", "exists"], [207, 3, 1, "", "from_config"], [207, 3, 1, "", "load"], [207, 3, 1, "", "release"], [207, 3, 1, "", "save"]], "kedro_datasets.biosequence": [[208, 1, 1, "", "BioSequenceDataSet"]], "kedro_datasets.biosequence.BioSequenceDataSet": [[208, 2, 1, "", "DEFAULT_LOAD_ARGS"], [208, 2, 1, "", "DEFAULT_SAVE_ARGS"], [208, 3, 1, "", "__init__"], [208, 3, 1, "", "exists"], [208, 3, 1, "", "from_config"], [208, 3, 1, "", "invalidate_cache"], [208, 3, 1, "", "load"], [208, 3, 1, "", "release"], [208, 3, 1, "", "save"]], "kedro_datasets.dask": [[209, 1, 1, "", "ParquetDataSet"]], "kedro_datasets.dask.ParquetDataSet": [[209, 2, 1, "", "DEFAULT_LOAD_ARGS"], [209, 2, 1, "", "DEFAULT_SAVE_ARGS"], [209, 3, 1, "", "__init__"], [209, 3, 1, "", "exists"], [209, 3, 1, "", "from_config"], [209, 4, 1, "", "fs_args"], [209, 3, 1, "", "load"], [209, 3, 1, "", "release"], [209, 3, 1, "", "save"]], "kedro_datasets.databricks": [[210, 1, 1, "", "ManagedTableDataSet"]], "kedro_datasets.databricks.ManagedTableDataSet": [[210, 3, 1, "", "__init__"], [210, 3, 1, "", "exists"], [210, 3, 1, "", "from_config"], [210, 3, 1, "", "load"], [210, 3, 1, "", "release"], [210, 3, 1, "", "resolve_load_version"], [210, 3, 1, "", "resolve_save_version"], [210, 3, 1, "", "save"]], "kedro_datasets.email": [[211, 1, 1, "", "EmailMessageDataSet"]], "kedro_datasets.email.EmailMessageDataSet": [[211, 2, 1, "", "DEFAULT_LOAD_ARGS"], [211, 2, 1, "", "DEFAULT_SAVE_ARGS"], [211, 3, 1, "", "__init__"], [211, 3, 1, "", "exists"], [211, 3, 1, "", "from_config"], [211, 3, 1, "", "load"], [211, 3, 1, "", "release"], [211, 3, 1, "", "resolve_load_version"], [211, 3, 1, "", "resolve_save_version"], [211, 3, 1, "", "save"]], "kedro_datasets.geopandas": [[212, 1, 1, "", "GeoJSONDataSet"]], "kedro_datasets.geopandas.GeoJSONDataSet": [[212, 2, 1, "", "DEFAULT_LOAD_ARGS"], [212, 2, 1, "", "DEFAULT_SAVE_ARGS"], [212, 3, 1, "", "__init__"], [212, 3, 1, "", "exists"], [212, 3, 1, "", "from_config"], [212, 3, 1, "", "invalidate_cache"], [212, 3, 1, "", "load"], [212, 3, 1, "", "release"], [212, 3, 1, "", "resolve_load_version"], [212, 3, 1, "", "resolve_save_version"], [212, 3, 1, "", "save"]], "kedro_datasets.holoviews": [[213, 1, 1, "", "HoloviewsWriter"]], "kedro_datasets.holoviews.HoloviewsWriter": [[213, 2, 1, "", "DEFAULT_SAVE_ARGS"], [213, 3, 1, "", "__init__"], [213, 3, 1, "", "exists"], [213, 3, 1, "", "from_config"], [213, 3, 1, "", "load"], [213, 3, 1, "", "release"], [213, 3, 1, "", "resolve_load_version"], [213, 3, 1, "", "resolve_save_version"], [213, 3, 1, "", "save"]], "kedro_datasets.json": [[214, 1, 1, "", "JSONDataSet"]], "kedro_datasets.json.JSONDataSet": [[214, 2, 1, "", "DEFAULT_SAVE_ARGS"], [214, 3, 1, "", "__init__"], [214, 3, 1, "", "exists"], [214, 3, 1, "", "from_config"], [214, 3, 1, "", "load"], [214, 3, 1, "", "release"], [214, 3, 1, "", "resolve_load_version"], [214, 3, 1, "", "resolve_save_version"], [214, 3, 1, "", "save"]], "kedro_datasets.matplotlib": [[215, 1, 1, "", "MatplotlibWriter"]], "kedro_datasets.matplotlib.MatplotlibWriter": [[215, 2, 1, "", "DEFAULT_SAVE_ARGS"], [215, 3, 1, "", "__init__"], [215, 3, 1, "", "exists"], [215, 3, 1, "", "from_config"], [215, 3, 1, "", "load"], [215, 3, 1, "", "release"], [215, 3, 1, "", "resolve_load_version"], [215, 3, 1, "", "resolve_save_version"], [215, 3, 1, "", "save"]], "kedro_datasets.networkx": [[216, 1, 1, "", "GMLDataSet"], [217, 1, 1, "", "GraphMLDataSet"], [218, 1, 1, "", "JSONDataSet"]], "kedro_datasets.networkx.GMLDataSet": [[216, 2, 1, "", "DEFAULT_LOAD_ARGS"], [216, 2, 1, "", "DEFAULT_SAVE_ARGS"], [216, 3, 1, "", "__init__"], [216, 3, 1, "", "exists"], [216, 3, 1, "", "from_config"], [216, 3, 1, "", "load"], [216, 3, 1, "", "release"], [216, 3, 1, "", "resolve_load_version"], [216, 3, 1, "", "resolve_save_version"], [216, 3, 1, "", "save"]], "kedro_datasets.networkx.GraphMLDataSet": [[217, 2, 1, "", "DEFAULT_LOAD_ARGS"], [217, 2, 1, "", "DEFAULT_SAVE_ARGS"], [217, 3, 1, "", "__init__"], [217, 3, 1, "", "exists"], [217, 3, 1, "", "from_config"], [217, 3, 1, "", "load"], [217, 3, 1, "", "release"], [217, 3, 1, "", "resolve_load_version"], [217, 3, 1, "", "resolve_save_version"], [217, 3, 1, "", "save"]], "kedro_datasets.networkx.JSONDataSet": [[218, 2, 1, "", "DEFAULT_LOAD_ARGS"], [218, 2, 1, "", "DEFAULT_SAVE_ARGS"], [218, 3, 1, "", "__init__"], [218, 3, 1, "", "exists"], [218, 3, 1, "", "from_config"], [218, 3, 1, "", "load"], [218, 3, 1, "", "release"], [218, 3, 1, "", "resolve_load_version"], [218, 3, 1, "", "resolve_save_version"], [218, 3, 1, "", "save"]], "kedro_datasets.pandas": [[219, 1, 1, "", "CSVDataSet"], [220, 1, 1, "", "DeltaTableDataSet"], [221, 1, 1, "", "ExcelDataSet"], [222, 1, 1, "", "FeatherDataSet"], [223, 1, 1, "", "GBQQueryDataSet"], [224, 1, 1, "", "GBQTableDataSet"], [225, 1, 1, "", "GenericDataSet"], [226, 1, 1, "", "HDFDataSet"], [227, 1, 1, "", "JSONDataSet"], [228, 1, 1, "", "ParquetDataSet"], [229, 1, 1, "", "SQLQueryDataSet"], [230, 1, 1, "", "SQLTableDataSet"], [231, 1, 1, "", "XMLDataSet"]], "kedro_datasets.pandas.CSVDataSet": [[219, 2, 1, "", "DEFAULT_LOAD_ARGS"], [219, 2, 1, "", "DEFAULT_SAVE_ARGS"], [219, 3, 1, "", "__init__"], [219, 3, 1, "", "exists"], [219, 3, 1, "", "from_config"], [219, 3, 1, "", "load"], [219, 3, 1, "", "release"], [219, 3, 1, "", "resolve_load_version"], [219, 3, 1, "", "resolve_save_version"], [219, 3, 1, "", "save"]], "kedro_datasets.pandas.DeltaTableDataSet": [[220, 2, 1, "", "ACCEPTED_WRITE_MODES"], [220, 2, 1, "", "DEFAULT_LOAD_ARGS"], [220, 2, 1, "", "DEFAULT_SAVE_ARGS"], [220, 2, 1, "", "DEFAULT_WRITE_MODE"], [220, 3, 1, "", "__init__"], [220, 3, 1, "", "exists"], [220, 3, 1, "", "from_config"], [220, 4, 1, "", "fs_args"], [220, 3, 1, "", "get_loaded_version"], [220, 4, 1, "", "history"], [220, 3, 1, "", "load"], [220, 4, 1, "", "metadata"], [220, 3, 1, "", "release"], [220, 3, 1, "", "save"], [220, 4, 1, "", "schema"]], "kedro_datasets.pandas.ExcelDataSet": [[221, 2, 1, "", "DEFAULT_LOAD_ARGS"], [221, 2, 1, "", "DEFAULT_SAVE_ARGS"], [221, 3, 1, "", "__init__"], [221, 3, 1, "", "exists"], [221, 3, 1, "", "from_config"], [221, 3, 1, "", "load"], [221, 3, 1, "", "release"], [221, 3, 1, "", "resolve_load_version"], [221, 3, 1, "", "resolve_save_version"], [221, 3, 1, "", "save"]], "kedro_datasets.pandas.FeatherDataSet": [[222, 2, 1, "", "DEFAULT_LOAD_ARGS"], [222, 2, 1, "", "DEFAULT_SAVE_ARGS"], [222, 3, 1, "", "__init__"], [222, 3, 1, "", "exists"], [222, 3, 1, "", "from_config"], [222, 3, 1, "", "load"], [222, 3, 1, "", "release"], [222, 3, 1, "", "resolve_load_version"], [222, 3, 1, "", "resolve_save_version"], [222, 3, 1, "", "save"]], "kedro_datasets.pandas.GBQQueryDataSet": [[223, 2, 1, "", "DEFAULT_LOAD_ARGS"], [223, 3, 1, "", "__init__"], [223, 3, 1, "", "exists"], [223, 3, 1, "", "from_config"], [223, 3, 1, "", "load"], [223, 3, 1, "", "release"], [223, 3, 1, "", "save"]], "kedro_datasets.pandas.GBQTableDataSet": [[224, 2, 1, "", "DEFAULT_LOAD_ARGS"], [224, 2, 1, "", "DEFAULT_SAVE_ARGS"], [224, 3, 1, "", "__init__"], [224, 3, 1, "", "exists"], [224, 3, 1, "", "from_config"], [224, 3, 1, "", "load"], [224, 3, 1, "", "release"], [224, 3, 1, "", "save"]], "kedro_datasets.pandas.GenericDataSet": [[225, 2, 1, "", "DEFAULT_LOAD_ARGS"], [225, 2, 1, "", "DEFAULT_SAVE_ARGS"], [225, 3, 1, "", "__init__"], [225, 3, 1, "", "exists"], [225, 3, 1, "", "from_config"], [225, 3, 1, "", "load"], [225, 3, 1, "", "release"], [225, 3, 1, "", "resolve_load_version"], [225, 3, 1, "", "resolve_save_version"], [225, 3, 1, "", "save"]], "kedro_datasets.pandas.HDFDataSet": [[226, 2, 1, "", "DEFAULT_LOAD_ARGS"], [226, 2, 1, "", "DEFAULT_SAVE_ARGS"], [226, 3, 1, "", "__init__"], [226, 3, 1, "", "exists"], [226, 3, 1, "", "from_config"], [226, 3, 1, "", "load"], [226, 3, 1, "", "release"], [226, 3, 1, "", "resolve_load_version"], [226, 3, 1, "", "resolve_save_version"], [226, 3, 1, "", "save"]], "kedro_datasets.pandas.JSONDataSet": [[227, 2, 1, "", "DEFAULT_LOAD_ARGS"], [227, 2, 1, "", "DEFAULT_SAVE_ARGS"], [227, 3, 1, "", "__init__"], [227, 3, 1, "", "exists"], [227, 3, 1, "", "from_config"], [227, 3, 1, "", "load"], [227, 3, 1, "", "release"], [227, 3, 1, "", "resolve_load_version"], [227, 3, 1, "", "resolve_save_version"], [227, 3, 1, "", "save"]], "kedro_datasets.pandas.ParquetDataSet": [[228, 2, 1, "", "DEFAULT_LOAD_ARGS"], [228, 2, 1, "", "DEFAULT_SAVE_ARGS"], [228, 3, 1, "", "__init__"], [228, 3, 1, "", "exists"], [228, 3, 1, "", "from_config"], [228, 3, 1, "", "load"], [228, 3, 1, "", "release"], [228, 3, 1, "", "resolve_load_version"], [228, 3, 1, "", "resolve_save_version"], [228, 3, 1, "", "save"]], "kedro_datasets.pandas.SQLQueryDataSet": [[229, 3, 1, "", "__init__"], [229, 3, 1, "", "adapt_mssql_date_params"], [229, 3, 1, "", "create_connection"], [229, 2, 1, "", "engines"], [229, 3, 1, "", "exists"], [229, 3, 1, "", "from_config"], [229, 3, 1, "", "load"], [229, 3, 1, "", "release"], [229, 3, 1, "", "save"]], "kedro_datasets.pandas.SQLTableDataSet": [[230, 2, 1, "", "DEFAULT_LOAD_ARGS"], [230, 2, 1, "", "DEFAULT_SAVE_ARGS"], [230, 3, 1, "", "__init__"], [230, 3, 1, "", "create_connection"], [230, 2, 1, "", "engines"], [230, 3, 1, "", "exists"], [230, 3, 1, "", "from_config"], [230, 3, 1, "", "load"], [230, 3, 1, "", "release"], [230, 3, 1, "", "save"]], "kedro_datasets.pandas.XMLDataSet": [[231, 2, 1, "", "DEFAULT_LOAD_ARGS"], [231, 2, 1, "", "DEFAULT_SAVE_ARGS"], [231, 3, 1, "", "__init__"], [231, 3, 1, "", "exists"], [231, 3, 1, "", "from_config"], [231, 3, 1, "", "load"], [231, 3, 1, "", "release"], [231, 3, 1, "", "resolve_load_version"], [231, 3, 1, "", "resolve_save_version"], [231, 3, 1, "", "save"]], "kedro_datasets.pickle": [[232, 1, 1, "", "PickleDataSet"]], "kedro_datasets.pickle.PickleDataSet": [[232, 2, 1, "", "DEFAULT_LOAD_ARGS"], [232, 2, 1, "", "DEFAULT_SAVE_ARGS"], [232, 3, 1, "", "__init__"], [232, 3, 1, "", "exists"], [232, 3, 1, "", "from_config"], [232, 3, 1, "", "load"], [232, 3, 1, "", "release"], [232, 3, 1, "", "resolve_load_version"], [232, 3, 1, "", "resolve_save_version"], [232, 3, 1, "", "save"]], "kedro_datasets.pillow": [[233, 1, 1, "", "ImageDataSet"]], "kedro_datasets.pillow.ImageDataSet": [[233, 2, 1, "", "DEFAULT_SAVE_ARGS"], [233, 3, 1, "", "__init__"], [233, 3, 1, "", "exists"], [233, 3, 1, "", "from_config"], [233, 3, 1, "", "load"], [233, 3, 1, "", "release"], [233, 3, 1, "", "resolve_load_version"], [233, 3, 1, "", "resolve_save_version"], [233, 3, 1, "", "save"]], "kedro_datasets.plotly": [[234, 1, 1, "", "JSONDataSet"], [235, 1, 1, "", "PlotlyDataSet"]], "kedro_datasets.plotly.JSONDataSet": [[234, 2, 1, "", "DEFAULT_LOAD_ARGS"], [234, 2, 1, "", "DEFAULT_SAVE_ARGS"], [234, 3, 1, "", "__init__"], [234, 3, 1, "", "exists"], [234, 3, 1, "", "from_config"], [234, 3, 1, "", "load"], [234, 3, 1, "", "release"], [234, 3, 1, "", "resolve_load_version"], [234, 3, 1, "", "resolve_save_version"], [234, 3, 1, "", "save"]], "kedro_datasets.plotly.PlotlyDataSet": [[235, 2, 1, "", "DEFAULT_LOAD_ARGS"], [235, 2, 1, "", "DEFAULT_SAVE_ARGS"], [235, 3, 1, "", "__init__"], [235, 3, 1, "", "exists"], [235, 3, 1, "", "from_config"], [235, 3, 1, "", "load"], [235, 3, 1, "", "release"], [235, 3, 1, "", "resolve_load_version"], [235, 3, 1, "", "resolve_save_version"], [235, 3, 1, "", "save"]], "kedro_datasets.polars": [[236, 1, 1, "", "CSVDataSet"]], "kedro_datasets.polars.CSVDataSet": [[236, 2, 1, "", "DEFAULT_LOAD_ARGS"], [236, 2, 1, "", "DEFAULT_SAVE_ARGS"], [236, 3, 1, "", "__init__"], [236, 3, 1, "", "exists"], [236, 3, 1, "", "from_config"], [236, 3, 1, "", "load"], [236, 3, 1, "", "release"], [236, 3, 1, "", "resolve_load_version"], [236, 3, 1, "", "resolve_save_version"], [236, 3, 1, "", "save"]], "kedro_datasets.redis": [[237, 1, 1, "", "PickleDataSet"]], "kedro_datasets.redis.PickleDataSet": [[237, 2, 1, "", "DEFAULT_LOAD_ARGS"], [237, 2, 1, "", "DEFAULT_REDIS_URL"], [237, 2, 1, "", "DEFAULT_SAVE_ARGS"], [237, 3, 1, "", "__init__"], [237, 3, 1, "", "exists"], [237, 3, 1, "", "from_config"], [237, 3, 1, "", "load"], [237, 3, 1, "", "release"], [237, 3, 1, "", "save"]], "kedro_datasets.snowflake": [[238, 1, 1, "", "SnowparkTableDataSet"]], "kedro_datasets.snowflake.SnowparkTableDataSet": [[238, 2, 1, "", "DEFAULT_LOAD_ARGS"], [238, 2, 1, "", "DEFAULT_SAVE_ARGS"], [238, 3, 1, "", "__init__"], [238, 3, 1, "", "exists"], [238, 3, 1, "", "from_config"], [238, 3, 1, "", "load"], [238, 3, 1, "", "release"], [238, 3, 1, "", "save"]], "kedro_datasets.spark": [[239, 1, 1, "", "DeltaTableDataSet"], [240, 1, 1, "", "SparkDataSet"], [241, 1, 1, "", "SparkHiveDataSet"], [242, 1, 1, "", "SparkJDBCDataSet"], [243, 1, 1, "", "SparkStreamingDataSet"]], "kedro_datasets.spark.DeltaTableDataSet": [[239, 3, 1, "", "__init__"], [239, 3, 1, "", "exists"], [239, 3, 1, "", "from_config"], [239, 3, 1, "", "load"], [239, 3, 1, "", "release"], [239, 3, 1, "", "save"]], "kedro_datasets.spark.SparkDataSet": [[240, 2, 1, "", "DEFAULT_LOAD_ARGS"], [240, 2, 1, "", "DEFAULT_SAVE_ARGS"], [240, 3, 1, "", "__init__"], [240, 3, 1, "", "exists"], [240, 3, 1, "", "from_config"], [240, 3, 1, "", "load"], [240, 3, 1, "", "release"], [240, 3, 1, "", "resolve_load_version"], [240, 3, 1, "", "resolve_save_version"], [240, 3, 1, "", "save"]], "kedro_datasets.spark.SparkHiveDataSet": [[241, 2, 1, "", "DEFAULT_SAVE_ARGS"], [241, 3, 1, "", "__init__"], [241, 3, 1, "", "exists"], [241, 3, 1, "", "from_config"], [241, 3, 1, "", "load"], [241, 3, 1, "", "release"], [241, 3, 1, "", "save"]], "kedro_datasets.spark.SparkJDBCDataSet": [[242, 2, 1, "", "DEFAULT_LOAD_ARGS"], [242, 2, 1, "", "DEFAULT_SAVE_ARGS"], [242, 3, 1, "", "__init__"], [242, 3, 1, "", "exists"], [242, 3, 1, "", "from_config"], [242, 3, 1, "", "load"], [242, 3, 1, "", "release"], [242, 3, 1, "", "save"]], "kedro_datasets.spark.SparkStreamingDataSet": [[243, 2, 1, "", "DEFAULT_LOAD_ARGS"], [243, 2, 1, "", "DEFAULT_SAVE_ARGS"], [243, 3, 1, "", "__init__"], [243, 3, 1, "", "exists"], [243, 3, 1, "", "from_config"], [243, 3, 1, "", "load"], [243, 3, 1, "", "release"], [243, 3, 1, "", "save"]], "kedro_datasets.svmlight": [[244, 1, 1, "", "SVMLightDataSet"]], "kedro_datasets.svmlight.SVMLightDataSet": [[244, 2, 1, "", "DEFAULT_LOAD_ARGS"], [244, 2, 1, "", "DEFAULT_SAVE_ARGS"], [244, 3, 1, "", "__init__"], [244, 3, 1, "", "exists"], [244, 3, 1, "", "from_config"], [244, 3, 1, "", "load"], [244, 3, 1, "", "release"], [244, 3, 1, "", "resolve_load_version"], [244, 3, 1, "", "resolve_save_version"], [244, 3, 1, "", "save"]], "kedro_datasets.tensorflow": [[245, 1, 1, "", "TensorFlowModelDataSet"]], "kedro_datasets.tensorflow.TensorFlowModelDataSet": [[245, 2, 1, "", "DEFAULT_LOAD_ARGS"], [245, 2, 1, "", "DEFAULT_SAVE_ARGS"], [245, 3, 1, "", "__init__"], [245, 3, 1, "", "exists"], [245, 3, 1, "", "from_config"], [245, 3, 1, "", "load"], [245, 3, 1, "", "release"], [245, 3, 1, "", "resolve_load_version"], [245, 3, 1, "", "resolve_save_version"], [245, 3, 1, "", "save"]], "kedro_datasets.text": [[246, 1, 1, "", "TextDataSet"]], "kedro_datasets.text.TextDataSet": [[246, 3, 1, "", "__init__"], [246, 3, 1, "", "exists"], [246, 3, 1, "", "from_config"], [246, 3, 1, "", "load"], [246, 3, 1, "", "release"], [246, 3, 1, "", "resolve_load_version"], [246, 3, 1, "", "resolve_save_version"], [246, 3, 1, "", "save"]], "kedro_datasets.tracking": [[247, 1, 1, "", "JSONDataSet"], [248, 1, 1, "", "MetricsDataSet"]], "kedro_datasets.tracking.JSONDataSet": [[247, 2, 1, "", "DEFAULT_SAVE_ARGS"], [247, 3, 1, "", "__init__"], [247, 3, 1, "", "exists"], [247, 3, 1, "", "from_config"], [247, 3, 1, "", "load"], [247, 3, 1, "", "release"], [247, 3, 1, "", "resolve_load_version"], [247, 3, 1, "", "resolve_save_version"], [247, 3, 1, "", "save"], [247, 2, 1, "", "versioned"]], "kedro_datasets.tracking.MetricsDataSet": [[248, 2, 1, "", "DEFAULT_SAVE_ARGS"], [248, 3, 1, "", "__init__"], [248, 3, 1, "", "exists"], [248, 3, 1, "", "from_config"], [248, 3, 1, "", "load"], [248, 3, 1, "", "release"], [248, 3, 1, "", "resolve_load_version"], [248, 3, 1, "", "resolve_save_version"], [248, 3, 1, "", "save"], [248, 2, 1, "", "versioned"]], "kedro_datasets.video": [[249, 1, 1, "", "VideoDataSet"]], "kedro_datasets.video.VideoDataSet": [[249, 3, 1, "", "__init__"], [249, 3, 1, "", "exists"], [249, 3, 1, "", "from_config"], [249, 3, 1, "", "load"], [249, 3, 1, "", "release"], [249, 3, 1, "", "save"]], "kedro_datasets.yaml": [[250, 1, 1, "", "YAMLDataSet"]], "kedro_datasets.yaml.YAMLDataSet": [[250, 2, 1, "", "DEFAULT_SAVE_ARGS"], [250, 3, 1, "", "__init__"], [250, 3, 1, "", "exists"], [250, 3, 1, "", "from_config"], [250, 3, 1, "", "load"], [250, 3, 1, "", "release"], [250, 3, 1, "", "resolve_load_version"], [250, 3, 1, "", "resolve_save_version"], [250, 3, 1, "", "save"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"advanc": [0, 11, 17, 41, 42, 47, 56], "configur": [0, 1, 3, 11, 12, 13, 14, 17, 18, 21, 22, 24, 25, 36, 37, 40, 41, 42, 47, 51, 57, 255, 257, 264, 271, 277, 280, 281], "templatedconfigload": [0, 66], "provid": [0, 259, 260, 265], "templat": [0, 281], "valu": 0, "through": [0, 14], "global": [0, 37, 46], "omegaconfigload": [0, 65], "kedro": [0, 1, 5, 7, 8, 9, 10, 12, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 252, 255, 260, 264, 266, 267, 268, 269, 271, 273, 274, 278, 280, 281], "how": [0, 1, 2, 4, 7, 8, 13, 15, 18, 20, 21, 24, 25, 33, 34, 44, 49, 59, 255, 260, 261, 262, 265, 271, 276], "chang": [0, 1, 5, 7, 8, 26, 27], "which": 0, "file": [0, 1, 13, 14, 37, 40, 51, 255, 257, 264, 273], "ar": [0, 7, 25, 260], "load": [0, 1, 2, 4, 11, 14, 17, 52, 57, 264, 274, 276], "ensur": [0, 260], "non": [0, 57], "default": [0, 1, 14, 257], "get": [0, 6, 37, 275], "bypass": 0, "rule": 0, "us": [0, 1, 4, 7, 11, 12, 13, 14, 18, 20, 21, 24, 25, 26, 27, 32, 33, 34, 36, 42, 43, 44, 49, 52, 53, 57, 59, 255, 257, 260, 261, 267], "jinja2": 0, "syntax": [0, 261], "do": [0, 8, 260, 271, 276], "paramet": [0, 4, 260, 271], "catalog": [0, 11, 12, 13, 14, 16, 37, 41, 42, 47, 50, 114, 251, 267, 269, 276, 280, 281], "other": [0, 10, 267, 273], "custom": [0, 15, 21, 24, 264, 267, 274], "resolv": [0, 276], "credenti": [0, 2, 11, 13, 14, 15, 17, 21, 52], "environ": [0, 1, 18, 21, 22, 25, 26, 27, 49, 257], "variabl": [0, 255, 257, 261], "sourc": [1, 11, 44], "base": [1, 34, 50, 57, 257], "local": [1, 14, 18, 26, 43, 50], "name": [1, 14, 264], "pattern": 1, "set": [1, 6, 7, 8, 21, 24, 25, 26, 27, 36, 40, 41, 42, 43, 49, 254, 273, 274, 276, 277], "folder": 1, "runtim": [1, 4], "read": [1, 13], "from": [1, 14, 37, 51, 267, 273, 276], "compress": [1, 14], "access": [1, 11, 13, 27, 43], "code": [1, 2, 4, 11, 26, 40, 42, 51, 281], "specifi": [1, 4, 12, 14, 265], "addit": [1, 44], "overrid": [1, 37, 260], "onli": [1, 261], "one": [1, 14], "work": [2, 13, 46, 47, 271], "aw": [2, 21, 22], "backward": 5, "compat": [5, 14, 18, 22], "break": 5, "when": [5, 43, 276], "should": [5, 43], "i": [5, 8, 43, 260, 276], "make": [5, 7, 8], "The": [5, 15, 16, 19, 32, 35, 263, 272], "releas": 5, "model": [5, 13, 14, 53, 271, 272], "guidelin": 6, "contribut": [6, 7, 8, 9, 15, 46, 56], "develop": [6, 7, 10, 26, 27, 37, 39, 46, 47, 49, 275], "introduct": [6, 12, 36, 38, 40, 58, 272], "befor": 6, "you": [6, 20, 21, 22, 24, 32], "start": 6, "up": [6, 7, 8, 21, 24, 25, 26, 27, 36, 40, 41, 42, 43, 49, 273, 274, 277], "area": 6, "core": 6, "process": [6, 10, 18, 22, 46, 272], "extra": [6, 44, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "creat": [6, 8, 13, 14, 15, 18, 20, 21, 22, 24, 25, 26, 27, 30, 36, 37, 49, 51, 253, 255, 260, 261, 271, 272, 277, 281], "pull": [6, 8, 37, 259], "request": [6, 8], "titl": 6, "convent": [6, 46, 269], "hint": 6, "pre": [6, 40], "commit": [6, 40], "usag": [6, 56, 268], "certif": 6, "origin": 6, "need": [6, 11, 13, 20, 21], "help": [6, 8, 37, 275], "test": [7, 26, 27, 36, 37, 271, 272, 274], "databrick": [7, 25, 26, 27, 28, 29, 210], "deploi": [7, 21, 22, 24, 25, 37], "version": [7, 11, 13, 15, 37, 43, 49, 185, 255], "prerequisit": [7, 18, 20, 21, 22, 24, 25, 26, 27, 33, 49], "instal": [7, 25, 26, 27, 34, 36, 37, 40, 43, 49, 251, 277], "build": [7, 8, 37, 262, 273], "onto": 7, "cli": [7, 13, 21, 24, 25, 26, 34, 37, 44, 46, 55, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "your": [7, 15, 20, 21, 24, 25, 26, 27, 30, 33, 34, 36, 37, 43, 44, 49, 53, 55, 257], "document": [8, 20, 21, 37, 56, 273], "rebuild": 8, "after": 8, "extend": [8, 45, 46, 52, 271], "add": [8, 36, 40, 43, 44, 53, 273, 281], "new": [8, 18, 22, 25, 26, 27, 37, 49, 51, 277], "page": [8, 25, 26, 27], "move": 8, "remov": [8, 10], "style": 8, "guid": [8, 13], "join": 10, "technic": 10, "steer": 10, "committe": 10, "respons": 10, "maintain": 10, "product": 10, "commun": [10, 46], "manag": [10, 27, 119, 120, 121, 149, 253, 267], "requir": 10, "becom": 10, "applic": [10, 254], "vote": 10, "issu": 10, "propos": 10, "ad": 10, "data": [11, 12, 13, 14, 16, 25, 26, 27, 37, 43, 44, 47, 50, 53, 57, 251, 268, 269, 271, 272, 274, 276, 277, 280, 281], "within": 12, "locat": [12, 14, 274], "dataset": [11, 12, 13, 14, 15, 17, 37, 43, 47, 52, 57, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 267, 274, 276], "_arg": [], "exampl": [13, 14, 15, 36, 46, 51, 53, 255, 267, 272], "1": [18, 22, 30, 44], "project": [15, 18, 20, 21, 25, 26, 27, 28, 34, 37, 43, 44, 46, 47, 49, 50, 51, 56, 131, 157, 158, 159, 160, 161, 251, 252, 254, 257, 271, 272, 273, 274, 275, 277, 279], "underli": [], "filesystem": 15, "class": [], "gcsfilesystem": [], "interact": 57, "googl": 14, "cloud": 14, "storag": [14, 43], "gc": [], "2": [18, 22, 30, 33, 44], "binari": [], "utf": [], "8": [], "encod": [], "3": [18, 22, 30, 44], "save": [11, 14, 17, 52, 57, 264], "csv": 14, "without": 49, "row": [], "index": [], "yaml": [13, 14, 37, 106, 250], "api": [11, 14, 25, 53, 56, 69, 207], "system": 14, "argument": [14, 259, 264], "4": [18, 22, 30, 44], "specif": [14, 25, 37, 55, 251, 260], "s3": 14, "bucket": 14, "5": [], "pickl": [14, 92, 232], "6": [], "an": [14, 18, 22, 25, 26, 36, 273, 276], "excel": 14, "7": [], "multi": 14, "sheet": 14, "imag": [14, 18, 22], "matplotlib": [14, 76, 215, 281], "9": [], "hdf": 14, "10": [], "parquet": [11, 14], "11": [], "spark": [14, 57, 97, 98, 99, 100, 239, 240, 241, 242, 243], "tabl": [14, 56, 272], "12": [], "sql": [11, 14], "databas": [11, 14], "connect": 14, "13": [], "appli": 14, "queri": [11, 14], "14": [], "endpoint": 14, "u": 14, "corn": 14, "yield": 14, "usda": 14, "15": [], "minio": 14, "16": [], "azur": [14, 23], "blob": 14, "17": [], "store": [14, 43, 168, 169], "remot": [14, 41, 42], "ssh": [14, 41], "via": 13, "feed": [], "multipl": [14, 259, 260, 262], "similar": 14, "anchor": 14, "factori": [14, 37], "generalis": 14, "type": [14, 37, 251], "same": [13, 14], "namespac": [14, 271], "differ": [13, 14, 15, 260], "layer": [14, 269, 279], "placehold": 14, "all": [14, 37], "catch": 14, "overwrit": 14, "memorydataset": [14, 57, 183], "transcod": 13, "A": [13, 267], "typic": 13, "doe": [13, 260], "ml": [13, 23], "behind": 11, "scene": 11, "view": [11, 43], "avail": 11, "memori": [11, 53], "io": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 264], "error": 276, "handl": 15, "abstractdataset": [15, 174], "namedtupl": 15, "support": [13, 43, 46, 274], "partit": 17, "definit": [17, 21, 261], "shorthand": 17, "notat": 17, "full": 17, "lazi": 17, "increment": 17, "incrementaldataset": [17, 181], "confirm": [17, 37], "checkpoint": [17, 272], "special": 17, "config": [17, 62, 63, 64, 65, 66, 276], "kei": [17, 260], "apach": 18, "airflow": [18, 273], "run": [18, 20, 21, 22, 25, 26, 27, 30, 33, 34, 36, 37, 40, 41, 43, 51, 261, 264, 265, 273, 276, 281], "pipelin": [18, 20, 21, 22, 23, 24, 30, 32, 33, 37, 38, 43, 47, 50, 53, 129, 130, 192, 193, 194, 195, 196, 197, 258, 260, 262, 263, 264, 265, 267, 269, 271, 272, 276, 279, 281], "kubernet": [18, 20], "cluster": [18, 25], "astronom": 18, "strategi": [18, 22], "tutori": [15, 18, 56, 275, 276], "setup": [15, 18, 33, 37, 252], "deploy": [18, 22, 25, 30, 31, 34, 273], "step": [18, 22, 48, 275], "prepar": [18, 22], "datacatalog": [18, 22, 177], "packag": [18, 22, 25, 34, 37, 259, 273], "compliant": [18, 22], "docker": [18, 22, 41, 273], "convert": [18, 30, 33, 267], "dag": 18, "launch": 18, "amazon": 19, "sagemak": 19, "plugin": [19, 20, 23, 32, 35, 46, 55], "argo": 20, "workflow": [20, 34, 251, 269, 275], "outdat": [20, 21], "review": [20, 21], "why": [20, 21, 22, 24, 32], "would": [20, 21, 22, 24, 32], "containeris": [20, 21, 30], "spec": [20, 123, 124, 151, 152, 153, 154, 155, 156], "submit": [20, 21], "batch": 21, "provis": 21, "resourc": [21, 25, 270], "iam": 21, "role": 21, "job": [21, 25], "comput": 21, "queue": 21, "runner": [21, 24, 198, 199, 200, 201, 202, 203, 264, 269, 271], "relat": [21, 24, 251], "updat": [21, 24, 43, 279, 281], "implement": [13, 15, 21, 24, 55], "function": [22, 261, 267, 272], "lambda": 22, "write": 22, "script": [22, 40], "limit": 22, "azureml": 23, "dask": [24, 71, 209], "distribut": [24, 30], "what": [25, 26, 27, 260], "advantag": 25, "thi": [25, 26, 27], "cover": [25, 26, 27], "note": [25, 26], "usernam": [25, 26], "host": [25, 26], "virtual": [25, 26, 27, 49], "authent": [25, 26], "entri": 25, "point": 25, "upload": [25, 26], "dbf": [25, 26, 27], "workspac": [25, 27], "ui": 25, "automat": [25, 279], "summari": [25, 26, 27, 49, 50, 51], "id": 26, "dbx": 26, "repo": [26, 27], "sync": 26, "conf": [26, 50, 57], "directori": [26, 36, 50, 275], "notebook": [26, 27, 28, 37, 266, 267], "modifi": [26, 27, 37, 43, 44, 53], "train": [26, 27], "split": [26, 27], "ratio": [26, 27], "re": [26, 27], "github": [27, 34], "repositori": 27, "person": 27, "token": 27, "push": 27, "copi": [27, 34, 37], "dbutil": 27, "visualis": [28, 47, 51, 272, 278, 279, 281], "target": [30, 273], "platform": 30, "primit": 30, "parameteris": 30, "option": [30, 37, 271, 277], "starter": [30, 46, 133, 134, 255, 269], "kubeflow": 32, "prefect": 33, "0": 33, "flow": 33, "singl": 34, "machin": 34, "contain": [34, 51], "registri": [34, 132, 263, 268], "vertexai": 35, "autom": [36, 40], "pytest": 36, "structur": [36, 50], "coverag": 36, "report": [36, 281], "cov": 36, "": [37, 44, 52, 56, 57], "command": [37, 44, 46], "line": [37, 267], "interfac": 37, "autocomplet": 37, "invok": 37, "python": [37, 40, 41], "inform": [37, 51, 262, 274], "open": 37, "browser": 37, "customis": [37, 44, 52, 257], "depend": [37, 43, 251, 260, 262, 269, 275, 277, 281], "tree": 37, "micro": [37, 259], "qualiti": 37, "lint": [37, 40], "modular": [37, 260, 269, 271], "delet": 37, "regist": [37, 55], "describ": 37, "list": [37, 255], "per": 37, "rank": 37, "tag": [37, 261, 262, 265, 269], "cell": 37, "strip": 37, "output": [37, 261, 262, 264, 265], "debug": [38, 41, 42], "node": [38, 43, 47, 50, 52, 53, 196, 197, 258, 261, 262, 265, 267, 269, 271, 272, 281], "format": 40, "tool": 40, "ruff": 40, "flake8": 40, "hook": [40, 46, 52, 53, 54, 55, 57, 118, 119, 120, 121, 122, 123, 124, 148, 149, 150, 151, 152, 153, 154, 155, 156], "git": 40, "pycharm": 41, "interpret": [41, 42], "consol": [41, 257], "valid": [41, 42, 53], "schema": [41, 42], "visual": 42, "studio": 42, "For": 42, "those": 42, "venv": 42, "virtualenv": 42, "task": 42, "experi": 43, "track": [43, 53, 104, 105, 247, 248], "viz": [43, 269, 278, 280, 281], "session": [43, 162, 163, 164, 165, 166, 167, 168, 169, 253, 267], "collabor": 43, "log": [43, 109, 110, 111, 190, 191, 256, 257, 277], "metric": [43, 53], "gener": [43, 261], "compar": 43, "plot": 43, "common": [44, 52, 276], "case": [44, 52], "behaviour": [44, 52], "execut": [44, 269], "timelin": 44, "integr": [15, 44, 57], "initi": 44, "boilerpl": 44, "scenario": 15, "anatomi": 15, "_load": 15, "method": [15, 52], "fsspec": [15, 259], "_save": 15, "_describ": 15, "complet": 15, "partitioneddataset": [15, 184], "thread": 15, "safeti": 15, "overview": [46, 253], "simpl": 46, "alias": [46, 255], "click": 46, "context": [46, 145, 146, 147, 267], "initialis": [46, 57], "suggest": 46, "frequent": 47, "ask": 47, "question": 47, "jupyt": [47, 125, 126, 257, 267], "topic": 47, "first": 48, "conda": 49, "pip": 49, "verifi": 49, "upgrad": 49, "concept": [50, 55, 260], "src": 50, "empti": 51, "where": 51, "next": [51, 275], "more": [51, 267], "about": [51, 56, 262], "panda": [51, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "iri": [51, 267], "background": 51, "extern": 52, "consumpt": 53, "v2": 53, "v3": 53, "observ": 53, "input": [53, 261, 262, 265, 271, 272], "before_node_run": 53, "disabl": [55, 257], "auto": 55, "under": 55, "hood": 55, "welcom": 56, "learn": [56, 59], "basic": 56, "indic": 56, "pyspark": 57, "centralis": 57, "yml": 57, "sparksess": 57, "built": 57, "raw": 57, "delta": 57, "lake": 57, "intermediari": 57, "datafram": 57, "copy_mod": 57, "assign": 57, "object": 57, "tip": 57, "maximis": 57, "concurr": 57, "threadrunn": [57, 202], "assumpt": 59, "kedropythonversionwarn": 61, "configload": 63, "missingconfigexcept": 64, "apidataset": [69, 207], "biosequ": [70, 208], "biosequencedataset": [70, 208], "parquetdataset": [71, 88, 209, 228], "email": [72, 211], "emailmessagedataset": [72, 211], "geopanda": [73, 212], "geojsondataset": [73, 212], "holoview": [74, 213], "holoviewswrit": [74, 213], "json": [75, 214], "jsondataset": [75, 79, 87, 94, 104, 214, 218, 227, 234, 247], "matplotlibwrit": [76, 215], "networkx": [77, 78, 79, 216, 217, 218], "gmldataset": [77, 216], "graphmldataset": [78, 217], "csvdataset": [80, 219, 236], "exceldataset": [81, 221], "featherdataset": [82, 222], "gbqquerydataset": [83, 223], "gbqtabledataset": [84, 224], "genericdataset": [85, 225], "hdfdataset": [86, 226], "sqlquerydataset": [89, 229], "sqltabledataset": [90, 230], "xmldataset": [91, 231], "pickledataset": [92, 96, 232, 237], "pillow": [93, 233], "imagedataset": [93, 233], "plotli": [94, 95, 234, 235, 281], "plotlydataset": [95, 235], "redi": [96, 237], "deltatabledataset": [97, 220, 239], "sparkdataset": [98, 240], "sparkhivedataset": [99, 241], "sparkjdbcdataset": [100, 242], "svmlight": [101, 244], "svmlightdataset": [101, 244], "tensorflow": [102, 245], "tensorflowmodeldataset": [102, 245], "text": [103, 246], "textdataset": [103, 246], "metricsdataset": [105, 248], "yamldataset": [106, 250], "extens": [107, 108], "ipython": [108, 186, 187, 188, 189, 267], "color_logg": [110, 111], "colorhandl": 111, "framework": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 257], "kedrocli": 116, "main": 117, "clihooksmanag": 120, "get_cli_hook_manag": 121, "marker": [122, 150], "clicommandspec": 124, "jupytercommandgroup": 126, "micropkg": [127, 128], "safe_extract": 128, "pipelineartifact": 130, "kedrostarterspec": 134, "util": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 204, 205], "commandcollect": 136, "kedroclierror": 137, "command_with_verbos": 138, "env_opt": 139, "find_stylesheet": 140, "forward_command": 141, "get_pkg_vers": 142, "python_cal": 143, "split_str": 144, "kedrocontext": [146, 269], "kedrocontexterror": 147, "datacatalogspec": 152, "datasetspec": 153, "kedrocontextspec": 154, "nodespec": 155, "pipelinespec": 156, "configure_log": 158, "configure_project": 159, "find_pipelin": 160, "validate_set": 161, "kedrosess": [164, 253, 269], "kedrosessionerror": 165, "shelvestor": [166, 167], "basesessionstor": 169, "startup": [170, 171, 172], "projectmetadata": 171, "bootstrap_project": 172, "abstractversioneddataset": 175, "cacheddataset": 176, "datasetalreadyexistserror": 178, "dataseterror": [179, 276], "datasetnotfounderror": [180, 276], "lambdadataset": 182, "load_ipython_extens": 187, "magic_reload_kedro": 188, "reload_kedro": [189, 267], "richhandl": 191, "modular_pipelin": [194, 195], "modularpipelineerror": 194, "abstractrunn": 199, "parallelrunn": [200, 264], "sequentialrunn": [201, 264], "run_nod": 203, "load_obj": 205, "kedro_dataset": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "managedtabledataset": 210, "polar": 236, "snowflak": 238, "snowparktabledataset": 238, "sparkstreamingdataset": 243, "video": 249, "videodataset": 249, "group": 251, "level": 251, "lifecycl": 253, "metadata": 254, "offici": 255, "side": 257, "kedro_logging_config": 257, "rich": 257, "handler": 257, "plain": 257, "dumb": 257, "termin": 257, "perform": 257, "portabl": 260, "wrapper": [260, 271], "combin": 260, "disconnect": 260, "time": 260, "kwarg": 261, "merg": 262, "bad": 262, "circular": 262, "autodiscoveri": 263, "multiprocess": 264, "multithread": 264, "asynchron": 264, "slice": [265, 269, 271], "final": 265, "recreat": 265, "miss": 265, "user": 266, "kernel": 267, "magic": 267, "run_viz": 267, "know": 267, "servic": 267, "jupyterlab": 267, "client": 267, "find": 267, "out": 267, "glossari": 269, "engin": 269, "v": 269, "scienc": [269, 271], "order": 269, "registr": [271, 272, 274], "affect": 271, "preprocess": 272, "again": 272, "entir": 273, "sphinx": 273, "html": 273, "docstr": 273, "can": 274, "further": 274, "terminologi": 275, "root": 275, "standard": 275, "spaceflight": [276, 277, 279], "faq": 276, "fail": 276, "while": 276, "found": 276, "except": 276, "occur": 276, "pars": 276, "best": 277, "practic": 277, "avoid": 277, "leak": 277, "confidenti": 277, "share": 279, "preview": 280, "chart": 281, "anoth": 281, "two": 13}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"kedro.framework.cli.hooks.manager.get_cli_hook_manager": [[121, "kedro-framework-cli-hooks-manager-get-cli-hook-manager"]], "kedro.framework.cli.hooks.manager.CLIHooksManager": [[120, "kedro-framework-cli-hooks-manager-clihooksmanager"]], "kedro.framework.cli.hooks.specs": [[123, "kedro-framework-cli-hooks-specs"]], "kedro.framework.cli.jupyter.JupyterCommandGroup": [[126, "kedro-framework-cli-jupyter-jupytercommandgroup"]], "kedro.framework.cli.jupyter": [[125, "kedro-framework-cli-jupyter"]], "kedro.framework.cli.hooks.manager": [[119, "kedro-framework-cli-hooks-manager"]], "kedro.framework.cli.cli.KedroCLI": [[116, "kedro-framework-cli-cli-kedrocli"]], "kedro.framework.cli.cli": [[115, "kedro-framework-cli-cli"]], "kedro.framework.cli.micropkg": [[127, "kedro-framework-cli-micropkg"]], "kedro.framework.cli.catalog": [[114, "kedro-framework-cli-catalog"]], "kedro.framework.cli": [[113, "kedro-framework-cli"]], "kedro.framework.cli.hooks": [[118, "kedro-framework-cli-hooks"]], "kedro.framework.cli.hooks.markers": [[122, "kedro-framework-cli-hooks-markers"]], "kedro.framework.cli.hooks.specs.CLICommandSpecs": [[124, "kedro-framework-cli-hooks-specs-clicommandspecs"]], "kedro.framework.cli.cli.main": [[117, "kedro-framework-cli-cli-main"]], "kedro.framework": [[112, "kedro-framework"]], "kedro.framework.cli.utils.env_option": [[139, "kedro-framework-cli-utils-env-option"]], "kedro.framework.cli.utils.python_call": [[143, "kedro-framework-cli-utils-python-call"]], "kedro.framework.cli.project": [[131, "kedro-framework-cli-project"]], "kedro.framework.cli.utils.CommandCollection": [[136, "kedro-framework-cli-utils-commandcollection"]], "kedro.framework.cli.utils.find_stylesheets": [[140, "kedro-framework-cli-utils-find-stylesheets"]], "kedro.framework.cli.utils.get_pkg_version": [[142, "kedro-framework-cli-utils-get-pkg-version"]], "kedro.framework.cli.starters": [[133, "kedro-framework-cli-starters"]], "kedro.framework.cli.starters.KedroStarterSpec": [[134, "kedro-framework-cli-starters-kedrostarterspec"]], "kedro.framework.cli.registry": [[132, "kedro-framework-cli-registry"]], "kedro.framework.cli.utils.command_with_verbosity": [[138, "kedro-framework-cli-utils-command-with-verbosity"]], "kedro.framework.cli.pipeline": [[129, "kedro-framework-cli-pipeline"]], "kedro.framework.cli.utils.forward_command": [[141, "kedro-framework-cli-utils-forward-command"]], "kedro.framework.cli.utils.KedroCliError": [[137, "kedro-framework-cli-utils-kedroclierror"]], "kedro.framework.cli.micropkg.safe_extract": [[128, "kedro-framework-cli-micropkg-safe-extract"]], "kedro.framework.cli.pipeline.PipelineArtifacts": [[130, "kedro-framework-cli-pipeline-pipelineartifacts"]], "kedro.framework.cli.utils": [[135, "kedro-framework-cli-utils"]], "Argo Workflows (outdated documentation that needs review)": [[20, "argo-workflows-outdated-documentation-that-needs-review"]], "Why would you use Argo Workflows?": [[20, "why-would-you-use-argo-workflows"]], "Prerequisites": [[20, "prerequisites"], [27, "prerequisites"], [24, "prerequisites"], [22, "prerequisites"], [25, "prerequisites"], [26, "prerequisites"], [21, "prerequisites"], [18, "prerequisites"], [33, "prerequisites"], [7, "prerequisites"]], "How to run your Kedro pipeline using Argo Workflows": [[20, "how-to-run-your-kedro-pipeline-using-argo-workflows"]], "Containerise your Kedro project": [[20, "containerise-your-kedro-project"], [21, "containerise-your-kedro-project"]], "Create Argo Workflows spec": [[20, "create-argo-workflows-spec"]], "Submit Argo Workflows spec to Kubernetes": [[20, "submit-argo-workflows-spec-to-kubernetes"]], "Kedro-Argo plugin": [[20, "kedro-argo-plugin"]], "Advanced: Partitioned and incremental datasets": [[17, "advanced-partitioned-and-incremental-datasets"]], "Partitioned dataset definition": [[17, "partitioned-dataset-definition"]], "Dataset definition": [[17, "dataset-definition"]], "Shorthand notation": [[17, "shorthand-notation"]], "Full notation": [[17, "full-notation"]], "Partitioned dataset credentials": [[17, "partitioned-dataset-credentials"]], "Partitioned dataset load": [[17, "partitioned-dataset-load"]], "Partitioned dataset save": [[17, "partitioned-dataset-save"]], "Partitioned dataset lazy saving": [[17, "partitioned-dataset-lazy-saving"]], "Incremental loads with IncrementalDataSet": [[17, "incremental-loads-with-incrementaldataset"]], "Incremental dataset load": [[17, "incremental-dataset-load"]], "Incremental dataset save": [[17, "incremental-dataset-save"]], "Incremental dataset confirm": [[17, "incremental-dataset-confirm"]], "Checkpoint configuration": [[17, "checkpoint-configuration"]], "Special checkpoint config keys": [[17, "special-checkpoint-config-keys"]], "Use a Databricks workspace to develop a Kedro project": [[27, "use-a-databricks-workspace-to-develop-a-kedro-project"]], "What this page covers": [[27, "what-this-page-covers"], [25, "what-this-page-covers"], [26, "what-this-page-covers"]], "Set up your project": [[27, "set-up-your-project"], [26, "set-up-your-project"]], "Install Kedro in a new virtual environment": [[27, "install-kedro-in-a-new-virtual-environment"]], "Create a new Kedro project": [[27, "create-a-new-kedro-project"], [25, "create-a-new-kedro-project"], [26, "create-a-new-kedro-project"], [37, "create-a-new-kedro-project"], [51, "create-a-new-kedro-project"]], "Create a GitHub repository": [[27, "create-a-github-repository"]], "Create a GitHub personal access token": [[27, "create-a-github-personal-access-token"]], "Push your Kedro project to the GitHub repository": [[27, "push-your-kedro-project-to-the-github-repository"]], "Create a repo on Databricks": [[27, "create-a-repo-on-databricks"]], "Create a new Databricks notebook": [[27, "create-a-new-databricks-notebook"], [26, "create-a-new-databricks-notebook"]], "Copy project data to DBFS using dbutils": [[27, "copy-project-data-to-dbfs-using-dbutils"]], "Run your project": [[27, "run-your-project"], [26, "run-your-project"]], "Modify your project and test the changes": [[27, "modify-your-project-and-test-the-changes"], [26, "modify-your-project-and-test-the-changes"]], "Modify the training / test split ratio": [[27, "modify-the-training-test-split-ratio"], [26, "modify-the-training-test-split-ratio"]], "Re-run your project": [[27, "re-run-your-project"], [26, "re-run-your-project"]], "Managing your Databricks Repo": [[27, "managing-your-databricks-repo"]], "Summary": [[27, "summary"], [25, "summary"], [26, "summary"], [50, "summary"], [51, "summary"], [49, "summary"]], "Visualise a Kedro project in Databricks notebooks": [[28, "visualise-a-kedro-project-in-databricks-notebooks"]], "Amazon SageMaker": [[19, "amazon-sagemaker"]], "The kedro-sagemaker plugin": [[19, "the-kedro-sagemaker-plugin"]], "Dask": [[24, "dask"]], "Why would you use Dask?": [[24, "why-would-you-use-dask"]], "How to distribute your Kedro pipeline using Dask": [[24, "how-to-distribute-your-kedro-pipeline-using-dask"]], "Create a custom runner": [[24, "create-a-custom-runner"], [21, "create-a-custom-runner"]], "Update CLI implementation": [[24, "update-cli-implementation"], [21, "update-cli-implementation"]], "Deploy": [[24, "deploy"], [21, "deploy"]], "Set up Dask and related configuration": [[24, "set-up-dask-and-related-configuration"]], "The Kedro Data Catalog": [[16, "the-kedro-data-catalog"]], "AWS Step Functions": [[22, "aws-step-functions"]], "Why would you run a Kedro pipeline with AWS Step Functions?": [[22, "why-would-you-run-a-kedro-pipeline-with-aws-step-functions"]], "Strategy": [[22, "strategy"], [18, "strategy"]], "Deployment process": [[22, "deployment-process"], [18, "deployment-process"]], "Step 1. Create new configuration environment to prepare a compatible DataCatalog": [[22, "step-1-create-new-configuration-environment-to-prepare-a-compatible-datacatalog"], [18, "step-1-create-new-configuration-environment-to-prepare-a-compatible-datacatalog"]], "Step 2. Package the Kedro pipeline as an AWS Lambda-compliant Docker image": [[22, "step-2-package-the-kedro-pipeline-as-an-aws-lambda-compliant-docker-image"]], "Step 3. Write the deployment script": [[22, "step-3-write-the-deployment-script"]], "Step 4. Deploy the pipeline": [[22, "step-4-deploy-the-pipeline"]], "Limitations": [[22, "limitations"]], "Azure ML pipelines": [[23, "azure-ml-pipelines"]], "kedro-azureml plugin": [[23, "kedro-azureml-plugin"]], "Use a Databricks job to deploy a Kedro project": [[25, "use-a-databricks-job-to-deploy-a-kedro-project"]], "What are the advantages of packaging a Kedro project to run on Databricks?": [[25, "what-are-the-advantages-of-packaging-a-kedro-project-to-run-on-databricks"]], "Set up your project for deployment to Databricks": [[25, "set-up-your-project-for-deployment-to-databricks"]], "Note your Databricks username and host": [[25, "note-your-databricks-username-and-host"], [26, "note-your-databricks-username-and-host"]], "Install Kedro and the databricks CLI in a new virtual environment": [[25, "install-kedro-and-the-databricks-cli-in-a-new-virtual-environment"]], "Authenticate the Databricks CLI": [[25, "authenticate-the-databricks-cli"], [26, "authenticate-the-databricks-cli"]], "Create an entry point for Databricks": [[25, "create-an-entry-point-for-databricks"]], "Package your project": [[25, "package-your-project"]], "Upload project data and configuration to DBFS": [[25, "upload-project-data-and-configuration-to-dbfs"]], "Deploy and run your Kedro project using the workspace UI": [[25, "deploy-and-run-your-kedro-project-using-the-workspace-ui"]], "Create a new job": [[25, "create-a-new-job"]], "Create a new job cluster specific to your job": [[25, "create-a-new-job-cluster-specific-to-your-job"]], "Configure the job": [[25, "configure-the-job"]], "Run the job": [[25, "run-the-job"]], "Resources for automatically deploying to Databricks": [[25, "resources-for-automatically-deploying-to-databricks"]], "How to use the Databricks API to automatically deploy a Kedro project": [[25, "how-to-use-the-databricks-api-to-automatically-deploy-a-kedro-project"]], "How to use the Databricks CLI to automatically deploy a Kedro project": [[25, "how-to-use-the-databricks-cli-to-automatically-deploy-a-kedro-project"]], "Distributed deployment": [[30, "distributed-deployment"]], "1. Containerise the pipeline": [[30, "containerise-the-pipeline"]], "2. Convert your Kedro pipeline into targeted platform primitives": [[30, "convert-your-kedro-pipeline-into-targeted-platform-primitives"]], "3. Parameterise the runs": [[30, "parameterise-the-runs"]], "4. (Optional) Create starters": [[30, "optional-create-starters"]], "Deployment": [[31, "deployment"]], "Databricks": [[29, "databricks"]], "Use an IDE, dbx and Databricks Repos to develop a Kedro project": [[26, "use-an-ide-dbx-and-databricks-repos-to-develop-a-kedro-project"]], "Install Kedro and dbx in a new virtual environment": [[26, "install-kedro-and-dbx-in-a-new-virtual-environment"]], "Create a Repo on Databricks": [[26, "create-a-repo-on-databricks"]], "Sync code with your Databricks Repo using dbx": [[26, "sync-code-with-your-databricks-repo-using-dbx"]], "Create a conf/local directory in your Databricks Repo": [[26, "create-a-conf-local-directory-in-your-databricks-repo"]], "Upload project data to DBFS": [[26, "upload-project-data-to-dbfs"]], "AWS Batch (outdated documentation that needs review)": [[21, "aws-batch-outdated-documentation-that-needs-review"]], "Why would you use AWS Batch?": [[21, "why-would-you-use-aws-batch"]], "How to run a Kedro pipeline using AWS Batch": [[21, "how-to-run-a-kedro-pipeline-using-aws-batch"]], "Provision resources": [[21, "provision-resources"]], "Create IAM Role": [[21, "create-iam-role"]], "Create AWS Batch job definition": [[21, "create-aws-batch-job-definition"]], "Create AWS Batch compute environment": [[21, "create-aws-batch-compute-environment"]], "Create AWS Batch job queue": [[21, "create-aws-batch-job-queue"]], "Configure the credentials": [[21, "configure-the-credentials"]], "Submit AWS Batch jobs": [[21, "submit-aws-batch-jobs"]], "Set up Batch-related configuration": [[21, "set-up-batch-related-configuration"]], "Apache Airflow": [[18, "apache-airflow"]], "How to run a Kedro pipeline on Apache Airflow using a Kubernetes cluster": [[18, "how-to-run-a-kedro-pipeline-on-apache-airflow-using-a-kubernetes-cluster"]], "How to run a Kedro pipeline on Apache Airflow with Astronomer": [[18, "how-to-run-a-kedro-pipeline-on-apache-airflow-with-astronomer"]], "Tutorial project setup": [[18, "tutorial-project-setup"]], "Step 2. Package the Kedro pipeline as an Astronomer-compliant Docker image": [[18, "step-2-package-the-kedro-pipeline-as-an-astronomer-compliant-docker-image"]], "Step 3. Convert the Kedro pipeline into an Airflow DAG with kedro airflow": [[18, "step-3-convert-the-kedro-pipeline-into-an-airflow-dag-with-kedro-airflow"]], "Step 4. Launch the local Airflow cluster with Astronomer": [[18, "step-4-launch-the-local-airflow-cluster-with-astronomer"]], "Debugging": [[38, "debugging"], [42, "debugging"], [41, "debugging"]], "Introduction": [[38, "introduction"], [40, "introduction"], [36, "introduction"], [6, "introduction"], [272, "introduction"]], "Debugging Node": [[38, "debugging-node"]], "Debugging Pipeline": [[38, "debugging-pipeline"]], "Extend Kedro": [[45, "extend-kedro"]], "Experiment tracking in Kedro-Viz": [[43, "experiment-tracking-in-kedro-viz"]], "Kedro versions supporting experiment tracking": [[43, "kedro-versions-supporting-experiment-tracking"]], "When should I use experiment tracking in Kedro?": [[43, "when-should-i-use-experiment-tracking-in-kedro"]], "Set up a project": [[43, "set-up-a-project"]], "Install Kedro and Kedro-Viz": [[43, "install-kedro-and-kedro-viz"]], "Install the dependencies for the project": [[43, "install-the-dependencies-for-the-project"]], "Set up the session store": [[43, "set-up-the-session-store"]], "Local storage": [[43, "local-storage"]], "Collaborative experiment tracking": [[43, "collaborative-experiment-tracking"]], "Set up experiment tracking datasets": [[43, "set-up-experiment-tracking-datasets"]], "Modify your nodes and pipelines to log metrics": [[43, "modify-your-nodes-and-pipelines-to-log-metrics"]], "Generate the run data": [[43, "generate-the-run-data"]], "Access run data and compare runs": [[43, "access-run-data-and-compare-runs"]], "View and compare plots": [[43, "view-and-compare-plots"]], "Update the dependencies": [[43, "update-the-dependencies"], [281, "update-the-dependencies"], [281, "id1"]], "Add a plotting node": [[43, "add-a-plotting-node"]], "View and compare metrics data": [[43, "view-and-compare-metrics-data"]], "Prefect": [[33, "prefect"]], "Setup": [[33, "setup"]], "How to run your Kedro pipeline using Prefect 2.0": [[33, "how-to-run-your-kedro-pipeline-using-prefect-2-0"]], "Convert your Kedro pipeline to Prefect 2.0 flow": [[33, "convert-your-kedro-pipeline-to-prefect-2-0-flow"]], "Run Prefect flow": [[33, "run-prefect-flow"]], "Code formatting and linting": [[40, "code-formatting-and-linting"]], "Set up Python tools": [[40, "set-up-python-tools"]], "Install the tools": [[40, "install-the-tools"]], "Configure ruff": [[40, "configure-ruff"]], "Configure flake8": [[40, "configure-flake8"]], "Run the tools": [[40, "run-the-tools"]], "Automated formatting and linting with pre-commit hooks": [[40, "automated-formatting-and-linting-with-pre-commit-hooks"]], "Install pre-commit": [[40, "install-pre-commit"]], "Add pre-commit configuration file": [[40, "add-pre-commit-configuration-file"]], "Install git hook scripts": [[40, "install-git-hook-scripts"]], "Common use cases": [[44, "common-use-cases"], [52, "common-use-cases"]], "Use Case 1: How to add extra behaviour to Kedro\u2019s execution timeline": [[44, "use-case-1-how-to-add-extra-behaviour-to-kedro-s-execution-timeline"]], "Use Case 2: How to integrate Kedro with additional data sources": [[44, "use-case-2-how-to-integrate-kedro-with-additional-data-sources"]], "Use Case 3: How to add or modify CLI commands": [[44, "use-case-3-how-to-add-or-modify-cli-commands"]], "Use Case 4: How to customise the initial boilerplate of your project": [[44, "use-case-4-how-to-customise-the-initial-boilerplate-of-your-project"]], "Automated Testing": [[36, "automated-testing"]], "Set up automated testing with pytest": [[36, "set-up-automated-testing-with-pytest"]], "Install pytest": [[36, "install-pytest"]], "Create a /tests directory": [[36, "create-a-tests-directory"]], "Test directory structure": [[36, "test-directory-structure"]], "Create an example test": [[36, "create-an-example-test"]], "Run your tests": [[36, "run-your-tests"]], "Add test coverage reports with pytest-cov": [[36, "add-test-coverage-reports-with-pytest-cov"]], "Install pytest-cov": [[36, "install-pytest-cov"]], "Configure pytest to use pytest-cov": [[36, "configure-pytest-to-use-pytest-cov"]], "Run pytest with pytest-cov": [[36, "run-pytest-with-pytest-cov"]], "VertexAI": [[35, "vertexai"]], "The kedro-vertexai plugin": [[35, "the-kedro-vertexai-plugin"]], "Development": [[39, "development"]], "Kedro plugins": [[46, "kedro-plugins"]], "Overview": [[46, "overview"], [253, "overview"]], "Example of a simple plugin": [[46, "example-of-a-simple-plugin"]], "Extend starter aliases": [[46, "extend-starter-aliases"]], "Working with click": [[46, "working-with-click"]], "Project context": [[46, "project-context"]], "Initialisation": [[46, "initialisation"]], "global and project commands": [[46, "global-and-project-commands"]], "Suggested command convention": [[46, "suggested-command-convention"]], "Hooks": [[46, "hooks"], [55, "hooks"], [54, "hooks"]], "CLI Hooks": [[46, "cli-hooks"]], "Contributing process": [[46, "contributing-process"]], "Supported Kedro plugins": [[46, "supported-kedro-plugins"]], "Community-developed plugins": [[46, "community-developed-plugins"]], "Set up Visual Studio Code": [[42, "set-up-visual-studio-code"]], "Advanced: For those using venv / virtualenv": [[42, "advanced-for-those-using-venv-virtualenv"]], "Setting up tasks": [[42, "setting-up-tasks"]], "Advanced: Remote Interpreter / Debugging": [[42, "advanced-remote-interpreter-debugging"]], "Configuring the Kedro catalog validation schema": [[42, "configuring-the-kedro-catalog-validation-schema"], [41, "configuring-the-kedro-catalog-validation-schema"]], "Frequently asked questions": [[47, "frequently-asked-questions"]], "Visualisation": [[47, "visualisation"]], "Working with Jupyter": [[47, "working-with-jupyter"]], "Kedro project development": [[47, "kedro-project-development"]], "Configuration": [[47, "configuration"], [3, "configuration"], [1, "configuration"]], "Advanced topics": [[47, "advanced-topics"]], "Datasets and the Data Catalog": [[47, "datasets-and-the-data-catalog"]], "Nodes and pipelines": [[47, "nodes-and-pipelines"], [258, "nodes-and-pipelines"]], "Kubeflow Pipelines": [[32, "kubeflow-pipelines"]], "Why would you use Kubeflow Pipelines?": [[32, "why-would-you-use-kubeflow-pipelines"]], "The kedro-kubeflow plugin": [[32, "the-kedro-kubeflow-plugin"]], "Kedro\u2019s command line interface": [[37, "kedro-s-command-line-interface"]], "Autocompletion (optional)": [[37, "autocompletion-optional"]], "Invoke Kedro CLI from Python (optional)": [[37, "invoke-kedro-cli-from-python-optional"]], "Kedro commands": [[37, "kedro-commands"]], "Global Kedro commands": [[37, "global-kedro-commands"]], "Get help on Kedro commands": [[37, "get-help-on-kedro-commands"]], "Confirm the Kedro version": [[37, "confirm-the-kedro-version"]], "Confirm Kedro information": [[37, "confirm-kedro-information"]], "Open the Kedro documentation in your browser": [[37, "open-the-kedro-documentation-in-your-browser"]], "Customise or Override Project-specific Kedro commands": [[37, "customise-or-override-project-specific-kedro-commands"]], "Project setup": [[37, "project-setup"], [15, "project-setup"]], "Build the project\u2019s dependency tree": [[37, "build-the-project-s-dependency-tree"]], "Install all package dependencies": [[37, "install-all-package-dependencies"]], "Run the project": [[37, "run-the-project"], [51, "run-the-project"]], "Modifying a kedro run": [[37, "modifying-a-kedro-run"]], "Deploy the project": [[37, "deploy-the-project"]], "Pull a micro-package": [[37, "pull-a-micro-package"], [259, "pull-a-micro-package"]], "Project quality": [[37, "project-quality"]], "Build the project documentation": [[37, "build-the-project-documentation"]], "Lint your project": [[37, "lint-your-project"]], "Test your project": [[37, "test-your-project"]], "Project development": [[37, "project-development"]], "Modular pipelines": [[37, "modular-pipelines"], [271, "modular-pipelines"], [260, "modular-pipelines"]], "Create a new modular pipeline in your project": [[37, "create-a-new-modular-pipeline-in-your-project"]], "Package a micro-package": [[37, "package-a-micro-package"], [259, "package-a-micro-package"]], "Pull a micro-package in your project": [[37, "pull-a-micro-package-in-your-project"]], "Delete a modular pipeline": [[37, "delete-a-modular-pipeline"]], "Registered pipelines": [[37, "registered-pipelines"]], "Describe a registered pipeline": [[37, "describe-a-registered-pipeline"]], "List all registered pipelines in your project": [[37, "list-all-registered-pipelines-in-your-project"]], "Datasets": [[37, "datasets"]], "List datasets per pipeline per type": [[37, "list-datasets-per-pipeline-per-type"]], "Rank dataset factories in the catalog": [[37, "rank-dataset-factories-in-the-catalog"]], "Data Catalog": [[37, "data-catalog"], [50, "data-catalog"], [269, "data-catalog"]], "Create a Data Catalog YAML configuration file": [[37, "create-a-data-catalog-yaml-configuration-file"]], "Notebooks": [[37, "notebooks"]], "Copy tagged cells": [[37, "copy-tagged-cells"]], "Strip output cells": [[37, "strip-output-cells"]], "Set up PyCharm": [[41, "set-up-pycharm"]], "Set up Run configurations": [[41, "set-up-run-configurations"]], "Advanced: Remote SSH interpreter": [[41, "advanced-remote-ssh-interpreter"]], "Advanced: Docker interpreter": [[41, "advanced-docker-interpreter"]], "Configure Python Console": [[41, "configure-python-console"]], "Single-machine deployment": [[34, "single-machine-deployment"]], "Container-based": [[34, "container-based"]], "How to use container registry": [[34, "how-to-use-container-registry"]], "Package-based": [[34, "package-based"]], "CLI-based": [[34, "cli-based"]], "Use GitHub workflow to copy your project": [[34, "use-github-workflow-to-copy-your-project"]], "Install and run the Kedro project": [[34, "install-and-run-the-kedro-project"]], "Tutorial: How to create a custom dataset": [[15, "tutorial-how-to-create-a-custom-dataset"]], "AbstractDataSet": [[15, "abstractdataset"]], "Scenario": [[15, "scenario"]], "The anatomy of a dataset": [[15, "the-anatomy-of-a-dataset"]], "Implement the _load method with fsspec": [[15, "implement-the-load-method-with-fsspec"]], "Implement the _save method with fsspec": [[15, "implement-the-save-method-with-fsspec"]], "Implement the _describe method": [[15, "implement-the-describe-method"]], "The complete example": [[15, "the-complete-example"]], "Integration with PartitionedDataSet": [[15, "integration-with-partitioneddataset"]], "Versioning": [[15, "versioning"]], "How to implement versioning in your dataset": [[15, "how-to-implement-versioning-in-your-dataset"]], "version namedtuple": [[15, "version-namedtuple"]], "Thread-safety": [[15, "thread-safety"]], "How to handle credentials and different filesystems": [[15, "how-to-handle-credentials-and-different-filesystems"]], "How to contribute a custom dataset implementation": [[15, "how-to-contribute-a-custom-dataset-implementation"]], "Guidelines for contributing developers": [[6, "guidelines-for-contributing-developers"]], "Before you start: development set up": [[6, "before-you-start-development-set-up"]], "Get started: areas of contribution": [[6, "get-started-areas-of-contribution"]], "core contribution process": [[6, "core-contribution-process"]], "extras contribution process": [[6, "extras-contribution-process"]], "Create a pull request": [[6, "create-a-pull-request"], [8, "create-a-pull-request"]], "Pull request title conventions": [[6, "pull-request-title-conventions"]], "Hints on pre-commit usage": [[6, "hints-on-pre-commit-usage"]], "Developer Certificate of Origin": [[6, "developer-certificate-of-origin"]], "Need help?": [[6, "need-help"]], "Parameters": [[4, "parameters"], [0, "parameters"]], "How to use parameters": [[4, "how-to-use-parameters"]], "How to load parameters in code": [[4, "how-to-load-parameters-in-code"]], "How to specify parameters at runtime": [[4, "how-to-specify-parameters-at-runtime"]], "Contribute changes to Kedro that are tested on Databricks": [[7, "contribute-changes-to-kedro-that-are-tested-on-databricks"]], "How to deploy a development version of Kedro to Databricks": [[7, "how-to-deploy-a-development-version-of-kedro-to-databricks"]], "How to install a build of Kedro onto Databricks": [[7, "how-to-install-a-build-of-kedro-onto-databricks"]], "How to set up the Databricks CLI to test a Kedro build": [[7, "how-to-set-up-the-databricks-cli-to-test-a-kedro-build"]], "How to use make databricks-build to test your Kedro build": [[7, "how-to-use-make-databricks-build-to-test-your-kedro-build"]], "Contribute to the Kedro documentation": [[8, "contribute-to-the-kedro-documentation"]], "How do I rebuild the documentation after I make changes to it?": [[8, "how-do-i-rebuild-the-documentation-after-i-make-changes-to-it"]], "Set up to build Kedro documentation": [[8, "set-up-to-build-kedro-documentation"]], "Build the documentation": [[8, "build-the-documentation"]], "Extend Kedro documentation": [[8, "extend-kedro-documentation"]], "Add new pages": [[8, "add-new-pages"]], "Move or remove pages": [[8, "move-or-remove-pages"]], "Help!": [[8, "help"]], "Kedro documentation style guide": [[8, "kedro-documentation-style-guide"]], "Advanced: Access the Data Catalog in code": [[11, "advanced-access-the-data-catalog-in-code"]], "Configure a Data Catalog": [[11, "configure-a-data-catalog"]], "Load datasets": [[11, "load-datasets"]], "Behind the scenes": [[11, "behind-the-scenes"]], "View the available data sources": [[11, "view-the-available-data-sources"]], "Save data": [[11, "save-data"]], "Save data to memory": [[11, "save-data-to-memory"]], "Save data to a SQL database for querying": [[11, "save-data-to-a-sql-database-for-querying"]], "Save data in Parquet": [[11, "save-data-in-parquet"]], "Accessing a dataset that needs credentials": [[11, "accessing-a-dataset-that-needs-credentials"]], "Versioning using the Code API": [[11, "versioning-using-the-code-api"]], "Data Catalog YAML examples": [[14, "data-catalog-yaml-examples"]], "Load / save a CSV file from / to a local file system": [[14, "load-save-a-csv-file-from-to-a-local-file-system"]], "Load / save a CSV on a local file system, using specified load / save arguments": [[14, "load-save-a-csv-on-a-local-file-system-using-specified-load-save-arguments"]], "Load / save a compressed CSV on a local file system": [[14, "load-save-a-compressed-csv-on-a-local-file-system"]], "Load a CSV file from a specific S3 bucket, using credentials and load arguments": [[14, "load-a-csv-file-from-a-specific-s3-bucket-using-credentials-and-load-arguments"]], "Load / save a pickle file from / to a local file system": [[14, "load-save-a-pickle-file-from-to-a-local-file-system"]], "Load an Excel file from Google Cloud Storage": [[14, "load-an-excel-file-from-google-cloud-storage"]], "Load a multi-sheet Excel file from a local file system": [[14, "load-a-multi-sheet-excel-file-from-a-local-file-system"]], "Save an image created with Matplotlib on Google Cloud Storage": [[14, "save-an-image-created-with-matplotlib-on-google-cloud-storage"]], "Load / save an HDF file on local file system storage, using specified load / save arguments": [[14, "load-save-an-hdf-file-on-local-file-system-storage-using-specified-load-save-arguments"]], "Load / save a parquet file on local file system storage, using specified load / save arguments": [[14, "load-save-a-parquet-file-on-local-file-system-storage-using-specified-load-save-arguments"]], "Load / save a Spark table on S3, using specified load / save arguments": [[14, "load-save-a-spark-table-on-s3-using-specified-load-save-arguments"]], "Load / save a SQL table using credentials, a database connection, using specified load / save arguments": [[14, "load-save-a-sql-table-using-credentials-a-database-connection-using-specified-load-save-arguments"]], "Load an SQL table with credentials, a database connection, and applies a SQL query to the table": [[14, "load-an-sql-table-with-credentials-a-database-connection-and-applies-a-sql-query-to-the-table"]], "Load data from an API endpoint, example US corn yield data from USDA": [[14, "load-data-from-an-api-endpoint-example-us-corn-yield-data-from-usda"]], "Load data from Minio (S3 API Compatible Storage)": [[14, "load-data-from-minio-s3-api-compatible-storage"]], "Load a model saved as a pickle from Azure Blob Storage": [[14, "load-a-model-saved-as-a-pickle-from-azure-blob-storage"]], "Load a CSV file stored in a remote location through SSH": [[14, "load-a-csv-file-stored-in-a-remote-location-through-ssh"]], "Load multiple datasets with similar configuration using YAML anchors": [[14, "load-multiple-datasets-with-similar-configuration-using-yaml-anchors"]], "Load multiple datasets with similar configuration using dataset factories": [[14, "load-multiple-datasets-with-similar-configuration-using-dataset-factories"]], "Generalise datasets with similar names and types into one dataset factory": [[14, "generalise-datasets-with-similar-names-and-types-into-one-dataset-factory"]], "Generalise datasets of the same type into one dataset factory": [[14, "generalise-datasets-of-the-same-type-into-one-dataset-factory"]], "Generalise datasets using namespaces into one dataset factory": [[14, "generalise-datasets-using-namespaces-into-one-dataset-factory"]], "Generalise datasets of the same type in different layers into one dataset factory with multiple placeholders": [[14, "generalise-datasets-of-the-same-type-in-different-layers-into-one-dataset-factory-with-multiple-placeholders"]], "Generalise datasets using multiple dataset factories": [[14, "generalise-datasets-using-multiple-dataset-factories"]], "Generalise all datasets with a catch-all dataset factory to overwrite the default MemoryDataSet": [[14, "generalise-all-datasets-with-a-catch-all-dataset-factory-to-overwrite-the-default-memorydataset"]], "Introduction to the Kedro Data Catalog": [[12, "introduction-to-the-kedro-data-catalog"]], "Use the Data Catalog within Kedro configuration": [[12, "use-the-data-catalog-within-kedro-configuration"]], "Specify the location of the dataset": [[12, "specify-the-location-of-the-dataset"]], "Backwards compatibility & breaking changes": [[5, "backwards-compatibility-breaking-changes"]], "When should I make a breaking change?": [[5, "when-should-i-make-a-breaking-change"]], "The Kedro release model": [[5, "the-kedro-release-model"]], "Credentials": [[2, "credentials"]], "How to load credentials in code": [[2, "how-to-load-credentials-in-code"]], "How to work with AWS credentials": [[2, "how-to-work-with-aws-credentials"]], "Contribute to Kedro": [[9, "contribute-to-kedro"], [56, null]], "Configuration source": [[1, "configuration-source"]], "Configuration environments": [[1, "configuration-environments"]], "Base": [[1, "base"]], "Local": [[1, "local"]], "Configuration loading": [[1, "configuration-loading"]], "Configuration file names": [[1, "configuration-file-names"]], "Configuration patterns": [[1, "configuration-patterns"]], "How to use Kedro configuration": [[1, "how-to-use-kedro-configuration"]], "How to change the setting for a configuration source folder": [[1, "how-to-change-the-setting-for-a-configuration-source-folder"]], "How to change the configuration source folder at runtime": [[1, "how-to-change-the-configuration-source-folder-at-runtime"]], "How to read configuration from a compressed file": [[1, "how-to-read-configuration-from-a-compressed-file"]], "How to access configuration in code": [[1, "how-to-access-configuration-in-code"]], "How to specify additional configuration environments": [[1, "how-to-specify-additional-configuration-environments"]], "How to change the default overriding environment": [[1, "how-to-change-the-default-overriding-environment"]], "How to use only one configuration environment": [[1, "how-to-use-only-one-configuration-environment"]], "Data Catalog how to guide": [[13, "data-catalog-how-to-guide"]], "How to version datasets and ML models": [[13, "how-to-version-datasets-and-ml-models"]], "Supported datasets": [[13, "supported-datasets"]], "How to create a Data Catalog YAML configuration file via the CLI": [[13, "how-to-create-a-data-catalog-yaml-configuration-file-via-the-cli"]], "How to access a dataset that needs credentials": [[13, "how-to-access-a-dataset-that-needs-credentials"]], "How to read the same file using two different dataset implementations": [[13, "how-to-read-the-same-file-using-two-different-dataset-implementations"]], "A typical example of transcoding": [[13, "a-typical-example-of-transcoding"]], "How does transcoding work?": [[13, "how-does-transcoding-work"]], "Advanced configuration": [[0, "advanced-configuration"]], "TemplatedConfigLoader": [[0, "templatedconfigloader"]], "Provide template values through globals": [[0, "provide-template-values-through-globals"]], "OmegaConfigLoader": [[0, "omegaconfigloader"]], "Advanced Kedro configuration": [[0, "advanced-kedro-configuration"]], "How to change which configuration files are loaded": [[0, "how-to-change-which-configuration-files-are-loaded"]], "How to ensure non default configuration files get loaded": [[0, "how-to-ensure-non-default-configuration-files-get-loaded"]], "How to bypass the configuration loading rules": [[0, "how-to-bypass-the-configuration-loading-rules"]], "How to use Jinja2 syntax in configuration": [[0, "how-to-use-jinja2-syntax-in-configuration"]], "How to do templating with the OmegaConfigLoader": [[0, "how-to-do-templating-with-the-omegaconfigloader"]], "Catalog": [[0, "catalog"]], "Other configuration files": [[0, "other-configuration-files"]], "How to use custom resolvers in the OmegaConfigLoader": [[0, "how-to-use-custom-resolvers-in-the-omegaconfigloader"]], "How to load credentials through environment variables": [[0, "how-to-load-credentials-through-environment-variables"]], "Join the Technical Steering Committee": [[10, "join-the-technical-steering-committee"]], "Responsibilities of a maintainer": [[10, "responsibilities-of-a-maintainer"]], "Product development": [[10, "product-development"]], "Community management": [[10, "community-management"]], "Requirements to become a maintainer": [[10, "requirements-to-become-a-maintainer"]], "Kedro maintainers": [[10, "kedro-maintainers"]], "Application process": [[10, "application-process"]], "Voting process": [[10, "voting-process"]], "Other issues or proposals": [[10, "other-issues-or-proposals"]], "Adding or removing maintainers": [[10, "adding-or-removing-maintainers"]], "kedro.config.ConfigLoader": [[63, "kedro-config-configloader"]], "Welcome to Kedro\u2019s documentation!": [[56, "welcome-to-kedro-s-documentation"]], "Learn about Kedro": [[56, null]], "Tutorial and basic Kedro usage": [[56, null]], "Kedro projects": [[56, null]], "Advanced usage": [[56, null]], "API documentation": [[56, "api-documentation"]], "Indices and tables": [[56, "indices-and-tables"]], "kedro.config": [[62, "kedro-config"]], "Kedro concepts": [[50, "kedro-concepts"]], "Node": [[50, "node"], [269, "node"]], "Pipeline": [[50, "pipeline"], [269, "pipeline"]], "Kedro project directory structure": [[50, "kedro-project-directory-structure"]], "conf": [[50, "conf"]], "conf/base": [[50, "conf-base"]], "conf/local": [[50, "conf-local"]], "data": [[50, "data"]], "src": [[50, "src"]], "Introduction to Kedro": [[58, "introduction-to-kedro"]], "kedro.KedroPythonVersionWarning": [[61, "kedro-kedropythonversionwarning"]], "First steps": [[48, "first-steps"]], "PySpark integration": [[57, "pyspark-integration"]], "Centralise Spark configuration in conf/base/spark.yml": [[57, "centralise-spark-configuration-in-conf-base-spark-yml"]], "Initialise a SparkSession using a hook": [[57, "initialise-a-sparksession-using-a-hook"]], "Use Kedro\u2019s built-in Spark datasets to load and save raw data": [[57, "use-kedro-s-built-in-spark-datasets-to-load-and-save-raw-data"]], "Spark and Delta Lake interaction": [[57, "spark-and-delta-lake-interaction"]], "Use MemoryDataSet for intermediary DataFrame": [[57, "use-memorydataset-for-intermediary-dataframe"]], "Use MemoryDataSet with copy_mode=\"assign\" for non-DataFrame Spark objects": [[57, "use-memorydataset-with-copy-mode-assign-for-non-dataframe-spark-objects"]], "Tips for maximising concurrency using ThreadRunner": [[57, "tips-for-maximising-concurrency-using-threadrunner"]], "Use Hooks to extend a node\u2019s behaviour": [[52, "use-hooks-to-extend-a-node-s-behaviour"]], "Use Hooks to customise the dataset load and save methods": [[52, "use-hooks-to-customise-the-dataset-load-and-save-methods"]], "Use Hooks to load external credentials": [[52, "use-hooks-to-load-external-credentials"]], "Learn how to use Kedro": [[59, "learn-how-to-use-kedro"]], "Assumptions": [[59, "assumptions"]], "Concepts": [[55, "concepts"]], "Hook specification": [[55, "hook-specification"]], "CLI hooks": [[55, "cli-hooks"]], "Hook implementation": [[55, "hook-implementation"]], "Registering your Hook implementations with Kedro": [[55, "registering-your-hook-implementations-with-kedro"]], "Disable auto-registered plugins\u2019 Hooks": [[55, "disable-auto-registered-plugins-hooks"]], "Under the hood": [[55, "under-the-hood"]], "Hooks examples": [[53, "hooks-examples"]], "Add memory consumption tracking": [[53, "add-memory-consumption-tracking"]], "Add data validation": [[53, "add-data-validation"]], "V2 API": [[53, "v2-api"]], "V3 API": [[53, "v3-api"]], "Add observability to your pipeline": [[53, "add-observability-to-your-pipeline"]], "Add metrics tracking to your model": [[53, "add-metrics-tracking-to-your-model"]], "Modify node inputs using before_node_run hook": [[53, "modify-node-inputs-using-before-node-run-hook"]], "kedro": [[60, "kedro"]], "Create a new empty project": [[51, "create-a-new-empty-project"]], "Create a new project from a configuration file": [[51, "create-a-new-project-from-a-configuration-file"]], "Create a new project containing example code": [[51, "create-a-new-project-containing-example-code"]], "Visualise a Kedro project": [[51, "visualise-a-kedro-project"]], "Where next?": [[51, "where-next"]], "More information about the pandas-iris example project": [[51, "more-information-about-the-pandas-iris-example-project"]], "Background information": [[51, "background-information"]], "Iris example: visualisation": [[51, "iris-example-visualisation"]], "Set up Kedro": [[49, "set-up-kedro"]], "Installation prerequisites": [[49, "installation-prerequisites"]], "Create a virtual environment for your Kedro project": [[49, "create-a-virtual-environment-for-your-kedro-project"]], "How to create a new virtual environment using conda": [[49, "how-to-create-a-new-virtual-environment-using-conda"]], "How to create a new virtual environment without using conda": [[49, "how-to-create-a-new-virtual-environment-without-using-conda"]], "How to install Kedro using pip": [[49, "how-to-install-kedro-using-pip"]], "How to verify your Kedro installation": [[49, "how-to-verify-your-kedro-installation"]], "How to upgrade Kedro": [[49, "how-to-upgrade-kedro"]], "How to install a development version of Kedro": [[49, "how-to-install-a-development-version-of-kedro"]], "kedro.framework.context": [[145, "kedro-framework-context"]], "kedro.framework.hooks.markers": [[150, "kedro-framework-hooks-markers"]], "kedro.framework.cli.utils.split_string": [[144, "kedro-framework-cli-utils-split-string"]], "kedro.framework.hooks.manager": [[149, "kedro-framework-hooks-manager"]], "kedro.framework.hooks.specs.DataCatalogSpecs": [[152, "kedro-framework-hooks-specs-datacatalogspecs"]], "kedro.framework.context.KedroContextError": [[147, "kedro-framework-context-kedrocontexterror"]], "kedro.framework.hooks.specs.NodeSpecs": [[155, "kedro-framework-hooks-specs-nodespecs"]], "kedro.framework.hooks": [[148, "kedro-framework-hooks"]], "kedro.framework.project.configure_project": [[159, "kedro-framework-project-configure-project"]], "kedro.framework.hooks.specs.KedroContextSpecs": [[154, "kedro-framework-hooks-specs-kedrocontextspecs"]], "kedro.framework.hooks.specs.PipelineSpecs": [[156, "kedro-framework-hooks-specs-pipelinespecs"]], "kedro.framework.project": [[157, "kedro-framework-project"]], "kedro.framework.context.KedroContext": [[146, "kedro-framework-context-kedrocontext"]], "kedro.framework.hooks.specs": [[151, "kedro-framework-hooks-specs"]], "kedro.framework.project.configure_logging": [[158, "kedro-framework-project-configure-logging"]], "kedro.framework.hooks.specs.DatasetSpecs": [[153, "kedro-framework-hooks-specs-datasetspecs"]], "Set up the spaceflights project": [[277, "set-up-the-spaceflights-project"]], "Create a new project": [[277, "create-a-new-project"]], "Install project dependencies": [[277, "install-project-dependencies"]], "Install the dependencies": [[277, "install-the-dependencies"]], "Optional: logging and configuration": [[277, "optional-logging-and-configuration"]], "Configuration best practice to avoid leaking confidential data": [[277, "configuration-best-practice-to-avoid-leaking-confidential-data"]], "Package an entire Kedro project": [[273, "package-an-entire-kedro-project"]], "Add documentation to a Kedro project": [[273, "add-documentation-to-a-kedro-project"]], "Set up the Sphinx project files": [[273, "set-up-the-sphinx-project-files"]], "Build HTML documentation": [[273, "build-html-documentation"]], "Documentation from docstrings": [[273, "documentation-from-docstrings"]], "Package a Kedro project": [[273, "package-a-kedro-project"]], "Run a packaged project": [[273, "run-a-packaged-project"]], "Docker, Airflow and other deployment targets": [[273, "docker-airflow-and-other-deployment-targets"]], "Set up the data": [[274, "set-up-the-data"]], "Project datasets": [[274, "project-datasets"]], "Dataset registration": [[274, "dataset-registration"]], "Test that Kedro can load the data": [[274, "test-that-kedro-can-load-the-data"]], "Further information": [[274, "further-information"]], "Custom data": [[274, "custom-data"]], "Supported data locations": [[274, "supported-data-locations"]], "Visualise charts in Kedro-Viz": [[281, "visualise-charts-in-kedro-viz"]], "Visualisation with Plotly": [[281, "visualisation-with-plotly"]], "Configure the Data Catalog": [[281, "configure-the-data-catalog"], [281, "id2"], [280, "configure-the-data-catalog"]], "Create the template reporting pipeline": [[281, "create-the-template-reporting-pipeline"]], "Add the Plotly reporting nodes": [[281, "add-the-plotly-reporting-nodes"]], "Update the reporting pipeline code": [[281, "update-the-reporting-pipeline-code"]], "Run the pipeline": [[281, "run-the-pipeline"], [281, "id3"]], "Visualisation with Matplotlib": [[281, "visualisation-with-matplotlib"]], "Add another node": [[281, "add-another-node"]], "Update the pipeline": [[281, "update-the-pipeline"]], "Visualisation with Kedro-Viz": [[278, "visualisation-with-kedro-viz"]], "Create a data processing pipeline": [[272, "create-a-data-processing-pipeline"]], "Data preprocessing node functions": [[272, "data-preprocessing-node-functions"]], "The data processing pipeline": [[272, "the-data-processing-pipeline"]], "Test the example": [[272, "test-the-example"]], "Preprocessed data registration": [[272, "preprocessed-data-registration"]], "Create a table for model input": [[272, "create-a-table-for-model-input"]], "Model input table registration": [[272, "model-input-table-registration"]], "Test the example again": [[272, "test-the-example-again"]], "Visualise the project": [[272, "visualise-the-project"]], "Checkpoint": [[272, "checkpoint"]], "Preview data in Kedro-Viz": [[280, "preview-data-in-kedro-viz"]], "Previewing Data on Kedro-viz": [[280, "previewing-data-on-kedro-viz"]], "Next steps: Tutorial": [[275, "next-steps-tutorial"]], "Get help": [[275, "get-help"]], "Terminology": [[275, "terminology"]], "Project root directory": [[275, "project-root-directory"]], "Dependencies": [[275, "dependencies"], [251, "dependencies"]], "Standard development workflow": [[275, "standard-development-workflow"]], "Spaceflights tutorial FAQs": [[276, "spaceflights-tutorial-faqs"]], "How do I resolve these common errors?": [[276, "how-do-i-resolve-these-common-errors"]], "DataSet errors": [[276, "dataset-errors"]], "DataSetError: Failed while loading data from data set": [[276, "dataseterror-failed-while-loading-data-from-data-set"]], "DataSetNotFoundError: DataSet not found in the catalog": [[276, "datasetnotfounderror-dataset-not-found-in-the-catalog"]], "DataSetError: An exception occurred when parsing config for DataSet": [[276, "dataseterror-an-exception-occurred-when-parsing-config-for-dataset"]], "Pipeline run": [[276, "pipeline-run"]], "Visualise the spaceflights project": [[279, "visualise-the-spaceflights-project"]], "Automatic visualisation updates": [[279, "automatic-visualisation-updates"]], "Visualise layers": [[279, "visualise-layers"]], "Share a pipeline visualisation": [[279, "share-a-pipeline-visualisation"]], "Slice a pipeline": [[265, "slice-a-pipeline"], [271, "slice-a-pipeline"]], "Slice a pipeline by providing inputs": [[265, "slice-a-pipeline-by-providing-inputs"]], "Slice a pipeline by specifying nodes": [[265, "slice-a-pipeline-by-specifying-nodes"]], "Slice a pipeline by specifying final nodes": [[265, "slice-a-pipeline-by-specifying-final-nodes"]], "Slice a pipeline with tagged nodes": [[265, "slice-a-pipeline-with-tagged-nodes"]], "Slice a pipeline by running specified nodes": [[265, "slice-a-pipeline-by-running-specified-nodes"]], "How to recreate missing outputs": [[265, "how-to-recreate-missing-outputs"]], "Run a pipeline": [[264, "run-a-pipeline"]], "Runners": [[264, "runners"]], "SequentialRunner": [[264, "sequentialrunner"]], "ParallelRunner": [[264, "parallelrunner"]], "Multiprocessing": [[264, "multiprocessing"]], "Multithreading": [[264, "multithreading"]], "Custom runners": [[264, "custom-runners"]], "Load and save asynchronously": [[264, "load-and-save-asynchronously"]], "Run a pipeline by name": [[264, "run-a-pipeline-by-name"]], "Run pipelines with IO": [[264, "run-pipelines-with-io"]], "Output to a file": [[264, "output-to-a-file"]], "Configure kedro run arguments": [[264, "configure-kedro-run-arguments"]], "Kedro for notebook users": [[266, "kedro-for-notebook-users"]], "Default framework-side logging configuration": [[257, "default-framework-side-logging-configuration"]], "Project-side logging configuration": [[257, "project-side-logging-configuration"]], "Using KEDRO_LOGGING_CONFIG environment variable": [[257, "using-kedro-logging-config-environment-variable"]], "Disable file-based logging": [[257, "disable-file-based-logging"]], "Customise the rich Handler": [[257, "customise-the-rich-handler"]], "Use plain console logging": [[257, "use-plain-console-logging"]], "Rich logging in a dumb terminal": [[257, "rich-logging-in-a-dumb-terminal"]], "Rich logging in Jupyter": [[257, "rich-logging-in-jupyter"]], "Perform logging in your project": [[257, "perform-logging-in-your-project"]], "Kedro glossary": [[269, "kedro-glossary"]], "Data engineering vs Data science": [[269, "data-engineering-vs-data-science"]], "Kedro": [[269, "kedro"]], "KedroContext": [[269, "kedrocontext"]], "KedroSession": [[269, "kedrosession"]], "Kedro-Viz": [[269, "kedro-viz"]], "Layers (data engineering convention)": [[269, "layers-data-engineering-convention"]], "Modular pipeline": [[269, "modular-pipeline"]], "Node execution order": [[269, "node-execution-order"]], "Pipeline slicing": [[269, "pipeline-slicing"]], "Runner": [[269, "runner"]], "Starters": [[269, "starters"]], "Tags": [[269, "tags"]], "Workflow dependencies": [[269, "workflow-dependencies"], [251, "workflow-dependencies"]], "Kedro as a data registry": [[268, "kedro-as-a-data-registry"]], "Usage": [[268, "usage"]], "Micro-packaging": [[259, "micro-packaging"]], "Package multiple micro-packages": [[259, "package-multiple-micro-packages"]], "Providing fsspec arguments": [[259, "providing-fsspec-arguments"]], "Pull multiple micro-packages": [[259, "pull-multiple-micro-packages"]], "Resources": [[270, "resources"]], "Create a data science pipeline": [[271, "create-a-data-science-pipeline"]], "Data science nodes": [[271, "data-science-nodes"]], "Input parameter configuration": [[271, "input-parameter-configuration"]], "Model registration": [[271, "model-registration"]], "Data science pipeline": [[271, "data-science-pipeline"]], "Test the pipelines": [[271, "test-the-pipelines"]], "Optional: Extend the project with namespacing and a modular pipeline": [[271, "optional-extend-the-project-with-namespacing-and-a-modular-pipeline"]], "How it works: the modular pipeline() wrapper": [[271, "how-it-works-the-modular-pipeline-wrapper"]], "How do namespaces affect parameters?": [[271, "how-do-namespaces-affect-parameters"]], "Optional: Kedro runners": [[271, "optional-kedro-runners"]], "Pipelines": [[262, "pipelines"]], "How to build a pipeline": [[262, "how-to-build-a-pipeline"]], "How to tag a pipeline": [[262, "how-to-tag-a-pipeline"]], "How to merge multiple pipelines": [[262, "how-to-merge-multiple-pipelines"]], "Information about the nodes in a pipeline": [[262, "information-about-the-nodes-in-a-pipeline"]], "Information about pipeline inputs and outputs": [[262, "information-about-pipeline-inputs-and-outputs"]], "Bad pipelines": [[262, "bad-pipelines"]], "Pipeline with bad nodes": [[262, "pipeline-with-bad-nodes"]], "Pipeline with circular dependencies": [[262, "pipeline-with-circular-dependencies"]], "The pipeline registry": [[263, "the-pipeline-registry"]], "Pipeline autodiscovery": [[263, "pipeline-autodiscovery"]], "Kedro and Jupyter Notebooks": [[267, "kedro-and-jupyter-notebooks"]], "A custom Kedro kernel": [[267, "a-custom-kedro-kernel"]], "Iris dataset example": [[267, "iris-dataset-example"]], "catalog": [[267, "catalog"]], "context": [[267, "context"]], "pipelines": [[267, "pipelines"]], "session": [[267, "session"]], "%reload_kedro line magic": [[267, "reload-kedro-line-magic"]], "%run_viz line magic": [[267, "run-viz-line-magic"]], "Convert functions from Jupyter Notebooks into Kedro nodes": [[267, "convert-functions-from-jupyter-notebooks-into-kedro-nodes"]], "Useful to know\u2026": [[267, "useful-to-know"]], "Managed services": [[267, "managed-services"]], "IPython, JupyterLab and other Jupyter clients": [[267, "ipython-jupyterlab-and-other-jupyter-clients"]], "Find out more": [[267, "find-out-more"]], "Logging": [[256, "logging"]], "What are modular pipelines?": [[260, "what-are-modular-pipelines"]], "Key concepts": [[260, "key-concepts"]], "How do I create a modular pipeline?": [[260, "how-do-i-create-a-modular-pipeline"]], "What does kedro pipeline create do?": [[260, "what-does-kedro-pipeline-create-do"]], "Ensuring portability": [[260, "ensuring-portability"]], "Providing modular pipeline specific dependencies": [[260, "providing-modular-pipeline-specific-dependencies"]], "Using the modular pipeline() wrapper to provide overrides": [[260, "using-the-modular-pipeline-wrapper-to-provide-overrides"]], "Combining disconnected pipelines": [[260, "combining-disconnected-pipelines"]], "Using a modular pipeline multiple times": [[260, "using-a-modular-pipeline-multiple-times"]], "How to use a modular pipeline with different parameters": [[260, "how-to-use-a-modular-pipeline-with-different-parameters"]], "Nodes": [[261, "nodes"]], "How to create a node": [[261, "how-to-create-a-node"]], "Node definition syntax": [[261, "node-definition-syntax"]], "Syntax for input variables": [[261, "syntax-for-input-variables"]], "Syntax for output variables": [[261, "syntax-for-output-variables"]], "**kwargs-only node functions": [[261, "kwargs-only-node-functions"]], "How to tag a node": [[261, "how-to-tag-a-node"]], "How to run a node": [[261, "how-to-run-a-node"]], "How to use generator functions in a node": [[261, "how-to-use-generator-functions-in-a-node"]], "kedro.ipython.load_ipython_extension": [[187, "kedro-ipython-load-ipython-extension"]], "kedro.io.DataSetError": [[179, "kedro-io-dataseterror"]], "kedro.io.MemoryDataSet": [[183, "kedro-io-memorydataset"]], "kedro.io.LambdaDataSet": [[182, "kedro-io-lambdadataset"]], "kedro.io.Version": [[185, "kedro-io-version"]], "kedro.io.DataSetNotFoundError": [[180, "kedro-io-datasetnotfounderror"]], "kedro.io.DataSetAlreadyExistsError": [[178, "kedro-io-datasetalreadyexistserror"]], "kedro.io.PartitionedDataSet": [[184, "kedro-io-partitioneddataset"]], "kedro.logging": [[190, "kedro-logging"]], "kedro.io.DataCatalog": [[177, "kedro-io-datacatalog"]], "kedro.io.CachedDataSet": [[176, "kedro-io-cacheddataset"]], "kedro.ipython": [[186, "kedro-ipython"]], "kedro.ipython.magic_reload_kedro": [[188, "kedro-ipython-magic-reload-kedro"]], "kedro.logging.RichHandler": [[191, "kedro-logging-richhandler"]], "kedro.io.IncrementalDataSet": [[181, "kedro-io-incrementaldataset"]], "kedro.ipython.reload_kedro": [[189, "kedro-ipython-reload-kedro"]], "kedro.extras.extensions": [[107, "kedro-extras-extensions"]], "kedro.extras.datasets.yaml.YAMLDataSet": [[106, "kedro-extras-datasets-yaml-yamldataset"]], "kedro.extras.datasets.svmlight.SVMLightDataSet": [[101, "kedro-extras-datasets-svmlight-svmlightdataset"]], "kedro.extras.datasets.tracking.MetricsDataSet": [[105, "kedro-extras-datasets-tracking-metricsdataset"]], "kedro.extras.datasets.spark.SparkJDBCDataSet": [[100, "kedro-extras-datasets-spark-sparkjdbcdataset"]], "kedro.extras.extensions.ipython": [[108, "kedro-extras-extensions-ipython"]], "kedro.extras.logging.color_logger.ColorHandler": [[111, "kedro-extras-logging-color-logger-colorhandler"]], "kedro.extras.datasets.tensorflow.TensorFlowModelDataset": [[102, "kedro-extras-datasets-tensorflow-tensorflowmodeldataset"]], "kedro.extras.logging": [[109, "kedro-extras-logging"]], "kedro.extras.logging.color_logger": [[110, "kedro-extras-logging-color-logger"]], "kedro.extras.datasets.spark.SparkHiveDataSet": [[99, "kedro-extras-datasets-spark-sparkhivedataset"]], "kedro.extras.datasets.tracking.JSONDataSet": [[104, "kedro-extras-datasets-tracking-jsondataset"]], "kedro.extras.datasets.text.TextDataSet": [[103, "kedro-extras-datasets-text-textdataset"]], "kedro.extras.datasets.spark.DeltaTableDataSet": [[97, "kedro-extras-datasets-spark-deltatabledataset"]], "kedro.extras.datasets.redis.PickleDataSet": [[96, "kedro-extras-datasets-redis-pickledataset"]], "kedro.extras.datasets.spark.SparkDataSet": [[98, "kedro-extras-datasets-spark-sparkdataset"]], "kedro.framework.startup.bootstrap_project": [[172, "kedro-framework-startup-bootstrap-project"]], "kedro.framework.session.session.KedroSessionError": [[165, "kedro-framework-session-session-kedrosessionerror"]], "kedro.framework.session.shelvestore": [[166, "kedro-framework-session-shelvestore"]], "kedro.io.AbstractDataSet": [[174, "kedro-io-abstractdataset"]], "kedro.io.AbstractVersionedDataSet": [[175, "kedro-io-abstractversioneddataset"]], "kedro.framework.session.session": [[163, "kedro-framework-session-session"]], "kedro.io": [[173, "kedro-io"]], "kedro.framework.session.store.BaseSessionStore": [[169, "kedro-framework-session-store-basesessionstore"]], "kedro.framework.session": [[162, "kedro-framework-session"]], "kedro.framework.session.store": [[168, "kedro-framework-session-store"]], "kedro.framework.startup": [[170, "kedro-framework-startup"]], "kedro.framework.project.validate_settings": [[161, "kedro-framework-project-validate-settings"]], "kedro.framework.session.session.KedroSession": [[164, "kedro-framework-session-session-kedrosession"]], "kedro.framework.session.shelvestore.ShelveStore": [[167, "kedro-framework-session-shelvestore-shelvestore"]], "kedro.framework.project.find_pipelines": [[160, "kedro-framework-project-find-pipelines"]], "kedro.framework.startup.ProjectMetadata": [[171, "kedro-framework-startup-projectmetadata"]], "kedro_datasets.spark.SparkDataSet": [[240, "kedro-datasets-spark-sparkdataset"]], "kedro_datasets.tracking.MetricsDataSet": [[248, "kedro-datasets-tracking-metricsdataset"]], "Project settings": [[254, "project-settings"]], "Application settings": [[254, "application-settings"]], "Project metadata": [[254, "project-metadata"]], "kedro_datasets.spark.SparkStreamingDataSet": [[243, "kedro-datasets-spark-sparkstreamingdataset"]], "kedro_datasets.video.VideoDataSet": [[249, "kedro-datasets-video-videodataset"]], "kedro_datasets.svmlight.SVMLightDataSet": [[244, "kedro-datasets-svmlight-svmlightdataset"]], "kedro_datasets.spark.SparkHiveDataSet": [[241, "kedro-datasets-spark-sparkhivedataset"]], "kedro_datasets.text.TextDataSet": [[246, "kedro-datasets-text-textdataset"]], "kedro_datasets.spark.SparkJDBCDataSet": [[242, "kedro-datasets-spark-sparkjdbcdataset"]], "Lifecycle management with KedroSession": [[253, "lifecycle-management-with-kedrosession"]], "Create a session": [[253, "create-a-session"]], "Kedro starters": [[255, "kedro-starters"]], "How to use Kedro starters": [[255, "how-to-use-kedro-starters"]], "Starter aliases": [[255, "starter-aliases"]], "List of official starters": [[255, "list-of-official-starters"]], "Starter versioning": [[255, "starter-versioning"]], "Use a starter with a configuration file": [[255, "use-a-starter-with-a-configuration-file"]], "How to create a Kedro starter": [[255, "how-to-create-a-kedro-starter"]], "Configuration variables": [[255, "configuration-variables"]], "Example Kedro starter": [[255, "example-kedro-starter"]], "kedro_datasets.yaml.YAMLDataSet": [[250, "kedro-datasets-yaml-yamldataset"]], "Kedro project setup": [[252, "kedro-project-setup"]], "kedro_datasets.tracking.JSONDataSet": [[247, "kedro-datasets-tracking-jsondataset"]], "Project-specific dependencies": [[251, "project-specific-dependencies"]], "Install project-specific dependencies": [[251, "install-project-specific-dependencies"]], "Install dependencies related to the Data Catalog": [[251, "install-dependencies-related-to-the-data-catalog"]], "Install dependencies at a group-level": [[251, "install-dependencies-at-a-group-level"]], "Install dependencies at a type-level": [[251, "install-dependencies-at-a-type-level"]], "kedro_datasets.tensorflow.TensorFlowModelDataSet": [[245, "kedro-datasets-tensorflow-tensorflowmodeldataset"]], "kedro.extras.datasets.geopandas.GeoJSONDataSet": [[73, "kedro-extras-datasets-geopandas-geojsondataset"]], "kedro.extras.datasets.holoviews.HoloviewsWriter": [[74, "kedro-extras-datasets-holoviews-holoviewswriter"]], "kedro.extras.datasets.networkx.GraphMLDataSet": [[78, "kedro-extras-datasets-networkx-graphmldataset"]], "kedro.extras.datasets.biosequence.BioSequenceDataSet": [[70, "kedro-extras-datasets-biosequence-biosequencedataset"]], "kedro.extras.datasets.networkx.GMLDataSet": [[77, "kedro-extras-datasets-networkx-gmldataset"]], "kedro.config.OmegaConfigLoader": [[65, "kedro-config-omegaconfigloader"]], "kedro.extras.datasets": [[68, "kedro-extras-datasets"]], "kedro.extras.datasets.matplotlib.MatplotlibWriter": [[76, "kedro-extras-datasets-matplotlib-matplotlibwriter"]], "kedro.extras": [[67, "kedro-extras"]], "kedro.extras.datasets.dask.ParquetDataSet": [[71, "kedro-extras-datasets-dask-parquetdataset"]], "kedro.config.TemplatedConfigLoader": [[66, "kedro-config-templatedconfigloader"]], "kedro.extras.datasets.networkx.JSONDataSet": [[79, "kedro-extras-datasets-networkx-jsondataset"]], "kedro.extras.datasets.json.JSONDataSet": [[75, "kedro-extras-datasets-json-jsondataset"]], "kedro.extras.datasets.api.APIDataSet": [[69, "kedro-extras-datasets-api-apidataset"]], "kedro.config.MissingConfigException": [[64, "kedro-config-missingconfigexception"]], "kedro.extras.datasets.email.EmailMessageDataSet": [[72, "kedro-extras-datasets-email-emailmessagedataset"]], "kedro.pipeline": [[192, "kedro-pipeline"]], "kedro.pipeline.node.Node": [[197, "kedro-pipeline-node-node"]], "kedro.runner.run_node": [[203, "kedro-runner-run-node"]], "kedro.runner.ParallelRunner": [[200, "kedro-runner-parallelrunner"]], "kedro.runner.ThreadRunner": [[202, "kedro-runner-threadrunner"]], "kedro_datasets": [[206, "kedro-datasets"]], "kedro.utils.load_obj": [[205, "kedro-utils-load-obj"]], "kedro.runner.SequentialRunner": [[201, "kedro-runner-sequentialrunner"]], "kedro_datasets.api.APIDataSet": [[207, "kedro-datasets-api-apidataset"]], "kedro.runner": [[198, "kedro-runner"]], "kedro.pipeline.Pipeline": [[193, "kedro-pipeline-pipeline"]], "kedro.utils": [[204, "kedro-utils"]], "kedro.pipeline.modular_pipeline.pipeline": [[195, "kedro-pipeline-modular-pipeline-pipeline"]], "kedro.pipeline.modular_pipeline.ModularPipelineError": [[194, "kedro-pipeline-modular-pipeline-modularpipelineerror"]], "kedro.pipeline.node": [[196, "kedro-pipeline-node"]], "kedro.runner.AbstractRunner": [[199, "kedro-runner-abstractrunner"]], "kedro.extras.datasets.pandas.HDFDataSet": [[86, "kedro-extras-datasets-pandas-hdfdataset"]], "kedro.extras.datasets.pandas.GenericDataSet": [[85, "kedro-extras-datasets-pandas-genericdataset"]], "kedro.extras.datasets.pandas.GBQQueryDataSet": [[83, "kedro-extras-datasets-pandas-gbqquerydataset"]], "kedro.extras.datasets.pandas.SQLQueryDataSet": [[89, "kedro-extras-datasets-pandas-sqlquerydataset"]], "kedro.extras.datasets.plotly.JSONDataSet": [[94, "kedro-extras-datasets-plotly-jsondataset"]], "kedro.extras.datasets.pandas.FeatherDataSet": [[82, "kedro-extras-datasets-pandas-featherdataset"]], "kedro.extras.datasets.pandas.JSONDataSet": [[87, "kedro-extras-datasets-pandas-jsondataset"]], "kedro.extras.datasets.pandas.ParquetDataSet": [[88, "kedro-extras-datasets-pandas-parquetdataset"]], "kedro.extras.datasets.pandas.GBQTableDataSet": [[84, "kedro-extras-datasets-pandas-gbqtabledataset"]], "kedro.extras.datasets.plotly.PlotlyDataSet": [[95, "kedro-extras-datasets-plotly-plotlydataset"]], "kedro.extras.datasets.pickle.PickleDataSet": [[92, "kedro-extras-datasets-pickle-pickledataset"]], "kedro.extras.datasets.pandas.XMLDataSet": [[91, "kedro-extras-datasets-pandas-xmldataset"]], "kedro.extras.datasets.pandas.CSVDataSet": [[80, "kedro-extras-datasets-pandas-csvdataset"]], "kedro.extras.datasets.pandas.ExcelDataSet": [[81, "kedro-extras-datasets-pandas-exceldataset"]], "kedro.extras.datasets.pandas.SQLTableDataSet": [[90, "kedro-extras-datasets-pandas-sqltabledataset"]], "kedro.extras.datasets.pillow.ImageDataSet": [[93, "kedro-extras-datasets-pillow-imagedataset"]], "kedro_datasets.snowflake.SnowparkTableDataSet": [[238, "kedro-datasets-snowflake-snowparktabledataset"]], "kedro_datasets.plotly.PlotlyDataSet": [[235, "kedro-datasets-plotly-plotlydataset"]], "kedro_datasets.pandas.GenericDataSet": [[225, "kedro-datasets-pandas-genericdataset"]], "kedro_datasets.plotly.JSONDataSet": [[234, "kedro-datasets-plotly-jsondataset"]], "kedro_datasets.polars.CSVDataSet": [[236, "kedro-datasets-polars-csvdataset"]], "kedro_datasets.pickle.PickleDataSet": [[232, "kedro-datasets-pickle-pickledataset"]], "kedro_datasets.pandas.SQLTableDataSet": [[230, "kedro-datasets-pandas-sqltabledataset"]], "kedro_datasets.pandas.GBQTableDataSet": [[224, "kedro-datasets-pandas-gbqtabledataset"]], "kedro_datasets.pandas.JSONDataSet": [[227, "kedro-datasets-pandas-jsondataset"]], "kedro_datasets.pandas.XMLDataSet": [[231, "kedro-datasets-pandas-xmldataset"]], "kedro_datasets.pillow.ImageDataSet": [[233, "kedro-datasets-pillow-imagedataset"]], "kedro_datasets.pandas.ParquetDataSet": [[228, "kedro-datasets-pandas-parquetdataset"]], "kedro_datasets.pandas.SQLQueryDataSet": [[229, "kedro-datasets-pandas-sqlquerydataset"]], "kedro_datasets.redis.PickleDataSet": [[237, "kedro-datasets-redis-pickledataset"]], "kedro_datasets.spark.DeltaTableDataSet": [[239, "kedro-datasets-spark-deltatabledataset"]], "kedro_datasets.pandas.HDFDataSet": [[226, "kedro-datasets-pandas-hdfdataset"]], "kedro_datasets.json.JSONDataSet": [[214, "kedro-datasets-json-jsondataset"]], "kedro_datasets.pandas.GBQQueryDataSet": [[223, "kedro-datasets-pandas-gbqquerydataset"]], "kedro_datasets.dask.ParquetDataSet": [[209, "kedro-datasets-dask-parquetdataset"]], "kedro_datasets.networkx.GMLDataSet": [[216, "kedro-datasets-networkx-gmldataset"]], "kedro_datasets.networkx.JSONDataSet": [[218, "kedro-datasets-networkx-jsondataset"]], "kedro_datasets.email.EmailMessageDataSet": [[211, "kedro-datasets-email-emailmessagedataset"]], "kedro_datasets.databricks.ManagedTableDataSet": [[210, "kedro-datasets-databricks-managedtabledataset"]], "kedro_datasets.holoviews.HoloviewsWriter": [[213, "kedro-datasets-holoviews-holoviewswriter"]], "kedro_datasets.pandas.CSVDataSet": [[219, "kedro-datasets-pandas-csvdataset"]], "kedro_datasets.pandas.ExcelDataSet": [[221, "kedro-datasets-pandas-exceldataset"]], "kedro_datasets.pandas.DeltaTableDataSet": [[220, "kedro-datasets-pandas-deltatabledataset"]], "kedro_datasets.pandas.FeatherDataSet": [[222, "kedro-datasets-pandas-featherdataset"]], "kedro_datasets.networkx.GraphMLDataSet": [[217, "kedro-datasets-networkx-graphmldataset"]], "kedro_datasets.biosequence.BioSequenceDataSet": [[208, "kedro-datasets-biosequence-biosequencedataset"]], "kedro_datasets.geopandas.GeoJSONDataSet": [[212, "kedro-datasets-geopandas-geojsondataset"]], "kedro_datasets.matplotlib.MatplotlibWriter": [[215, "kedro-datasets-matplotlib-matplotlibwriter"]]}, "indexentries": {"kedro": [[60, "module-kedro"]], "module": [[60, "module-kedro"], [62, "module-kedro.config"], [67, "module-kedro.extras"], [68, "module-kedro.extras.datasets"], [107, "module-kedro.extras.extensions"], [108, "module-kedro.extras.extensions.ipython"], [109, "module-kedro.extras.logging"], [110, "module-kedro.extras.logging.color_logger"], [112, "module-kedro.framework"], [113, "module-kedro.framework.cli"], [114, "module-kedro.framework.cli.catalog"], [115, "module-kedro.framework.cli.cli"], [118, "module-kedro.framework.cli.hooks"], [119, "module-kedro.framework.cli.hooks.manager"], [122, "module-kedro.framework.cli.hooks.markers"], [123, "module-kedro.framework.cli.hooks.specs"], [125, "module-kedro.framework.cli.jupyter"], [127, "module-kedro.framework.cli.micropkg"], [129, "module-kedro.framework.cli.pipeline"], [131, "module-kedro.framework.cli.project"], [132, "module-kedro.framework.cli.registry"], [133, "module-kedro.framework.cli.starters"], [135, "module-kedro.framework.cli.utils"], [145, "module-kedro.framework.context"], [148, "module-kedro.framework.hooks"], [149, "module-kedro.framework.hooks.manager"], [150, "module-kedro.framework.hooks.markers"], [151, "module-kedro.framework.hooks.specs"], [157, "module-kedro.framework.project"], [162, "module-kedro.framework.session"], [163, "module-kedro.framework.session.session"], [166, "module-kedro.framework.session.shelvestore"], [168, "module-kedro.framework.session.store"], [170, "module-kedro.framework.startup"], [173, "module-kedro.io"], [186, "module-kedro.ipython"], [190, "module-kedro.logging"], [192, "module-kedro.pipeline"], [198, "module-kedro.runner"], [204, "module-kedro.utils"], [206, "module-kedro_datasets"]], "kedropythonversionwarning (class in kedro)": [[61, "kedro.KedroPythonVersionWarning"]], "args (kedro.kedropythonversionwarning attribute)": [[61, "kedro.KedroPythonVersionWarning.args"]], "with_traceback() (kedro.kedropythonversionwarning method)": [[61, "kedro.KedroPythonVersionWarning.with_traceback"]], "kedro.config": [[62, "module-kedro.config"]], "configloader (class in kedro.config)": [[63, "kedro.config.ConfigLoader"]], "__init__() (kedro.config.configloader method)": [[63, "kedro.config.ConfigLoader.__init__"]], "clear() (kedro.config.configloader method)": [[63, "kedro.config.ConfigLoader.clear"]], "conf_paths (kedro.config.configloader property)": [[63, "kedro.config.ConfigLoader.conf_paths"]], "copy() (kedro.config.configloader method)": [[63, "kedro.config.ConfigLoader.copy"]], "fromkeys() (kedro.config.configloader class method)": [[63, "kedro.config.ConfigLoader.fromkeys"]], "get() (kedro.config.configloader method)": [[63, "kedro.config.ConfigLoader.get"]], "items() (kedro.config.configloader method)": [[63, "kedro.config.ConfigLoader.items"]], "keys() (kedro.config.configloader method)": [[63, "kedro.config.ConfigLoader.keys"]], "pop() (kedro.config.configloader method)": [[63, "kedro.config.ConfigLoader.pop"]], "popitem() (kedro.config.configloader method)": [[63, "kedro.config.ConfigLoader.popitem"]], "setdefault() (kedro.config.configloader method)": [[63, "kedro.config.ConfigLoader.setdefault"]], "update() (kedro.config.configloader method)": [[63, "kedro.config.ConfigLoader.update"]], "values() (kedro.config.configloader method)": [[63, "kedro.config.ConfigLoader.values"]], "missingconfigexception (class in kedro.config)": [[64, "kedro.config.MissingConfigException"]], "args (kedro.config.missingconfigexception attribute)": [[64, "kedro.config.MissingConfigException.args"]], "with_traceback() (kedro.config.missingconfigexception method)": [[64, "kedro.config.MissingConfigException.with_traceback"]], "omegaconfigloader (class in kedro.config)": [[65, "kedro.config.OmegaConfigLoader"]], "__init__() (kedro.config.omegaconfigloader method)": [[65, "kedro.config.OmegaConfigLoader.__init__"]], "clear() (kedro.config.omegaconfigloader method)": [[65, "kedro.config.OmegaConfigLoader.clear"]], "copy() (kedro.config.omegaconfigloader method)": [[65, "kedro.config.OmegaConfigLoader.copy"]], "fromkeys() (kedro.config.omegaconfigloader class method)": [[65, "kedro.config.OmegaConfigLoader.fromkeys"]], "get() (kedro.config.omegaconfigloader method)": [[65, "kedro.config.OmegaConfigLoader.get"]], "items() (kedro.config.omegaconfigloader method)": [[65, "kedro.config.OmegaConfigLoader.items"]], "keys() (kedro.config.omegaconfigloader method)": [[65, "kedro.config.OmegaConfigLoader.keys"]], "load_and_merge_dir_config() (kedro.config.omegaconfigloader method)": [[65, "kedro.config.OmegaConfigLoader.load_and_merge_dir_config"]], "pop() (kedro.config.omegaconfigloader method)": [[65, "kedro.config.OmegaConfigLoader.pop"]], "popitem() (kedro.config.omegaconfigloader method)": [[65, "kedro.config.OmegaConfigLoader.popitem"]], "setdefault() (kedro.config.omegaconfigloader method)": [[65, "kedro.config.OmegaConfigLoader.setdefault"]], "update() (kedro.config.omegaconfigloader method)": [[65, "kedro.config.OmegaConfigLoader.update"]], "values() (kedro.config.omegaconfigloader method)": [[65, "kedro.config.OmegaConfigLoader.values"]], "templatedconfigloader (class in kedro.config)": [[66, "kedro.config.TemplatedConfigLoader"]], "__init__() (kedro.config.templatedconfigloader method)": [[66, "kedro.config.TemplatedConfigLoader.__init__"]], "clear() (kedro.config.templatedconfigloader method)": [[66, "kedro.config.TemplatedConfigLoader.clear"]], "conf_paths (kedro.config.templatedconfigloader property)": [[66, "kedro.config.TemplatedConfigLoader.conf_paths"]], "copy() (kedro.config.templatedconfigloader method)": [[66, "kedro.config.TemplatedConfigLoader.copy"]], "fromkeys() (kedro.config.templatedconfigloader class method)": [[66, "kedro.config.TemplatedConfigLoader.fromkeys"]], "get() (kedro.config.templatedconfigloader method)": [[66, "kedro.config.TemplatedConfigLoader.get"]], "items() (kedro.config.templatedconfigloader method)": [[66, "kedro.config.TemplatedConfigLoader.items"]], "keys() (kedro.config.templatedconfigloader method)": [[66, "kedro.config.TemplatedConfigLoader.keys"]], "pop() (kedro.config.templatedconfigloader method)": [[66, "kedro.config.TemplatedConfigLoader.pop"]], "popitem() (kedro.config.templatedconfigloader method)": [[66, "kedro.config.TemplatedConfigLoader.popitem"]], "setdefault() (kedro.config.templatedconfigloader method)": [[66, "kedro.config.TemplatedConfigLoader.setdefault"]], "update() (kedro.config.templatedconfigloader method)": [[66, "kedro.config.TemplatedConfigLoader.update"]], "values() (kedro.config.templatedconfigloader method)": [[66, "kedro.config.TemplatedConfigLoader.values"]], "kedro.extras": [[67, "module-kedro.extras"]], "kedro.extras.datasets": [[68, "module-kedro.extras.datasets"]], "apidataset (class in kedro.extras.datasets.api)": [[69, "kedro.extras.datasets.api.APIDataSet"]], "__init__() (kedro.extras.datasets.api.apidataset method)": [[69, "kedro.extras.datasets.api.APIDataSet.__init__"]], "exists() (kedro.extras.datasets.api.apidataset method)": [[69, "kedro.extras.datasets.api.APIDataSet.exists"]], "from_config() (kedro.extras.datasets.api.apidataset class method)": [[69, "kedro.extras.datasets.api.APIDataSet.from_config"]], "load() (kedro.extras.datasets.api.apidataset method)": [[69, "kedro.extras.datasets.api.APIDataSet.load"]], "release() (kedro.extras.datasets.api.apidataset method)": [[69, "kedro.extras.datasets.api.APIDataSet.release"]], "save() (kedro.extras.datasets.api.apidataset method)": [[69, "kedro.extras.datasets.api.APIDataSet.save"]], "biosequencedataset (class in kedro.extras.datasets.biosequence)": [[70, "kedro.extras.datasets.biosequence.BioSequenceDataSet"]], "default_load_args (kedro.extras.datasets.biosequence.biosequencedataset attribute)": [[70, "kedro.extras.datasets.biosequence.BioSequenceDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.biosequence.biosequencedataset attribute)": [[70, "kedro.extras.datasets.biosequence.BioSequenceDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[70, "kedro.extras.datasets.biosequence.BioSequenceDataSet.__init__"]], "exists() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[70, "kedro.extras.datasets.biosequence.BioSequenceDataSet.exists"]], "from_config() (kedro.extras.datasets.biosequence.biosequencedataset class method)": [[70, "kedro.extras.datasets.biosequence.BioSequenceDataSet.from_config"]], "invalidate_cache() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[70, "kedro.extras.datasets.biosequence.BioSequenceDataSet.invalidate_cache"]], "load() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[70, "kedro.extras.datasets.biosequence.BioSequenceDataSet.load"]], "release() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[70, "kedro.extras.datasets.biosequence.BioSequenceDataSet.release"]], "save() (kedro.extras.datasets.biosequence.biosequencedataset method)": [[70, "kedro.extras.datasets.biosequence.BioSequenceDataSet.save"]], "default_load_args (kedro.extras.datasets.dask.parquetdataset attribute)": [[71, "kedro.extras.datasets.dask.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.dask.parquetdataset attribute)": [[71, "kedro.extras.datasets.dask.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro.extras.datasets.dask)": [[71, "kedro.extras.datasets.dask.ParquetDataSet"]], "__init__() (kedro.extras.datasets.dask.parquetdataset method)": [[71, "kedro.extras.datasets.dask.ParquetDataSet.__init__"]], "exists() (kedro.extras.datasets.dask.parquetdataset method)": [[71, "kedro.extras.datasets.dask.ParquetDataSet.exists"]], "from_config() (kedro.extras.datasets.dask.parquetdataset class method)": [[71, "kedro.extras.datasets.dask.ParquetDataSet.from_config"]], "fs_args (kedro.extras.datasets.dask.parquetdataset property)": [[71, "kedro.extras.datasets.dask.ParquetDataSet.fs_args"]], "load() (kedro.extras.datasets.dask.parquetdataset method)": [[71, "kedro.extras.datasets.dask.ParquetDataSet.load"]], "release() (kedro.extras.datasets.dask.parquetdataset method)": [[71, "kedro.extras.datasets.dask.ParquetDataSet.release"]], "save() (kedro.extras.datasets.dask.parquetdataset method)": [[71, "kedro.extras.datasets.dask.ParquetDataSet.save"]], "default_load_args (kedro.extras.datasets.email.emailmessagedataset attribute)": [[72, "kedro.extras.datasets.email.EmailMessageDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.email.emailmessagedataset attribute)": [[72, "kedro.extras.datasets.email.EmailMessageDataSet.DEFAULT_SAVE_ARGS"]], "emailmessagedataset (class in kedro.extras.datasets.email)": [[72, "kedro.extras.datasets.email.EmailMessageDataSet"]], "__init__() (kedro.extras.datasets.email.emailmessagedataset method)": [[72, "kedro.extras.datasets.email.EmailMessageDataSet.__init__"]], "exists() (kedro.extras.datasets.email.emailmessagedataset method)": [[72, "kedro.extras.datasets.email.EmailMessageDataSet.exists"]], "from_config() (kedro.extras.datasets.email.emailmessagedataset class method)": [[72, "kedro.extras.datasets.email.EmailMessageDataSet.from_config"]], "load() (kedro.extras.datasets.email.emailmessagedataset method)": [[72, "kedro.extras.datasets.email.EmailMessageDataSet.load"]], "release() (kedro.extras.datasets.email.emailmessagedataset method)": [[72, "kedro.extras.datasets.email.EmailMessageDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.email.emailmessagedataset method)": [[72, "kedro.extras.datasets.email.EmailMessageDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.email.emailmessagedataset method)": [[72, "kedro.extras.datasets.email.EmailMessageDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.email.emailmessagedataset method)": [[72, "kedro.extras.datasets.email.EmailMessageDataSet.save"]], "default_load_args (kedro.extras.datasets.geopandas.geojsondataset attribute)": [[73, "kedro.extras.datasets.geopandas.GeoJSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.geopandas.geojsondataset attribute)": [[73, "kedro.extras.datasets.geopandas.GeoJSONDataSet.DEFAULT_SAVE_ARGS"]], "geojsondataset (class in kedro.extras.datasets.geopandas)": [[73, "kedro.extras.datasets.geopandas.GeoJSONDataSet"]], "__init__() (kedro.extras.datasets.geopandas.geojsondataset method)": [[73, "kedro.extras.datasets.geopandas.GeoJSONDataSet.__init__"]], "exists() (kedro.extras.datasets.geopandas.geojsondataset method)": [[73, "kedro.extras.datasets.geopandas.GeoJSONDataSet.exists"]], "from_config() (kedro.extras.datasets.geopandas.geojsondataset class method)": [[73, "kedro.extras.datasets.geopandas.GeoJSONDataSet.from_config"]], "invalidate_cache() (kedro.extras.datasets.geopandas.geojsondataset method)": [[73, "kedro.extras.datasets.geopandas.GeoJSONDataSet.invalidate_cache"]], "load() (kedro.extras.datasets.geopandas.geojsondataset method)": [[73, "kedro.extras.datasets.geopandas.GeoJSONDataSet.load"]], "release() (kedro.extras.datasets.geopandas.geojsondataset method)": [[73, "kedro.extras.datasets.geopandas.GeoJSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.geopandas.geojsondataset method)": [[73, "kedro.extras.datasets.geopandas.GeoJSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.geopandas.geojsondataset method)": [[73, "kedro.extras.datasets.geopandas.GeoJSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.geopandas.geojsondataset method)": [[73, "kedro.extras.datasets.geopandas.GeoJSONDataSet.save"]], "default_save_args (kedro.extras.datasets.holoviews.holoviewswriter attribute)": [[74, "kedro.extras.datasets.holoviews.HoloviewsWriter.DEFAULT_SAVE_ARGS"]], "holoviewswriter (class in kedro.extras.datasets.holoviews)": [[74, "kedro.extras.datasets.holoviews.HoloviewsWriter"]], "__init__() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[74, "kedro.extras.datasets.holoviews.HoloviewsWriter.__init__"]], "exists() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[74, "kedro.extras.datasets.holoviews.HoloviewsWriter.exists"]], "from_config() (kedro.extras.datasets.holoviews.holoviewswriter class method)": [[74, "kedro.extras.datasets.holoviews.HoloviewsWriter.from_config"]], "load() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[74, "kedro.extras.datasets.holoviews.HoloviewsWriter.load"]], "release() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[74, "kedro.extras.datasets.holoviews.HoloviewsWriter.release"]], "resolve_load_version() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[74, "kedro.extras.datasets.holoviews.HoloviewsWriter.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[74, "kedro.extras.datasets.holoviews.HoloviewsWriter.resolve_save_version"]], "save() (kedro.extras.datasets.holoviews.holoviewswriter method)": [[74, "kedro.extras.datasets.holoviews.HoloviewsWriter.save"]], "default_save_args (kedro.extras.datasets.json.jsondataset attribute)": [[75, "kedro.extras.datasets.json.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.json)": [[75, "kedro.extras.datasets.json.JSONDataSet"]], "__init__() (kedro.extras.datasets.json.jsondataset method)": [[75, "kedro.extras.datasets.json.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.json.jsondataset method)": [[75, "kedro.extras.datasets.json.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.json.jsondataset class method)": [[75, "kedro.extras.datasets.json.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.json.jsondataset method)": [[75, "kedro.extras.datasets.json.JSONDataSet.load"]], "release() (kedro.extras.datasets.json.jsondataset method)": [[75, "kedro.extras.datasets.json.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.json.jsondataset method)": [[75, "kedro.extras.datasets.json.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.json.jsondataset method)": [[75, "kedro.extras.datasets.json.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.json.jsondataset method)": [[75, "kedro.extras.datasets.json.JSONDataSet.save"]], "default_save_args (kedro.extras.datasets.matplotlib.matplotlibwriter attribute)": [[76, "kedro.extras.datasets.matplotlib.MatplotlibWriter.DEFAULT_SAVE_ARGS"]], "matplotlibwriter (class in kedro.extras.datasets.matplotlib)": [[76, "kedro.extras.datasets.matplotlib.MatplotlibWriter"]], "__init__() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[76, "kedro.extras.datasets.matplotlib.MatplotlibWriter.__init__"]], "exists() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[76, "kedro.extras.datasets.matplotlib.MatplotlibWriter.exists"]], "from_config() (kedro.extras.datasets.matplotlib.matplotlibwriter class method)": [[76, "kedro.extras.datasets.matplotlib.MatplotlibWriter.from_config"]], "load() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[76, "kedro.extras.datasets.matplotlib.MatplotlibWriter.load"]], "release() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[76, "kedro.extras.datasets.matplotlib.MatplotlibWriter.release"]], "resolve_load_version() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[76, "kedro.extras.datasets.matplotlib.MatplotlibWriter.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[76, "kedro.extras.datasets.matplotlib.MatplotlibWriter.resolve_save_version"]], "save() (kedro.extras.datasets.matplotlib.matplotlibwriter method)": [[76, "kedro.extras.datasets.matplotlib.MatplotlibWriter.save"]], "default_load_args (kedro.extras.datasets.networkx.gmldataset attribute)": [[77, "kedro.extras.datasets.networkx.GMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.networkx.gmldataset attribute)": [[77, "kedro.extras.datasets.networkx.GMLDataSet.DEFAULT_SAVE_ARGS"]], "gmldataset (class in kedro.extras.datasets.networkx)": [[77, "kedro.extras.datasets.networkx.GMLDataSet"]], "__init__() (kedro.extras.datasets.networkx.gmldataset method)": [[77, "kedro.extras.datasets.networkx.GMLDataSet.__init__"]], "exists() (kedro.extras.datasets.networkx.gmldataset method)": [[77, "kedro.extras.datasets.networkx.GMLDataSet.exists"]], "from_config() (kedro.extras.datasets.networkx.gmldataset class method)": [[77, "kedro.extras.datasets.networkx.GMLDataSet.from_config"]], "load() (kedro.extras.datasets.networkx.gmldataset method)": [[77, "kedro.extras.datasets.networkx.GMLDataSet.load"]], "release() (kedro.extras.datasets.networkx.gmldataset method)": [[77, "kedro.extras.datasets.networkx.GMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.networkx.gmldataset method)": [[77, "kedro.extras.datasets.networkx.GMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.networkx.gmldataset method)": [[77, "kedro.extras.datasets.networkx.GMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.networkx.gmldataset method)": [[77, "kedro.extras.datasets.networkx.GMLDataSet.save"]], "default_load_args (kedro.extras.datasets.networkx.graphmldataset attribute)": [[78, "kedro.extras.datasets.networkx.GraphMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.networkx.graphmldataset attribute)": [[78, "kedro.extras.datasets.networkx.GraphMLDataSet.DEFAULT_SAVE_ARGS"]], "graphmldataset (class in kedro.extras.datasets.networkx)": [[78, "kedro.extras.datasets.networkx.GraphMLDataSet"]], "__init__() (kedro.extras.datasets.networkx.graphmldataset method)": [[78, "kedro.extras.datasets.networkx.GraphMLDataSet.__init__"]], "exists() (kedro.extras.datasets.networkx.graphmldataset method)": [[78, "kedro.extras.datasets.networkx.GraphMLDataSet.exists"]], "from_config() (kedro.extras.datasets.networkx.graphmldataset class method)": [[78, "kedro.extras.datasets.networkx.GraphMLDataSet.from_config"]], "load() (kedro.extras.datasets.networkx.graphmldataset method)": [[78, "kedro.extras.datasets.networkx.GraphMLDataSet.load"]], "release() (kedro.extras.datasets.networkx.graphmldataset method)": [[78, "kedro.extras.datasets.networkx.GraphMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.networkx.graphmldataset method)": [[78, "kedro.extras.datasets.networkx.GraphMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.networkx.graphmldataset method)": [[78, "kedro.extras.datasets.networkx.GraphMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.networkx.graphmldataset method)": [[78, "kedro.extras.datasets.networkx.GraphMLDataSet.save"]], "default_load_args (kedro.extras.datasets.networkx.jsondataset attribute)": [[79, "kedro.extras.datasets.networkx.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.networkx.jsondataset attribute)": [[79, "kedro.extras.datasets.networkx.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.networkx)": [[79, "kedro.extras.datasets.networkx.JSONDataSet"]], "__init__() (kedro.extras.datasets.networkx.jsondataset method)": [[79, "kedro.extras.datasets.networkx.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.networkx.jsondataset method)": [[79, "kedro.extras.datasets.networkx.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.networkx.jsondataset class method)": [[79, "kedro.extras.datasets.networkx.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.networkx.jsondataset method)": [[79, "kedro.extras.datasets.networkx.JSONDataSet.load"]], "release() (kedro.extras.datasets.networkx.jsondataset method)": [[79, "kedro.extras.datasets.networkx.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.networkx.jsondataset method)": [[79, "kedro.extras.datasets.networkx.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.networkx.jsondataset method)": [[79, "kedro.extras.datasets.networkx.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.networkx.jsondataset method)": [[79, "kedro.extras.datasets.networkx.JSONDataSet.save"]], "csvdataset (class in kedro.extras.datasets.pandas)": [[80, "kedro.extras.datasets.pandas.CSVDataSet"]], "default_load_args (kedro.extras.datasets.pandas.csvdataset attribute)": [[80, "kedro.extras.datasets.pandas.CSVDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.csvdataset attribute)": [[80, "kedro.extras.datasets.pandas.CSVDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro.extras.datasets.pandas.csvdataset method)": [[80, "kedro.extras.datasets.pandas.CSVDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.csvdataset method)": [[80, "kedro.extras.datasets.pandas.CSVDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.csvdataset class method)": [[80, "kedro.extras.datasets.pandas.CSVDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.csvdataset method)": [[80, "kedro.extras.datasets.pandas.CSVDataSet.load"]], "release() (kedro.extras.datasets.pandas.csvdataset method)": [[80, "kedro.extras.datasets.pandas.CSVDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.csvdataset method)": [[80, "kedro.extras.datasets.pandas.CSVDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.csvdataset method)": [[80, "kedro.extras.datasets.pandas.CSVDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.csvdataset method)": [[80, "kedro.extras.datasets.pandas.CSVDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.exceldataset attribute)": [[81, "kedro.extras.datasets.pandas.ExcelDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.exceldataset attribute)": [[81, "kedro.extras.datasets.pandas.ExcelDataSet.DEFAULT_SAVE_ARGS"]], "exceldataset (class in kedro.extras.datasets.pandas)": [[81, "kedro.extras.datasets.pandas.ExcelDataSet"]], "__init__() (kedro.extras.datasets.pandas.exceldataset method)": [[81, "kedro.extras.datasets.pandas.ExcelDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.exceldataset method)": [[81, "kedro.extras.datasets.pandas.ExcelDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.exceldataset class method)": [[81, "kedro.extras.datasets.pandas.ExcelDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.exceldataset method)": [[81, "kedro.extras.datasets.pandas.ExcelDataSet.load"]], "release() (kedro.extras.datasets.pandas.exceldataset method)": [[81, "kedro.extras.datasets.pandas.ExcelDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.exceldataset method)": [[81, "kedro.extras.datasets.pandas.ExcelDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.exceldataset method)": [[81, "kedro.extras.datasets.pandas.ExcelDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.exceldataset method)": [[81, "kedro.extras.datasets.pandas.ExcelDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.featherdataset attribute)": [[82, "kedro.extras.datasets.pandas.FeatherDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.featherdataset attribute)": [[82, "kedro.extras.datasets.pandas.FeatherDataSet.DEFAULT_SAVE_ARGS"]], "featherdataset (class in kedro.extras.datasets.pandas)": [[82, "kedro.extras.datasets.pandas.FeatherDataSet"]], "__init__() (kedro.extras.datasets.pandas.featherdataset method)": [[82, "kedro.extras.datasets.pandas.FeatherDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.featherdataset method)": [[82, "kedro.extras.datasets.pandas.FeatherDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.featherdataset class method)": [[82, "kedro.extras.datasets.pandas.FeatherDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.featherdataset method)": [[82, "kedro.extras.datasets.pandas.FeatherDataSet.load"]], "release() (kedro.extras.datasets.pandas.featherdataset method)": [[82, "kedro.extras.datasets.pandas.FeatherDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.featherdataset method)": [[82, "kedro.extras.datasets.pandas.FeatherDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.featherdataset method)": [[82, "kedro.extras.datasets.pandas.FeatherDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.featherdataset method)": [[82, "kedro.extras.datasets.pandas.FeatherDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.gbqquerydataset attribute)": [[83, "kedro.extras.datasets.pandas.GBQQueryDataSet.DEFAULT_LOAD_ARGS"]], "gbqquerydataset (class in kedro.extras.datasets.pandas)": [[83, "kedro.extras.datasets.pandas.GBQQueryDataSet"]], "__init__() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[83, "kedro.extras.datasets.pandas.GBQQueryDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[83, "kedro.extras.datasets.pandas.GBQQueryDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.gbqquerydataset class method)": [[83, "kedro.extras.datasets.pandas.GBQQueryDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[83, "kedro.extras.datasets.pandas.GBQQueryDataSet.load"]], "release() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[83, "kedro.extras.datasets.pandas.GBQQueryDataSet.release"]], "save() (kedro.extras.datasets.pandas.gbqquerydataset method)": [[83, "kedro.extras.datasets.pandas.GBQQueryDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.gbqtabledataset attribute)": [[84, "kedro.extras.datasets.pandas.GBQTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.gbqtabledataset attribute)": [[84, "kedro.extras.datasets.pandas.GBQTableDataSet.DEFAULT_SAVE_ARGS"]], "gbqtabledataset (class in kedro.extras.datasets.pandas)": [[84, "kedro.extras.datasets.pandas.GBQTableDataSet"]], "__init__() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[84, "kedro.extras.datasets.pandas.GBQTableDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[84, "kedro.extras.datasets.pandas.GBQTableDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.gbqtabledataset class method)": [[84, "kedro.extras.datasets.pandas.GBQTableDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[84, "kedro.extras.datasets.pandas.GBQTableDataSet.load"]], "release() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[84, "kedro.extras.datasets.pandas.GBQTableDataSet.release"]], "save() (kedro.extras.datasets.pandas.gbqtabledataset method)": [[84, "kedro.extras.datasets.pandas.GBQTableDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.genericdataset attribute)": [[85, "kedro.extras.datasets.pandas.GenericDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.genericdataset attribute)": [[85, "kedro.extras.datasets.pandas.GenericDataSet.DEFAULT_SAVE_ARGS"]], "genericdataset (class in kedro.extras.datasets.pandas)": [[85, "kedro.extras.datasets.pandas.GenericDataSet"]], "__init__() (kedro.extras.datasets.pandas.genericdataset method)": [[85, "kedro.extras.datasets.pandas.GenericDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.genericdataset method)": [[85, "kedro.extras.datasets.pandas.GenericDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.genericdataset class method)": [[85, "kedro.extras.datasets.pandas.GenericDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.genericdataset method)": [[85, "kedro.extras.datasets.pandas.GenericDataSet.load"]], "release() (kedro.extras.datasets.pandas.genericdataset method)": [[85, "kedro.extras.datasets.pandas.GenericDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.genericdataset method)": [[85, "kedro.extras.datasets.pandas.GenericDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.genericdataset method)": [[85, "kedro.extras.datasets.pandas.GenericDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.genericdataset method)": [[85, "kedro.extras.datasets.pandas.GenericDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.hdfdataset attribute)": [[86, "kedro.extras.datasets.pandas.HDFDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.hdfdataset attribute)": [[86, "kedro.extras.datasets.pandas.HDFDataSet.DEFAULT_SAVE_ARGS"]], "hdfdataset (class in kedro.extras.datasets.pandas)": [[86, "kedro.extras.datasets.pandas.HDFDataSet"]], "__init__() (kedro.extras.datasets.pandas.hdfdataset method)": [[86, "kedro.extras.datasets.pandas.HDFDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.hdfdataset method)": [[86, "kedro.extras.datasets.pandas.HDFDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.hdfdataset class method)": [[86, "kedro.extras.datasets.pandas.HDFDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.hdfdataset method)": [[86, "kedro.extras.datasets.pandas.HDFDataSet.load"]], "release() (kedro.extras.datasets.pandas.hdfdataset method)": [[86, "kedro.extras.datasets.pandas.HDFDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.hdfdataset method)": [[86, "kedro.extras.datasets.pandas.HDFDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.hdfdataset method)": [[86, "kedro.extras.datasets.pandas.HDFDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.hdfdataset method)": [[86, "kedro.extras.datasets.pandas.HDFDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.jsondataset attribute)": [[87, "kedro.extras.datasets.pandas.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.jsondataset attribute)": [[87, "kedro.extras.datasets.pandas.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.pandas)": [[87, "kedro.extras.datasets.pandas.JSONDataSet"]], "__init__() (kedro.extras.datasets.pandas.jsondataset method)": [[87, "kedro.extras.datasets.pandas.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.jsondataset method)": [[87, "kedro.extras.datasets.pandas.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.jsondataset class method)": [[87, "kedro.extras.datasets.pandas.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.jsondataset method)": [[87, "kedro.extras.datasets.pandas.JSONDataSet.load"]], "release() (kedro.extras.datasets.pandas.jsondataset method)": [[87, "kedro.extras.datasets.pandas.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.jsondataset method)": [[87, "kedro.extras.datasets.pandas.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.jsondataset method)": [[87, "kedro.extras.datasets.pandas.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.jsondataset method)": [[87, "kedro.extras.datasets.pandas.JSONDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.parquetdataset attribute)": [[88, "kedro.extras.datasets.pandas.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.parquetdataset attribute)": [[88, "kedro.extras.datasets.pandas.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro.extras.datasets.pandas)": [[88, "kedro.extras.datasets.pandas.ParquetDataSet"]], "__init__() (kedro.extras.datasets.pandas.parquetdataset method)": [[88, "kedro.extras.datasets.pandas.ParquetDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.parquetdataset method)": [[88, "kedro.extras.datasets.pandas.ParquetDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.parquetdataset class method)": [[88, "kedro.extras.datasets.pandas.ParquetDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.parquetdataset method)": [[88, "kedro.extras.datasets.pandas.ParquetDataSet.load"]], "release() (kedro.extras.datasets.pandas.parquetdataset method)": [[88, "kedro.extras.datasets.pandas.ParquetDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.parquetdataset method)": [[88, "kedro.extras.datasets.pandas.ParquetDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.parquetdataset method)": [[88, "kedro.extras.datasets.pandas.ParquetDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.parquetdataset method)": [[88, "kedro.extras.datasets.pandas.ParquetDataSet.save"]], "sqlquerydataset (class in kedro.extras.datasets.pandas)": [[89, "kedro.extras.datasets.pandas.SQLQueryDataSet"]], "__init__() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[89, "kedro.extras.datasets.pandas.SQLQueryDataSet.__init__"]], "create_connection() (kedro.extras.datasets.pandas.sqlquerydataset class method)": [[89, "kedro.extras.datasets.pandas.SQLQueryDataSet.create_connection"]], "engines (kedro.extras.datasets.pandas.sqlquerydataset attribute)": [[89, "kedro.extras.datasets.pandas.SQLQueryDataSet.engines"]], "exists() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[89, "kedro.extras.datasets.pandas.SQLQueryDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.sqlquerydataset class method)": [[89, "kedro.extras.datasets.pandas.SQLQueryDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[89, "kedro.extras.datasets.pandas.SQLQueryDataSet.load"]], "release() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[89, "kedro.extras.datasets.pandas.SQLQueryDataSet.release"]], "save() (kedro.extras.datasets.pandas.sqlquerydataset method)": [[89, "kedro.extras.datasets.pandas.SQLQueryDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.sqltabledataset attribute)": [[90, "kedro.extras.datasets.pandas.SQLTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.sqltabledataset attribute)": [[90, "kedro.extras.datasets.pandas.SQLTableDataSet.DEFAULT_SAVE_ARGS"]], "sqltabledataset (class in kedro.extras.datasets.pandas)": [[90, "kedro.extras.datasets.pandas.SQLTableDataSet"]], "__init__() (kedro.extras.datasets.pandas.sqltabledataset method)": [[90, "kedro.extras.datasets.pandas.SQLTableDataSet.__init__"]], "create_connection() (kedro.extras.datasets.pandas.sqltabledataset class method)": [[90, "kedro.extras.datasets.pandas.SQLTableDataSet.create_connection"]], "engines (kedro.extras.datasets.pandas.sqltabledataset attribute)": [[90, "kedro.extras.datasets.pandas.SQLTableDataSet.engines"]], "exists() (kedro.extras.datasets.pandas.sqltabledataset method)": [[90, "kedro.extras.datasets.pandas.SQLTableDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.sqltabledataset class method)": [[90, "kedro.extras.datasets.pandas.SQLTableDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.sqltabledataset method)": [[90, "kedro.extras.datasets.pandas.SQLTableDataSet.load"]], "release() (kedro.extras.datasets.pandas.sqltabledataset method)": [[90, "kedro.extras.datasets.pandas.SQLTableDataSet.release"]], "save() (kedro.extras.datasets.pandas.sqltabledataset method)": [[90, "kedro.extras.datasets.pandas.SQLTableDataSet.save"]], "default_load_args (kedro.extras.datasets.pandas.xmldataset attribute)": [[91, "kedro.extras.datasets.pandas.XMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pandas.xmldataset attribute)": [[91, "kedro.extras.datasets.pandas.XMLDataSet.DEFAULT_SAVE_ARGS"]], "xmldataset (class in kedro.extras.datasets.pandas)": [[91, "kedro.extras.datasets.pandas.XMLDataSet"]], "__init__() (kedro.extras.datasets.pandas.xmldataset method)": [[91, "kedro.extras.datasets.pandas.XMLDataSet.__init__"]], "exists() (kedro.extras.datasets.pandas.xmldataset method)": [[91, "kedro.extras.datasets.pandas.XMLDataSet.exists"]], "from_config() (kedro.extras.datasets.pandas.xmldataset class method)": [[91, "kedro.extras.datasets.pandas.XMLDataSet.from_config"]], "load() (kedro.extras.datasets.pandas.xmldataset method)": [[91, "kedro.extras.datasets.pandas.XMLDataSet.load"]], "release() (kedro.extras.datasets.pandas.xmldataset method)": [[91, "kedro.extras.datasets.pandas.XMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pandas.xmldataset method)": [[91, "kedro.extras.datasets.pandas.XMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pandas.xmldataset method)": [[91, "kedro.extras.datasets.pandas.XMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pandas.xmldataset method)": [[91, "kedro.extras.datasets.pandas.XMLDataSet.save"]], "default_load_args (kedro.extras.datasets.pickle.pickledataset attribute)": [[92, "kedro.extras.datasets.pickle.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.pickle.pickledataset attribute)": [[92, "kedro.extras.datasets.pickle.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro.extras.datasets.pickle)": [[92, "kedro.extras.datasets.pickle.PickleDataSet"]], "__init__() (kedro.extras.datasets.pickle.pickledataset method)": [[92, "kedro.extras.datasets.pickle.PickleDataSet.__init__"]], "exists() (kedro.extras.datasets.pickle.pickledataset method)": [[92, "kedro.extras.datasets.pickle.PickleDataSet.exists"]], "from_config() (kedro.extras.datasets.pickle.pickledataset class method)": [[92, "kedro.extras.datasets.pickle.PickleDataSet.from_config"]], "load() (kedro.extras.datasets.pickle.pickledataset method)": [[92, "kedro.extras.datasets.pickle.PickleDataSet.load"]], "release() (kedro.extras.datasets.pickle.pickledataset method)": [[92, "kedro.extras.datasets.pickle.PickleDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pickle.pickledataset method)": [[92, "kedro.extras.datasets.pickle.PickleDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pickle.pickledataset method)": [[92, "kedro.extras.datasets.pickle.PickleDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pickle.pickledataset method)": [[92, "kedro.extras.datasets.pickle.PickleDataSet.save"]], "default_save_args (kedro.extras.datasets.pillow.imagedataset attribute)": [[93, "kedro.extras.datasets.pillow.ImageDataSet.DEFAULT_SAVE_ARGS"]], "imagedataset (class in kedro.extras.datasets.pillow)": [[93, "kedro.extras.datasets.pillow.ImageDataSet"]], "__init__() (kedro.extras.datasets.pillow.imagedataset method)": [[93, "kedro.extras.datasets.pillow.ImageDataSet.__init__"]], "exists() (kedro.extras.datasets.pillow.imagedataset method)": [[93, "kedro.extras.datasets.pillow.ImageDataSet.exists"]], "from_config() (kedro.extras.datasets.pillow.imagedataset class method)": [[93, "kedro.extras.datasets.pillow.ImageDataSet.from_config"]], "load() (kedro.extras.datasets.pillow.imagedataset method)": [[93, "kedro.extras.datasets.pillow.ImageDataSet.load"]], "release() (kedro.extras.datasets.pillow.imagedataset method)": [[93, "kedro.extras.datasets.pillow.ImageDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.pillow.imagedataset method)": [[93, "kedro.extras.datasets.pillow.ImageDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.pillow.imagedataset method)": [[93, "kedro.extras.datasets.pillow.ImageDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.pillow.imagedataset method)": [[93, "kedro.extras.datasets.pillow.ImageDataSet.save"]], "default_load_args (kedro.extras.datasets.plotly.jsondataset attribute)": [[94, "kedro.extras.datasets.plotly.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.plotly.jsondataset attribute)": [[94, "kedro.extras.datasets.plotly.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.plotly)": [[94, "kedro.extras.datasets.plotly.JSONDataSet"]], "__init__() (kedro.extras.datasets.plotly.jsondataset method)": [[94, "kedro.extras.datasets.plotly.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.plotly.jsondataset method)": [[94, "kedro.extras.datasets.plotly.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.plotly.jsondataset class method)": [[94, "kedro.extras.datasets.plotly.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.plotly.jsondataset method)": [[94, "kedro.extras.datasets.plotly.JSONDataSet.load"]], "release() (kedro.extras.datasets.plotly.jsondataset method)": [[94, "kedro.extras.datasets.plotly.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.plotly.jsondataset method)": [[94, "kedro.extras.datasets.plotly.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.plotly.jsondataset method)": [[94, "kedro.extras.datasets.plotly.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.plotly.jsondataset method)": [[94, "kedro.extras.datasets.plotly.JSONDataSet.save"]], "default_load_args (kedro.extras.datasets.plotly.plotlydataset attribute)": [[95, "kedro.extras.datasets.plotly.PlotlyDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.plotly.plotlydataset attribute)": [[95, "kedro.extras.datasets.plotly.PlotlyDataSet.DEFAULT_SAVE_ARGS"]], "plotlydataset (class in kedro.extras.datasets.plotly)": [[95, "kedro.extras.datasets.plotly.PlotlyDataSet"]], "__init__() (kedro.extras.datasets.plotly.plotlydataset method)": [[95, "kedro.extras.datasets.plotly.PlotlyDataSet.__init__"]], "exists() (kedro.extras.datasets.plotly.plotlydataset method)": [[95, "kedro.extras.datasets.plotly.PlotlyDataSet.exists"]], "from_config() (kedro.extras.datasets.plotly.plotlydataset class method)": [[95, "kedro.extras.datasets.plotly.PlotlyDataSet.from_config"]], "load() (kedro.extras.datasets.plotly.plotlydataset method)": [[95, "kedro.extras.datasets.plotly.PlotlyDataSet.load"]], "release() (kedro.extras.datasets.plotly.plotlydataset method)": [[95, "kedro.extras.datasets.plotly.PlotlyDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.plotly.plotlydataset method)": [[95, "kedro.extras.datasets.plotly.PlotlyDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.plotly.plotlydataset method)": [[95, "kedro.extras.datasets.plotly.PlotlyDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.plotly.plotlydataset method)": [[95, "kedro.extras.datasets.plotly.PlotlyDataSet.save"]], "default_load_args (kedro.extras.datasets.redis.pickledataset attribute)": [[96, "kedro.extras.datasets.redis.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_redis_url (kedro.extras.datasets.redis.pickledataset attribute)": [[96, "kedro.extras.datasets.redis.PickleDataSet.DEFAULT_REDIS_URL"]], "default_save_args (kedro.extras.datasets.redis.pickledataset attribute)": [[96, "kedro.extras.datasets.redis.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro.extras.datasets.redis)": [[96, "kedro.extras.datasets.redis.PickleDataSet"]], "__init__() (kedro.extras.datasets.redis.pickledataset method)": [[96, "kedro.extras.datasets.redis.PickleDataSet.__init__"]], "exists() (kedro.extras.datasets.redis.pickledataset method)": [[96, "kedro.extras.datasets.redis.PickleDataSet.exists"]], "from_config() (kedro.extras.datasets.redis.pickledataset class method)": [[96, "kedro.extras.datasets.redis.PickleDataSet.from_config"]], "load() (kedro.extras.datasets.redis.pickledataset method)": [[96, "kedro.extras.datasets.redis.PickleDataSet.load"]], "release() (kedro.extras.datasets.redis.pickledataset method)": [[96, "kedro.extras.datasets.redis.PickleDataSet.release"]], "save() (kedro.extras.datasets.redis.pickledataset method)": [[96, "kedro.extras.datasets.redis.PickleDataSet.save"]], "deltatabledataset (class in kedro.extras.datasets.spark)": [[97, "kedro.extras.datasets.spark.DeltaTableDataSet"]], "__init__() (kedro.extras.datasets.spark.deltatabledataset method)": [[97, "kedro.extras.datasets.spark.DeltaTableDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.deltatabledataset method)": [[97, "kedro.extras.datasets.spark.DeltaTableDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.deltatabledataset class method)": [[97, "kedro.extras.datasets.spark.DeltaTableDataSet.from_config"]], "load() (kedro.extras.datasets.spark.deltatabledataset method)": [[97, "kedro.extras.datasets.spark.DeltaTableDataSet.load"]], "release() (kedro.extras.datasets.spark.deltatabledataset method)": [[97, "kedro.extras.datasets.spark.DeltaTableDataSet.release"]], "save() (kedro.extras.datasets.spark.deltatabledataset method)": [[97, "kedro.extras.datasets.spark.DeltaTableDataSet.save"]], "default_load_args (kedro.extras.datasets.spark.sparkdataset attribute)": [[98, "kedro.extras.datasets.spark.SparkDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.spark.sparkdataset attribute)": [[98, "kedro.extras.datasets.spark.SparkDataSet.DEFAULT_SAVE_ARGS"]], "sparkdataset (class in kedro.extras.datasets.spark)": [[98, "kedro.extras.datasets.spark.SparkDataSet"]], "__init__() (kedro.extras.datasets.spark.sparkdataset method)": [[98, "kedro.extras.datasets.spark.SparkDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.sparkdataset method)": [[98, "kedro.extras.datasets.spark.SparkDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.sparkdataset class method)": [[98, "kedro.extras.datasets.spark.SparkDataSet.from_config"]], "load() (kedro.extras.datasets.spark.sparkdataset method)": [[98, "kedro.extras.datasets.spark.SparkDataSet.load"]], "release() (kedro.extras.datasets.spark.sparkdataset method)": [[98, "kedro.extras.datasets.spark.SparkDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.spark.sparkdataset method)": [[98, "kedro.extras.datasets.spark.SparkDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.spark.sparkdataset method)": [[98, "kedro.extras.datasets.spark.SparkDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.spark.sparkdataset method)": [[98, "kedro.extras.datasets.spark.SparkDataSet.save"]], "default_save_args (kedro.extras.datasets.spark.sparkhivedataset attribute)": [[99, "kedro.extras.datasets.spark.SparkHiveDataSet.DEFAULT_SAVE_ARGS"]], "sparkhivedataset (class in kedro.extras.datasets.spark)": [[99, "kedro.extras.datasets.spark.SparkHiveDataSet"]], "__init__() (kedro.extras.datasets.spark.sparkhivedataset method)": [[99, "kedro.extras.datasets.spark.SparkHiveDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.sparkhivedataset method)": [[99, "kedro.extras.datasets.spark.SparkHiveDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.sparkhivedataset class method)": [[99, "kedro.extras.datasets.spark.SparkHiveDataSet.from_config"]], "load() (kedro.extras.datasets.spark.sparkhivedataset method)": [[99, "kedro.extras.datasets.spark.SparkHiveDataSet.load"]], "release() (kedro.extras.datasets.spark.sparkhivedataset method)": [[99, "kedro.extras.datasets.spark.SparkHiveDataSet.release"]], "save() (kedro.extras.datasets.spark.sparkhivedataset method)": [[99, "kedro.extras.datasets.spark.SparkHiveDataSet.save"]], "default_load_args (kedro.extras.datasets.spark.sparkjdbcdataset attribute)": [[100, "kedro.extras.datasets.spark.SparkJDBCDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.spark.sparkjdbcdataset attribute)": [[100, "kedro.extras.datasets.spark.SparkJDBCDataSet.DEFAULT_SAVE_ARGS"]], "sparkjdbcdataset (class in kedro.extras.datasets.spark)": [[100, "kedro.extras.datasets.spark.SparkJDBCDataSet"]], "__init__() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[100, "kedro.extras.datasets.spark.SparkJDBCDataSet.__init__"]], "exists() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[100, "kedro.extras.datasets.spark.SparkJDBCDataSet.exists"]], "from_config() (kedro.extras.datasets.spark.sparkjdbcdataset class method)": [[100, "kedro.extras.datasets.spark.SparkJDBCDataSet.from_config"]], "load() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[100, "kedro.extras.datasets.spark.SparkJDBCDataSet.load"]], "release() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[100, "kedro.extras.datasets.spark.SparkJDBCDataSet.release"]], "save() (kedro.extras.datasets.spark.sparkjdbcdataset method)": [[100, "kedro.extras.datasets.spark.SparkJDBCDataSet.save"]], "default_load_args (kedro.extras.datasets.svmlight.svmlightdataset attribute)": [[101, "kedro.extras.datasets.svmlight.SVMLightDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.svmlight.svmlightdataset attribute)": [[101, "kedro.extras.datasets.svmlight.SVMLightDataSet.DEFAULT_SAVE_ARGS"]], "svmlightdataset (class in kedro.extras.datasets.svmlight)": [[101, "kedro.extras.datasets.svmlight.SVMLightDataSet"]], "exists() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[101, "kedro.extras.datasets.svmlight.SVMLightDataSet.exists"]], "from_config() (kedro.extras.datasets.svmlight.svmlightdataset class method)": [[101, "kedro.extras.datasets.svmlight.SVMLightDataSet.from_config"]], "load() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[101, "kedro.extras.datasets.svmlight.SVMLightDataSet.load"]], "release() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[101, "kedro.extras.datasets.svmlight.SVMLightDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[101, "kedro.extras.datasets.svmlight.SVMLightDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[101, "kedro.extras.datasets.svmlight.SVMLightDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.svmlight.svmlightdataset method)": [[101, "kedro.extras.datasets.svmlight.SVMLightDataSet.save"]], "default_load_args (kedro.extras.datasets.tensorflow.tensorflowmodeldataset attribute)": [[102, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro.extras.datasets.tensorflow.tensorflowmodeldataset attribute)": [[102, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.DEFAULT_SAVE_ARGS"]], "tensorflowmodeldataset (class in kedro.extras.datasets.tensorflow)": [[102, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset"]], "__init__() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[102, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.__init__"]], "exists() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[102, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.exists"]], "from_config() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset class method)": [[102, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.from_config"]], "load() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[102, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.load"]], "release() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[102, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.release"]], "resolve_load_version() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[102, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[102, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.resolve_save_version"]], "save() (kedro.extras.datasets.tensorflow.tensorflowmodeldataset method)": [[102, "kedro.extras.datasets.tensorflow.TensorFlowModelDataset.save"]], "textdataset (class in kedro.extras.datasets.text)": [[103, "kedro.extras.datasets.text.TextDataSet"]], "__init__() (kedro.extras.datasets.text.textdataset method)": [[103, "kedro.extras.datasets.text.TextDataSet.__init__"]], "exists() (kedro.extras.datasets.text.textdataset method)": [[103, "kedro.extras.datasets.text.TextDataSet.exists"]], "from_config() (kedro.extras.datasets.text.textdataset class method)": [[103, "kedro.extras.datasets.text.TextDataSet.from_config"]], "load() (kedro.extras.datasets.text.textdataset method)": [[103, "kedro.extras.datasets.text.TextDataSet.load"]], "release() (kedro.extras.datasets.text.textdataset method)": [[103, "kedro.extras.datasets.text.TextDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.text.textdataset method)": [[103, "kedro.extras.datasets.text.TextDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.text.textdataset method)": [[103, "kedro.extras.datasets.text.TextDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.text.textdataset method)": [[103, "kedro.extras.datasets.text.TextDataSet.save"]], "default_save_args (kedro.extras.datasets.tracking.jsondataset attribute)": [[104, "kedro.extras.datasets.tracking.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro.extras.datasets.tracking)": [[104, "kedro.extras.datasets.tracking.JSONDataSet"]], "__init__() (kedro.extras.datasets.tracking.jsondataset method)": [[104, "kedro.extras.datasets.tracking.JSONDataSet.__init__"]], "exists() (kedro.extras.datasets.tracking.jsondataset method)": [[104, "kedro.extras.datasets.tracking.JSONDataSet.exists"]], "from_config() (kedro.extras.datasets.tracking.jsondataset class method)": [[104, "kedro.extras.datasets.tracking.JSONDataSet.from_config"]], "load() (kedro.extras.datasets.tracking.jsondataset method)": [[104, "kedro.extras.datasets.tracking.JSONDataSet.load"]], "release() (kedro.extras.datasets.tracking.jsondataset method)": [[104, "kedro.extras.datasets.tracking.JSONDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.tracking.jsondataset method)": [[104, "kedro.extras.datasets.tracking.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.tracking.jsondataset method)": [[104, "kedro.extras.datasets.tracking.JSONDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.tracking.jsondataset method)": [[104, "kedro.extras.datasets.tracking.JSONDataSet.save"]], "versioned (kedro.extras.datasets.tracking.jsondataset attribute)": [[104, "kedro.extras.datasets.tracking.JSONDataSet.versioned"]], "default_save_args (kedro.extras.datasets.tracking.metricsdataset attribute)": [[105, "kedro.extras.datasets.tracking.MetricsDataSet.DEFAULT_SAVE_ARGS"]], "metricsdataset (class in kedro.extras.datasets.tracking)": [[105, "kedro.extras.datasets.tracking.MetricsDataSet"]], "__init__() (kedro.extras.datasets.tracking.metricsdataset method)": [[105, "kedro.extras.datasets.tracking.MetricsDataSet.__init__"]], "exists() (kedro.extras.datasets.tracking.metricsdataset method)": [[105, "kedro.extras.datasets.tracking.MetricsDataSet.exists"]], "from_config() (kedro.extras.datasets.tracking.metricsdataset class method)": [[105, "kedro.extras.datasets.tracking.MetricsDataSet.from_config"]], "load() (kedro.extras.datasets.tracking.metricsdataset method)": [[105, "kedro.extras.datasets.tracking.MetricsDataSet.load"]], "release() (kedro.extras.datasets.tracking.metricsdataset method)": [[105, "kedro.extras.datasets.tracking.MetricsDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.tracking.metricsdataset method)": [[105, "kedro.extras.datasets.tracking.MetricsDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.tracking.metricsdataset method)": [[105, "kedro.extras.datasets.tracking.MetricsDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.tracking.metricsdataset method)": [[105, "kedro.extras.datasets.tracking.MetricsDataSet.save"]], "versioned (kedro.extras.datasets.tracking.metricsdataset attribute)": [[105, "kedro.extras.datasets.tracking.MetricsDataSet.versioned"]], "default_save_args (kedro.extras.datasets.yaml.yamldataset attribute)": [[106, "kedro.extras.datasets.yaml.YAMLDataSet.DEFAULT_SAVE_ARGS"]], "yamldataset (class in kedro.extras.datasets.yaml)": [[106, "kedro.extras.datasets.yaml.YAMLDataSet"]], "__init__() (kedro.extras.datasets.yaml.yamldataset method)": [[106, "kedro.extras.datasets.yaml.YAMLDataSet.__init__"]], "exists() (kedro.extras.datasets.yaml.yamldataset method)": [[106, "kedro.extras.datasets.yaml.YAMLDataSet.exists"]], "from_config() (kedro.extras.datasets.yaml.yamldataset class method)": [[106, "kedro.extras.datasets.yaml.YAMLDataSet.from_config"]], "load() (kedro.extras.datasets.yaml.yamldataset method)": [[106, "kedro.extras.datasets.yaml.YAMLDataSet.load"]], "release() (kedro.extras.datasets.yaml.yamldataset method)": [[106, "kedro.extras.datasets.yaml.YAMLDataSet.release"]], "resolve_load_version() (kedro.extras.datasets.yaml.yamldataset method)": [[106, "kedro.extras.datasets.yaml.YAMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro.extras.datasets.yaml.yamldataset method)": [[106, "kedro.extras.datasets.yaml.YAMLDataSet.resolve_save_version"]], "save() (kedro.extras.datasets.yaml.yamldataset method)": [[106, "kedro.extras.datasets.yaml.YAMLDataSet.save"]], "kedro.extras.extensions": [[107, "module-kedro.extras.extensions"]], "kedro.extras.extensions.ipython": [[108, "module-kedro.extras.extensions.ipython"]], "kedro.extras.logging": [[109, "module-kedro.extras.logging"]], "kedro.extras.logging.color_logger": [[110, "module-kedro.extras.logging.color_logger"]], "colorhandler (class in kedro.extras.logging.color_logger)": [[111, "kedro.extras.logging.color_logger.ColorHandler"]], "kedro.framework": [[112, "module-kedro.framework"]], "kedro.framework.cli": [[113, "module-kedro.framework.cli"]], "kedro.framework.cli.catalog": [[114, "module-kedro.framework.cli.catalog"]], "kedro.framework.cli.cli": [[115, "module-kedro.framework.cli.cli"]], "kedrocli (class in kedro.framework.cli.cli)": [[116, "kedro.framework.cli.cli.KedroCLI"]], "main() (in module kedro.framework.cli.cli)": [[117, "kedro.framework.cli.cli.main"]], "kedro.framework.cli.hooks": [[118, "module-kedro.framework.cli.hooks"]], "kedro.framework.cli.hooks.manager": [[119, "module-kedro.framework.cli.hooks.manager"]], "clihooksmanager (class in kedro.framework.cli.hooks.manager)": [[120, "kedro.framework.cli.hooks.manager.CLIHooksManager"]], "get_cli_hook_manager() (in module kedro.framework.cli.hooks.manager)": [[121, "kedro.framework.cli.hooks.manager.get_cli_hook_manager"]], "kedro.framework.cli.hooks.markers": [[122, "module-kedro.framework.cli.hooks.markers"]], "kedro.framework.cli.hooks.specs": [[123, "module-kedro.framework.cli.hooks.specs"]], "clicommandspecs (class in kedro.framework.cli.hooks.specs)": [[124, "kedro.framework.cli.hooks.specs.CLICommandSpecs"]], "after_command_run() (kedro.framework.cli.hooks.specs.clicommandspecs method)": [[124, "kedro.framework.cli.hooks.specs.CLICommandSpecs.after_command_run"]], "before_command_run() (kedro.framework.cli.hooks.specs.clicommandspecs method)": [[124, "kedro.framework.cli.hooks.specs.CLICommandSpecs.before_command_run"]], "kedro.framework.cli.jupyter": [[125, "module-kedro.framework.cli.jupyter"]], "jupytercommandgroup (class in kedro.framework.cli.jupyter)": [[126, "kedro.framework.cli.jupyter.JupyterCommandGroup"]], "list_commands() (kedro.framework.cli.jupyter.jupytercommandgroup method)": [[126, "kedro.framework.cli.jupyter.JupyterCommandGroup.list_commands"]], "kedro.framework.cli.micropkg": [[127, "module-kedro.framework.cli.micropkg"]], "safe_extract() (in module kedro.framework.cli.micropkg)": [[128, "kedro.framework.cli.micropkg.safe_extract"]], "kedro.framework.cli.pipeline": [[129, "module-kedro.framework.cli.pipeline"]], "pipelineartifacts (class in kedro.framework.cli.pipeline)": [[130, "kedro.framework.cli.pipeline.PipelineArtifacts"]], "count() (kedro.framework.cli.pipeline.pipelineartifacts method)": [[130, "kedro.framework.cli.pipeline.PipelineArtifacts.count"]], "index() (kedro.framework.cli.pipeline.pipelineartifacts method)": [[130, "kedro.framework.cli.pipeline.PipelineArtifacts.index"]], "pipeline_conf (kedro.framework.cli.pipeline.pipelineartifacts attribute)": [[130, "kedro.framework.cli.pipeline.PipelineArtifacts.pipeline_conf"]], "pipeline_dir (kedro.framework.cli.pipeline.pipelineartifacts attribute)": [[130, "kedro.framework.cli.pipeline.PipelineArtifacts.pipeline_dir"]], "pipeline_tests (kedro.framework.cli.pipeline.pipelineartifacts attribute)": [[130, "kedro.framework.cli.pipeline.PipelineArtifacts.pipeline_tests"]], "kedro.framework.cli.project": [[131, "module-kedro.framework.cli.project"]], "kedro.framework.cli.registry": [[132, "module-kedro.framework.cli.registry"]], "kedro.framework.cli.starters": [[133, "module-kedro.framework.cli.starters"]], "kedrostarterspec (class in kedro.framework.cli.starters)": [[134, "kedro.framework.cli.starters.KedroStarterSpec"]], "alias (kedro.framework.cli.starters.kedrostarterspec attribute)": [[134, "kedro.framework.cli.starters.KedroStarterSpec.alias"]], "directory (kedro.framework.cli.starters.kedrostarterspec attribute)": [[134, "kedro.framework.cli.starters.KedroStarterSpec.directory"]], "origin (kedro.framework.cli.starters.kedrostarterspec attribute)": [[134, "kedro.framework.cli.starters.KedroStarterSpec.origin"]], "template_path (kedro.framework.cli.starters.kedrostarterspec attribute)": [[134, "kedro.framework.cli.starters.KedroStarterSpec.template_path"]], "kedro.framework.cli.utils": [[135, "module-kedro.framework.cli.utils"]], "commandcollection (class in kedro.framework.cli.utils)": [[136, "kedro.framework.cli.utils.CommandCollection"]], "kedroclierror (class in kedro.framework.cli.utils)": [[137, "kedro.framework.cli.utils.KedroCliError"]], "verbose_error (kedro.framework.cli.utils.kedroclierror attribute)": [[137, "kedro.framework.cli.utils.KedroCliError.VERBOSE_ERROR"]], "args (kedro.framework.cli.utils.kedroclierror attribute)": [[137, "kedro.framework.cli.utils.KedroCliError.args"]], "exit_code (kedro.framework.cli.utils.kedroclierror attribute)": [[137, "kedro.framework.cli.utils.KedroCliError.exit_code"]], "format_message() (kedro.framework.cli.utils.kedroclierror method)": [[137, "kedro.framework.cli.utils.KedroCliError.format_message"]], "show() (kedro.framework.cli.utils.kedroclierror method)": [[137, "kedro.framework.cli.utils.KedroCliError.show"]], "with_traceback() (kedro.framework.cli.utils.kedroclierror method)": [[137, "kedro.framework.cli.utils.KedroCliError.with_traceback"]], "command_with_verbosity() (in module kedro.framework.cli.utils)": [[138, "kedro.framework.cli.utils.command_with_verbosity"]], "env_option() (in module kedro.framework.cli.utils)": [[139, "kedro.framework.cli.utils.env_option"]], "find_stylesheets() (in module kedro.framework.cli.utils)": [[140, "kedro.framework.cli.utils.find_stylesheets"]], "forward_command() (in module kedro.framework.cli.utils)": [[141, "kedro.framework.cli.utils.forward_command"]], "get_pkg_version() (in module kedro.framework.cli.utils)": [[142, "kedro.framework.cli.utils.get_pkg_version"]], "python_call() (in module kedro.framework.cli.utils)": [[143, "kedro.framework.cli.utils.python_call"]], "split_string() (in module kedro.framework.cli.utils)": [[144, "kedro.framework.cli.utils.split_string"]], "kedro.framework.context": [[145, "module-kedro.framework.context"]], "kedrocontext (class in kedro.framework.context)": [[146, "kedro.framework.context.KedroContext"]], "__init__() (kedro.framework.context.kedrocontext method)": [[146, "kedro.framework.context.KedroContext.__init__"]], "catalog (kedro.framework.context.kedrocontext property)": [[146, "kedro.framework.context.KedroContext.catalog"]], "config_loader (kedro.framework.context.kedrocontext property)": [[146, "kedro.framework.context.KedroContext.config_loader"]], "env (kedro.framework.context.kedrocontext property)": [[146, "kedro.framework.context.KedroContext.env"]], "params (kedro.framework.context.kedrocontext property)": [[146, "kedro.framework.context.KedroContext.params"]], "project_path (kedro.framework.context.kedrocontext property)": [[146, "kedro.framework.context.KedroContext.project_path"]], "kedrocontexterror (class in kedro.framework.context)": [[147, "kedro.framework.context.KedroContextError"]], "args (kedro.framework.context.kedrocontexterror attribute)": [[147, "kedro.framework.context.KedroContextError.args"]], "with_traceback() (kedro.framework.context.kedrocontexterror method)": [[147, "kedro.framework.context.KedroContextError.with_traceback"]], "kedro.framework.hooks": [[148, "module-kedro.framework.hooks"]], "kedro.framework.hooks.manager": [[149, "module-kedro.framework.hooks.manager"]], "kedro.framework.hooks.markers": [[150, "module-kedro.framework.hooks.markers"]], "kedro.framework.hooks.specs": [[151, "module-kedro.framework.hooks.specs"]], "datacatalogspecs (class in kedro.framework.hooks.specs)": [[152, "kedro.framework.hooks.specs.DataCatalogSpecs"]], "after_catalog_created() (kedro.framework.hooks.specs.datacatalogspecs method)": [[152, "kedro.framework.hooks.specs.DataCatalogSpecs.after_catalog_created"]], "datasetspecs (class in kedro.framework.hooks.specs)": [[153, "kedro.framework.hooks.specs.DatasetSpecs"]], "after_dataset_loaded() (kedro.framework.hooks.specs.datasetspecs method)": [[153, "kedro.framework.hooks.specs.DatasetSpecs.after_dataset_loaded"]], "after_dataset_saved() (kedro.framework.hooks.specs.datasetspecs method)": [[153, "kedro.framework.hooks.specs.DatasetSpecs.after_dataset_saved"]], "before_dataset_loaded() (kedro.framework.hooks.specs.datasetspecs method)": [[153, "kedro.framework.hooks.specs.DatasetSpecs.before_dataset_loaded"]], "before_dataset_saved() (kedro.framework.hooks.specs.datasetspecs method)": [[153, "kedro.framework.hooks.specs.DatasetSpecs.before_dataset_saved"]], "kedrocontextspecs (class in kedro.framework.hooks.specs)": [[154, "kedro.framework.hooks.specs.KedroContextSpecs"]], "after_context_created() (kedro.framework.hooks.specs.kedrocontextspecs method)": [[154, "kedro.framework.hooks.specs.KedroContextSpecs.after_context_created"]], "nodespecs (class in kedro.framework.hooks.specs)": [[155, "kedro.framework.hooks.specs.NodeSpecs"]], "after_node_run() (kedro.framework.hooks.specs.nodespecs method)": [[155, "kedro.framework.hooks.specs.NodeSpecs.after_node_run"]], "before_node_run() (kedro.framework.hooks.specs.nodespecs method)": [[155, "kedro.framework.hooks.specs.NodeSpecs.before_node_run"]], "on_node_error() (kedro.framework.hooks.specs.nodespecs method)": [[155, "kedro.framework.hooks.specs.NodeSpecs.on_node_error"]], "pipelinespecs (class in kedro.framework.hooks.specs)": [[156, "kedro.framework.hooks.specs.PipelineSpecs"]], "after_pipeline_run() (kedro.framework.hooks.specs.pipelinespecs method)": [[156, "kedro.framework.hooks.specs.PipelineSpecs.after_pipeline_run"]], "before_pipeline_run() (kedro.framework.hooks.specs.pipelinespecs method)": [[156, "kedro.framework.hooks.specs.PipelineSpecs.before_pipeline_run"]], "on_pipeline_error() (kedro.framework.hooks.specs.pipelinespecs method)": [[156, "kedro.framework.hooks.specs.PipelineSpecs.on_pipeline_error"]], "kedro.framework.project": [[157, "module-kedro.framework.project"]], "configure_logging() (in module kedro.framework.project)": [[158, "kedro.framework.project.configure_logging"]], "configure_project() (in module kedro.framework.project)": [[159, "kedro.framework.project.configure_project"]], "find_pipelines() (in module kedro.framework.project)": [[160, "kedro.framework.project.find_pipelines"]], "validate_settings() (in module kedro.framework.project)": [[161, "kedro.framework.project.validate_settings"]], "kedro.framework.session": [[162, "module-kedro.framework.session"]], "kedro.framework.session.session": [[163, "module-kedro.framework.session.session"]], "kedrosession (class in kedro.framework.session.session)": [[164, "kedro.framework.session.session.KedroSession"]], "close() (kedro.framework.session.session.kedrosession method)": [[164, "kedro.framework.session.session.KedroSession.close"]], "create() (kedro.framework.session.session.kedrosession class method)": [[164, "kedro.framework.session.session.KedroSession.create"]], "load_context() (kedro.framework.session.session.kedrosession method)": [[164, "kedro.framework.session.session.KedroSession.load_context"]], "run() (kedro.framework.session.session.kedrosession method)": [[164, "kedro.framework.session.session.KedroSession.run"]], "store (kedro.framework.session.session.kedrosession property)": [[164, "kedro.framework.session.session.KedroSession.store"]], "kedrosessionerror (class in kedro.framework.session.session)": [[165, "kedro.framework.session.session.KedroSessionError"]], "args (kedro.framework.session.session.kedrosessionerror attribute)": [[165, "kedro.framework.session.session.KedroSessionError.args"]], "with_traceback() (kedro.framework.session.session.kedrosessionerror method)": [[165, "kedro.framework.session.session.KedroSessionError.with_traceback"]], "kedro.framework.session.shelvestore": [[166, "module-kedro.framework.session.shelvestore"]], "shelvestore (class in kedro.framework.session.shelvestore)": [[167, "kedro.framework.session.shelvestore.ShelveStore"]], "kedro.framework.session.store": [[168, "module-kedro.framework.session.store"]], "basesessionstore (class in kedro.framework.session.store)": [[169, "kedro.framework.session.store.BaseSessionStore"]], "kedro.framework.startup": [[170, "module-kedro.framework.startup"]], "projectmetadata (class in kedro.framework.startup)": [[171, "kedro.framework.startup.ProjectMetadata"]], "config_file (kedro.framework.startup.projectmetadata attribute)": [[171, "kedro.framework.startup.ProjectMetadata.config_file"]], "count() (kedro.framework.startup.projectmetadata method)": [[171, "kedro.framework.startup.ProjectMetadata.count"]], "index() (kedro.framework.startup.projectmetadata method)": [[171, "kedro.framework.startup.ProjectMetadata.index"]], "kedro_init_version (kedro.framework.startup.projectmetadata attribute)": [[171, "kedro.framework.startup.ProjectMetadata.kedro_init_version"]], "package_name (kedro.framework.startup.projectmetadata attribute)": [[171, "kedro.framework.startup.ProjectMetadata.package_name"]], "project_name (kedro.framework.startup.projectmetadata attribute)": [[171, "kedro.framework.startup.ProjectMetadata.project_name"]], "project_path (kedro.framework.startup.projectmetadata attribute)": [[171, "kedro.framework.startup.ProjectMetadata.project_path"]], "project_version (kedro.framework.startup.projectmetadata attribute)": [[171, "kedro.framework.startup.ProjectMetadata.project_version"]], "source_dir (kedro.framework.startup.projectmetadata attribute)": [[171, "kedro.framework.startup.ProjectMetadata.source_dir"]], "bootstrap_project() (in module kedro.framework.startup)": [[172, "kedro.framework.startup.bootstrap_project"]], "kedro.io": [[173, "module-kedro.io"]], "abstractdataset (class in kedro.io)": [[174, "kedro.io.AbstractDataSet"]], "exists() (kedro.io.abstractdataset method)": [[174, "kedro.io.AbstractDataSet.exists"]], "from_config() (kedro.io.abstractdataset class method)": [[174, "kedro.io.AbstractDataSet.from_config"]], "load() (kedro.io.abstractdataset method)": [[174, "kedro.io.AbstractDataSet.load"]], "release() (kedro.io.abstractdataset method)": [[174, "kedro.io.AbstractDataSet.release"]], "save() (kedro.io.abstractdataset method)": [[174, "kedro.io.AbstractDataSet.save"]], "abstractversioneddataset (class in kedro.io)": [[175, "kedro.io.AbstractVersionedDataSet"]], "__init__() (kedro.io.abstractversioneddataset method)": [[175, "kedro.io.AbstractVersionedDataSet.__init__"]], "exists() (kedro.io.abstractversioneddataset method)": [[175, "kedro.io.AbstractVersionedDataSet.exists"]], "from_config() (kedro.io.abstractversioneddataset class method)": [[175, "kedro.io.AbstractVersionedDataSet.from_config"]], "load() (kedro.io.abstractversioneddataset method)": [[175, "kedro.io.AbstractVersionedDataSet.load"]], "release() (kedro.io.abstractversioneddataset method)": [[175, "kedro.io.AbstractVersionedDataSet.release"]], "resolve_load_version() (kedro.io.abstractversioneddataset method)": [[175, "kedro.io.AbstractVersionedDataSet.resolve_load_version"]], "resolve_save_version() (kedro.io.abstractversioneddataset method)": [[175, "kedro.io.AbstractVersionedDataSet.resolve_save_version"]], "save() (kedro.io.abstractversioneddataset method)": [[175, "kedro.io.AbstractVersionedDataSet.save"]], "cacheddataset (in module kedro.io)": [[176, "kedro.io.CachedDataSet"]], "datacatalog (class in kedro.io)": [[177, "kedro.io.DataCatalog"]], "__init__() (kedro.io.datacatalog method)": [[177, "kedro.io.DataCatalog.__init__"]], "add() (kedro.io.datacatalog method)": [[177, "kedro.io.DataCatalog.add"]], "add_all() (kedro.io.datacatalog method)": [[177, "kedro.io.DataCatalog.add_all"]], "add_feed_dict() (kedro.io.datacatalog method)": [[177, "kedro.io.DataCatalog.add_feed_dict"]], "confirm() (kedro.io.datacatalog method)": [[177, "kedro.io.DataCatalog.confirm"]], "exists() (kedro.io.datacatalog method)": [[177, "kedro.io.DataCatalog.exists"]], "from_config() (kedro.io.datacatalog class method)": [[177, "kedro.io.DataCatalog.from_config"]], "list() (kedro.io.datacatalog method)": [[177, "kedro.io.DataCatalog.list"]], "load() (kedro.io.datacatalog method)": [[177, "kedro.io.DataCatalog.load"]], "release() (kedro.io.datacatalog method)": [[177, "kedro.io.DataCatalog.release"]], "save() (kedro.io.datacatalog method)": [[177, "kedro.io.DataCatalog.save"]], "shallow_copy() (kedro.io.datacatalog method)": [[177, "kedro.io.DataCatalog.shallow_copy"]], "datasetalreadyexistserror (in module kedro.io)": [[178, "kedro.io.DataSetAlreadyExistsError"]], "dataseterror (in module kedro.io)": [[179, "kedro.io.DataSetError"]], "datasetnotfounderror (in module kedro.io)": [[180, "kedro.io.DataSetNotFoundError"]], "incrementaldataset (in module kedro.io)": [[181, "kedro.io.IncrementalDataSet"]], "lambdadataset (in module kedro.io)": [[182, "kedro.io.LambdaDataSet"]], "memorydataset (in module kedro.io)": [[183, "kedro.io.MemoryDataSet"]], "partitioneddataset (in module kedro.io)": [[184, "kedro.io.PartitionedDataSet"]], "version (class in kedro.io)": [[185, "kedro.io.Version"]], "count() (kedro.io.version method)": [[185, "kedro.io.Version.count"]], "index() (kedro.io.version method)": [[185, "kedro.io.Version.index"]], "load (kedro.io.version attribute)": [[185, "kedro.io.Version.load"]], "save (kedro.io.version attribute)": [[185, "kedro.io.Version.save"]], "kedro.ipython": [[186, "module-kedro.ipython"]], "load_ipython_extension() (in module kedro.ipython)": [[187, "kedro.ipython.load_ipython_extension"]], "magic_reload_kedro() (in module kedro.ipython)": [[188, "kedro.ipython.magic_reload_kedro"]], "reload_kedro() (in module kedro.ipython)": [[189, "kedro.ipython.reload_kedro"]], "kedro.logging": [[190, "module-kedro.logging"]], "richhandler (class in kedro.logging)": [[191, "kedro.logging.RichHandler"]], "kedro.pipeline": [[192, "module-kedro.pipeline"]], "pipeline (class in kedro.pipeline)": [[193, "kedro.pipeline.Pipeline"]], "__init__() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.__init__"]], "all_inputs() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.all_inputs"]], "all_outputs() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.all_outputs"]], "data_sets() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.data_sets"]], "describe() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.describe"]], "filter() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.filter"]], "from_inputs() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.from_inputs"]], "from_nodes() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.from_nodes"]], "grouped_nodes (kedro.pipeline.pipeline property)": [[193, "kedro.pipeline.Pipeline.grouped_nodes"]], "inputs() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.inputs"]], "node_dependencies (kedro.pipeline.pipeline property)": [[193, "kedro.pipeline.Pipeline.node_dependencies"]], "nodes (kedro.pipeline.pipeline property)": [[193, "kedro.pipeline.Pipeline.nodes"]], "only_nodes() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.only_nodes"]], "only_nodes_with_inputs() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.only_nodes_with_inputs"]], "only_nodes_with_namespace() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.only_nodes_with_namespace"]], "only_nodes_with_outputs() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.only_nodes_with_outputs"]], "only_nodes_with_tags() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.only_nodes_with_tags"]], "outputs() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.outputs"]], "tag() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.tag"]], "to_json() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.to_json"]], "to_nodes() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.to_nodes"]], "to_outputs() (kedro.pipeline.pipeline method)": [[193, "kedro.pipeline.Pipeline.to_outputs"]], "modularpipelineerror (class in kedro.pipeline.modular_pipeline)": [[194, "kedro.pipeline.modular_pipeline.ModularPipelineError"]], "args (kedro.pipeline.modular_pipeline.modularpipelineerror attribute)": [[194, "kedro.pipeline.modular_pipeline.ModularPipelineError.args"]], "with_traceback() (kedro.pipeline.modular_pipeline.modularpipelineerror method)": [[194, "kedro.pipeline.modular_pipeline.ModularPipelineError.with_traceback"]], "pipeline() (in module kedro.pipeline.modular_pipeline)": [[195, "kedro.pipeline.modular_pipeline.pipeline"]], "node() (in module kedro.pipeline)": [[196, "kedro.pipeline.node"]], "node (class in kedro.pipeline.node)": [[197, "kedro.pipeline.node.Node"]], "__init__() (kedro.pipeline.node.node method)": [[197, "kedro.pipeline.node.Node.__init__"]], "confirms (kedro.pipeline.node.node property)": [[197, "kedro.pipeline.node.Node.confirms"]], "func (kedro.pipeline.node.node property)": [[197, "kedro.pipeline.node.Node.func"]], "inputs (kedro.pipeline.node.node property)": [[197, "kedro.pipeline.node.Node.inputs"]], "name (kedro.pipeline.node.node property)": [[197, "kedro.pipeline.node.Node.name"]], "namespace (kedro.pipeline.node.node property)": [[197, "kedro.pipeline.node.Node.namespace"]], "outputs (kedro.pipeline.node.node property)": [[197, "kedro.pipeline.node.Node.outputs"]], "run() (kedro.pipeline.node.node method)": [[197, "kedro.pipeline.node.Node.run"]], "short_name (kedro.pipeline.node.node property)": [[197, "kedro.pipeline.node.Node.short_name"]], "tag() (kedro.pipeline.node.node method)": [[197, "kedro.pipeline.node.Node.tag"]], "tags (kedro.pipeline.node.node property)": [[197, "kedro.pipeline.node.Node.tags"]], "kedro.runner": [[198, "module-kedro.runner"]], "abstractrunner (class in kedro.runner)": [[199, "kedro.runner.AbstractRunner"]], "__init__() (kedro.runner.abstractrunner method)": [[199, "kedro.runner.AbstractRunner.__init__"]], "create_default_data_set() (kedro.runner.abstractrunner method)": [[199, "kedro.runner.AbstractRunner.create_default_data_set"]], "run() (kedro.runner.abstractrunner method)": [[199, "kedro.runner.AbstractRunner.run"]], "run_only_missing() (kedro.runner.abstractrunner method)": [[199, "kedro.runner.AbstractRunner.run_only_missing"]], "parallelrunner (class in kedro.runner)": [[200, "kedro.runner.ParallelRunner"]], "__init__() (kedro.runner.parallelrunner method)": [[200, "kedro.runner.ParallelRunner.__init__"]], "create_default_data_set() (kedro.runner.parallelrunner method)": [[200, "kedro.runner.ParallelRunner.create_default_data_set"]], "run() (kedro.runner.parallelrunner method)": [[200, "kedro.runner.ParallelRunner.run"]], "run_only_missing() (kedro.runner.parallelrunner method)": [[200, "kedro.runner.ParallelRunner.run_only_missing"]], "sequentialrunner (class in kedro.runner)": [[201, "kedro.runner.SequentialRunner"]], "__init__() (kedro.runner.sequentialrunner method)": [[201, "kedro.runner.SequentialRunner.__init__"]], "create_default_data_set() (kedro.runner.sequentialrunner method)": [[201, "kedro.runner.SequentialRunner.create_default_data_set"]], "run() (kedro.runner.sequentialrunner method)": [[201, "kedro.runner.SequentialRunner.run"]], "run_only_missing() (kedro.runner.sequentialrunner method)": [[201, "kedro.runner.SequentialRunner.run_only_missing"]], "threadrunner (class in kedro.runner)": [[202, "kedro.runner.ThreadRunner"]], "__init__() (kedro.runner.threadrunner method)": [[202, "kedro.runner.ThreadRunner.__init__"]], "create_default_data_set() (kedro.runner.threadrunner method)": [[202, "kedro.runner.ThreadRunner.create_default_data_set"]], "run() (kedro.runner.threadrunner method)": [[202, "kedro.runner.ThreadRunner.run"]], "run_only_missing() (kedro.runner.threadrunner method)": [[202, "kedro.runner.ThreadRunner.run_only_missing"]], "run_node() (in module kedro.runner)": [[203, "kedro.runner.run_node"]], "kedro.utils": [[204, "module-kedro.utils"]], "load_obj() (in module kedro.utils)": [[205, "kedro.utils.load_obj"]], "kedro_datasets": [[206, "module-kedro_datasets"]], "apidataset (class in kedro_datasets.api)": [[207, "kedro_datasets.api.APIDataSet"]], "default_save_args (kedro_datasets.api.apidataset attribute)": [[207, "kedro_datasets.api.APIDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.api.apidataset method)": [[207, "kedro_datasets.api.APIDataSet.__init__"]], "exists() (kedro_datasets.api.apidataset method)": [[207, "kedro_datasets.api.APIDataSet.exists"]], "from_config() (kedro_datasets.api.apidataset class method)": [[207, "kedro_datasets.api.APIDataSet.from_config"]], "load() (kedro_datasets.api.apidataset method)": [[207, "kedro_datasets.api.APIDataSet.load"]], "release() (kedro_datasets.api.apidataset method)": [[207, "kedro_datasets.api.APIDataSet.release"]], "save() (kedro_datasets.api.apidataset method)": [[207, "kedro_datasets.api.APIDataSet.save"]], "biosequencedataset (class in kedro_datasets.biosequence)": [[208, "kedro_datasets.biosequence.BioSequenceDataSet"]], "default_load_args (kedro_datasets.biosequence.biosequencedataset attribute)": [[208, "kedro_datasets.biosequence.BioSequenceDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.biosequence.biosequencedataset attribute)": [[208, "kedro_datasets.biosequence.BioSequenceDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.biosequence.biosequencedataset method)": [[208, "kedro_datasets.biosequence.BioSequenceDataSet.__init__"]], "exists() (kedro_datasets.biosequence.biosequencedataset method)": [[208, "kedro_datasets.biosequence.BioSequenceDataSet.exists"]], "from_config() (kedro_datasets.biosequence.biosequencedataset class method)": [[208, "kedro_datasets.biosequence.BioSequenceDataSet.from_config"]], "invalidate_cache() (kedro_datasets.biosequence.biosequencedataset method)": [[208, "kedro_datasets.biosequence.BioSequenceDataSet.invalidate_cache"]], "load() (kedro_datasets.biosequence.biosequencedataset method)": [[208, "kedro_datasets.biosequence.BioSequenceDataSet.load"]], "release() (kedro_datasets.biosequence.biosequencedataset method)": [[208, "kedro_datasets.biosequence.BioSequenceDataSet.release"]], "save() (kedro_datasets.biosequence.biosequencedataset method)": [[208, "kedro_datasets.biosequence.BioSequenceDataSet.save"]], "default_load_args (kedro_datasets.dask.parquetdataset attribute)": [[209, "kedro_datasets.dask.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.dask.parquetdataset attribute)": [[209, "kedro_datasets.dask.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro_datasets.dask)": [[209, "kedro_datasets.dask.ParquetDataSet"]], "__init__() (kedro_datasets.dask.parquetdataset method)": [[209, "kedro_datasets.dask.ParquetDataSet.__init__"]], "exists() (kedro_datasets.dask.parquetdataset method)": [[209, "kedro_datasets.dask.ParquetDataSet.exists"]], "from_config() (kedro_datasets.dask.parquetdataset class method)": [[209, "kedro_datasets.dask.ParquetDataSet.from_config"]], "fs_args (kedro_datasets.dask.parquetdataset property)": [[209, "kedro_datasets.dask.ParquetDataSet.fs_args"]], "load() (kedro_datasets.dask.parquetdataset method)": [[209, "kedro_datasets.dask.ParquetDataSet.load"]], "release() (kedro_datasets.dask.parquetdataset method)": [[209, "kedro_datasets.dask.ParquetDataSet.release"]], "save() (kedro_datasets.dask.parquetdataset method)": [[209, "kedro_datasets.dask.ParquetDataSet.save"]], "managedtabledataset (class in kedro_datasets.databricks)": [[210, "kedro_datasets.databricks.ManagedTableDataSet"]], "__init__() (kedro_datasets.databricks.managedtabledataset method)": [[210, "kedro_datasets.databricks.ManagedTableDataSet.__init__"]], "exists() (kedro_datasets.databricks.managedtabledataset method)": [[210, "kedro_datasets.databricks.ManagedTableDataSet.exists"]], "from_config() (kedro_datasets.databricks.managedtabledataset class method)": [[210, "kedro_datasets.databricks.ManagedTableDataSet.from_config"]], "load() (kedro_datasets.databricks.managedtabledataset method)": [[210, "kedro_datasets.databricks.ManagedTableDataSet.load"]], "release() (kedro_datasets.databricks.managedtabledataset method)": [[210, "kedro_datasets.databricks.ManagedTableDataSet.release"]], "resolve_load_version() (kedro_datasets.databricks.managedtabledataset method)": [[210, "kedro_datasets.databricks.ManagedTableDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.databricks.managedtabledataset method)": [[210, "kedro_datasets.databricks.ManagedTableDataSet.resolve_save_version"]], "save() (kedro_datasets.databricks.managedtabledataset method)": [[210, "kedro_datasets.databricks.ManagedTableDataSet.save"]], "default_load_args (kedro_datasets.email.emailmessagedataset attribute)": [[211, "kedro_datasets.email.EmailMessageDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.email.emailmessagedataset attribute)": [[211, "kedro_datasets.email.EmailMessageDataSet.DEFAULT_SAVE_ARGS"]], "emailmessagedataset (class in kedro_datasets.email)": [[211, "kedro_datasets.email.EmailMessageDataSet"]], "__init__() (kedro_datasets.email.emailmessagedataset method)": [[211, "kedro_datasets.email.EmailMessageDataSet.__init__"]], "exists() (kedro_datasets.email.emailmessagedataset method)": [[211, "kedro_datasets.email.EmailMessageDataSet.exists"]], "from_config() (kedro_datasets.email.emailmessagedataset class method)": [[211, "kedro_datasets.email.EmailMessageDataSet.from_config"]], "load() (kedro_datasets.email.emailmessagedataset method)": [[211, "kedro_datasets.email.EmailMessageDataSet.load"]], "release() (kedro_datasets.email.emailmessagedataset method)": [[211, "kedro_datasets.email.EmailMessageDataSet.release"]], "resolve_load_version() (kedro_datasets.email.emailmessagedataset method)": [[211, "kedro_datasets.email.EmailMessageDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.email.emailmessagedataset method)": [[211, "kedro_datasets.email.EmailMessageDataSet.resolve_save_version"]], "save() (kedro_datasets.email.emailmessagedataset method)": [[211, "kedro_datasets.email.EmailMessageDataSet.save"]], "default_load_args (kedro_datasets.geopandas.geojsondataset attribute)": [[212, "kedro_datasets.geopandas.GeoJSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.geopandas.geojsondataset attribute)": [[212, "kedro_datasets.geopandas.GeoJSONDataSet.DEFAULT_SAVE_ARGS"]], "geojsondataset (class in kedro_datasets.geopandas)": [[212, "kedro_datasets.geopandas.GeoJSONDataSet"]], "__init__() (kedro_datasets.geopandas.geojsondataset method)": [[212, "kedro_datasets.geopandas.GeoJSONDataSet.__init__"]], "exists() (kedro_datasets.geopandas.geojsondataset method)": [[212, "kedro_datasets.geopandas.GeoJSONDataSet.exists"]], "from_config() (kedro_datasets.geopandas.geojsondataset class method)": [[212, "kedro_datasets.geopandas.GeoJSONDataSet.from_config"]], "invalidate_cache() (kedro_datasets.geopandas.geojsondataset method)": [[212, "kedro_datasets.geopandas.GeoJSONDataSet.invalidate_cache"]], "load() (kedro_datasets.geopandas.geojsondataset method)": [[212, "kedro_datasets.geopandas.GeoJSONDataSet.load"]], "release() (kedro_datasets.geopandas.geojsondataset method)": [[212, "kedro_datasets.geopandas.GeoJSONDataSet.release"]], "resolve_load_version() (kedro_datasets.geopandas.geojsondataset method)": [[212, "kedro_datasets.geopandas.GeoJSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.geopandas.geojsondataset method)": [[212, "kedro_datasets.geopandas.GeoJSONDataSet.resolve_save_version"]], "save() (kedro_datasets.geopandas.geojsondataset method)": [[212, "kedro_datasets.geopandas.GeoJSONDataSet.save"]], "default_save_args (kedro_datasets.holoviews.holoviewswriter attribute)": [[213, "kedro_datasets.holoviews.HoloviewsWriter.DEFAULT_SAVE_ARGS"]], "holoviewswriter (class in kedro_datasets.holoviews)": [[213, "kedro_datasets.holoviews.HoloviewsWriter"]], "__init__() (kedro_datasets.holoviews.holoviewswriter method)": [[213, "kedro_datasets.holoviews.HoloviewsWriter.__init__"]], "exists() (kedro_datasets.holoviews.holoviewswriter method)": [[213, "kedro_datasets.holoviews.HoloviewsWriter.exists"]], "from_config() (kedro_datasets.holoviews.holoviewswriter class method)": [[213, "kedro_datasets.holoviews.HoloviewsWriter.from_config"]], "load() (kedro_datasets.holoviews.holoviewswriter method)": [[213, "kedro_datasets.holoviews.HoloviewsWriter.load"]], "release() (kedro_datasets.holoviews.holoviewswriter method)": [[213, "kedro_datasets.holoviews.HoloviewsWriter.release"]], "resolve_load_version() (kedro_datasets.holoviews.holoviewswriter method)": [[213, "kedro_datasets.holoviews.HoloviewsWriter.resolve_load_version"]], "resolve_save_version() (kedro_datasets.holoviews.holoviewswriter method)": [[213, "kedro_datasets.holoviews.HoloviewsWriter.resolve_save_version"]], "save() (kedro_datasets.holoviews.holoviewswriter method)": [[213, "kedro_datasets.holoviews.HoloviewsWriter.save"]], "default_save_args (kedro_datasets.json.jsondataset attribute)": [[214, "kedro_datasets.json.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.json)": [[214, "kedro_datasets.json.JSONDataSet"]], "__init__() (kedro_datasets.json.jsondataset method)": [[214, "kedro_datasets.json.JSONDataSet.__init__"]], "exists() (kedro_datasets.json.jsondataset method)": [[214, "kedro_datasets.json.JSONDataSet.exists"]], "from_config() (kedro_datasets.json.jsondataset class method)": [[214, "kedro_datasets.json.JSONDataSet.from_config"]], "load() (kedro_datasets.json.jsondataset method)": [[214, "kedro_datasets.json.JSONDataSet.load"]], "release() (kedro_datasets.json.jsondataset method)": [[214, "kedro_datasets.json.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.json.jsondataset method)": [[214, "kedro_datasets.json.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.json.jsondataset method)": [[214, "kedro_datasets.json.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.json.jsondataset method)": [[214, "kedro_datasets.json.JSONDataSet.save"]], "default_save_args (kedro_datasets.matplotlib.matplotlibwriter attribute)": [[215, "kedro_datasets.matplotlib.MatplotlibWriter.DEFAULT_SAVE_ARGS"]], "matplotlibwriter (class in kedro_datasets.matplotlib)": [[215, "kedro_datasets.matplotlib.MatplotlibWriter"]], "__init__() (kedro_datasets.matplotlib.matplotlibwriter method)": [[215, "kedro_datasets.matplotlib.MatplotlibWriter.__init__"]], "exists() (kedro_datasets.matplotlib.matplotlibwriter method)": [[215, "kedro_datasets.matplotlib.MatplotlibWriter.exists"]], "from_config() (kedro_datasets.matplotlib.matplotlibwriter class method)": [[215, "kedro_datasets.matplotlib.MatplotlibWriter.from_config"]], "load() (kedro_datasets.matplotlib.matplotlibwriter method)": [[215, "kedro_datasets.matplotlib.MatplotlibWriter.load"]], "release() (kedro_datasets.matplotlib.matplotlibwriter method)": [[215, "kedro_datasets.matplotlib.MatplotlibWriter.release"]], "resolve_load_version() (kedro_datasets.matplotlib.matplotlibwriter method)": [[215, "kedro_datasets.matplotlib.MatplotlibWriter.resolve_load_version"]], "resolve_save_version() (kedro_datasets.matplotlib.matplotlibwriter method)": [[215, "kedro_datasets.matplotlib.MatplotlibWriter.resolve_save_version"]], "save() (kedro_datasets.matplotlib.matplotlibwriter method)": [[215, "kedro_datasets.matplotlib.MatplotlibWriter.save"]], "default_load_args (kedro_datasets.networkx.gmldataset attribute)": [[216, "kedro_datasets.networkx.GMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.networkx.gmldataset attribute)": [[216, "kedro_datasets.networkx.GMLDataSet.DEFAULT_SAVE_ARGS"]], "gmldataset (class in kedro_datasets.networkx)": [[216, "kedro_datasets.networkx.GMLDataSet"]], "__init__() (kedro_datasets.networkx.gmldataset method)": [[216, "kedro_datasets.networkx.GMLDataSet.__init__"]], "exists() (kedro_datasets.networkx.gmldataset method)": [[216, "kedro_datasets.networkx.GMLDataSet.exists"]], "from_config() (kedro_datasets.networkx.gmldataset class method)": [[216, "kedro_datasets.networkx.GMLDataSet.from_config"]], "load() (kedro_datasets.networkx.gmldataset method)": [[216, "kedro_datasets.networkx.GMLDataSet.load"]], "release() (kedro_datasets.networkx.gmldataset method)": [[216, "kedro_datasets.networkx.GMLDataSet.release"]], "resolve_load_version() (kedro_datasets.networkx.gmldataset method)": [[216, "kedro_datasets.networkx.GMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.networkx.gmldataset method)": [[216, "kedro_datasets.networkx.GMLDataSet.resolve_save_version"]], "save() (kedro_datasets.networkx.gmldataset method)": [[216, "kedro_datasets.networkx.GMLDataSet.save"]], "default_load_args (kedro_datasets.networkx.graphmldataset attribute)": [[217, "kedro_datasets.networkx.GraphMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.networkx.graphmldataset attribute)": [[217, "kedro_datasets.networkx.GraphMLDataSet.DEFAULT_SAVE_ARGS"]], "graphmldataset (class in kedro_datasets.networkx)": [[217, "kedro_datasets.networkx.GraphMLDataSet"]], "__init__() (kedro_datasets.networkx.graphmldataset method)": [[217, "kedro_datasets.networkx.GraphMLDataSet.__init__"]], "exists() (kedro_datasets.networkx.graphmldataset method)": [[217, "kedro_datasets.networkx.GraphMLDataSet.exists"]], "from_config() (kedro_datasets.networkx.graphmldataset class method)": [[217, "kedro_datasets.networkx.GraphMLDataSet.from_config"]], "load() (kedro_datasets.networkx.graphmldataset method)": [[217, "kedro_datasets.networkx.GraphMLDataSet.load"]], "release() (kedro_datasets.networkx.graphmldataset method)": [[217, "kedro_datasets.networkx.GraphMLDataSet.release"]], "resolve_load_version() (kedro_datasets.networkx.graphmldataset method)": [[217, "kedro_datasets.networkx.GraphMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.networkx.graphmldataset method)": [[217, "kedro_datasets.networkx.GraphMLDataSet.resolve_save_version"]], "save() (kedro_datasets.networkx.graphmldataset method)": [[217, "kedro_datasets.networkx.GraphMLDataSet.save"]], "default_load_args (kedro_datasets.networkx.jsondataset attribute)": [[218, "kedro_datasets.networkx.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.networkx.jsondataset attribute)": [[218, "kedro_datasets.networkx.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.networkx)": [[218, "kedro_datasets.networkx.JSONDataSet"]], "__init__() (kedro_datasets.networkx.jsondataset method)": [[218, "kedro_datasets.networkx.JSONDataSet.__init__"]], "exists() (kedro_datasets.networkx.jsondataset method)": [[218, "kedro_datasets.networkx.JSONDataSet.exists"]], "from_config() (kedro_datasets.networkx.jsondataset class method)": [[218, "kedro_datasets.networkx.JSONDataSet.from_config"]], "load() (kedro_datasets.networkx.jsondataset method)": [[218, "kedro_datasets.networkx.JSONDataSet.load"]], "release() (kedro_datasets.networkx.jsondataset method)": [[218, "kedro_datasets.networkx.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.networkx.jsondataset method)": [[218, "kedro_datasets.networkx.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.networkx.jsondataset method)": [[218, "kedro_datasets.networkx.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.networkx.jsondataset method)": [[218, "kedro_datasets.networkx.JSONDataSet.save"]], "csvdataset (class in kedro_datasets.pandas)": [[219, "kedro_datasets.pandas.CSVDataSet"]], "default_load_args (kedro_datasets.pandas.csvdataset attribute)": [[219, "kedro_datasets.pandas.CSVDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.csvdataset attribute)": [[219, "kedro_datasets.pandas.CSVDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.pandas.csvdataset method)": [[219, "kedro_datasets.pandas.CSVDataSet.__init__"]], "exists() (kedro_datasets.pandas.csvdataset method)": [[219, "kedro_datasets.pandas.CSVDataSet.exists"]], "from_config() (kedro_datasets.pandas.csvdataset class method)": [[219, "kedro_datasets.pandas.CSVDataSet.from_config"]], "load() (kedro_datasets.pandas.csvdataset method)": [[219, "kedro_datasets.pandas.CSVDataSet.load"]], "release() (kedro_datasets.pandas.csvdataset method)": [[219, "kedro_datasets.pandas.CSVDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.csvdataset method)": [[219, "kedro_datasets.pandas.CSVDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.csvdataset method)": [[219, "kedro_datasets.pandas.CSVDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.csvdataset method)": [[219, "kedro_datasets.pandas.CSVDataSet.save"]], "accepted_write_modes (kedro_datasets.pandas.deltatabledataset attribute)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.ACCEPTED_WRITE_MODES"]], "default_load_args (kedro_datasets.pandas.deltatabledataset attribute)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.deltatabledataset attribute)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.DEFAULT_SAVE_ARGS"]], "default_write_mode (kedro_datasets.pandas.deltatabledataset attribute)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.DEFAULT_WRITE_MODE"]], "deltatabledataset (class in kedro_datasets.pandas)": [[220, "kedro_datasets.pandas.DeltaTableDataSet"]], "__init__() (kedro_datasets.pandas.deltatabledataset method)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.__init__"]], "exists() (kedro_datasets.pandas.deltatabledataset method)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.exists"]], "from_config() (kedro_datasets.pandas.deltatabledataset class method)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.from_config"]], "fs_args (kedro_datasets.pandas.deltatabledataset property)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.fs_args"]], "get_loaded_version() (kedro_datasets.pandas.deltatabledataset method)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.get_loaded_version"]], "history (kedro_datasets.pandas.deltatabledataset property)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.history"]], "load() (kedro_datasets.pandas.deltatabledataset method)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.load"]], "metadata (kedro_datasets.pandas.deltatabledataset property)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.metadata"]], "release() (kedro_datasets.pandas.deltatabledataset method)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.release"]], "save() (kedro_datasets.pandas.deltatabledataset method)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.save"]], "schema (kedro_datasets.pandas.deltatabledataset property)": [[220, "kedro_datasets.pandas.DeltaTableDataSet.schema"]], "default_load_args (kedro_datasets.pandas.exceldataset attribute)": [[221, "kedro_datasets.pandas.ExcelDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.exceldataset attribute)": [[221, "kedro_datasets.pandas.ExcelDataSet.DEFAULT_SAVE_ARGS"]], "exceldataset (class in kedro_datasets.pandas)": [[221, "kedro_datasets.pandas.ExcelDataSet"]], "__init__() (kedro_datasets.pandas.exceldataset method)": [[221, "kedro_datasets.pandas.ExcelDataSet.__init__"]], "exists() (kedro_datasets.pandas.exceldataset method)": [[221, "kedro_datasets.pandas.ExcelDataSet.exists"]], "from_config() (kedro_datasets.pandas.exceldataset class method)": [[221, "kedro_datasets.pandas.ExcelDataSet.from_config"]], "load() (kedro_datasets.pandas.exceldataset method)": [[221, "kedro_datasets.pandas.ExcelDataSet.load"]], "release() (kedro_datasets.pandas.exceldataset method)": [[221, "kedro_datasets.pandas.ExcelDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.exceldataset method)": [[221, "kedro_datasets.pandas.ExcelDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.exceldataset method)": [[221, "kedro_datasets.pandas.ExcelDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.exceldataset method)": [[221, "kedro_datasets.pandas.ExcelDataSet.save"]], "default_load_args (kedro_datasets.pandas.featherdataset attribute)": [[222, "kedro_datasets.pandas.FeatherDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.featherdataset attribute)": [[222, "kedro_datasets.pandas.FeatherDataSet.DEFAULT_SAVE_ARGS"]], "featherdataset (class in kedro_datasets.pandas)": [[222, "kedro_datasets.pandas.FeatherDataSet"]], "__init__() (kedro_datasets.pandas.featherdataset method)": [[222, "kedro_datasets.pandas.FeatherDataSet.__init__"]], "exists() (kedro_datasets.pandas.featherdataset method)": [[222, "kedro_datasets.pandas.FeatherDataSet.exists"]], "from_config() (kedro_datasets.pandas.featherdataset class method)": [[222, "kedro_datasets.pandas.FeatherDataSet.from_config"]], "load() (kedro_datasets.pandas.featherdataset method)": [[222, "kedro_datasets.pandas.FeatherDataSet.load"]], "release() (kedro_datasets.pandas.featherdataset method)": [[222, "kedro_datasets.pandas.FeatherDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.featherdataset method)": [[222, "kedro_datasets.pandas.FeatherDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.featherdataset method)": [[222, "kedro_datasets.pandas.FeatherDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.featherdataset method)": [[222, "kedro_datasets.pandas.FeatherDataSet.save"]], "default_load_args (kedro_datasets.pandas.gbqquerydataset attribute)": [[223, "kedro_datasets.pandas.GBQQueryDataSet.DEFAULT_LOAD_ARGS"]], "gbqquerydataset (class in kedro_datasets.pandas)": [[223, "kedro_datasets.pandas.GBQQueryDataSet"]], "__init__() (kedro_datasets.pandas.gbqquerydataset method)": [[223, "kedro_datasets.pandas.GBQQueryDataSet.__init__"]], "exists() (kedro_datasets.pandas.gbqquerydataset method)": [[223, "kedro_datasets.pandas.GBQQueryDataSet.exists"]], "from_config() (kedro_datasets.pandas.gbqquerydataset class method)": [[223, "kedro_datasets.pandas.GBQQueryDataSet.from_config"]], "load() (kedro_datasets.pandas.gbqquerydataset method)": [[223, "kedro_datasets.pandas.GBQQueryDataSet.load"]], "release() (kedro_datasets.pandas.gbqquerydataset method)": [[223, "kedro_datasets.pandas.GBQQueryDataSet.release"]], "save() (kedro_datasets.pandas.gbqquerydataset method)": [[223, "kedro_datasets.pandas.GBQQueryDataSet.save"]], "default_load_args (kedro_datasets.pandas.gbqtabledataset attribute)": [[224, "kedro_datasets.pandas.GBQTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.gbqtabledataset attribute)": [[224, "kedro_datasets.pandas.GBQTableDataSet.DEFAULT_SAVE_ARGS"]], "gbqtabledataset (class in kedro_datasets.pandas)": [[224, "kedro_datasets.pandas.GBQTableDataSet"]], "__init__() (kedro_datasets.pandas.gbqtabledataset method)": [[224, "kedro_datasets.pandas.GBQTableDataSet.__init__"]], "exists() (kedro_datasets.pandas.gbqtabledataset method)": [[224, "kedro_datasets.pandas.GBQTableDataSet.exists"]], "from_config() (kedro_datasets.pandas.gbqtabledataset class method)": [[224, "kedro_datasets.pandas.GBQTableDataSet.from_config"]], "load() (kedro_datasets.pandas.gbqtabledataset method)": [[224, "kedro_datasets.pandas.GBQTableDataSet.load"]], "release() (kedro_datasets.pandas.gbqtabledataset method)": [[224, "kedro_datasets.pandas.GBQTableDataSet.release"]], "save() (kedro_datasets.pandas.gbqtabledataset method)": [[224, "kedro_datasets.pandas.GBQTableDataSet.save"]], "default_load_args (kedro_datasets.pandas.genericdataset attribute)": [[225, "kedro_datasets.pandas.GenericDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.genericdataset attribute)": [[225, "kedro_datasets.pandas.GenericDataSet.DEFAULT_SAVE_ARGS"]], "genericdataset (class in kedro_datasets.pandas)": [[225, "kedro_datasets.pandas.GenericDataSet"]], "__init__() (kedro_datasets.pandas.genericdataset method)": [[225, "kedro_datasets.pandas.GenericDataSet.__init__"]], "exists() (kedro_datasets.pandas.genericdataset method)": [[225, "kedro_datasets.pandas.GenericDataSet.exists"]], "from_config() (kedro_datasets.pandas.genericdataset class method)": [[225, "kedro_datasets.pandas.GenericDataSet.from_config"]], "load() (kedro_datasets.pandas.genericdataset method)": [[225, "kedro_datasets.pandas.GenericDataSet.load"]], "release() (kedro_datasets.pandas.genericdataset method)": [[225, "kedro_datasets.pandas.GenericDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.genericdataset method)": [[225, "kedro_datasets.pandas.GenericDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.genericdataset method)": [[225, "kedro_datasets.pandas.GenericDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.genericdataset method)": [[225, "kedro_datasets.pandas.GenericDataSet.save"]], "default_load_args (kedro_datasets.pandas.hdfdataset attribute)": [[226, "kedro_datasets.pandas.HDFDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.hdfdataset attribute)": [[226, "kedro_datasets.pandas.HDFDataSet.DEFAULT_SAVE_ARGS"]], "hdfdataset (class in kedro_datasets.pandas)": [[226, "kedro_datasets.pandas.HDFDataSet"]], "__init__() (kedro_datasets.pandas.hdfdataset method)": [[226, "kedro_datasets.pandas.HDFDataSet.__init__"]], "exists() (kedro_datasets.pandas.hdfdataset method)": [[226, "kedro_datasets.pandas.HDFDataSet.exists"]], "from_config() (kedro_datasets.pandas.hdfdataset class method)": [[226, "kedro_datasets.pandas.HDFDataSet.from_config"]], "load() (kedro_datasets.pandas.hdfdataset method)": [[226, "kedro_datasets.pandas.HDFDataSet.load"]], "release() (kedro_datasets.pandas.hdfdataset method)": [[226, "kedro_datasets.pandas.HDFDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.hdfdataset method)": [[226, "kedro_datasets.pandas.HDFDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.hdfdataset method)": [[226, "kedro_datasets.pandas.HDFDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.hdfdataset method)": [[226, "kedro_datasets.pandas.HDFDataSet.save"]], "default_load_args (kedro_datasets.pandas.jsondataset attribute)": [[227, "kedro_datasets.pandas.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.jsondataset attribute)": [[227, "kedro_datasets.pandas.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.pandas)": [[227, "kedro_datasets.pandas.JSONDataSet"]], "__init__() (kedro_datasets.pandas.jsondataset method)": [[227, "kedro_datasets.pandas.JSONDataSet.__init__"]], "exists() (kedro_datasets.pandas.jsondataset method)": [[227, "kedro_datasets.pandas.JSONDataSet.exists"]], "from_config() (kedro_datasets.pandas.jsondataset class method)": [[227, "kedro_datasets.pandas.JSONDataSet.from_config"]], "load() (kedro_datasets.pandas.jsondataset method)": [[227, "kedro_datasets.pandas.JSONDataSet.load"]], "release() (kedro_datasets.pandas.jsondataset method)": [[227, "kedro_datasets.pandas.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.jsondataset method)": [[227, "kedro_datasets.pandas.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.jsondataset method)": [[227, "kedro_datasets.pandas.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.jsondataset method)": [[227, "kedro_datasets.pandas.JSONDataSet.save"]], "default_load_args (kedro_datasets.pandas.parquetdataset attribute)": [[228, "kedro_datasets.pandas.ParquetDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.parquetdataset attribute)": [[228, "kedro_datasets.pandas.ParquetDataSet.DEFAULT_SAVE_ARGS"]], "parquetdataset (class in kedro_datasets.pandas)": [[228, "kedro_datasets.pandas.ParquetDataSet"]], "__init__() (kedro_datasets.pandas.parquetdataset method)": [[228, "kedro_datasets.pandas.ParquetDataSet.__init__"]], "exists() (kedro_datasets.pandas.parquetdataset method)": [[228, "kedro_datasets.pandas.ParquetDataSet.exists"]], "from_config() (kedro_datasets.pandas.parquetdataset class method)": [[228, "kedro_datasets.pandas.ParquetDataSet.from_config"]], "load() (kedro_datasets.pandas.parquetdataset method)": [[228, "kedro_datasets.pandas.ParquetDataSet.load"]], "release() (kedro_datasets.pandas.parquetdataset method)": [[228, "kedro_datasets.pandas.ParquetDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.parquetdataset method)": [[228, "kedro_datasets.pandas.ParquetDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.parquetdataset method)": [[228, "kedro_datasets.pandas.ParquetDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.parquetdataset method)": [[228, "kedro_datasets.pandas.ParquetDataSet.save"]], "sqlquerydataset (class in kedro_datasets.pandas)": [[229, "kedro_datasets.pandas.SQLQueryDataSet"]], "__init__() (kedro_datasets.pandas.sqlquerydataset method)": [[229, "kedro_datasets.pandas.SQLQueryDataSet.__init__"]], "adapt_mssql_date_params() (kedro_datasets.pandas.sqlquerydataset method)": [[229, "kedro_datasets.pandas.SQLQueryDataSet.adapt_mssql_date_params"]], "create_connection() (kedro_datasets.pandas.sqlquerydataset class method)": [[229, "kedro_datasets.pandas.SQLQueryDataSet.create_connection"]], "engines (kedro_datasets.pandas.sqlquerydataset attribute)": [[229, "kedro_datasets.pandas.SQLQueryDataSet.engines"]], "exists() (kedro_datasets.pandas.sqlquerydataset method)": [[229, "kedro_datasets.pandas.SQLQueryDataSet.exists"]], "from_config() (kedro_datasets.pandas.sqlquerydataset class method)": [[229, "kedro_datasets.pandas.SQLQueryDataSet.from_config"]], "load() (kedro_datasets.pandas.sqlquerydataset method)": [[229, "kedro_datasets.pandas.SQLQueryDataSet.load"]], "release() (kedro_datasets.pandas.sqlquerydataset method)": [[229, "kedro_datasets.pandas.SQLQueryDataSet.release"]], "save() (kedro_datasets.pandas.sqlquerydataset method)": [[229, "kedro_datasets.pandas.SQLQueryDataSet.save"]], "default_load_args (kedro_datasets.pandas.sqltabledataset attribute)": [[230, "kedro_datasets.pandas.SQLTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.sqltabledataset attribute)": [[230, "kedro_datasets.pandas.SQLTableDataSet.DEFAULT_SAVE_ARGS"]], "sqltabledataset (class in kedro_datasets.pandas)": [[230, "kedro_datasets.pandas.SQLTableDataSet"]], "__init__() (kedro_datasets.pandas.sqltabledataset method)": [[230, "kedro_datasets.pandas.SQLTableDataSet.__init__"]], "create_connection() (kedro_datasets.pandas.sqltabledataset class method)": [[230, "kedro_datasets.pandas.SQLTableDataSet.create_connection"]], "engines (kedro_datasets.pandas.sqltabledataset attribute)": [[230, "kedro_datasets.pandas.SQLTableDataSet.engines"]], "exists() (kedro_datasets.pandas.sqltabledataset method)": [[230, "kedro_datasets.pandas.SQLTableDataSet.exists"]], "from_config() (kedro_datasets.pandas.sqltabledataset class method)": [[230, "kedro_datasets.pandas.SQLTableDataSet.from_config"]], "load() (kedro_datasets.pandas.sqltabledataset method)": [[230, "kedro_datasets.pandas.SQLTableDataSet.load"]], "release() (kedro_datasets.pandas.sqltabledataset method)": [[230, "kedro_datasets.pandas.SQLTableDataSet.release"]], "save() (kedro_datasets.pandas.sqltabledataset method)": [[230, "kedro_datasets.pandas.SQLTableDataSet.save"]], "default_load_args (kedro_datasets.pandas.xmldataset attribute)": [[231, "kedro_datasets.pandas.XMLDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pandas.xmldataset attribute)": [[231, "kedro_datasets.pandas.XMLDataSet.DEFAULT_SAVE_ARGS"]], "xmldataset (class in kedro_datasets.pandas)": [[231, "kedro_datasets.pandas.XMLDataSet"]], "__init__() (kedro_datasets.pandas.xmldataset method)": [[231, "kedro_datasets.pandas.XMLDataSet.__init__"]], "exists() (kedro_datasets.pandas.xmldataset method)": [[231, "kedro_datasets.pandas.XMLDataSet.exists"]], "from_config() (kedro_datasets.pandas.xmldataset class method)": [[231, "kedro_datasets.pandas.XMLDataSet.from_config"]], "load() (kedro_datasets.pandas.xmldataset method)": [[231, "kedro_datasets.pandas.XMLDataSet.load"]], "release() (kedro_datasets.pandas.xmldataset method)": [[231, "kedro_datasets.pandas.XMLDataSet.release"]], "resolve_load_version() (kedro_datasets.pandas.xmldataset method)": [[231, "kedro_datasets.pandas.XMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pandas.xmldataset method)": [[231, "kedro_datasets.pandas.XMLDataSet.resolve_save_version"]], "save() (kedro_datasets.pandas.xmldataset method)": [[231, "kedro_datasets.pandas.XMLDataSet.save"]], "default_load_args (kedro_datasets.pickle.pickledataset attribute)": [[232, "kedro_datasets.pickle.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.pickle.pickledataset attribute)": [[232, "kedro_datasets.pickle.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro_datasets.pickle)": [[232, "kedro_datasets.pickle.PickleDataSet"]], "__init__() (kedro_datasets.pickle.pickledataset method)": [[232, "kedro_datasets.pickle.PickleDataSet.__init__"]], "exists() (kedro_datasets.pickle.pickledataset method)": [[232, "kedro_datasets.pickle.PickleDataSet.exists"]], "from_config() (kedro_datasets.pickle.pickledataset class method)": [[232, "kedro_datasets.pickle.PickleDataSet.from_config"]], "load() (kedro_datasets.pickle.pickledataset method)": [[232, "kedro_datasets.pickle.PickleDataSet.load"]], "release() (kedro_datasets.pickle.pickledataset method)": [[232, "kedro_datasets.pickle.PickleDataSet.release"]], "resolve_load_version() (kedro_datasets.pickle.pickledataset method)": [[232, "kedro_datasets.pickle.PickleDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pickle.pickledataset method)": [[232, "kedro_datasets.pickle.PickleDataSet.resolve_save_version"]], "save() (kedro_datasets.pickle.pickledataset method)": [[232, "kedro_datasets.pickle.PickleDataSet.save"]], "default_save_args (kedro_datasets.pillow.imagedataset attribute)": [[233, "kedro_datasets.pillow.ImageDataSet.DEFAULT_SAVE_ARGS"]], "imagedataset (class in kedro_datasets.pillow)": [[233, "kedro_datasets.pillow.ImageDataSet"]], "__init__() (kedro_datasets.pillow.imagedataset method)": [[233, "kedro_datasets.pillow.ImageDataSet.__init__"]], "exists() (kedro_datasets.pillow.imagedataset method)": [[233, "kedro_datasets.pillow.ImageDataSet.exists"]], "from_config() (kedro_datasets.pillow.imagedataset class method)": [[233, "kedro_datasets.pillow.ImageDataSet.from_config"]], "load() (kedro_datasets.pillow.imagedataset method)": [[233, "kedro_datasets.pillow.ImageDataSet.load"]], "release() (kedro_datasets.pillow.imagedataset method)": [[233, "kedro_datasets.pillow.ImageDataSet.release"]], "resolve_load_version() (kedro_datasets.pillow.imagedataset method)": [[233, "kedro_datasets.pillow.ImageDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.pillow.imagedataset method)": [[233, "kedro_datasets.pillow.ImageDataSet.resolve_save_version"]], "save() (kedro_datasets.pillow.imagedataset method)": [[233, "kedro_datasets.pillow.ImageDataSet.save"]], "default_load_args (kedro_datasets.plotly.jsondataset attribute)": [[234, "kedro_datasets.plotly.JSONDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.plotly.jsondataset attribute)": [[234, "kedro_datasets.plotly.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.plotly)": [[234, "kedro_datasets.plotly.JSONDataSet"]], "__init__() (kedro_datasets.plotly.jsondataset method)": [[234, "kedro_datasets.plotly.JSONDataSet.__init__"]], "exists() (kedro_datasets.plotly.jsondataset method)": [[234, "kedro_datasets.plotly.JSONDataSet.exists"]], "from_config() (kedro_datasets.plotly.jsondataset class method)": [[234, "kedro_datasets.plotly.JSONDataSet.from_config"]], "load() (kedro_datasets.plotly.jsondataset method)": [[234, "kedro_datasets.plotly.JSONDataSet.load"]], "release() (kedro_datasets.plotly.jsondataset method)": [[234, "kedro_datasets.plotly.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.plotly.jsondataset method)": [[234, "kedro_datasets.plotly.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.plotly.jsondataset method)": [[234, "kedro_datasets.plotly.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.plotly.jsondataset method)": [[234, "kedro_datasets.plotly.JSONDataSet.save"]], "default_load_args (kedro_datasets.plotly.plotlydataset attribute)": [[235, "kedro_datasets.plotly.PlotlyDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.plotly.plotlydataset attribute)": [[235, "kedro_datasets.plotly.PlotlyDataSet.DEFAULT_SAVE_ARGS"]], "plotlydataset (class in kedro_datasets.plotly)": [[235, "kedro_datasets.plotly.PlotlyDataSet"]], "__init__() (kedro_datasets.plotly.plotlydataset method)": [[235, "kedro_datasets.plotly.PlotlyDataSet.__init__"]], "exists() (kedro_datasets.plotly.plotlydataset method)": [[235, "kedro_datasets.plotly.PlotlyDataSet.exists"]], "from_config() (kedro_datasets.plotly.plotlydataset class method)": [[235, "kedro_datasets.plotly.PlotlyDataSet.from_config"]], "load() (kedro_datasets.plotly.plotlydataset method)": [[235, "kedro_datasets.plotly.PlotlyDataSet.load"]], "release() (kedro_datasets.plotly.plotlydataset method)": [[235, "kedro_datasets.plotly.PlotlyDataSet.release"]], "resolve_load_version() (kedro_datasets.plotly.plotlydataset method)": [[235, "kedro_datasets.plotly.PlotlyDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.plotly.plotlydataset method)": [[235, "kedro_datasets.plotly.PlotlyDataSet.resolve_save_version"]], "save() (kedro_datasets.plotly.plotlydataset method)": [[235, "kedro_datasets.plotly.PlotlyDataSet.save"]], "csvdataset (class in kedro_datasets.polars)": [[236, "kedro_datasets.polars.CSVDataSet"]], "default_load_args (kedro_datasets.polars.csvdataset attribute)": [[236, "kedro_datasets.polars.CSVDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.polars.csvdataset attribute)": [[236, "kedro_datasets.polars.CSVDataSet.DEFAULT_SAVE_ARGS"]], "__init__() (kedro_datasets.polars.csvdataset method)": [[236, "kedro_datasets.polars.CSVDataSet.__init__"]], "exists() (kedro_datasets.polars.csvdataset method)": [[236, "kedro_datasets.polars.CSVDataSet.exists"]], "from_config() (kedro_datasets.polars.csvdataset class method)": [[236, "kedro_datasets.polars.CSVDataSet.from_config"]], "load() (kedro_datasets.polars.csvdataset method)": [[236, "kedro_datasets.polars.CSVDataSet.load"]], "release() (kedro_datasets.polars.csvdataset method)": [[236, "kedro_datasets.polars.CSVDataSet.release"]], "resolve_load_version() (kedro_datasets.polars.csvdataset method)": [[236, "kedro_datasets.polars.CSVDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.polars.csvdataset method)": [[236, "kedro_datasets.polars.CSVDataSet.resolve_save_version"]], "save() (kedro_datasets.polars.csvdataset method)": [[236, "kedro_datasets.polars.CSVDataSet.save"]], "default_load_args (kedro_datasets.redis.pickledataset attribute)": [[237, "kedro_datasets.redis.PickleDataSet.DEFAULT_LOAD_ARGS"]], "default_redis_url (kedro_datasets.redis.pickledataset attribute)": [[237, "kedro_datasets.redis.PickleDataSet.DEFAULT_REDIS_URL"]], "default_save_args (kedro_datasets.redis.pickledataset attribute)": [[237, "kedro_datasets.redis.PickleDataSet.DEFAULT_SAVE_ARGS"]], "pickledataset (class in kedro_datasets.redis)": [[237, "kedro_datasets.redis.PickleDataSet"]], "__init__() (kedro_datasets.redis.pickledataset method)": [[237, "kedro_datasets.redis.PickleDataSet.__init__"]], "exists() (kedro_datasets.redis.pickledataset method)": [[237, "kedro_datasets.redis.PickleDataSet.exists"]], "from_config() (kedro_datasets.redis.pickledataset class method)": [[237, "kedro_datasets.redis.PickleDataSet.from_config"]], "load() (kedro_datasets.redis.pickledataset method)": [[237, "kedro_datasets.redis.PickleDataSet.load"]], "release() (kedro_datasets.redis.pickledataset method)": [[237, "kedro_datasets.redis.PickleDataSet.release"]], "save() (kedro_datasets.redis.pickledataset method)": [[237, "kedro_datasets.redis.PickleDataSet.save"]], "default_load_args (kedro_datasets.snowflake.snowparktabledataset attribute)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.snowflake.snowparktabledataset attribute)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.DEFAULT_SAVE_ARGS"]], "snowparktabledataset (class in kedro_datasets.snowflake)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet"]], "__init__() (kedro_datasets.snowflake.snowparktabledataset method)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.__init__"]], "exists() (kedro_datasets.snowflake.snowparktabledataset method)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.exists"]], "from_config() (kedro_datasets.snowflake.snowparktabledataset class method)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.from_config"]], "load() (kedro_datasets.snowflake.snowparktabledataset method)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.load"]], "release() (kedro_datasets.snowflake.snowparktabledataset method)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.release"]], "save() (kedro_datasets.snowflake.snowparktabledataset method)": [[238, "kedro_datasets.snowflake.SnowparkTableDataSet.save"]], "deltatabledataset (class in kedro_datasets.spark)": [[239, "kedro_datasets.spark.DeltaTableDataSet"]], "__init__() (kedro_datasets.spark.deltatabledataset method)": [[239, "kedro_datasets.spark.DeltaTableDataSet.__init__"]], "exists() (kedro_datasets.spark.deltatabledataset method)": [[239, "kedro_datasets.spark.DeltaTableDataSet.exists"]], "from_config() (kedro_datasets.spark.deltatabledataset class method)": [[239, "kedro_datasets.spark.DeltaTableDataSet.from_config"]], "load() (kedro_datasets.spark.deltatabledataset method)": [[239, "kedro_datasets.spark.DeltaTableDataSet.load"]], "release() (kedro_datasets.spark.deltatabledataset method)": [[239, "kedro_datasets.spark.DeltaTableDataSet.release"]], "save() (kedro_datasets.spark.deltatabledataset method)": [[239, "kedro_datasets.spark.DeltaTableDataSet.save"]], "default_load_args (kedro_datasets.spark.sparkdataset attribute)": [[240, "kedro_datasets.spark.SparkDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.spark.sparkdataset attribute)": [[240, "kedro_datasets.spark.SparkDataSet.DEFAULT_SAVE_ARGS"]], "sparkdataset (class in kedro_datasets.spark)": [[240, "kedro_datasets.spark.SparkDataSet"]], "__init__() (kedro_datasets.spark.sparkdataset method)": [[240, "kedro_datasets.spark.SparkDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkdataset method)": [[240, "kedro_datasets.spark.SparkDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkdataset class method)": [[240, "kedro_datasets.spark.SparkDataSet.from_config"]], "load() (kedro_datasets.spark.sparkdataset method)": [[240, "kedro_datasets.spark.SparkDataSet.load"]], "release() (kedro_datasets.spark.sparkdataset method)": [[240, "kedro_datasets.spark.SparkDataSet.release"]], "resolve_load_version() (kedro_datasets.spark.sparkdataset method)": [[240, "kedro_datasets.spark.SparkDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.spark.sparkdataset method)": [[240, "kedro_datasets.spark.SparkDataSet.resolve_save_version"]], "save() (kedro_datasets.spark.sparkdataset method)": [[240, "kedro_datasets.spark.SparkDataSet.save"]], "default_save_args (kedro_datasets.spark.sparkhivedataset attribute)": [[241, "kedro_datasets.spark.SparkHiveDataSet.DEFAULT_SAVE_ARGS"]], "sparkhivedataset (class in kedro_datasets.spark)": [[241, "kedro_datasets.spark.SparkHiveDataSet"]], "__init__() (kedro_datasets.spark.sparkhivedataset method)": [[241, "kedro_datasets.spark.SparkHiveDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkhivedataset method)": [[241, "kedro_datasets.spark.SparkHiveDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkhivedataset class method)": [[241, "kedro_datasets.spark.SparkHiveDataSet.from_config"]], "load() (kedro_datasets.spark.sparkhivedataset method)": [[241, "kedro_datasets.spark.SparkHiveDataSet.load"]], "release() (kedro_datasets.spark.sparkhivedataset method)": [[241, "kedro_datasets.spark.SparkHiveDataSet.release"]], "save() (kedro_datasets.spark.sparkhivedataset method)": [[241, "kedro_datasets.spark.SparkHiveDataSet.save"]], "default_load_args (kedro_datasets.spark.sparkjdbcdataset attribute)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.spark.sparkjdbcdataset attribute)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.DEFAULT_SAVE_ARGS"]], "sparkjdbcdataset (class in kedro_datasets.spark)": [[242, "kedro_datasets.spark.SparkJDBCDataSet"]], "__init__() (kedro_datasets.spark.sparkjdbcdataset method)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkjdbcdataset method)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkjdbcdataset class method)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.from_config"]], "load() (kedro_datasets.spark.sparkjdbcdataset method)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.load"]], "release() (kedro_datasets.spark.sparkjdbcdataset method)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.release"]], "save() (kedro_datasets.spark.sparkjdbcdataset method)": [[242, "kedro_datasets.spark.SparkJDBCDataSet.save"]], "default_load_args (kedro_datasets.spark.sparkstreamingdataset attribute)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.spark.sparkstreamingdataset attribute)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.DEFAULT_SAVE_ARGS"]], "sparkstreamingdataset (class in kedro_datasets.spark)": [[243, "kedro_datasets.spark.SparkStreamingDataSet"]], "__init__() (kedro_datasets.spark.sparkstreamingdataset method)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.__init__"]], "exists() (kedro_datasets.spark.sparkstreamingdataset method)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.exists"]], "from_config() (kedro_datasets.spark.sparkstreamingdataset class method)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.from_config"]], "load() (kedro_datasets.spark.sparkstreamingdataset method)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.load"]], "release() (kedro_datasets.spark.sparkstreamingdataset method)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.release"]], "save() (kedro_datasets.spark.sparkstreamingdataset method)": [[243, "kedro_datasets.spark.SparkStreamingDataSet.save"]], "default_load_args (kedro_datasets.svmlight.svmlightdataset attribute)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.svmlight.svmlightdataset attribute)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.DEFAULT_SAVE_ARGS"]], "svmlightdataset (class in kedro_datasets.svmlight)": [[244, "kedro_datasets.svmlight.SVMLightDataSet"]], "__init__() (kedro_datasets.svmlight.svmlightdataset method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.__init__"]], "exists() (kedro_datasets.svmlight.svmlightdataset method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.exists"]], "from_config() (kedro_datasets.svmlight.svmlightdataset class method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.from_config"]], "load() (kedro_datasets.svmlight.svmlightdataset method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.load"]], "release() (kedro_datasets.svmlight.svmlightdataset method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.release"]], "resolve_load_version() (kedro_datasets.svmlight.svmlightdataset method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.svmlight.svmlightdataset method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.resolve_save_version"]], "save() (kedro_datasets.svmlight.svmlightdataset method)": [[244, "kedro_datasets.svmlight.SVMLightDataSet.save"]], "default_load_args (kedro_datasets.tensorflow.tensorflowmodeldataset attribute)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.DEFAULT_LOAD_ARGS"]], "default_save_args (kedro_datasets.tensorflow.tensorflowmodeldataset attribute)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.DEFAULT_SAVE_ARGS"]], "tensorflowmodeldataset (class in kedro_datasets.tensorflow)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet"]], "__init__() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.__init__"]], "exists() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.exists"]], "from_config() (kedro_datasets.tensorflow.tensorflowmodeldataset class method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.from_config"]], "load() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.load"]], "release() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.release"]], "resolve_load_version() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.resolve_save_version"]], "save() (kedro_datasets.tensorflow.tensorflowmodeldataset method)": [[245, "kedro_datasets.tensorflow.TensorFlowModelDataSet.save"]], "textdataset (class in kedro_datasets.text)": [[246, "kedro_datasets.text.TextDataSet"]], "__init__() (kedro_datasets.text.textdataset method)": [[246, "kedro_datasets.text.TextDataSet.__init__"]], "exists() (kedro_datasets.text.textdataset method)": [[246, "kedro_datasets.text.TextDataSet.exists"]], "from_config() (kedro_datasets.text.textdataset class method)": [[246, "kedro_datasets.text.TextDataSet.from_config"]], "load() (kedro_datasets.text.textdataset method)": [[246, "kedro_datasets.text.TextDataSet.load"]], "release() (kedro_datasets.text.textdataset method)": [[246, "kedro_datasets.text.TextDataSet.release"]], "resolve_load_version() (kedro_datasets.text.textdataset method)": [[246, "kedro_datasets.text.TextDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.text.textdataset method)": [[246, "kedro_datasets.text.TextDataSet.resolve_save_version"]], "save() (kedro_datasets.text.textdataset method)": [[246, "kedro_datasets.text.TextDataSet.save"]], "default_save_args (kedro_datasets.tracking.jsondataset attribute)": [[247, "kedro_datasets.tracking.JSONDataSet.DEFAULT_SAVE_ARGS"]], "jsondataset (class in kedro_datasets.tracking)": [[247, "kedro_datasets.tracking.JSONDataSet"]], "__init__() (kedro_datasets.tracking.jsondataset method)": [[247, "kedro_datasets.tracking.JSONDataSet.__init__"]], "exists() (kedro_datasets.tracking.jsondataset method)": [[247, "kedro_datasets.tracking.JSONDataSet.exists"]], "from_config() (kedro_datasets.tracking.jsondataset class method)": [[247, "kedro_datasets.tracking.JSONDataSet.from_config"]], "load() (kedro_datasets.tracking.jsondataset method)": [[247, "kedro_datasets.tracking.JSONDataSet.load"]], "release() (kedro_datasets.tracking.jsondataset method)": [[247, "kedro_datasets.tracking.JSONDataSet.release"]], "resolve_load_version() (kedro_datasets.tracking.jsondataset method)": [[247, "kedro_datasets.tracking.JSONDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.tracking.jsondataset method)": [[247, "kedro_datasets.tracking.JSONDataSet.resolve_save_version"]], "save() (kedro_datasets.tracking.jsondataset method)": [[247, "kedro_datasets.tracking.JSONDataSet.save"]], "versioned (kedro_datasets.tracking.jsondataset attribute)": [[247, "kedro_datasets.tracking.JSONDataSet.versioned"]], "default_save_args (kedro_datasets.tracking.metricsdataset attribute)": [[248, "kedro_datasets.tracking.MetricsDataSet.DEFAULT_SAVE_ARGS"]], "metricsdataset (class in kedro_datasets.tracking)": [[248, "kedro_datasets.tracking.MetricsDataSet"]], "__init__() (kedro_datasets.tracking.metricsdataset method)": [[248, "kedro_datasets.tracking.MetricsDataSet.__init__"]], "exists() (kedro_datasets.tracking.metricsdataset method)": [[248, "kedro_datasets.tracking.MetricsDataSet.exists"]], "from_config() (kedro_datasets.tracking.metricsdataset class method)": [[248, "kedro_datasets.tracking.MetricsDataSet.from_config"]], "load() (kedro_datasets.tracking.metricsdataset method)": [[248, "kedro_datasets.tracking.MetricsDataSet.load"]], "release() (kedro_datasets.tracking.metricsdataset method)": [[248, "kedro_datasets.tracking.MetricsDataSet.release"]], "resolve_load_version() (kedro_datasets.tracking.metricsdataset method)": [[248, "kedro_datasets.tracking.MetricsDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.tracking.metricsdataset method)": [[248, "kedro_datasets.tracking.MetricsDataSet.resolve_save_version"]], "save() (kedro_datasets.tracking.metricsdataset method)": [[248, "kedro_datasets.tracking.MetricsDataSet.save"]], "versioned (kedro_datasets.tracking.metricsdataset attribute)": [[248, "kedro_datasets.tracking.MetricsDataSet.versioned"]], "videodataset (class in kedro_datasets.video)": [[249, "kedro_datasets.video.VideoDataSet"]], "__init__() (kedro_datasets.video.videodataset method)": [[249, "kedro_datasets.video.VideoDataSet.__init__"]], "exists() (kedro_datasets.video.videodataset method)": [[249, "kedro_datasets.video.VideoDataSet.exists"]], "from_config() (kedro_datasets.video.videodataset class method)": [[249, "kedro_datasets.video.VideoDataSet.from_config"]], "load() (kedro_datasets.video.videodataset method)": [[249, "kedro_datasets.video.VideoDataSet.load"]], "release() (kedro_datasets.video.videodataset method)": [[249, "kedro_datasets.video.VideoDataSet.release"]], "save() (kedro_datasets.video.videodataset method)": [[249, "kedro_datasets.video.VideoDataSet.save"]], "default_save_args (kedro_datasets.yaml.yamldataset attribute)": [[250, "kedro_datasets.yaml.YAMLDataSet.DEFAULT_SAVE_ARGS"]], "yamldataset (class in kedro_datasets.yaml)": [[250, "kedro_datasets.yaml.YAMLDataSet"]], "__init__() (kedro_datasets.yaml.yamldataset method)": [[250, "kedro_datasets.yaml.YAMLDataSet.__init__"]], "exists() (kedro_datasets.yaml.yamldataset method)": [[250, "kedro_datasets.yaml.YAMLDataSet.exists"]], "from_config() (kedro_datasets.yaml.yamldataset class method)": [[250, "kedro_datasets.yaml.YAMLDataSet.from_config"]], "load() (kedro_datasets.yaml.yamldataset method)": [[250, "kedro_datasets.yaml.YAMLDataSet.load"]], "release() (kedro_datasets.yaml.yamldataset method)": [[250, "kedro_datasets.yaml.YAMLDataSet.release"]], "resolve_load_version() (kedro_datasets.yaml.yamldataset method)": [[250, "kedro_datasets.yaml.YAMLDataSet.resolve_load_version"]], "resolve_save_version() (kedro_datasets.yaml.yamldataset method)": [[250, "kedro_datasets.yaml.YAMLDataSet.resolve_save_version"]], "save() (kedro_datasets.yaml.yamldataset method)": [[250, "kedro_datasets.yaml.YAMLDataSet.save"]]}})